{"version":3,"sources":["webpack:///src/app/main/endUser/end-user-map/end-user-map-routing.module.ts","webpack:///src/app/main/endUser/end-user-map/map-screen/end-user-map.component.ts","webpack:///src/app/main/endUser/end-user-map/map-screen/end-user-map.component.html","webpack:///src/app/main/endUser/end-user-map/end-user-map.module.ts","webpack:///src/app/shared/services/end-user/end-user.service.ts"],"names":["routes","path","component","EndUserMapRoutingModule","forChild","imports","exports","chargerList","id","hePartNo","serialNo","address","status","ChargingStation","Marker","infoWindowShow","EndUserMapComponent","fb","snackBar","router","preloader","endUserSer","ngZone","masterService","cdr","geoLocationService","countryService","dialog","circleMapRadius","zoom","radius","value","viewValue","radiusValue","vehicleTypes","icon","name","chStationTypes","selected2","lat","lng","openedWindow","showStationDetails","currentlyOpenedItemIndex","actionClicked","activeState","activeChStation","batteryDial","showingInfoWindow","radiusLat","radiusLong","ameniteExits","filterdChStationOptions","filterdStationOptions","filterdCityOptions","locationSearch","cityOptionSearch","search","citySearch","timeout","show","cityShow","chStationSearch","radiusSearch","form","group","chStation","infoWindowOpened","previous_info_window","initialize","setCurrentLocation","getAllCity","getAllConnectorTypes","localStorage","JSON","parse","getItem","setMarkerAtLocation","actionDialog","getPosition","subscribe","pos","coords","latitude","longitude","getConnectorTypes","data","connectorTypes","err","getAllCities","resp","cities","val","filter","item","toLowerCase","includes","clearTimeout","setTimeout","cityClear","cityHide","event","reset","stationMarker","chargingStations","params","connector_type_id","connectorSearch","getChargingStationsByUserRoleAndLatLongUW","userId","close","count","tempStation","unit","i","length","push","close_infoWinow","map","controls","google","maps","ControlPosition","RIGHT_CENTER","document","getElementById","TOP_RIGHT","x","y","undefined","style","display","clear","hide","rads","scale","zoomLevel","Number","Math","log","filterOnMap","mapReady","closeEvent","closeActionPanel","stationChange","cityChange","radiusChange","searchFilter","circleMapRadiusChange","selector","templateUrl","styleUrls","changeDetection","OnPush","providers","COMPONENTS","COMPONENTS_DYNAMIC","EndUserMapModule","declarations","entryComponents","EndUseService","http","apiUrl2","API_URL2","apiUrl3","login_id","post","providedIn"],"mappings":"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","file":"end-user-map-end-user-map-module-es5.js","sourcesContent":["import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EndUserMapComponent } from './map-screen/end-user-map.component';\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path : 'map',component : EndUserMapComponent\r\n    }   \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class EndUserMapRoutingModule{}","import { Component, OnInit,AfterViewInit, OnDestroy,ChangeDetectionStrategy,ChangeDetectorRef,NgZone,ViewChild,} from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {EndUseService} from 'app/shared/services/end-user/end-user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {  ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\ndeclare var google: any;\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {FuseProgressBarService} from '@fuse/components/progress-bar/progress-bar.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport {AgmMap,MapsAPILoader  } from '@agm/core';  \r\nimport * as XLSX from 'xlsx';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport interface Charger {\r\n  id: number;\r\n  hePartNo: string;\r\n  serialNo: string;\r\n  address: string;\r\n  status: string;\r\n}\r\ninterface Radius {\r\n  value: number;\r\n  viewValue: string;\r\n  radiusValue:number;\r\n  \r\n}\r\nexport interface VehicleTypes{\r\n  id :number;\r\n  icon: string;\r\n  name:string;\r\n}\r\nexport interface ChStationTypes{\r\n  id :number;\r\n  icon: string;\r\n  name:string;\r\n}\r\nconst chargerList: Charger[] = [\r\n  {id: 1, hePartNo : 'he part no1',serialNo: '0001', address: 'Delhi', status : 'Active'},\r\n  {id: 2, hePartNo : 'he part no2', serialNo: '0002', address: 'Bikaner', status : 'Inactive'},\r\n];\r\n\r\nexport class ChargingStation {\r\n  id : number ;\r\n  cpo_id : number ;\r\n  cpo_name : string ;\r\n  name : string ;\r\n  code : string ;\r\n  description : string;\r\n  address : string;\r\n  pin : number;\r\n  lat : number;\r\n  lng : number;\r\n  location_type_id : number;\r\n  cp_name : string;\r\n  mobile : number;\r\n  email : string;\r\n  commissioned_dt : string;\r\n  register_as : number;\r\n  electricity_line_id : number;\r\n  o_time : string;\r\n  c_time : string;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n  statusString:string;\r\n  address1:string;\r\n  \r\n}\r\nexport class Marker {\r\n  id: number;\r\n  lat: number;\r\n  lng: number;\r\n  label?: string;\r\n  draggable: boolean;\r\n  status : string;\r\n  name : string;\r\n  rating : number;\r\n  address : string;\r\n  contact : number;\r\n  oTiming : string;\r\n  cTiming : string;\r\n  price : string;\r\n  installationType : string;\r\n  installationArea : string;\r\n  installationStatus : boolean;\r\n  serialNo : string;\r\n  HEPartNo : string;\r\n  link : string;\r\n  infoWindowShow:boolean= true;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-end-user-map',\r\n  templateUrl: './end-user-map.component.html',\r\n  styleUrls: ['./end-user-map.component.scss'],\r\n  \r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [GeoLocationService],\r\n})\r\nexport class EndUserMapComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  circleMapRadius = 5000 ;\r\n  zoom = 12;\r\n  radius: Radius[] = [\r\n    {value: 5000, viewValue: '5 KM',radiusValue:15},\r\n    {value: 10000, viewValue: '10 KM',radiusValue:10},\r\n    {value: 15000, viewValue: '15 KM',radiusValue:5}\r\n  ];\r\n  vehicleTypes :VehicleTypes[] = [\r\n    {id:1,icon:'library_add_check',name:\"All\"},\r\n    {id:2,icon:'two_wheeler',name:\"2W\"},\r\n    {id:3,icon:'two_wheeler',name:\"3W\"},\r\n    {id:4,icon:'local_taxi',name:\"LMW\"},\r\n    {id:5,icon:'directions_bus',name:\"HMW\"},\r\n  ];\r\n  chStationTypes : ChStationTypes[] = [\r\n    {id:1,icon:'library_add_check',name:\"All\"},\r\n    {id:2,icon:'groups',name:\"Public\"},\r\n    {id:3,icon:'local_library',name:\"Community\"}\r\n  ];\r\n  \r\n  chargingStations : ChargingStation[];\r\n  public selected2 = this.radius[0].value;\r\n  lat: number = 28.491583122667347;\r\n  lng: number = 77.06265390059566;\r\n// radius = 50;\r\n openedWindow : number = 0; // alternative: array of numbers\r\n\r\n markers: Marker[];\r\n showStationDetails: boolean = false;\r\n stationObj:any;\r\n chargers:any;\r\n currentlyOpenedItemIndex = -1;\r\n map:any;\r\n actionClicked: boolean = false;\r\n activeState = this.vehicleTypes[0];\r\n activeChStation = this.chStationTypes[0];\r\n batteryDial:boolean = false;\r\n infoWindowOpened : any;\r\n previous_info_window : any;\r\n showingInfoWindow:boolean = false;\r\n infoMarker :any;\r\n radiusLat = 0;\r\n radiusLong = 0;\r\n stationMarker : ChargingStation[];\r\n connectorSearch:any;\r\n connectorTypes:any;\r\n //gpu: GPU;\r\n ameniteExits:boolean = false;\r\n charginingStation:any;\r\n cities:any;\r\n filterdChStationOptions = [];\r\n  filterdStationOptions = [];\r\n  filterdCityOptions = [];\r\n  locationSearch:string= \"\";\r\n  cityOptionSearch:string = \"\";\r\n  search = '';\r\n  citySearch = '';\r\n  timeout = null;\r\n  show = false;\r\n  cityShow = false;\r\n  chStationSearch:string = \"\";\r\n  radiusSearch:number = 5;\r\n  constructor(private fb: FormBuilder,private snackBar: MatSnackBar, private router : Router,private preloader: FuseProgressBarService,\r\n    private endUserSer: EndUseService, private ngZone: NgZone,private masterService: MasterService,\r\n    private cdr: ChangeDetectorRef,  public geoLocationService:GeoLocationService,private countryService:CountriesService,\r\n    public dialog : MatDialog,) {\r\n      this.form = this.fb.group({\r\n        chStation: ['']\r\n      });\r\n      this.infoWindowOpened = null\r\n      this.previous_info_window = null\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n    this.getAllCity();\r\n    this.getAllConnectorTypes();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.setMarkerAtLocation();\r\n    this.actionDialog();\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.lat = +(pos.coords.latitude);\r\n        this.lng = +(pos.coords.longitude); \r\n        this.zoom = 12;\r\n        this.radiusLat = this.lat;\r\n        this.radiusLong = this.lng;\r\n      });\r\n  }\r\n  getAllConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        this.connectorTypes = data;\r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        this.cities = resp.data;\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n    cityChange(val){\r\n      this.filterdCityOptions = this.cities.filter(\r\n        item => item.name.toLowerCase().includes(this.cityOptionSearch.toLowerCase())\r\n      );\r\n        this.citySearch = val;\r\n        this.cityShow = true;\r\n        if(val != ''){\r\n          this.cityShow = true;\r\n          clearTimeout(this.timeout)\r\n          this.timeout = setTimeout(() => {\r\n          }, 500);\r\n        } else {\r\n        this.cityClear();\r\n        this.cityHide();\r\n      }\r\n    }\r\n    cityPick(event){\r\n      this.cityOptionSearch = event.name;\r\n      this.cityHide();\r\n    }\r\n    closeEvent() {\r\n      this.actionClicked = false;\r\n    }\r\n    onVehicleSelect(item){\r\n      this.activeState = item;\r\n    }\r\n    onChStationSelect(item){\r\n      this.activeChStation = item;\r\n      \r\n    }\r\n    resetAll(){\r\n      this.form.reset();\r\n    }\r\n    open() {\r\n      this.show = true\r\n    }\r\n    hide() {\r\n    this.show = false\r\n    }\r\n    clear() {\r\n    this.search = ''\r\n    }\r\n    cityHide() {\r\n      this.cityShow = false\r\n      }\r\n      cityClear() {\r\n      this.citySearch = ''\r\n      }\r\n      setMarkerAtLocation(){\r\n        this.stationMarker  = [];\r\n         this.chargingStations  = [];\r\n        this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n        // const gpu = new GPU();\r\n        let params = {\r\n          connector_type_id:this.connectorSearch,\r\n          lat:   this.lat,\r\n          lng:   this.lng,\r\n          radius:this.radiusSearch\r\n        }\r\n        // const gpuMatrix = gpu.createKernel(function(){})\r\n        this.endUserSer.getChargingStationsByUserRoleAndLatLongUW(this.localStorage.userId,params ).subscribe(\r\n          (data:any)=>{\r\n            this.preloader.close();\r\n            if(data.count > 0){\r\n             \r\n              let tempStation  = data.data;\r\n              this.chargingStations = data.data;\r\n             \r\n              let unit  = 'K'\r\n              for(var i = 0;i<tempStation.length;i++){\r\n                \r\n                tempStation[i].infoWindowShow = true;\r\n                this.stationMarker.push(tempStation[i]);\r\n                this.close_infoWinow();\r\n                // this.clickedMarker(event,this.chargingStations[i]);\r\n                if(this.stationMarker.length >=50){\r\n                   break;\r\n                }\r\n              }\r\n            }\r\n           \r\n           \r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }\r\n    \r\n      mapReady(event: any) {\r\n        this.map = event;\r\n        this.map.controls[google.maps.ControlPosition.RIGHT_CENTER].push(document.getElementById('Settings'));\r\n        this.map.controls[google.maps.ControlPosition.RIGHT_CENTER].push(document.getElementById('Profile'));\r\n        this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(document.getElementById('actiondiv'));\r\n        this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(document.getElementById('swappingDiv'));\r\n        this.map.controls[google.maps.ControlPosition.RIGHT_CENTER].push(document.getElementById('cdk-overlay-0'));  \r\n    }\r\n    close_infoWinow(){\r\n      if (this.previous_info_window != null){\r\n              this.openedWindow = null;\r\n              this.previous_info_window.infoWindowShow = true;\r\n              this.previous_info_window = null;\r\n      }\r\n    }\r\n\r\n    actionDialog() {\r\n      //this.actionClicked = !this.actionClicked;\r\n      var x = document.getElementById(\"actiondiv\");\r\n      var y = document.getElementById(\"swappingDiv\");\r\n      if(x != null && x != undefined && x.style != null && x.style != undefined){\r\n        if (x.style.display === \"none\" || x.style.display === \"\") {\r\n          x.style.display = \"block\";\r\n          y.style.display = \"none\";\r\n        } else {\r\n          x.style.display = \"none\";\r\n        }\r\n      }\r\n    }\r\n    closeActionPanel(){\r\n      var x = document.getElementById(\"actiondiv\");\r\n      x.style.display = \"none\";\r\n    }\r\n\r\n    stationChange(val){\r\n      this.filterdStationOptions = this.chargingStations.filter(\r\n      item => item.name.toLowerCase().includes(this.chStationSearch.toLowerCase())\r\n    );\r\n      this.search = val;\r\n      this.show = true;\r\n      if(val != ''){\r\n        this.show = true;\r\n        clearTimeout(this.timeout)\r\n        this.timeout = setTimeout(() => {\r\n        }, 500);\r\n      } else {\r\n      this.clear();\r\n      this.hide();\r\n    }\r\n  }\r\n  locationStation(event){\r\n    this.chStationSearch = event.name;\r\n    this.hide();\r\n  }\r\n  searchFilter(){\r\n    this.circleMapRadius = this.radiusSearch*1000;\r\n    var rads = this.circleMapRadius + (this.circleMapRadius / 2);\r\n    var scale = rads/500;\r\n    var zoomLevel = (Number) (16 - Math.log(scale) /Math.log(2));\r\n    this.zoom = zoomLevel + .4;\r\n    this.filterOnMap();\r\n   }\r\n   filterOnMap(){\r\n    this.close_infoWinow();\r\n    this.stationMarker = [];\r\n    \r\n    let params = {\r\n      connector_type_id:this.connectorSearch,\r\n      lat:   this.lat,\r\n      lng:   this.lng,\r\n      radius:this.radiusSearch\r\n    }\r\n    this.endUserSer.getChargingStationsByUserRoleAndLatLongUW(this.localStorage.userId,params ).subscribe(\r\n      (resp:any)=>{\r\n        this.preloader.close();\r\n        if(resp.count > 0){\r\n          \r\n          let tempStation  = resp.data;\r\n          let unit  = 'K'\r\n          for(var i = 0;i<tempStation.length;i++){\r\n            this.stationMarker.push(tempStation[i]);\r\n            tempStation[i].infoWindowShow = true;\r\n            if(this.stationMarker.length >=50){\r\n               break;\r\n            }\r\n          }\r\n          //this.cdr.detectChanges();\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  circleMapRadiusChange(value) {\r\n    if(this.circleMapRadius == null && this.circleMapRadius == undefined){\r\n      this.circleMapRadius = 5000;\r\n      this.zoom = 12;\r\n    }else{\r\n     \r\n      this.circleMapRadius = value;\r\n      var rads = this.circleMapRadius + (this.circleMapRadius / 2);\r\n      var scale = rads/500;\r\n      var zoomLevel = (Number) (16 - Math.log(scale) /Math.log(2));\r\n      this.zoom = zoomLevel + .4;\r\n      this.setMarkerAtLocation();\r\n      // this.zoom = 22 - (value/1000);\r\n      // if(this.zoom < 10){\r\n      //   this.zoom = 10;\r\n      // }\r\n     // this.zoom= value.radiusValue;\r\n    }\r\n  }\r\n  radiusChange(value){\r\n    //this.circleMapRadiusChange(value*1000);\r\n  }\r\n  \r\n}\r\n\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n      <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n          <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\" [@animate]=\"{value:'*',params:{x:'50px'}}\">End User\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <div id=\"wrapper\">\r\n        <div id=\"google_map\">\r\n          <agm-map [zoom]=\"zoom\" [latitude]=\"lat\" [longitude]=\"lng\" [fullscreenControl]=\"true\"\r\n          (mapReady)=\"mapReady($event)\" (mapClick)=\"close_infoWinow()\"\r\n            [scrollwheel]=\"null\">\r\n\r\n            <button id=\"Settings\" class=\"controls\" style=\"margin-top:10px;margin-right:10px\" mat-mini-fab\r\n              color=\"primary\" (click)=\"actionDialog()\">\r\n              <mat-icon aria-hidden=\"true\">battery_charging_full</mat-icon>\r\n            </button>\r\n            <!-- <button id=\"Profile\" class=\"controls\" style=\"margin-top:10px;margin-right:10px\" mat-mini-fab color=\"primary\" (click)=\"batteryDialog()\">\r\n          <mat-icon aria-hidden=\"true\">power</mat-icon>\r\n        </button> -->\r\n            <!--button id=\"Settings\" class=\"toggle-button controls button\" [hidden]=\"hideSettings\" >\r\n           <mat-icon aria-hidden=\"true\">battery_charging_full</mat-icon>\r\n        </button-->\r\n            <!--button id=\"Profile\" class=\"toogle-button controls button\" (click)=\"actionDialog($event)\">\r\n          <mat-icon aria-hidden=\"true\">account_circle</mat-icon>\r\n        </button-->\r\n\r\n            <div id=\"actiondiv\" class=\" controls \" appOutside (clickedOutside)=\"closeEvent()\">\r\n              <div class=\"actionpanel  fullwidth\" fxLayout=\"column\">\r\n                <mat-icon id=\"icon_action_div\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n                  style=\"cursor:pointer;color:#00acc1\">clear</mat-icon>\r\n\r\n                <div class=\"card \" style=\"padding-top:20px\">\r\n                  <div class=\"headerType\">\r\n                    <span style=\"padding-left: 10px;padding-top: 10px;\">Charging Station Type</span>\r\n                  </div>\r\n                  <ul>\r\n                    <li *ngFor=\"let item of chStationTypes; let i=index\" (click)=\"onChStationSelect(item)\">\r\n                      <a [class.active]=\"item === activeChStation\">\r\n                        <div class=\"icon\">\r\n                          <mat-icon style=\"font-size: 32px;height: 32px;\r\n                            width: 32px;\">{{item.icon}}</mat-icon>\r\n                        </div>\r\n                        <div class=\"name\">{{item.name}}</div>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <!-- <div class=\"card \">\r\n                  <div class=\"headerType\">\r\n                    <span style=\"padding-left: 10px;padding-top: 10px;\">Vehicle Type</span>\r\n                  </div>\r\n                  <ul>\r\n                    <li *ngFor=\"let item of vehicleTypes; let i=index\" \r\n                          (click)=\"onVehicleSelect(item)\">\r\n                          <a  [class.active]=\"item === activeState\">\r\n                            <div class=\"icon\">\r\n                                <mat-icon style=\"font-size: 32px;height: 32px;\r\n                                width: 32px;\">{{item.icon}}</mat-icon>\r\n                            </div>\r\n                            <div class=\"name\">{{item.name}}</div>\r\n                          </a>\r\n                      </li>\r\n                  </ul>\r\n                  </div> -->\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                  <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>By Station Name</mat-label>\r\n                    <input matInput id=\"\" [ngModelOptions]=\"{standalone: true}\" autocomplete=\"new-password\"\r\n                      [(ngModel)]=\"chStationSearch\" (ngModelChange)=\"stationChange($event)\" type=\"search\">\r\n                  </mat-form-field>\r\n                  <div *ngIf=\"filterdStationOptions.length && show\" (click)=\"clear() && hide()\"\r\n                    class=\"stock-search-result\">\r\n                    <div *ngFor=\"let station of filterdStationOptions\" class=\"search-result-item \"\r\n                      (click)=\"locationStation(station)\">\r\n                      <div class=\"search-result-name\">\r\n                        {{ station.name }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>By Connector Type</mat-label>\r\n                    <mat-select [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"connectorSearch\" required>\r\n                      <mat-option>--</mat-option>\r\n                      <mat-option *ngFor=\"let connector of connectorTypes\" [value]=\"connector.id\">\r\n                        {{connector.name}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"card\" style=\"padding-top: 20px;\">\r\n                  <form [formGroup]=\"form\" class=\"form-field-full\">\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>By City </mat-label>\r\n                        <input matInput id=\"\" [ngModelOptions]=\"{standalone: true}\" autocomplete=\"new-password\"\r\n                          [(ngModel)]=\"cityOptionSearch\" (ngModelChange)=\"cityChange($event)\" type=\"citySearch\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                      </mat-form-field>\r\n                      <div *ngIf=\"filterdCityOptions.length && cityShow\" (click)=\"cityClear() && cityHide()\"\r\n                        class=\"city-search-result\">\r\n                        <div *ngFor=\"let city of filterdCityOptions\" class=\"search-result-item \"\r\n                          (click)=\"cityPick(city)\">\r\n                          <div class=\"search-result-name\">\r\n                            {{ city.name }}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Circle Radius(Km)</mat-label>\r\n                        <input matInput id=\"\" [ngModelOptions]=\"{standalone: true}\" autocomplete=\"new-password\"\r\n                          [(ngModel)]=\"radiusSearch\" (ngModelChange)=\"radiusChange($event)\" type=\"select\">\r\n                      </mat-form-field>\r\n                      <!-- <mat-form-field  appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                          <mat-label>By Name</mat-label>\r\n                          <input type=\"text\" matInput formControlName=\"chStation\" autocomplete=\"new-password\"  [matAutocomplete]=\"auto1\">\r\n                          <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharger\">\r\n                            <mat-option *ngFor=\"let option of filteredOptionsChStation | async\" [value]=\"option\">\r\n                              {{option.name}}\r\n                            </mat-option>\r\n                          </mat-autocomplete>\r\n\r\n                        </mat-form-field> -->\r\n\r\n                      <!-- <div fxFlex=\"100\" style=\"font-size:14px;color:black\">\r\n                  <mat-label>By </mat-label>&nbsp;&nbsp;\r\n                  <mat-radio-group aria-label=\"Select an option\">\r\n                    <mat-radio-button value=\"1\">Connector Types</mat-radio-button>&nbsp;&nbsp;\r\n                    <mat-radio-button value=\"2\">Rattings</mat-radio-button>&nbsp;&nbsp;\r\n                    <mat-radio-button value=\"3\">Favourite Location</mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div> -->\r\n\r\n                    </div>\r\n\r\n                  </form>\r\n                  <div style=\"text-align:end;padding-top:20px;\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"searchFilter()\">\r\n                      <mat-icon>search</mat-icon>\r\n                      Search\r\n                    </button>\r\n                    <!-- <button mat-raised-button color=\"accent\"  (click)=\"resetAll()\">\r\n                      <mat-icon>clear_all</mat-icon>\r\n                      Clear All\r\n                    </button> -->\r\n                    <!--button mat-mini-fab color=\"primary\" matTooltip=\"Clear all\"  (click)=\"resetAll()\"aria-label=\"Example icon button with a filter list icon\">\r\n                  <mat-icon>clear_all</mat-icon>\r\n                </button-->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div id=\"swappingDiv\" class=\" controls \" appOutside (clickedOutside)=\"closeEvent()\">\r\n              <div class=\"divSwapPanel\">\r\n                <div class=\"card \">\r\n                  <div class=\"headerType\">\r\n                    <p style=\"font-size:14px;margin: 0px;\">Battery Swapping Outlet<br> Status</p>\r\n                  </div>\r\n                  <mat-divider></mat-divider>\r\n                  <div class=\"info-Massage\">\r\n                    <span class=\"slot-bg-green\"></span>\r\n                    <p class=\"indicator_name\"> Available</p>\r\n                  </div>\r\n                  <mat-divider></mat-divider>\r\n                  <div class=\"info-Massage\">\r\n                    <span class=\"slot-bg-orange\"></span>\r\n                    <p class=\"indicator_name\"> No Battery Available</p>\r\n                  </div>\r\n                  <mat-divider></mat-divider>\r\n                  <div class=\"info-Massage\">\r\n                    <span class=\"slot-bg-yellow\"></span>\r\n                    <p class=\"indicator_name\"> Deactivated</p>\r\n                  </div>\r\n                  <mat-divider></mat-divider>\r\n                  <div class=\"info-Massage\">\r\n                    <span class=\"slot-bg-gray\"></span>\r\n                    <p class=\"indicator_name\"> Not Connected</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!--button id=\"Logout\" class=\"toggle-button controls button\" (click)=\"logout()\">Logout</button-->\r\n            <agm-circle [latitude]=\"lat\" [longitude]=\"lng\" [radius]=\"circleMapRadius\" [editable]=\"false\"\r\n              [strokeColor]=\"'#000'\" [strokeWeight]=\"'3px'\" (radiusChange)=\"circleMapRadiusChange($event)\">\r\n            </agm-circle>\r\n\r\n            <agm-marker id=\"infowindow\" *ngFor=\"let m of stationMarker; let i = index\" (markerClick)=\"clickedMarker(m)\"\r\n              [latitude]=\"m.lat\" [longitude]=\"m.lng\" (dragEnd)=\"markerDragEnd(m, $event)\"\r\n              [iconUrl]=\"(m.status=='Y' ) ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\">\r\n\r\n              <!-- *ngFor=\"let m of markers; let i = index\"\r\n             (markerClick)=\"clickedMarker(m.label, i,m.id)\"\r\n             [latitude]=\"m.lat\"\r\n             [longitude]=\"m.lng\"\r\n             [label]=\"m.label\"\r\n             [markerDraggable]=\"m.draggable\"\r\n             (dragEnd)=\"markerDragEnd(m, $event)\"> -->\r\n              <!-- [iconUrl]=\"(m.status=='OPEN' || m.status=='CLOSE' ) ? 'assets/img/markerIconA.png' : 'assets/img/markerIconI.png'\" -->\r\n              <!-- <agm-circle [latitude]=\"lat + 0.3\" [longitude]=\"lng\" \r\n         [radius]=\"radius\"\r\n         [fillColor]=\"'forestgreen'\"\r\n         [circleDraggable]=\"false\"\r\n         [editable]=\"false\">\r\n     </agm-circle> -->\r\n\r\n              <agm-info-window [disableAutoPan]=\"false\" #infoWindow [isOpen]=\"isInfoWindowOpen(m.id)\" [latitude]=\"m.lat\"\r\n                [longitude]=\"m.lng\" style=\"padding:0px;\">\r\n                <div *ngIf=\"m.infoWindowShow else infoWindowTemp\">\r\n\r\n                </div>\r\n\r\n\r\n              </agm-info-window>\r\n              <agm-direction [origin]=origin [destination]=destination [renderOptions]=\"renderOptions\">\r\n              </agm-direction>\r\n            </agm-marker>\r\n\r\n\r\n          </agm-map>\r\n          <ng-template #infoWindowTemp>\r\n            <div class=\"card \">\r\n              <div class=\"section-hero-header-title-description\">\r\n                <mat-icon id=\"icon\" matTooltip=\"Close window\" (click)=\"close_infoWinow()\"\r\n                  style=\"cursor:pointer;color:white\">clear</mat-icon>\r\n                <div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\" style=\"align-items: center;\">\r\n                  <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                    <div class=\"station_name\"> {{infoMarker?.name}} </div>\r\n                    <div class=\"station_address\"> {{infoMarker?.email}}</div>\r\n                    <div class=\"station_address\"> {{infoMarker?.mobile}}</div>\r\n                  </div>\r\n                  <div fxFlex=\"50\" fxFlex.lt-sm=\"100\" style=\"text-align: end;padding-right: 20px;\">\r\n                    <mat-icon matTooltip=\"View details\" (click)=\"viewDetails(infoMarker)\"\r\n                      style=\"cursor:pointer;color:white\">preview</mat-icon>\r\n                  </div>\r\n                </div>\r\n                <div fxLayout=\"row wrap\" *ngIf=\"ameniteExits\" fxLayoutGap=\"0px grid\" class=\"tab-content\"\r\n                  style=\"align-items: center;\">\r\n                  <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"text-align: end;padding-right: 20px;\">\r\n                    <div class=\"chipicon\">\r\n\r\n                      <img *ngFor=\"let amenite of infoMarker?.amenities; let i = index;\" src=\"{{amenite.icon_url}}\"\r\n                        width=\"24px\" height=\"24px;\" matTooltip=\"{{amenite.amenity_name}}\" style=\"margin-right: 5px;\"\r\n                        class=\"emenite_icon\">\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <mat-tab-group>\r\n                <mat-tab label=\"Station Details\">\r\n                  <div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\">\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <div class=\"label_txt\">\r\n                        <span class=\"material-icons icon-middle\">person_pin</span>\r\n                        {{infoMarker?.cp_name}}\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <div class=\"label_txt\">\r\n                        <span class=\"material-icons icon-middle\">person_pin</span>\r\n                        {{infoMarker?.cpo_name}}\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <div class=\"label_txt\">\r\n                        <span class=\"material-icons icon-middle\">ev_station</span>\r\n                        Location Type: {{infoMarker?.location_type}}\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <div class=\"label_txt\">\r\n                        <span class=\"material-icons icon-middle\">location_on</span>\r\n                        Commissioned Date: {{infoMarker?.commissioned_dt | date}}\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <div class=\"label_txt\">\r\n                        <span class=\"material-icons icon-middle\">call</span>\r\n                        Register As: {{infoMarker?.register_as}}\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <div class=\"label_txt\">\r\n                        <span class=\"material-icons icon-middle\">ev_station</span>\r\n                        Electricity line : {{infoMarker?.electricity_line}}\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </mat-tab>\r\n                <mat-tab label=\"Charger Details\">\r\n                  <div class=\"tab-content\">\r\n                    <div class=\"charger-head\"> </div>\r\n                    <div>\r\n                      <mat-accordion class=\"example-headers-align\">\r\n                        <mat-expansion-panel *ngFor=\"let charger of chargers; let i = index;\" (opened)=\"setOpened(i)\"\r\n                          (closed)=\"setClosed(i)\" style=\"width: 590px;\">\r\n                          <mat-expansion-panel-header>\r\n                            <mat-panel-title>\r\n                              {{charger?.serial_no}}\r\n                            </mat-panel-title>\r\n                            <mat-panel-description>\r\n                              {{charger?.charger_batch_name}}\r\n                              <div *ngIf=\"(charger.charger_status == 'ONLINE')\">\r\n\r\n                                <mat-icon [ngStyle]=\"{'color':'green'}\" matTooltip=\"Charger Online\">public\r\n                                </mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon [ngStyle]=\"{'color':'green'}\" matTooltip=\"Book now\"\r\n                                  (click)=\"bookings(charger)\">menu_book</mat-icon>\r\n                              </div>\r\n                              <div *ngIf=\"(charger.charger_status == 'OFFLINE/UNAVALIABLE')\">\r\n                                <mat-icon [ngStyle]=\"{'color':'red'}\" matTooltip=\"Charger Offline\">public_off\r\n                                </mat-icon>\r\n                              </div>\r\n\r\n                            </mat-panel-description>\r\n                          </mat-expansion-panel-header>\r\n                        </mat-expansion-panel>\r\n                      </mat-accordion>\r\n                    </div>\r\n\r\n                  </div>\r\n                </mat-tab>\r\n              </mat-tab-group>\r\n\r\n            </div>\r\n\r\n          </ng-template>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { EndUserMapComponent } from './map-screen/end-user-map.component';\r\nimport { EndUserMapRoutingModule } from './end-user-map-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { AgmCoreModule } from '@agm/core';\r\nconst COMPONENTS =[EndUserMapComponent];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, EndUserMapRoutingModule,FuseSharedModule,AgmCoreModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EndUserMapModule{}","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EndUseService {\r\n  apiUrl2 = `${environment.API_URL2}/chargingStation/` ;\r\n  apiUrl3 = `${environment.API_URL2}/usermanagement` ;\r\n  constructor(private http : HttpClient) { }\r\n\r\n  getChargingStationsByUserRoleAndLatLongUW(login_id,params){\r\n    return this.http.post(`${this.apiUrl2}/getChargingStationsByUserRoleAndLatLongUW/${login_id}`,params);\r\n  }\r\n \r\n  \r\n\r\n  \r\n}\r\n"]}