{"version":3,"sources":["webpack:///src/app/main/driver/driver-crud/driver-crud.component.ts","webpack:///src/app/main/driver/driver-crud/driver-crud.component.html","webpack:///src/app/main/driver/list/list.component.ts","webpack:///src/app/main/driver/list/list.component.html","webpack:///src/app/main/driver/driver-crud/routes.ts","webpack:///src/app/main/driver/view-dialog/view-dialog.component.ts","webpack:///src/app/main/driver/view-dialog/view-dialog.component.html","webpack:///src/app/main/driver/driver-routing.module.ts","webpack:///src/app/shared/services/rfid/rfid.service.ts","webpack:///src/app/main/driver/driver.module.ts","webpack:///src/app/shared/services/driver/driver.service.ts","webpack:///src/app/main/driver/action-dialog/action-dialog.component.ts","webpack:///src/app/main/driver/action-dialog/action-dialog.component.html","webpack:///src/app/main/driver/create/create.component.ts","webpack:///src/app/main/driver/create/create.component.html"],"names":["DriverCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","nav_list","nav_list_with_tab","filter","x","id","objectData","children","y","objectChildData","isDefaultRoutePermeted","z","push","label","link","navigate","selector","templateUrl","styleUrls","encapsulation","None","animations","Driver","ListComponent","driverService","dialog","snackBar","fb","cpoService","rfidService","head","dataSource","groupByColumns","expandedRfid","expandedSubRfid","clientSearch","cpoSearch","nameSearch","mobileSearch","statusSearch","selectedCpo_id","form","group","CPO","columns","field","displayedColumns","map","column","getactivecposcw","userId","filterEntity","filterType","ANYWHERE","event","filterValue","target","value","trim","toLowerCase","paginator","firstPage","cpo_id","getDriverById","resp","status","driverData","data","i","length","statusString","sort","open","NoRecordFoundMessage","duration","err","getactivecposcwwithAll","cposName","role_code","toSelect","get","setValue","disable","getDriverData","filteredOptionsCPO","controls","valueChanges","pipe","name","_filterCPO","item","option","includes","element","confirmDialogRef","disableClose","afterClosed","result","action","params","rfidData","rfid","dialogRef","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","cpo_name","mobile","exportedData","filteredData","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","onCPOChange","TABS_DEMO_ROUTES","path","canActivate","component","redirectTo","pathMatch","autocompleteObjectValidator","control","ViewDialogComponent","countryService","isEditMode","initialize","cpo","required","pattern","addressLine1","addressLine2","landmark","city","state","country","pincode","Object","keys","forEach","key","getCpos","getAllCountry","getAllState","country_id","getAllCity","state_id","assignValues","countries","find","c","filteredOptionCountry","_filterCountry","countryID","getStateByCountry","states","filteredOptionState","_filterState","stateID","getCityByState","cities","city_id","filteredOptionCity","_filterCity","address1","address2","PIN","close","cpos","pin_code_id","getCountryStateByPIN","getCountryByState","countrydata","statedata","Citydata","stateId","citiesdata","checked","ref","closeActionPanel","getStateCountry","updateStatus","routes","loadChildren","then","m","DriverRfidModule","DriverRoutingModule","forChild","imports","exports","RfidService","http","apiUrl2","API_URL2","post","user_id","login_id","map_id","providedIn","COMPONENTS","COMPONENTS_DYNAMIC","DriverModule","declarations","entryComponents","DriverService","driver_id","ActionDialogComponent","valid","formValues","created_by","modify_by","update","recordUpdateMessage","err_code","errorMsg","message","index","lastIndexOf","splitted","substring","chargingStationDuplicate","mobileDuplicate","errorMessage","create","chargerStationCreate","getStatesByCountry","getCitiesByStates","onCountryChange","onStateChange","onCityChange","onYesClick","CreateComponent","masterService","stateData","getAllCities","clientCreate","clientDuplicate","mobileDuplicateClient","hasError","onSubmit","$event","preventDefault"],"mappings":"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","file":"app-main-driver-driver-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n@Component({\r\n  selector: 'app-driver-crud',\r\n  templateUrl: './driver-crud.component.html',\r\n  styleUrls: ['./driver-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class DriverCrudComponent implements OnInit {\r\n\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Clients', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  tempLinks = [];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  dyanmictab: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n\r\n\r\n      if (x.id === \"manageDriver\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'List', link: 'list' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/driverManagement/crud/' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n    <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n      <!-- CENTER -->\r\n      <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n          <!-- HEADER -->\r\n          <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n                  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                        [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}} \r\n                  </span>\r\n  \r\n                  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                          (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                      <mat-icon>menu</mat-icon>\r\n                  </button-->\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n      <a mat-tab-link\r\n         *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n         [routerLink]=\"tabLink.link\"\r\n         routerLinkActive #rla=\"routerLinkActive\"\r\n         [active]=\"rla.isActive\">\r\n        {{tabLink.label}}\r\n      </a>\r\n    </nav>\r\n    <router-outlet ></router-outlet>\r\n  </div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nexport class Driver {\r\n  id: string;\r\n  cpo_id: number;\r\n  cpo_name: string;\r\n  name: string;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_id: number;\r\n  state_id: number;\r\n  country_id: number;\r\n  mobile: string;\r\n  status: string;\r\n  created_date: string;\r\n  created_by: number; // corrected property name\r\n  statusString: string;\r\n  modify_date: string;\r\n  modify_by: number; // corrected property name\r\n  action: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: Driver;\r\n  filterType: MatTableFilter;\r\n  head = [['CPO Name', 'Driver Name', 'Mobile', 'Status']];\r\n  public dataSource = new MatTableDataSource<any>([]);\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  cposName: any;\r\n  clientName: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  rfid: Driver[];\r\n  localCpoid: any;\r\n  columns: any[];\r\n  displayedColumns: string[];\r\n  groupByColumns: string[] = [];\r\n  driverData: any[];\r\n  _allGroup: any[];\r\n\r\n  expandedRfid: any[] = [];\r\n  expandedSubRfid: Driver[] = [];\r\n  Row: any;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  cpoSearch = false;\r\n  nameSearch = false;\r\n  mobileSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  cpoRfid: any;\r\n  selectedCpo_id: any = 0;\r\n\r\n  constructor(\r\n    private driverService: DriverService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private cpoService: CpoService,\r\n    private rfidService: RfidService\r\n  ) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.form = this.fb.group({\r\n      CPO: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.columns = [\r\n      {\r\n        field: 'cpo_name'\r\n      },\r\n      {\r\n        field: 'name'\r\n      },\r\n      {\r\n        field: 'mobile'\r\n      },\r\n      {\r\n        field: 'status'\r\n      },\r\n      {\r\n        field: 'action'\r\n      }\r\n    ];\r\n    this.displayedColumns = this.columns.map(column => column.field);\r\n\r\n    this.getactivecposcw(this.localStorage.userId)\r\n    this.filterEntity = new Driver();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    // this.getDriverData(this.selectedCpo_id);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getDriverData(cpo_id?: number) {\r\n    \r\n    this.driverService.getDriverById(this.localStorage.userId, cpo_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.driverData = resp.data;\r\n          for (var i = 0; i < this.driverData.length; i++) {\r\n            if (this.driverData[i].status == 'N') {\r\n              this.driverData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.driverData[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.driverData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.driverData = [];\r\n          this.dataSource = new MatTableDataSource(this.driverData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    );\r\n  }\r\n\r\n  getactivecposcw(id) {\r\n    this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cposName = data;\r\n        if (this.localStorage.role_code != \"END\") {\r\n          if (this.cposName != null && this.cposName != undefined) {\r\n            // const toSelect = this.cposName.length == 1 ? this.cposName[0] : this.cposName[1];\r\n            const toSelect = this.cposName[0];\r\n\r\n            this.selectedCpo_id = toSelect.id;\r\n            this.form.get('CPO').setValue(toSelect);\r\n\r\n            if (this.localStorage.role_code == \"CPO\") {\r\n              this.form.get('CPO').disable();\r\n            }\r\n\r\n            this.getDriverData(this.selectedCpo_id);\r\n          }\r\n          this.filteredOptionsCPO = this.form.controls.CPO.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCPO(name) : this.cposName)\r\n          );\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  delete(element) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.driverService.delete(element.id).subscribe(\r\n          (data: any) => {\r\n            this.getDriverData(this.selectedCpo_id);\r\n            this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n  onCPOChange(cpo_id) {\r\n    this.selectedCpo_id = cpo_id;\r\n    this.getDriverData(cpo_id);\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      rfidData: this.rfid\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getDriverData(this.selectedCpo_id);\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getDriverData(this.selectedCpo_id);\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n\r\n    if (visibleOption == 'cpoSearch') {\r\n      this.cpoSearch = !this.cpoSearch;\r\n      this.filterEntity.cpo_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var driverData = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'CPO Name': driverData.cpo_name,\r\n        'Name': driverData.name,\r\n        'Mobile': driverData.mobile,\r\n        'Status': driverData.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Driver List');\r\n    XLSX.writeFile(workBook, 'Driver List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var driverData = this.dataSource.filteredData[i];\r\n      var data = [driverData.cpo_name, driverData.name, driverData.mobile, driverData.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Driver List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Driver List report.pdf');\r\n\r\n  }\r\n\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <div style=\"text-align: left ;margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n            <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                <mat-icon>sim_card_download</mat-icon>\r\n            </button>&nbsp;&nbsp;\r\n            <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                <mat-icon>picture_as_pdf</mat-icon>\r\n            </button>\r\n            <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n        </div>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" class=\"form-field-full\">\r\n                    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"50\">\r\n                            <mat-label>Select CPO </mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"CPO\" [matAutocomplete]=\"auto2\">\r\n                            <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                                (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                                <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                                    {{option.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <div matSuffix style=\"display: flex;\">\r\n                                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                                <mat-icon matSuffix class=\"secondary-text\"\r\n                                    matTooltip=\"Please enter cpo name\">account_circle\r\n                                </mat-icon>\r\n                            </div>\r\n                            <mat-error *ngIf=\"form.get('CPO').invalid\">Please select cpo</mat-error>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"\">\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n            <mat-table \r\n                mat-table matTableFilter \r\n                [dataSource]=\"dataSource\" \r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" \r\n                matSort \r\n                class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Mobile &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Mobile No.\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.mobile}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 110px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path: 'create', canActivate: [AuthGuard], component: CreateComponent },\r\n  { path: 'list', canActivate: [AuthGuard], component: ListComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss']\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  cpos: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  countries: any;\r\n  cities: any;\r\n  states: any;\r\n\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    private driverService: DriverService,\r\n    private snackBar: MatSnackBar,\r\n    private cpoService: CpoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', Validators.required],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    // Disable all form controls\r\n    Object.keys(this.form.controls).forEach(key => {\r\n      this.form.get(key).disable();\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  assignValues(params) {\r\n    // this.form.get('cpo').setValue(params.data.name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getCpos() {\r\n\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n        this.cpos = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n\r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCPO(name) : this.cpos)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n    style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">View Driver</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n            name=\"form\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>CPO</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n                    <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not\r\n                        allowed</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 1</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 2</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Pin Code</mat-label>\r\n                    <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n                        autocomplete=\"off\" required>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select country\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select state\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select city\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Landmark</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required\r\n                        autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n                    (change)=\"updateStatus($event)\" #toggleElement>\r\n                    {{status ? 'Active' : 'Inactive'}}\r\n                </mat-slide-toggle>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n                <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DriverCrudComponent } from './driver-crud/driver-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nimport { TABS_DEMO_ROUTES } from './driver-crud/routes';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'crud', component: DriverCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n  },\r\n  {\r\n    path: 'driverRfid',  \r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import('app/main/driver/driver-rfid/driver-rfid.module').then(m => m.DriverRfidModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DriverRoutingModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\nimport { DriverRoutingModule } from './driver-routing.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { DriverCrudComponent } from './driver-crud/driver-crud.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nconst COMPONENTS = [DriverCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n  declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    DriverRoutingModule,\r\n    FuseSharedModule\r\n  ],\r\n  entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\nexport class DriverModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriverService {\r\n\r\n  apiUrl2 = `${environment.API_URL2}/driver`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(params) {\r\n    return this.http.post(`${this.apiUrl2}/crt/`, params);\r\n  }\r\n\r\n  update(params) {\r\n    return this.http.post(`${this.apiUrl2}/upd/`, params);\r\n  }\r\n\r\n  getDriverById(login_id, cpo_id) {\r\n    if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n      cpo_id = 0;\r\n    }\r\n    return this.http.get(`${this.apiUrl2}/gtDriversCW/${login_id}/${cpo_id}`);\r\n  }\r\n\r\n  delete(driver_id) {\r\n    return this.http.delete(`${this.apiUrl2}/dlt/${driver_id}`);\r\n  }\r\n\r\n  getUnmappedDriverByCpoId(cpo_id) {\r\n    return this.http.get(`${this.apiUrl2}/gtDriverByCpoId/${cpo_id}`)\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss']\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  cpos: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  countries: any;\r\n  cities: any;\r\n  states: any;\r\n\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    private driverService: DriverService,\r\n    private snackBar: MatSnackBar,\r\n    private cpoService: CpoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', Validators.required],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  assignValues(params) {\r\n    // this.form.get('cpo').setValue(params.data.name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    \r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params: any = {\r\n        cpo_id: formValues.cpo.id,\r\n        name: formValues.name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      // tslint:disable-next-line: no-//\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.driverService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n                this.errorMsg = resp.message;\r\n                var index = this.errorMsg.lastIndexOf(\" \");\r\n                this.splitted = this.errorMsg.substring(index + 1);\r\n                if (this.splitted == \"'name'\") {\r\n                  this.snackBar.open(MessageConstant.chargingStationDuplicate, 'Dismiss', { duration: 5000 });\r\n                } if (this.splitted == \"'mobile'\") {\r\n                  this.snackBar.open(MessageConstant.mobileDuplicate, 'Dismiss', { duration: 5000 });\r\n                }\r\n              } else {\r\n                this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.driverService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    }\r\n\r\n  }\r\n\r\n  getCpos() {\r\n\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n        this.cpos = data;\r\n        \r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n          \r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCPO(name) : this.cpos)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n \r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n    style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Update Driver</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n            name=\"form\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>CPO</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n                    <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not\r\n                        allowed</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 1</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 2</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Pin Code</mat-label>\r\n                    <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n                        autocomplete=\"off\" required>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n                        (optionSelected)='onCountryChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select country\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n                        (optionSelected)='onStateChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select state\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n                        (optionSelected)='onCityChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select city\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Landmark</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required\r\n                        autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n                    (change)=\"updateStatus($event)\" #toggleElement>\r\n                    {{status ? 'Active' : 'Inactive'}}\r\n                </mat-slide-toggle>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n                <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n                    ? 'Save' : 'Save'}}</button>\r\n                <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  brands: any;\r\n  models: any;\r\n  chargerTypes: any;\r\n  vehicleTypes: any;\r\n  localStorage: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  cpos:any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  localClient: any;\r\n  selectedClient_id: any;\r\n  selectedCpo_id: any;\r\n\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  constructor(private fb: FormBuilder, private masterService: MasterService,\r\n    private driverService: DriverService, private snackBar: MatSnackBar,\r\n    private router: Router, public countryService: CountriesService, private cpoService : CpoService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', Validators.required],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n    this.getCpos();\r\n  }\r\n\r\n  getCpos(){\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n      this.cpos = data;\r\n      this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCPO(name) : this.cpos)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  \r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        this.countries = data;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (stateData: any) => {\r\n        this.states = stateData;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      ////\r\n\r\n      let params = {\r\n        cpo_id: formValues.cpo.id,\r\n        name: formValues.name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n\r\n      this.driverService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/driverManagement/crud/list']);\r\n          } else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              var index = this.errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this.errorMsg.substring(index + 1);\r\n              if (this.splitted == \"'name'\") {\r\n                this.snackBar.open(MessageConstant.clientDuplicate, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'mobile'\") {\r\n                this.snackBar.open(MessageConstant.mobileDuplicateClient, 'Dismiss', { duration: 5000 });\r\n              }\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n          }\r\n\r\n\r\n        },\r\n        (err) => {\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>CPO</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n        <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n          autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" style=\"height: 53px;\" color=\"primary\" [checked]=\"status\"\r\n        (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\"\r\n        routerLink=\"/clientManagement/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>"]}