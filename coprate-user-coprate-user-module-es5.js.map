{"version":3,"sources":["webpack:///src/app/main/coprate-mgmt/coprate-user/coprate-user-routing.module.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/create/create.component.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/create/create.component.html","webpack:///src/app/main/coprate-mgmt/coprate-user/coprate-user-crud/coprate-user-crud.component.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/coprate-user-crud/coprate-user-crud.component.html","webpack:///src/app/shared/services/corporate/corporate.service.ts","webpack:///src/app/shared/services/rfid/rfid.service.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/coprate-user.module.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/action-dialog/action-dialog.component.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/action-dialog/action-dialog.component.html","webpack:///src/app/main/coprate-mgmt/coprate-user/coprate-user-crud/routes.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/list/list.component.ts","webpack:///src/app/main/coprate-mgmt/coprate-user/list/list.component.html"],"names":["routes","path","component","children","CoprateUserRoutingModule","forChild","imports","exports","autocompleteObjectValidator","control","value","CreateComponent","fb","masterService","userService","snackBar","router","datePipe","countryService","confirmValidator","error","required","form","controls","password","confirm","initialize","getAllCountry","getAllState","localStorage","JSON","parse","getItem","group","name","pattern","coprate_code","email","register_number","phone_number","min","max","cin_number","date_of_incorporation","contract_period_from","contract_period_to","gstin","addressline1","addressline2","pincode","landmark","country","state","city","getCpoTypes","subscribe","data","countries","filteredOptionCountry","valueChanges","pipe","_filterCountry","err","states","filteredOptionState","_filterState","getAllCities","cities","filteredOptionCity","_filterCity","cpo_types","getCPOTypes","filteredOptionsCpo","cpoType","_filterCpoType","item","filterValue","toLowerCase","filter","option","includes","isPasswordFieldType","isPasswordConfirmFieldType","invalid","formValues","params","rf_name","description","rfid_description","rfid_no","rfid_number","expiry_date","transform","rfid_expDate","status","created_date","created_by","userId","create","open","duration","navigate","get","hasError","pin_code_id","getCountryStateByPIN","undefined","length","state_id","getCountryByState","countrydata","toSelect","find","c","id","country_id","setValue","getStateByCountry","statedata","getCityByState","Citydata","event","getStatesByCountry","getCitiesByStates","stateId","citiesdata","onSubmit","$event","preventDefault","getStateCountry","onCityChange","onStateChange","onCountryChange","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","CoprateUserCrudComponent","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","push","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","CorporateService","http","apiUrl2","API_URL2","apiUrl3","API_URL3","apiUrl4","post","providedIn","RfidService","user_id","cpo_id","login_id","map_id","COMPONENTS","COMPONENTS_DYNAMIC","CoprateUserModule","declarations","entryComponents","ActionDialogComponent","rfidService","dialogRef","isEditMode","action","assignValues","close","modify_by","update","rf_id_no","checked","ref","closeActionPanel","updateStatus","onYesClick","TABS_DEMO_ROUTES","canActivate","redirectTo","pathMatch","CoprateUsers","ListComponent","corporateService","dialog","displayedColumns","head","nameSearch","coprateCodeSearch","cinNumberSearch","registerNumberSearch","phoneNumberSearch","dateOfIncoprationSearch","contractEndDateSearch","productSearch","getAllCoprateUsers","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","getAllCorporate","coprateUsers","sort","width","autoFocus","disableClose","afterClosed","result","visibleOption","date_of_Incopration","contract_end_date","product","exportedData","i","filteredData","coprateUsersModel","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport"],"mappings":"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","file":"coprate-user-coprate-user-module-es5.js","sourcesContent":["import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CoprateUserCrudComponent } from './coprate-user-crud/coprate-user-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './coprate-user-crud/routes';\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : CoprateUserCrudComponent, children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class CoprateUserRoutingModule{}","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  chargerTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  role_types:any;\r\n  cpo_types:any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private userService : UserService,private snackBar: MatSnackBar,\r\n    private router : Router,private datePipe: DatePipe,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n   //this.getCountry();\r\n   this.getAllCountry();\r\n   this.getAllState();\r\n   //this.getAllCity();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      coprate_code:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      register_number:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      phone_number:['',[Validators.required,Validators.min(10000000000), Validators.max(999999999999)]],\r\n      cin_number:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      date_of_incorporation:['',[Validators.required]],\r\n      contract_period_from:['',[Validators.required]],\r\n      contract_period_to:['',[Validators.required]],\r\n      gstin:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressline1: ['', [Validators.required]],\r\n      addressline2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required]],\r\n      landmark: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      country: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      city: ['', [Validators.required]],\r\n\r\n     \r\n\r\n\r\n    \r\n     \r\n    });\r\n   //this.filteredOptions();\r\n   \r\n   this.getCpoTypes();\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getCpoTypes(){\r\n    \r\n    this.cpo_types = this.userService.getCPOTypes();\r\n    this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n    );\r\n   \r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType(){\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType(){\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  onSubmit(){\r\n    if (this.form.invalid){\r\n      return;\r\n    }else{\r\n      let formValues = this.form.value;\r\n      ////\r\n  \r\n      \r\n      let params = {\r\n        name :formValues.rf_name, \r\n        description :formValues.rfid_description, \r\n        rfid_no :formValues.rfid_number,\r\n        expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        status :'Y' ,\r\n        created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n      \r\n      this.userService.create(params).subscribe(\r\n        (data:any )=>{\r\n          \r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.router.navigate(['/rfidManagement/crud/list']);\r\n  \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n    \r\n    \r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n // this.form.get('pincode').setValue( \"\");\r\n}\r\nonCityChange(event){\r\n  \r\n  //this.form.get('pincode').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label> Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Corporate Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"coprate_code\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('coprate_code').hasError('required')\">Corporate code required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('coprate_code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"email\" required>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Register Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"register_number\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('register_number').hasError('required')\">Register number required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('register_number').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"phone_number\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('phone_number').hasError('required')\">Please enter mobile</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('phone_number').hasError('max')\">Mobile number not be greater then 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('phone_number').hasError('min')\">Mobile number not be less then 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>CIN Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"cin_number\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cin_number').hasError('required')\">CIN number required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cin_number').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Date of Incorporation</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp1\" formControlName=\"date_of_incorporation\" disabled>\r\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('date_of_incorporation').invalid\">Please enter date of incorporation\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>GSTIN</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"gstin\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('gstin').hasError('required')\">GST number required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('gstin').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Contract Period From</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp2\" formControlName=\"contract_period_from\" disabled>\r\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp2\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp2 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('contract_period_from').invalid\">Please enter date of contract period from\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Contract Period To</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp3\" formControlName=\"contract_period_to\" disabled>\r\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('contract_period_to').invalid\">Please enter date of contract period to\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<mat-divider></mat-divider>\r\n\t\t<h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressline1\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('addressline1').invalid\">Please enter address line</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressline2\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('addressline2').invalid\">Please enter address line </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\">\r\n\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\">\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"countryAuto\">\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"49.5\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" maxlength=\"50\" formControlName=\"landmark\" autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('landmark').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"coprateUserManagement/coprate-user/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-coprate-user-crud',\r\n  templateUrl: './coprate-user-crud.component.html',\r\n  styleUrls: ['./coprate-user-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CoprateUserCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Corporate User', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"coprateUserManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"coprateUser\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"corporateUser\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Corporate User', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/coprateUserManagement/coprate-user/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CorporateService {\r\n  apiUrl2 = `${environment.API_URL2}/chargingStation` ;\r\n  apiUrl3 = `${environment.API_URL3}` ;\r\n  apiUrl4 = `${environment.API_URL2}` ;\r\n  constructor(private http : HttpClient) { }\r\n\r\n  create(params){\r\n    return this.http.post(`${this.apiUrl2}/create/`,params);\r\n  }\r\n  update(params){\r\n    return this.http.post(`${this.apiUrl2}/update/`,params);\r\n  }\r\n  getAllCorporate(){\r\n    return this.http.get(`${this.apiUrl2}/getAllCorporate`);\r\n  }\r\n \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CoprateUserCrudComponent } from './coprate-user-crud/coprate-user-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CoprateUserRoutingModule } from './coprate-user-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS =[CoprateUserCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, CoprateUserRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class CoprateUserModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder,private rfidService: RfidService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      description : ['', [Validators.required]] ,\r\n      rfid_no: ['', [Validators.required]],\r\n      rfid_expDate : ['', [Validators.required]]   \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      rfid_no :formValues.rfid_no,\r\n      expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n      created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_by : this.localStorage.userId,\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.update(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('rfid_no').setValue(params.data.rf_id_no);\r\n    this.form.get('rfid_expDate').setValue(params.data.expiry_date);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n\r\n      <form [formGroup]=\"form\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Name</mat-label>\r\n              <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"name\" required>\r\n              <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Description</mat-label>\r\n              <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"description\" required>\r\n              <mat-error *ngIf=\"form.get('description').invalid\">Please enter description\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>RFID Number</mat-label>\r\n              <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"rfid_no\" required>\r\n              <mat-error *ngIf=\"form.get('rfid_no').invalid\">Please enter RFID number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Expiry Date</mat-label>\r\n              <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n              <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n              <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n              #toggleElement>\r\n              {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"m-t-8\" (click)=\"close()\"\r\n          style=\"margin-left: 1%;\">Cancel</button>\r\n\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CorporateService } from 'app/shared/services/corporate/corporate.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport class CoprateUsers {\r\n  name: string;\r\n  coprate_code: string;\r\n  cin_number: string;\r\n  register_number: string;\r\n  phone_number: string;\r\n  date_of_Incopration: string;\r\n  contract_end_date: string;\r\n  product: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'coprate_code', 'cin_number', 'register_number', 'phone_number', 'date_of_Incopration',\r\n    'contract_end_date', 'product', 'action'];\r\n  head = [['Name','Coprate Code','CIN Number','Register Number','Phone Number','Date Of Incopration','Contract End Date','Product']];\r\n  dataSource: MatTableDataSource<CoprateUsers>;\r\n\r\n  coprateUsers: CoprateUsers[];\r\n  filterEntity: CoprateUsers;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  nameSearch = false;\r\n  coprateCodeSearch = false;\r\n  cinNumberSearch = false;\r\n  registerNumberSearch = false;\r\n  phoneNumberSearch = false;\r\n  dateOfIncoprationSearch = false;\r\n  contractEndDateSearch = false;\r\n  productSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  constructor(private corporateService: CorporateService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = localStorage.getItem('userDetails');\r\n    this.getAllCoprateUsers();\r\n    this.filterEntity = new CoprateUsers();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCoprateUsers() {\r\n    this.corporateService.getAllCorporate().subscribe(\r\n      (data: any) => {\r\n        this.coprateUsers = data;\r\n        this.dataSource = new MatTableDataSource(this.coprateUsers);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n\r\n    // this.rfidService.delete(id).subscribe(\r\n    //   (data:any)=>{\r\n\r\n    //     this.getRFids();\r\n    //     this.snackBar.open('Deleted successfully','Dismiss',{duration:2000});\r\n    //   },(err)=>{\r\n\r\n    //   }\r\n    // )\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllCoprateUsers();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n\r\n    if (visibleOption == 'coprateCodeSearch') {\r\n      this.coprateCodeSearch = !this.coprateCodeSearch;\r\n      this.filterEntity.coprate_code = '';\r\n    }\r\n\r\n    if (visibleOption == 'cinNumberSearch') {\r\n      this.cinNumberSearch = !this.cinNumberSearch;\r\n      this.filterEntity.cin_number = '';\r\n    }\r\n    if (visibleOption == 'registerNumberSearch') {\r\n      this.registerNumberSearch = !this.registerNumberSearch;\r\n      this.filterEntity.register_number = '';\r\n    }\r\n    if (visibleOption == 'phoneNumberSearch') {\r\n      this.phoneNumberSearch = !this.phoneNumberSearch;\r\n      this.filterEntity.phone_number = '';\r\n    }\r\n    if (visibleOption == 'dateOfIncoprationSearch') {\r\n      this.dateOfIncoprationSearch = !this.dateOfIncoprationSearch;\r\n      this.filterEntity.date_of_Incopration = '';\r\n    }\r\n    if (visibleOption == 'contractEndDateSearch') {\r\n      this.contractEndDateSearch = !this.contractEndDateSearch;\r\n      this.filterEntity.contract_end_date = '';\r\n    }\r\n    if (visibleOption == 'productSearch') {\r\n      this.productSearch = !this.productSearch;\r\n      this.filterEntity.product = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var coprateUsersModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Name': coprateUsersModel.name, 'Coprate Code': coprateUsersModel.coprate_code, 'CIN Number': coprateUsersModel.cin_number,\r\n        'Register Number': coprateUsersModel.register_number, 'Phone Number ': coprateUsersModel.phone_number, 'Date Of Incopration ': coprateUsersModel.date_of_Incopration,\r\n        'Contract End Date ': coprateUsersModel.contract_end_date, 'Product ': coprateUsersModel.product\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Coprate Users');\r\n    XLSX.writeFile(workBook, 'Corporate Users.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.name, chrger.coprate_code, chrger.cin_number, chrger.register_number, chrger.phone_number, chrger.date_of_Incopration, chrger.contract_end_date,\r\n        chrger.product,];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Corporate Users Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('Corporate Users  report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n  }\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"coprate_code\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Corporate Code\" [(ngModel)]=\"filterEntity.coprate_code\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.coprate_code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"cin_number\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"CIN Number\" [(ngModel)]=\"filterEntity.cin_number\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cin_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"register_number\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Register Number\" [(ngModel)]=\"filterEntity.register_number\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.register_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"phone_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Phone Number\" [(ngModel)]=\"filterEntity.phone_number\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.phone_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date_of_Incopration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Date Of INcopration\"\r\n                                [(ngModel)]=\"filterEntity.date_of_Incopration\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.date_of_Incopration}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"contract_end_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Contract End Date\"\r\n                                [(ngModel)]=\"filterEntity.contract_end_date\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.contract_end_date}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"product\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Product\" [(ngModel)]=\"filterEntity.product\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.product}} </td>\r\n                </ng-container>\r\n                <!-- <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"\r\n                        [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container> -->\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 250px\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_coprate_code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!coprateCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Corporate Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('coprateCodeSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"coprateCodeSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Corporate Code\" [(ngModel)]=\"filterEntity.coprate_code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('coprateCodeSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_cin_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cinNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">CIN Number\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('cinNumberSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"cinNumberSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"CIN Number\" [(ngModel)]=\"filterEntity.cin_number\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cinNumberSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_register_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!registerNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">Register\r\n                            Number &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('registerNumberSearch')\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"registerNumberSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Register Number\" [(ngModel)]=\"filterEntity.register_number\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('registerNumberSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_phone_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!phoneNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">Phone Number\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('phoneNumberSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"phoneNumberSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Phone Number\" [(ngModel)]=\"filterEntity.phone_number\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('phoneNumberSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_date_of_incopration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateOfIncoprationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date of\r\n                            Incopration &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('dateOfIncoprationSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateOfIncoprationSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Date of Incopration\"\r\n                                [(ngModel)]=\"filterEntity.date_of_Incopration\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateOfIncoprationSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_contract_end_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!contractEndDateSearch\" class=\"custom_font_size\" style=\"display: flex;\">Contract\r\n                            End Date &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('contractEndDateSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"contractEndDateSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Contract End Date\"\r\n                                [(ngModel)]=\"filterEntity.contract_end_date\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('contractEndDateSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_product\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!productSearch\" class=\"custom_font_size\" style=\"display: flex;\">Product\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('productSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"productSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Product\" [(ngModel)]=\"filterEntity.product\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('productSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_Active\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                </ng-container>\r\n                <tr mat-header-row\r\n                    *matHeaderRowDef=\"['lable_name','lable_coprate_code', 'lable_cin_number','lable_register_number','lable_phone_number','lable_date_of_incopration','lable_contract_end_date','lable_product','lable_Active']\">\r\n                </tr>\r\n\r\n\r\n                <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"]}