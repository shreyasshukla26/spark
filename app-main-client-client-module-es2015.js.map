{"version":3,"sources":["./src/app/main/client/client-menu/client-menu.component.ts","./src/app/main/client/client-menu/client-menu.component.html","./src/app/main/client/list/list.component.ts","./src/app/main/client/list/list.component.html","./src/app/main/client/client-crud/routes.ts","./src/app/main/client/client.module.ts","./src/app/main/client/action-dialog/action-dialog.component.ts","./src/app/main/client/action-dialog/action-dialog.component.html","./src/app/main/client/client-routing.module.ts","./src/app/main/client/create/create.component.ts","./src/app/main/client/create/create.component.html","./src/app/main/client/view-dialog/view-dialog.component.ts","./src/app/main/client/view-dialog/view-dialog.component.html","./src/app/main/client/client-crud/client-crud.component.ts","./src/app/main/client/client-crud/client-crud.component.html"],"names":[],"mappings":"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","file":"app-main-client-client-module-es2015.js","sourcesContent":["import { Component, OnInit, Injectable, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MenuConfigService } from 'app/shared/services/menu-config/menu-config.service';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class TodoItemNodeTest {\r\n  children: TodoItemNodeTest[];\r\n  item: string;\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  isSelected: boolean = false;\r\n  parent_id: string;\r\n}\r\nexport class ActionNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n  actionAll: ActionMenuNode[];\r\n  children: TodoItemFlatNode[];\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  map_id: string;\r\n  parent_id: string;\r\n  isSelected: boolean = false;\r\n}\r\nexport class ActionMenuNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n  selectAll: boolean;\r\n}\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemFlatNode[]>([]);\r\n  localStorage: any;\r\n  get data(): TodoItemFlatNode[] { return this.dataChange.value; }\r\n\r\n  constructor(private _menuConfigService: MenuConfigService) {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.getClientMenuList(this.localStorage.project_id, this.localStorage.client_id);\r\n\r\n\r\n  }\r\n  getClientMenuList(project_id, client_id) {\r\n    this._menuConfigService.getMenuConfig(project_id, client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          let menuConfigLit = [];\r\n          let menuChildList = [];\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            let menuCfg = resp.data[index];\r\n            if (menuCfg.parent_id == null) {\r\n              menuConfigLit.push(menuCfg);\r\n            } else {\r\n              let parentMenu = this.getParentMenu(menuConfigLit, menuCfg.parent_id);\r\n              menuChildList = parentMenu.children;\r\n              if (undefined == menuChildList) {\r\n                menuChildList = [];\r\n                parentMenu.children = menuChildList;\r\n              }\r\n              menuChildList.push(menuCfg);\r\n            }\r\n          }\r\n\r\n          const data = this.buildFileTree(menuConfigLit, 0);\r\n          this.dataChange.next(data);\r\n\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getParentMenu(menuConfigList, parent_id) {\r\n    let parentMenu;\r\n    for (let index = 0; index < menuConfigList.length; index++) {\r\n      let menuConfig = menuConfigList[index];\r\n      if (menuConfig.menu_id == parent_id) {\r\n        parentMenu = menuConfig;\r\n        break;\r\n      } else {\r\n        let menuChildList = menuConfig.children;\r\n        if (undefined != menuChildList) {\r\n          parentMenu = this.getParentMenu(menuChildList, parent_id);\r\n          if (parentMenu != undefined) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return parentMenu;\r\n  }\r\n  buildFileTree(menudata, level: number): TodoItemFlatNode[] {\r\n    let todoItemList = [];\r\n    for (let index = 0; index < menudata.length; index++) {\r\n      let menuCfg = menudata[index];\r\n      const node = new TodoItemFlatNode();\r\n      node.item = menuCfg.title;\r\n      node.id = menuCfg.id;\r\n      node.title = menuCfg.title;\r\n      node.menu_id = menuCfg.menu_id;\r\n      node.map_id = menuCfg.map_id;\r\n      node.parent_id = menuCfg.parent_id;\r\n      if (menuCfg.children != undefined)\r\n        node.children = this.buildFileTree(menuCfg.children, level + 1);\r\n      todoItemList.push(node);\r\n\r\n    }\r\n    return todoItemList;\r\n  }\r\n\r\n  insertItem(parent: TodoItemFlatNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({ item: name } as TodoItemFlatNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemFlatNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\nexport interface MenuAction {\r\n  name: string;\r\n  completed: boolean;\r\n  subMenu?: MenuAction[];\r\n}\r\n@Component({\r\n  selector: 'app-client-menu',\r\n  templateUrl: './client-menu.component.html',\r\n  styleUrls: ['./client-menu.component.scss'],\r\n  providers: [ChecklistDatabase, DatePipe],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class ClientMenuComponent implements OnInit {\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  clientMenuForm: FormGroup;\r\n  actionMenu = false;\r\n  menuNode = false;\r\n  localStorage: any;\r\n  selectedMenus = [];\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  menuAction: MenuAction = {\r\n    name: 'select All',\r\n    completed: false,\r\n    subMenu: [\r\n      { name: 'Add/Update', completed: false },\r\n      { name: 'Delete', completed: false },\r\n      { name: 'Download', completed: false }\r\n    ]\r\n  };\r\n  selectedClientID: any;\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  TREE_DATA: any;\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n  @ViewChild('tree') tree;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleCollasped\") collaspedRef: any;\r\n  selectChange = false;\r\n  collaspedChange = false;\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private menuConfigService: MenuConfigService, private changeDetectorRef: ChangeDetectorRef,\r\n    private fb: FormBuilder, private clientService: ClientService, private _database: ChecklistDatabase, private _utilityService: UtilityService) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n    this.getMenuListClientWise();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.changeDetectorRef.detectChanges();\r\n    })\r\n    this.treeControl.expandAll();\r\n  }\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientMenuForm = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]]\r\n    });\r\n    this.getClients();\r\n\r\n  }\r\n  getMenuListClientWise() {\r\n    this._database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n      this.treeControl.expandAll()\r\n\r\n    });\r\n  }\r\n\r\n\r\n  nodeSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants, node)\r\n      : this.checklistSelection.deselect(...descendants, node);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n  checkParentIsSelected(data) {\r\n    for (var k = 0; k < data.length; k++) {\r\n      let node = data[k];\r\n      if (node.children != undefined) {\r\n        const children = node.children;\r\n        this.checkParentIsSelected(children);\r\n        let result = false;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          const isSelected = this.selectedMenus.filter(t => { return children[i].menu_id == t.menu_id });\r\n          if (isSelected != null && isSelected.length > 0) {\r\n            result = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (result == true) {\r\n          const isAlreadyPush = this.selectedMenus.filter(t => { return node.menu_id == t.menu_id });\r\n          if (isAlreadyPush == null || isAlreadyPush.length == 0) {\r\n            this.selectedMenus.push(node);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  openSubmit() {\r\n\r\n    let formValues = this.clientMenuForm.value;\r\n    this.selectedMenus = [];\r\n\r\n    this.selectedMenus = [...this.checklistSelection.selected];\r\n\r\n    this.checkParentIsSelected(this.dataSource.data);\r\n\r\n\r\n    let params = {\r\n      client_id: formValues.client.id,\r\n      menus: this.selectedMenus.map(v => ({ menu_id: v.menu_id, title: v.item, display_order: 0, parent_id: v.parent_id })),\r\n      status: \"Y\",\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n    this.menuConfigService.setClientMenuMapping(params).subscribe(\r\n      (resp: any) => {\r\n        // \r\n        if (resp.status = true) {\r\n          this.snackBar.open(MessageConstant.clientMenuMappedSucess, 'Dismiss', { duration: 5000 });\r\n          this.checklistSelection.clear();\r\n          this._database.getClientMenuList(this.localStorage.project_id, formValues.client.id)\r\n        } else {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n\r\n\r\n\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n        this.clientMenuForm.get('client').setValue(toSelect);\r\n        this.selectedClientID = toSelect.id;\r\n        this.filteredOptionsClient = this.clientMenuForm.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value) {\r\n    //this.dataSource.data =[];\r\n    //this._database.dataChange.next(null);\r\n    this.checklistSelection.clear();\r\n    //this.descendantsAllSelected( this.checklistSelection.);\r\n    this._database.getClientMenuList(this.localStorage.project_id, value.id);\r\n\r\n    this.selectedClientID = value.id;\r\n    //this.getMenuListClientWise();\r\n  }\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n  menu_id = (node: TodoItemFlatNode) => node.menu_id;\r\n  parent_id = (node: TodoItemFlatNode) => node.parent_id;\r\n  getChildren = (node: TodoItemFlatNode): TodoItemFlatNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemFlatNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n      ? existingNode\r\n      : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.menu_id = node.menu_id;\r\n    flatNode.parent_id = node.parent_id;\r\n    flatNode.expandable = !!node.children?.length;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    if (node.map_id != null) {\r\n      this.nodeSelectionToggle(flatNode);\r\n    }\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  // descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n  //   const descendants = this.treeControl.getDescendants(node);\r\n\r\n  //   if (!descendants.length) {\r\n  //     return this.checklistSelection.isSelected(node);\r\n  //   }\r\n  //   const selected = this.checklistSelection.isSelected(node);\r\n  //   const allSelected = descendants.every(child => this.checklistSelection.isSelected(child));\r\n  //   if (!selected && allSelected) {\r\n  //     this.checklistSelection.select(node);\r\n\r\n  //   }\r\n  //   return allSelected;\r\n  // }\r\n\r\n\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      this.changeDetectorRef.markForCheck();\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n    this.actionMenu = true;\r\n    this.menuNode = true;\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\r\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n    this.actionMenu = true;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this._database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this._database.updateItem(nestedNode!, itemValue);\r\n  }\r\n  allComplete: boolean = false;\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.menuAction.subMenu != null && this.menuAction.subMenu.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(node: any): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n    // if (node.this.menuAction.subMenu == null) {\r\n    // return false;\r\n    // }\r\n    //return node.this.menuAction.subMenu.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.menuAction.subMenu == null) {\r\n      return;\r\n    }\r\n    this.menuAction.subMenu.forEach(t => t.completed = completed);\r\n  }\r\n  updateSelectChange(event) {\r\n    this.selectChange = event.checked;\r\n    this.ref.checked = this.selectChange;\r\n    if (this.selectChange == true) {\r\n      this.checklistSelection.clear();\r\n      this.selectAll();\r\n\r\n      // this.treeControl.collapseAll();\r\n    } else {\r\n      this.unSelectAll();\r\n      this.checklistSelection.clear();\r\n      //this.checklistSelection.selected\r\n      //this.treeControl.expandAll();\r\n    }\r\n  }\r\n  updatecollaspedChange(event) {\r\n    this.collaspedChange = event.checked;\r\n    this.collaspedRef.checked = this.collaspedChange;\r\n    if (this.collaspedChange == true) {\r\n      this.treeControl.collapseAll();\r\n    } else {\r\n      this.treeControl.expandAll();\r\n    }\r\n  }\r\n  selectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n  unSelectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n\t  <!-- CENTER -->\r\n\t  <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n\t\t  <!-- HEADER -->\r\n\t\t  <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n\t\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n\t\t\t\t  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n\t\t\t\t  </span>\r\n  \r\n\t\t\t\t  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n\t\t\t\t\t\t  (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n\t\t\t\t\t  <mat-icon>menu</mat-icon>\r\n\t\t\t\t  </button-->\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"clientMenuForm\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"clientMenuForm\" >\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t(optionSelected)='onClientChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"clientMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"25\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: 18px;\" >\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"selectChange\"(change)=\"updateSelectChange($event)\" #toggleElement>\r\n\t\t\t\t\t{{selectChange ? 'Select All' : 'Un Select All'}}</mat-slide-toggle> &nbsp;&nbsp;\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"collaspedChange\"(change)=\"updatecollaspedChange($event)\" #toggleCollasped>\r\n\t\t\t\t\t\t{{collaspedChange ? 'Collasped' : 'Un Collasped'}}</mat-slide-toggle>\r\n\t\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" routerLink=\"/chargingStation/crud/list\">Cancel</button> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"25\" style=\"margin-bottom: 18px;\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" style=\"float: right;\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t\t</div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"margin-top:20px ;\">\r\n        <mat-toolbar  style=\"background-color: #00acc1 !important;color:white\" class=\"connector-toolbar\">\r\n          <!-- sidebar toggle button -->\r\n          <h6 class=\"m-0 pl-16 font-normal fz-1\"> \r\n            <button mat-icon-button [style.alignSelf]=\"'center'\"  class=\"mr-16\">\r\n              <mat-icon>list</mat-icon>\r\n            </button> &nbsp;Menu List\r\n          </h6>\r\n        </mat-toolbar>\r\n      </div>\r\n\t</div>\r\n\t<div fxLayout=\"row wrap\"  style=\"padding-top:20px;\">\r\n\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t  <mat-tree #tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t  <mat-checkbox class=\"checklist-leaf-node\"\r\n\t\t\t\t\t\t\t[checked]=\"checklistSelection.isSelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"checklistSelection.isSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t  <div fxLayout=\"row wrap\" style=\"padding-right: 10px;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectAdd\">Add/Update</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDelete\">Delete</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDownload\">Download</mat-checkbox>\r\n\t\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t  </div>           -->\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\t\t\t  \r\n\t\t\t  <button mat-icon-button matTreeNodeToggle\r\n\t\t\t\t\t  [attr.aria-label]=\"'Toggle ' + node.item\">\r\n\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t</mat-icon>\r\n\t\t\t  </button>\r\n\t\t\t  <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n\t\t\t\t\t\t\t[indeterminate]=\"descendantsPartiallySelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t  <!-- <div *ngIf=\"descendantsAllSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t<div class=\"cb-wrapper\" [ngClass]=\"{'cb-vertival': !tmp }\">\r\n\t\t\t\t\t\t\t  <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"allComplete\"  [indeterminate]=\"someComplete(node)\" (change)=\"setAll($event.checked)\" > {{menuAction.name}}</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  <div *ngFor=\"let subMenu of menuAction.subMenu\">\r\n\t\t\t\t\t\t\t\t<mat-checkbox [(ngModel)]=\"subMenu.completed\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"updateAllComplete()\">\r\n\t\t\t\t\t\t\t\t  {{subMenu.name}}\r\n\t\t\t\t\t\t\t\t</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>                   -->\r\n\t\t\t  <!--button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button-->\r\n\t\t\t</mat-tree-node>\r\n\t\t\t\r\n\t\t  </mat-tree>\r\n\t\t  </div>\r\n\t\t \r\n\t\t</div>\r\n\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start start\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t</div> -->\r\n  </form>\r\n</div> \r\n","\r\nimport { Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nexport class Client {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  cp_name: string;\r\n  gst_no: string;\r\n}\r\ninterface CustomColumn {\r\n  possition: number;\r\n  name: string;\r\n  isActive: boolean;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  columnList: string[] = ['name', 'cp_name', 'gst_no', 'status', 'action'];\r\n  head = [['Client Name', 'Contact Person Name', 'GSTN', 'Mobile', 'Email', 'Status']];\r\n  public columnShowHideList: CustomColumn[] = [];\r\n  dataSource: MatTableDataSource<Client>;\r\n\r\n  clients: Client[];\r\n  localStorage: any;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  nameSearch = false;\r\n  contactPersonSearch = false;\r\n  mobileSearch = false;\r\n  emailSearch = false;\r\n  statusSearch = false;\r\n  gstSearch = false;\r\n  exportedData: any[];\r\n  constructor(private clientService: ClientService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getClients();\r\n    this.initializeColumnProperties();\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getClients() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        if (data != null) {\r\n          this.clients = data;\r\n          for (var i = 0; i < this.clients.length; i++) {\r\n            if (this.clients[i].status == 'N') {\r\n              this.clients[i].statusString = 'Inactive';\r\n            } else {\r\n              this.clients[i].statusString = 'Active';\r\n            }\r\n\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.clients);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.clientService.delete(id).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getClients();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getClients();\r\n    });\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getClients();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'gstSearch') {\r\n      this.gstSearch = !this.gstSearch;\r\n      this.filterEntity.gst_no = '';\r\n    }\r\n    if (visibleOption == 'contactPersonSearch') {\r\n      this.contactPersonSearch = !this.contactPersonSearch;\r\n      this.filterEntity.cp_name = '';\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Client Name': chargerModel.name, 'Contact Person Name': chargerModel.cp_name, 'GSTIN': chargerModel.gst_no,\r\n        'Mobile': chargerModel.mobile, 'Email': chargerModel.email, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Client List');\r\n    XLSX.writeFile(workBook, 'Client List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.name, chrger.cp_name, chrger.gst_no, chrger.mobile, chrger.email, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Client List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Client List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n  toggleColumn(column) {\r\n    if (column.isActive) {\r\n      if (column.possition > this.columnList.length - 1) {\r\n        this.columnList.push(column.name);\r\n      } else {\r\n        this.columnList.splice(column.possition, 0, column.name);\r\n      }\r\n    } else {\r\n      let i = this.columnList.indexOf(column.name);\r\n      let opr = i > -1 ? this.columnList.splice(i, 1) : undefined;\r\n    }\r\n  }\r\n\r\n  initializeColumnProperties() {\r\n    this.columnList.forEach((element, index) => {\r\n      this.columnShowHideList.push(\r\n        { possition: index, name: element, isActive: true }\r\n      );\r\n    });\r\n    // After for loop it will look like this\r\n    //   public columnShowHideList = [\r\n    //   { possition: 0, name: 'action', isActive: true },\r\n    //   { possition: 1, name: 'userName', isActive: true },\r\n    //   { possition: 2, name: 'email', isActive: true },\r\n    //   { possition: 3, name: 'contactNo', isActive: true },\r\n    //   { possition: 4, name: 'address', isActive: true }\r\n    // ];\r\n  }\r\n}\r\n\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n    <button\r\n        style=\"float: right\"\r\n        mat-button\r\n        #menuTrigger=\"matMenuTrigger\"\r\n        [matMenuTriggerFor]=\"mainMenuButton\"\r\n    >\r\n        Table columns\r\n    </button>\r\n    <mat-menu #mainMenuButton=\"matMenu\">\r\n        <span\r\n            (click)=\"$event.stopPropagation()\"\r\n            *ngFor=\"let column of columnShowHideList; index as i\"\r\n        >\r\n            <button mat-menu-item>\r\n                <mat-slide-toggle\r\n                    [(ngModel)]=\"column.isActive\"\r\n                    (change)=\"toggleColumn(column)\"\r\n                ></mat-slide-toggle>\r\n                {{ column.name }}\r\n                <br />\r\n            </button>\r\n        </span>\r\n    </mat-menu>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <mat-table\r\n            class=\"orders-table\"\r\n            [exampleEntity]=\"filterEntity\"\r\n            [filterType]=\"filterType\"\r\n            #table\r\n            [dataSource]=\"dataSource\"\r\n            matSort\r\n            matTableFilter\r\n        >\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!nameSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >Client Name &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('nameSearch')\"\r\n                            >search</mat-icon\r\n                        >\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"nameSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 70%\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\" Client Name \"\r\n                            [(ngModel)]=\"filterEntity.name\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('nameSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\">\r\n                    {{ row.name }}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"cp_name\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!contactPersonSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >Contact Person &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('contactPersonSearch')\"\r\n                            >search\r\n                        </mat-icon>\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"contactPersonSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 70%\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\" Contact Person \"\r\n                            [(ngModel)]=\"filterEntity.cp_name\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('contactPersonSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\">\r\n                    {{ row.cp_name }}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"gst_no\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!gstSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >GSTIN &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('gstSearch')\"\r\n                            >search\r\n                        </mat-icon>\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"gstSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 70%\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\" GSTIN \"\r\n                            [(ngModel)]=\"filterEntity.gst_no\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('gstSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\">\r\n                    {{ row.gst_no }}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"status\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!statusSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >Status &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('statusSearch')\"\r\n                            >search</mat-icon\r\n                        >\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"statusSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 100px\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\"Status\"\r\n                            [(ngModel)]=\"filterEntity.statusString\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('statusSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell\r\n                    mat-cell\r\n                    *matCellDef=\"let row\"\r\n                    [style.color]=\"row.status == 'Y' ? 'green' : 'red'\"\r\n                >\r\n                    {{ row.statusString }}\r\n                </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                    <span class=\"custom_font_size\">Action</span>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">\r\n                    <mat-icon\r\n                        color=\"primary\"\r\n                        matTooltip=\"View\"\r\n                        (click)=\"viewDialog('VIEW', element)\"\r\n                        style=\"cursor: pointer\"\r\n                        >visibility</mat-icon\r\n                    >&nbsp;&nbsp;\r\n\r\n                    <mat-icon\r\n                        color=\"primary\"\r\n                        matTooltip=\"Edit\"\r\n                        (click)=\"openDialog('EDIT', element)\"\r\n                        style=\"cursor: pointer\"\r\n                        >edit</mat-icon\r\n                    >&nbsp;&nbsp;\r\n\r\n                    <mat-icon\r\n                        color=\"warn\"\r\n                        matTooltip=\"Remove\"\r\n                        (click)=\"delete(element.id)\"\r\n                        style=\"cursor: pointer\"\r\n                    >\r\n                        delete</mat-icon\r\n                    >\r\n                </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row\r\n                mat-row\r\n                *matRowDef=\"let row; columns: columnList\"\r\n            ></mat-header-row>\r\n\r\n            <mat-row *matHeaderRowDef=\"columnList; sticky: true\"></mat-row>\r\n        </mat-table>\r\n\r\n        <mat-paginator\r\n            #paginator\r\n            [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n        ></mat-paginator>\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path: 'create', canActivate: [AuthGuard], component: CreateComponent },\r\n  { path: 'list', canActivate: [AuthGuard], component: ListComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { ClientMenuComponent } from './client-menu/client-menu.component';\r\n\r\nconst COMPONENTS =[ClientCrudComponent, CreateComponent, ListComponent,ClientMenuComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ClientRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ClientModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  constructor(private fb: FormBuilder, private clientService: ClientService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      logoPath: [''],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number:['',[Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number:['',[Validators.pattern('\\^[0-9]{11}$')]],\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n  \r\n        name: formValues.name,\r\n        cp_name: formValues.cp_name,\r\n        description: formValues.description,\r\n  \r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        gst_no:formValues.gst_number,\r\n        tin_no: formValues.tin_number,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.clientService.update(params).subscribe(\r\n           (resp: any) => {\r\n              \r\n             if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n             }else{\r\n              if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n                this. errorMsg = resp.message;\r\n                var index=  this. errorMsg.lastIndexOf(\" \");\r\n                this.splitted = this. errorMsg.substring(index+1); \r\n                if(this.splitted == \"'name'\" ){\r\n                  this.snackBar.open(MessageConstant.clientDuplicate, 'Dismiss', { duration: 5000 });\r\n                }if(this.splitted == \"'mobile'\"){\r\n                  this.snackBar.open(MessageConstant.mobileDuplicateClient, 'Dismiss', { duration: 5000 });\r\n                }if(this.splitted == \"'email'\"){\r\n                  this.snackBar.open(MessageConstant.emailDuplicateClient, 'Dismiss', { duration: 5000 });\r\n                }\r\n              }else{\r\n                this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n              this.dialogRef.close();\r\n             }\r\n            \r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.clientService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }else{\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('description').setValue(params.data.description);\r\n\r\n    this.form.get('logoPath').setValue(params.data.logoPath);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('gst_number').setValue(params.data.gst_no);\r\n    this.form.get('tin_number').setValue(params.data.tin_no);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  onCityChange(event){\r\n   //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Client</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" required autocomplete=\"off\"\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>GST Number</mat-label>\r\n          <input matInput placeholder=\"GST Format(29ABCDF1234F2Z5)\" formControlName=\"gst_number\" autocomplete=\"off\"\r\n            maxlength=\"15\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"GST Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n          <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid GST number</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>TIN Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"tin_number\" autocomplete=\"off\" maxlength=\"11\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"TIN Format(01234567890)\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid TIN number</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" autocomplete=\"off\"\r\n            required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n            required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './client-crud/routes';\r\nimport { ClientMenuComponent } from './client-menu/client-menu.component';\r\nimport { ClientModuleMappingModule } from './client-module-mapping/client-moduleMapping.module';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ClientCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n\t{\r\n        path : 'clientMenuMappings',component : ClientMenuComponent,canActivate: [AuthGuard]\r\n    },\r\n    \r\n    {\r\n        path: 'clientModuleMapping',\r\n        loadChildren: () => import('./client-module-mapping/client-moduleMapping.module').then(m => m.ClientModuleMappingModule),\r\n        data: { title: 'Client Module Mapping', titleI18n: 'clientModule' },\r\n    },\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ClientRoutingModule{}","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\n\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup;\r\n  brands: any;\r\n  models: any;\r\n  chargerTypes: any;\r\n  vehicleTypes: any;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  constructor(private fb: FormBuilder, private masterService: MasterService,\r\n    private clientService: ClientService, private snackBar: MatSnackBar,\r\n    private router: Router, public countryService: CountriesService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      logoPath: [''],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number: ['', [Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number: ['', [Validators.pattern('\\^[0-9]{11}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        this.countries = data;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (stateData: any) => {\r\n        this.states = stateData;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      ////\r\n\r\n\r\n      let params = {\r\n        name: formValues.name,\r\n        description: formValues.description,\r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n        gst_no: formValues.gst_number,\r\n        tin_no: formValues.tin_number\r\n      }\r\n\r\n\r\n      this.clientService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/clientManagement/crud/list']);\r\n          } else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              var index = this.errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this.errorMsg.substring(index + 1);\r\n              if (this.splitted == \"'name'\") {\r\n                this.snackBar.open(MessageConstant.clientDuplicate, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'mobile'\") {\r\n                this.snackBar.open(MessageConstant.mobileDuplicateClient, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'email'\") {\r\n                this.snackBar.open(MessageConstant.emailDuplicateClient, 'Dismiss', { duration: 5000 });\r\n              }\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n          }\r\n\r\n\r\n        },\r\n        (err) => {\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        <!-- <span matPrefix class=\"tooltiptext\">Please enter client name</span> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Contact Person Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" required autocomplete=\"off\"\r\n          style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n        <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>GST Number</mat-label>\r\n        <input matInput placeholder=\"GST Format(29ABCDF1234F2Z5)\" formControlName=\"gst_number\" autocomplete=\"off\"\r\n          maxlength=\"15\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"GST Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n        <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid GST number</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>TIN Number</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"tin_number\" autocomplete=\"off\" maxlength=\"11\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"TIN Number Format(01234567890)\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid TIN number</mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n          autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n        (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\"\r\n        routerLink=\"/clientManagement/crud/list\">Cancel</button>\r\n    </div>\r\n\r\n\r\n\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder, private clientService: ClientService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      logoPath: [''],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number:['',[Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number:['',[Validators.required,Validators.pattern('\\^[0-9]{11}$')]],\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n  \r\n        name: formValues.name,\r\n        cp_name: formValues.cp_name,\r\n        description: formValues.description,\r\n  \r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.clientService.update(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.clientService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('description').setValue(params.data.description);\r\n\r\n    this.form.get('logoPath').setValue(params.data.logoPath);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('gst_number').setValue(params.data.gst_no);\r\n    this.form.get('tin_number').setValue(params.data.tin_no);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Client</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"cp_name\" maxlength=\"50\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"mobile\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"email\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>GST Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"gst_number\" readonly autocomplete=\"off\" maxlength=\"15\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter GST number\">help</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n          <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid 15 digit GST\r\n            number</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>TIN Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"tin_number\" readonly autocomplete=\"off\" maxlength=\"11\"\r\n            type=\"number\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter TIN number\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('required')\">Please enter TIN number</mat-error>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid 11 digit TIN\r\n            number</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput readonly placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\"\r\n            autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        \r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"landmark\" maxlength=\"50\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\" disabled\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-client-crud',\r\n  templateUrl: './client-crud.component.html',\r\n  styleUrls: ['./client-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ClientCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Clients', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  tempLinks = [];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  dyanmictab: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"clientManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Clients', link: 'list' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n             \r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/clientManagement/crud/' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}} \r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}