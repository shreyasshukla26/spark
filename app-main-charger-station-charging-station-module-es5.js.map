{"version":3,"sources":["webpack:///src/app/main/charger-station/add-charger-dialog/add-charger-dialog.component.ts","webpack:///src/app/main/charger-station/add-charger-dialog/add-charger-dialog.component.html","webpack:///src/app/main/charger-station/view-details/view-details.component.ts","webpack:///src/app/main/charger-station/view-details/view-details.component.html","webpack:///src/app/main/charger-station/create/create.component.ts","webpack:///src/app/main/charger-station/create/create.component.html","webpack:///src/app/main/charger-station/charging-station-crud/routes.ts","webpack:///src/app/main/charger-station/list/list.component.ts","webpack:///src/app/main/charger-station/list/list.component.html","webpack:///src/app/main/charger-station/multi-charger-dialog/multi-charger-dialog.component.ts","webpack:///src/app/main/charger-station/multi-charger-dialog/multi-charger-dialog.component.html","webpack:///src/app/main/charger-station/action-dialog/action-dialog.component.ts","webpack:///src/app/main/charger-station/action-dialog/action-dialog.component.html","webpack:///src/app/main/charger-station/manage-chargers/routes.ts","webpack:///src/app/main/charger-station/charging-station-routing.module.ts","webpack:///src/app/main/charger-station/manage-chargers/list-chargers/list-chargers.component.ts","webpack:///src/app/main/charger-station/manage-chargers/list-chargers/list-chargers.component.html","webpack:///src/app/main/charger-station/manage-chargers/map-charger/map-charger.component.ts","webpack:///src/app/main/charger-station/manage-chargers/map-charger/map-charger.component.html","webpack:///src/app/main/charger-station/manage-chargers/manage-chargers.component.ts","webpack:///src/app/main/charger-station/manage-chargers/manage-chargers.component.html","webpack:///src/app/main/charger-station/charging-station.module.ts","webpack:///src/app/main/charger-station/charging-station-crud/charging-station-crud.component.ts","webpack:///src/app/main/charger-station/charging-station-crud/charging-station-crud.component.html","webpack:///src/app/main/charger-station/view-dialog/view-dialog.component.ts","webpack:///src/app/main/charger-station/view-dialog/view-dialog.component.html","webpack:///src/app/main/charger-station/manage-chargers/map-charger-dialog/map-charger-dialog.component.ts","webpack:///src/app/main/charger-station/manage-chargers/map-charger-dialog/map-charger-dialog.component.html"],"names":["autocompleteObjectValidator","control","value","Charger","AddChargerDialogComponent","fb","chargerBatchService","chargingStationService","versionService","chargerService","snackBar","dialogRef","router","dialog","geoLocationService","countryService","isAvailable","status","isEditMode","selectedChargerSerial","chipSelectedSerialNo","selectedSerialNo","removable","initialize","setCurrentLocation","localStorage","JSON","parse","getItem","stationDetails","form","group","name","serialNo","required","station","disabled","noOfGuns","lat","addressLine1","addressLine2","landmark","city","state","country","pincode","getBatches","getStations","getVersions","getChargerBatches","subscribe","data","batches","err","getChargingStations","stations","versions","params","srNo","trim","station_id","id","getChargerBySerialNo","reset","length","mapDetails","map_id","map_status","open","chargerAlMapped","duration","assignValues","getAllCountry","getAllState","getAllCity","countries","toSelect","find","c","country_id","get","setValue","controls","valueChanges","pipe","_filterCountry","states","state_id","_filterState","getAllCities","cities","city_id","_filterCity","serial_no","no_of_guns","address1","address2","PIN","lng","is_available","valid","formValues","charger_id","Lat","Lng","modify_by","userId","created_by","addChargerToStation","chargerNCreate","close","navigate","errorMessage","hasError","event","checked","toggleAvailable","onSubmit","getPosition","pos","mLat","coords","latitude","mLong","longitude","pin_code_id","getCountryStateByPIN","undefined","getCountryByState","countrydata","filteredOptionCountry","getStateByCountry","statedata","filteredOptionState","getCityByState","Citydata","filteredOptionCity","getStatesByCountry","getCitiesByStates","stateId","citiesdata","item","filterValue","toLowerCase","filter","option","includes","width","height","afterClosed","result","customLocationMessage","closeActionPanel","getStateCountry","onStateChange","onCountryChange","updateAvailable","onYesClick","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","ViewDetailsComponent","cpoService","dateService","datePipe","currentlyOpenedItemIndex","chargingStation","chargerDetail","previousTabIndex","tabIndex","getChargers","getChargersByMappedStationId","chargerData","console","log","chargers","itemIndex","stopPropagation","autoFocus","disableClose","then","window","confirmDialogRef","removeChargerFromStation","resp","ChargerRemoved","backButton","CreateComponent","confirmValidator","error","oTime","confirm","confirmOValidator","oppo_start_time","confirmNValidator","night_start_time","cpo","pattern","code","description","location_type","cp_name","mobile","email","commissioned_dt","register_as","electricity_line","cTime","oppo_end_time","night_end_time","getCpos","getLocationTypes","getRegisterTypes","getElectricityLines","filteredOption","getactivecposcw","cpos","filteredOptionsCPO","_filterCPO","location_types","filteredOptionsLocationType","_filterLocationType","register_types","filteredOptionsRegisterAs","_filterRegisterAs","electricity_lines","filteredOptionsElectricityLine","_filterElectrictyLine","cpo_id","location_type_id","transform","electricity_line_id","o_time","c_time","opportunityTime_from","opportunityTime_to","nightTime_from","nightTime_to","create","chargerStationCreate","err_code","errorMsg","message","index","lastIndexOf","splitted","substring","chargingStationDuplicate","mobileDuplicate","ref","$event","preventDefault","getLatLong","onCityChange","updateStatus","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","ChargingStation","ListComponent","setCpoStationService","displayedColumns","head","cpoSearch","stationCodeSearch","nameSearch","contactPersonSearch","mobileSearch","addressSearch","statusSearch","countSearch","charClient","charCPO","charStat","clientCpoStaDetails","getClients","role_code","disable","filterEntity","filterType","ANYWHERE","target","dataSource","paginator","firstPage","getAllChargingStationsWithChargersAndConnectorsCCS","selectedClient_id","selectedCpo_id","selectedStation_id","chargingStations","i","statusString","sort","deleteMessage","action","panelClass","setItem","stringify","visibleOption","ev","cpo_name","total_chargers","exportedData","filteredData","chargerModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","selectedClient","clientList","localClient","client","client_id","Number","getCPOByClient","filteredOptionsCharClient","client_name","_filterCharClient","cpoList","stationList","setCPOStation","getStationByCPO","filteredOptionsCharCPO","_filterCharCPO","filteredOptionsCharStat","station_name","_filterCharStat","setCpoStationDetails","setTimeout","tableExport","pdfExport","invalidAutocompleteObject","MultiChargerDialogComponent","serialNumber","getMultipleChargerSerial","city_name","state_name","country_name","charger_data","map","v","addChargerToStationMultiple","chargerMappedWithStation","getClientChargersNotMappedToAnyStation","multiChargerData","chargerSerials","chargerSerialsOrg","filteredOptionSerial","_filterSerial","resetChrgerList","isExist","k","unitType","splice","trigger","openPanel","onSerialSelected","ActionDialogComponent","countryID","stateID","register_as_id","update","recordUpdateMessage","tempOppStart","tempOppEnd","tempNightStart","tempNightEnd","TABS_MANAGE_CHARGER_ROUTES","routes","children","ChargingStationRoutingModule","forChild","imports","exports","ListChargersComponent","route","selection","snapshot","paramMap","numSelected","selected","numRows","isAllSelected","clear","forEach","row","select","isSelected","stationId","availableString","MapChargerComponent","lang","ManageChargersComponent","tabLinks","label","link","COMPONENTS","COMPONENTS_DYNAMIC","ChargingStationModule","declarations","entryComponents","ChargingStationCrudComponent","cdr","_utilityService","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","z","isDefaultRoutePermeted","ViewDialogComponent","MapChargerDialogComponent"],"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","file":"app-main-charger-station-charging-station-module-es5.js","sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-add-charger-dialog',\r\n//   templateUrl: './add-charger-dialog.component.html',\r\n//   styleUrls: ['./add-charger-dialog.component.scss']\r\n// })\r\n// export class AddChargerDialogComponent implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit(): void {\r\n//   }\r\n\r\n// }\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class Charger {\r\n  id: string;\r\n  name : string;\r\n  serial_no : string;\r\n  station_id : number;\r\n   \r\n  }\r\n\r\n@Component({\r\n  selector: 'app-add-charger-dialog',\r\n  templateUrl: './add-charger-dialog.component.html',\r\n  styleUrls: ['./add-charger-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[GeoLocationService]\r\n})\r\nexport class AddChargerDialogComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  status = false;\r\n  stationDetails : any;\r\n  isEditMode = false; \r\n  mapDetails : any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  mLat: any;\r\n  mLong:any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  selectedChargerSerial  = [];\r\n   public chipSelectedSerialNo: Charger[] = [];\r\n   public filteredSerial: Observable<String[]>;\r\n   filteredOptionSerial: Observable<any[]>;\r\n   chargerSerials:any;\r\n  chargerSerialsOrg:any;\r\n  selectedSerialNo = [];\r\n  unitType:any;\r\n  removable = true;\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<AddChargerDialogComponent>,\r\n    private router : Router,public dialog : MatDialog,public geoLocationService:GeoLocationService,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.stationDetails = JSON.parse( localStorage.getItem('station'));\r\n    // this.stationDetails = this.route.snapshot.paramMap.get('station');\r\n\r\n    this.form = this.fb.group({\r\n     \r\n      name: ['', ],\r\n      serialNo: ['', [Validators.required]],\r\n      station: [{value : '',disabled:true}, ],\r\n      noOfGuns: ['', [Validators.required]],\r\n      \r\n      lat: ['', ],\r\n      long: ['', ],\r\n      isAvailable: [''],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],\r\n     // address: ['', [Validators.required]],\r\n    });\r\n   \r\n    this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n   \r\n   // this.getLocationTypes();\r\n    //this.getCountry();\r\n    //this.getAllCountry();\r\n    //this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n\r\n\r\n  getBatches(){\r\n    this.chargerBatchService.getChargerBatches().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.batches = data;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        this.stations = data.data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getChargerBySerialNo(){\r\n    let params = {\r\n      srNo : this.form.value.serialNo.trim(),\r\n      station_id : this.stationDetails.id\r\n    }\r\n    // let srNo = this.form.value.serialNo.trim();\r\n//;\r\n    this.chargerService.getChargerBySerialNo(params).subscribe(\r\n      (data:any)=>{\r\n        this.form.reset();\r\n        if(data.length>0){\r\n          this.mapDetails = data[0];\r\n          \r\n          if(this.mapDetails.map_id > 0 && this.mapDetails.map_status != 'D' ){\r\n            this.isEditMode=true;\r\n            this.snackBar.open(MessageConstant.chargerAlMapped, 'Dismiss', { duration: 3000 });\r\n\r\n          }else{\r\n            this.isEditMode=false;\r\n            this.assignValues(this.mapDetails);\r\n            this.getAllCountry();\r\n            this.getAllState();\r\n            this.getAllCity();\r\n          }\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.stationDetails.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.countries = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.stationDetails.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.states = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.stationDetails.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.cities = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.name);\r\n    this.form.get('serialNo').setValue(params.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.no_of_guns); \r\n    this.form.get('addressLine1').setValue(this.stationDetails.address1); \r\n    this.form.get('addressLine2').setValue(this.stationDetails.address2); \r\n    this.form.get('pincode').setValue(this.stationDetails.PIN);\r\n    this.form.get('landmark').setValue(this.stationDetails.landmark);\r\n    this.form.get('city').setValue(this.stationDetails.city_id);\r\n    this.form.get('state').setValue(this.stationDetails.state_id);\r\n    this.form.get('country').setValue(this.stationDetails.country_id);\r\n    this.form.get('lat').setValue(this.stationDetails.lat); \r\n    this.form.get('long').setValue(this.stationDetails.lng); \r\n    this.form.get('station').setValue(this.stationDetails.name);\r\n    // const toSelect = this.stations.find(c => c.id == this.stationDetails.id);\r\n    // this.form.get('station').setValue(toSelect);\r\n  \r\n    this.status = params.status == 'Y' ? true : false;\r\n    this.isAvailable = params.is_available == 1 ? true : false;\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n    let params:any = {\r\n      charger_id : this.mapDetails.id , \r\n      station_id : this.stationDetails.id , \r\n      name :formValues.name, \r\n      Lat :formValues.lat, \r\n      Lng :formValues.long,\r\n      is_available :this.isAvailable,\r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      landmark:formValues.landmark,\r\n      country:formValues.country.id,\r\n      state:formValues.state.id,\r\n      city:formValues.city.id,\r\n      PIN :formValues.pincode , \r\n      status :'Y' ,\r\n    }\r\n\r\n    if (this.isEditMode){\r\n      params.id = this.stationDetails.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n    \r\n    \r\n\r\n    if(this.isEditMode){\r\n\r\n    }else{\r\n      \r\n      this.chargerService.addChargerToStation(params).subscribe(\r\n        (data:any )=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n          this.router.navigate(['/chargingStation/crud/list']);\r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n    }else{\r\n      return;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    this.onSubmit();\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude); \r\n          // this.coordinates = {\r\n          //   latitude:  +(pos.coords.latitude),\r\n          //   longitude: +(pos.coords.longitude)\r\n          // };\r\n         // this.form.get('lat').setValue( this.mLat);\r\n         // this.form.get('lng').setValue(this.mLong);\r\n      });\r\n     \r\n   \r\n  }\r\n \r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n // this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('long').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('long').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>   \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Add Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\t\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\"  style=\"display: block  !important;padding-bottom: 10px;\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-chip-list aria-label=\"Fish selection\">\r\n\t\t\t  <mat-chip\r\n\t\t\t  *ngFor=\"let option of selectedSerialNo;let i = index;\"\r\n\t\t\t  [selectable]=\"selectable\"\r\n\t\t\t  [removable]=\"removable\"\r\n\t\t\t  (removed)=\"removeSerial(i)\">\r\n\t\t\t  {{option?.serial_no}}\r\n\t\t\t  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n\t\t\t</mat-chip>\r\n\t\t\t</mat-chip-list>\r\n\t\t  </div>\r\n\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n\t\t\t  <mat-label>Serial No</mat-label>\r\n\t\t\t  <input type=\"text\" #trigger=\"matAutocompleteTrigger\" matInput formControlName=\"serialNumber\" type=\"search\"\r\n\t\t\t\tautocomplete=\"off\" [matAutocomplete]=\"seialAuto\">\r\n\t\t\t  <mat-autocomplete #seialAuto=\"matAutocomplete\" [displayWith]=\"displaySerial\"\r\n\t\t\t\t(optionSelected)='onSerialSelected($event)'>\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionSerial | async\" [value]=\"option\"\r\n\t\t\t\t  (click)=\"selectionMade($event, trigger)\">\r\n\t\t\t\t  {{option.serial_no}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t  </mat-autocomplete>\r\n\t\t\t  <mat-error *ngIf=\"form.get('serialNumber').invalid\">Please select part number </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t  </div> -->\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"serialNo\" required (change)=\"getChargerBySerialNo()\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('serialNo').invalid\">Please enter serial number\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Station</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"station\" readonly autocomplete=\"off\">\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>No Of Guns</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" readonly>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"long\" readonly>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"landmark\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<div fxFlex=\"67\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateAvailable($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { GeoLocationService } from 'app/shared/services/map/geo-location.service'\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ChargerLogSharedDialogComponent } from 'app/shared/components/charger-log-shared-dialog/charger-log-shared-dialog.component';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-details',\r\n  templateUrl: './view-details.component.html',\r\n  styleUrls: ['./view-details.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe, GeoLocationService]\r\n})\r\nexport class ViewDetailsComponent implements OnInit {\r\n  chargingStation: any;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  chargers: any;\r\n  localStorage: any;\r\n  currentlyOpenedItemIndex = -1;\r\n  previousTabIndex: any;\r\n  // messageConstant = MessageConstant;\r\n  constructor(public dialog: MatDialog, private fb: FormBuilder, private cpoService: CpoService,\r\n    private chargingStationService: ChargingStationService, private snackBar: MatSnackBar, private chargerService: ChargerService,\r\n    private router: Router, private dateService: DateService, private datePipe: DatePipe, public geoLocationService: GeoLocationService, public countryService: CountriesService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chargingStation = this.chargingStationService.chargerDetail;\r\n    this.previousTabIndex = this.chargingStationService.tabIndex;\r\n    //this.chargers = this.chargingStationService.chargerDetail.chargers;\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    if (this.chargingStation == null || this.chargingStation == undefined) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    this.getChargers(this.chargingStation.id);\r\n  }\r\n  getChargers(station_id) {\r\n    this.chargerService.getChargersByMappedStationId(station_id).subscribe(\r\n      (chargerData: any) => {\r\n        console.log(\"chargerData\");\r\n        console.log(chargerData);\r\n        \r\n        if (chargerData.status == true) {\r\n          this.chargers = chargerData.data;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  setOpened(itemIndex) {\r\n    this.currentlyOpenedItemIndex = itemIndex;\r\n  }\r\n\r\n  setClosed(itemIndex) {\r\n    if (this.currentlyOpenedItemIndex === itemIndex) {\r\n      this.currentlyOpenedItemIndex = -1;\r\n    }\r\n  }\r\n  openDialogChargerDetails(data) {\r\n    event.stopPropagation();\r\n    let params = {\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ChargerLogSharedDialogComponent, {\r\n      width: '1800px',\r\n      height: '900px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      //this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n  manageChargerLog(data) {\r\n\r\n\r\n    //localStorage.setItem('station', JSON.stringify( data));\r\n    this.chargerService.chargerDetail = data;\r\n    // const url = this.router.serializeUrl(\r\n    //   this.router.createUrlTree(['/logsandHistory/viewChargerLog'])\r\n    // );\r\n    this.router.navigate([]).then(result => { window.open(`/#/logsandHistory/viewChargerLog/${data.name}`, '_blank'); });\r\n    // window.open(url, '_blank');\r\n    //  this.router.navigate([]).then(result => {  window.open(url, '_blank'); });\r\n    //this.router.navigate(['/logsandHistory/viewChargerLog']);\r\n  }\r\n  backButton() {\r\n    if (this.previousTabIndex != null || this.previousTabIndex != undefined) {\r\n      // this.previousTabIndex = null;\r\n      this.router.navigate(['/home', this.previousTabIndex]);\r\n\r\n    } else {\r\n      this.router.navigate(['/chargingStation/crud/list']);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  removeChargerFromStation(data) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result) {\r\n        let params: any = {\r\n\r\n          id: data.map_id,\r\n          modify_by: this.localStorage.userId\r\n        }\r\n        this.chargerService.removeChargerFromStation(params).subscribe(\r\n\r\n          (resp: any) => {\r\n            //\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.ChargerRemoved, 'Dismiss', { duration: 5000 });\r\n              this.getChargers(this.chargingStation.id);\r\n              // this.router.navigate(['/chargingStation/manageChargers/list']);\r\n              // this.getChargersByMappedStationId(this.stationDetails.id);\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            ////\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n}\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div style=\"display: block;width: 100%;\">\r\n\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\t\t<div class=\"center\" fusePerfectScrollbar>\r\n\t\t\t<div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\t\t\t\t\t<span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">\r\n\t\t\t\t\t\t<mat-icon matTooltip=\"Back to home\" (click)=\"backButton()\" style=\"cursor:pointer;color:white\">\r\n\t\t\t\t\t\t\tarrow_back</mat-icon>\r\n\t\t\t\t\t\t&nbsp;&nbsp;Manage Charging Station\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<div class=\"mat-card mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\"\r\n\t\t\t\tstyle=\"padding-bottom: 10px;\">\r\n\t\t\t\t<mat-card fxFlex=\"100\">\r\n\t\t\t\t\t<div class=\"card-border \">\r\n\t\t\t\t\t\t<div class=\"section-hero-header-title-description\">\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"station_name\"> {{chargingStation?.name}} </div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"station_address\"> {{chargingStation?.email}}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"station_address\"> {{chargingStation?.mobile}}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\" style=\"text-align: end;padding-right: 20px;\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"charger_counts\">{{chargingStation?.total_chargers}}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\"\r\n\t\t\t\t\t\t\t\tstyle=\"align-items: center;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"text-align: end;padding-right: 20px;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"chipicon\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t<img style=\"margin-right: 5px;\"\r\n\t\t\t\t\t\t\t\t\t\t\t*ngFor=\"let amenite of chargingStation?.amenities; let i = index;\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"{{amenite.icon_url}}\" width=\"24px\" height=\"24px;\"\r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltip=\"{{amenite.amenity_name}}\" class=\"emenite_icon\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <img src=\"{{amenite.icon_url}}\" width=\"32px;\"height=\"32px\"  class=\"avatar\"> -->\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"details-section\">\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">person_pin</span>\r\n\t\t\t\t\t\t\t\t\t\t{{chargingStation?.cp_name}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">person_pin</span>\r\n\t\t\t\t\t\t\t\t\t\t{{chargingStation?.cpo_name}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">ev_station</span>\r\n\t\t\t\t\t\t\t\t\t\tLocation Type: {{chargingStation?.location_type}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">location_on</span>\r\n\t\t\t\t\t\t\t\t\t\tCommissioned Date: {{chargingStation?.commissioned_dt | date}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">call</span>\r\n\t\t\t\t\t\t\t\t\t\tRegister As: {{chargingStation?.register_as}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">ev_station</span>\r\n\t\t\t\t\t\t\t\t\t\tElectricity Line: {{chargingStation?.electricity_line}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"100\">\r\n\t\t\t\t<mat-accordion class=\"example-headers-align\">\r\n\t\t\t\t\t<mat-expansion-panel *ngFor=\"let charger of chargers; let i = index;\" (opened)=\"setOpened(i)\"\r\n\t\t\t\t\t\t(closed)=\"setClosed(i)\">\r\n\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t{{charger?.serial_no}} ({{charger?.charger_nick_name}})\r\n\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t{{charger?.charger_batch_name}}\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"(charger.heartbeat_interval != null)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'green'}\" matTooltip=\"Charger Online\">public\r\n\t\t\t\t\t\t\t\t\t</mat-icon>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'green'}\" matTooltip=\"Book now\">menu_book</mat-icon>\r\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"(charger.heartbeat_interval == null)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'red'}\" matTooltip=\"Charger Offline\">public_off\r\n\t\t\t\t\t\t\t\t\t</mat-icon>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"(previousTabIndex == null)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon color=\"warn\" matTooltip=\"Charger Logs\" (click)=\"manageChargerLog(charger)\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"cursor:pointer\">assessment</mat-icon>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'red'}\" matTooltip=\"delete\"\r\n\t\t\t\t\t\t\t\t\t\t(click)=\"removeChargerFromStation(charger)\">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\t\t\t\t\t</mat-expansion-panel>\r\n\t\t\t\t</mat-accordion>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","\r\n\r\nimport { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup ,ValidatorFn,FormControl,AbstractControl} from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service'\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe,GeoLocationService]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  cpos:any;\r\n  location_types:any;\r\n  register_types:any;\r\n  electricity_lines:any;\r\n  localStorage : any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsLocationType: Observable<any[]>;\r\n  filteredOptionsElectricityLine: Observable<any[]>;\r\n  filteredOptionsRegisterAs: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  status = false;\r\n  mLat: any;\r\n  mLong:any;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n // messageConstant = MessageConstant;\r\n @ViewChild(\"toggleElement\") ref: any;\r\n errorMsg:String;\r\n  splitted:String;\r\n  constructor(public dialog : MatDialog,private fb: FormBuilder, private cpoService : CpoService,\r\n    private chargingStationService : ChargingStationService,private snackBar: MatSnackBar,\r\n    private router : Router, private dateService : DateService,private datePipe: DatePipe,public geoLocationService:GeoLocationService,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n     \r\n      lat: ['', [Validators.required]],\r\n      lng: ['', [Validators.required]],\r\n      location_type: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      commissioned_dt: [''],\r\n      register_as: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      electricity_line: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      oTime: ['', [Validators.required]],\r\n      cTime: ['', [this.confirmValidator,Validators.required]],\r\n      addressLine1:['', [Validators.required]],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:['',[autocompleteObjectValidator(),Validators.required]],\r\n      state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n    //  address: ['', [Validators.required]],\r\n     // pin: ['', [Validators.required]],\r\n     oppo_start_time: ['', [Validators.required]],\r\n     oppo_end_time: ['', [this.confirmOValidator,Validators.required]],\r\n     night_start_time: ['', [Validators.required]],\r\n     night_end_time: ['', [this.confirmNValidator,Validators.required]],\r\n      \r\n    });\r\n   \r\n\r\n    this.getCpos();\r\n    this.getLocationTypes();\r\n    this.getRegisterTypes();\r\n    this.getElectricityLines();\r\n    this.filteredOption();\r\n      //this.getCountry();\r\n      this.getAllCountry();\r\n      this.getAllState();\r\n      //this.getAllCity();\r\n   \r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n      \r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude); \r\n          // this.coordinates = {\r\n          //   latitude:  +(pos.coords.latitude),\r\n          //   longitude: +(pos.coords.longitude)\r\n          // };\r\n          this.form.get('lat').setValue( this.mLat);\r\n          this.form.get('lng').setValue(this.mLong);\r\n      });\r\n     \r\n   \r\n  }\r\n \r\n  getCpos(){\r\n    \r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n      this.cpos = data;\r\n      this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCPO(name) : this.cpos)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n  getLocationTypes(){\r\n    \r\n    this.chargingStationService.getLocationTypes().subscribe(\r\n      (data:any)=>{\r\n      this.location_types = data;\r\n      this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterLocationType(name) : this.location_types)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n    // this.location_types = this.chargingStationService.getLocationTypes();\r\n    // this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    // );\r\n   \r\n  }\r\n  getRegisterTypes(){\r\n    this.chargingStationService.getRegisterTypes().subscribe(\r\n      (data:any)=>{\r\n      this.register_types = data;\r\n      this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n    // this.register_types =  this.chargingStationService.getRegisterTypes();\r\n    // this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n    // );\r\n\r\n  }\r\n  getElectricityLines(){\r\n    this.chargingStationService.getElectricityLines().subscribe(\r\n      (data:any)=>{\r\n      this.electricity_lines = data;\r\n      this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n    //this.electricity_lines = this.chargingStationService.getElectricityLines();\r\n    \r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let params = {\r\n        cpo_id : formValues.cpo.id,\r\n        name :formValues.name, \r\n        code :formValues.code, \r\n        description :formValues.description, \r\n        address1 :formValues.addressLine1,\r\n        lat :formValues.lat ,\r\n        lng :formValues.lng ,\r\n        location_type_id :formValues.location_type.id ,\r\n        cp_name :formValues.cp_name ,\r\n        mobile :formValues.mobile ,\r\n        email :formValues.email ,\r\n        commissioned_dt : this.datePipe.transform(formValues.commissioned_dt,\"yyyy-MM-dd\")  ,\r\n        register_as :formValues.register_as.id ,\r\n        electricity_line_id :formValues.electricity_line.id ,\r\n        o_time :formValues.oTime ,\r\n        c_time :formValues.cTime ,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        address2 :formValues.addressLine2,\r\n        landmark:formValues.landmark,\r\n        country_id:formValues.country.id,\r\n        state_id:formValues.state.id,\r\n        city_id:formValues.city.id,\r\n        PIN :formValues.pincode ,\r\n        opportunityTime_from: formValues.oppo_start_time,\r\n        opportunityTime_to: formValues.oppo_end_time,\r\n        nightTime_from: formValues.night_start_time,\r\n        nightTime_to: formValues.night_end_time,\r\n        created_by : this.localStorage.userId \r\n      }\r\n\r\n      this.chargingStationService.create(params).subscribe(\r\n        (resp:any )=>{\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/chargingStation/crud/list']);\r\n          }else{\r\n            if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = resp.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'name'\" ){\r\n                this.snackBar.open(MessageConstant.chargingStationDuplicate, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'mobile'\"){\r\n                this.snackBar.open(MessageConstant.mobileDuplicate, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n           \r\n          }\r\n          \r\n  \r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  filteredOption(){\r\n    this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCPO(name) : this.cpos)\r\n    );\r\n    this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    );\r\n    this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n        );\r\n        this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayLocationType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayRegisterAs(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayElectricityLine(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterLocationType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.register_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterRegisterAs(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.location_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterElectrictyLine(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.electricity_lines.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n \r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\t\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n // this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n  //this.form.get('pincode').setValue(\"\");\r\n}\r\nonCityChange(event){\r\n  \r\n //this.form.get('pincode').setValue(\"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\nupdateStatus(event){\r\n  this.status = event.checked;\r\n  this.ref.checked = this.status;\r\n}\r\nconfirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n  if (!control.value) {\r\n    return { error: true, required: true };\r\n  } else if (control.value < this.form.controls.oTime.value) {\r\n    return { error: true, confirm: true };\r\n  }\r\n}\r\nconfirmOValidator = (control: FormControl): { [s: string]: boolean } => {\r\n  if (!control.value) {\r\n    return { error: true, required: true };\r\n  } else if (control.value < this.form.controls.oppo_start_time.value) {\r\n    return { error: true, confirm: true };\r\n  }\r\n}\r\nconfirmNValidator = (control: FormControl): { [s: string]: boolean } => {\r\n  if (!control.value) {\r\n    return { error: true, required: true };\r\n  } else if (control.value < this.form.controls.night_start_time.value) {\r\n    return { error: true, confirm: true };\r\n  }\r\n}\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n\t\t\t\t<mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" maxlength=\"50\" formControlName=\"name\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter  name\">account_circle</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"20\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character is not allowed </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" required>\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required>\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Location Type</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"location_type\" [matAutocomplete]=\"locationTypeAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #locationTypeAuto=\"matAutocomplete\" [displayWith]=\"displayLocationType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsLocationType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter location type\">share_location\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('location_type').invalid\">Please select location type\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Contact Person Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"email\" required style=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email id</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email id </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" required>\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please select country\">location_city</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" required>\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" required>\r\n\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"landmark\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Commissioned Date</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp3\" formControlName=\"commissioned_dt\" disabled>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('commissioned_dt').invalid\">Please enter commissioned date\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Register As</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"register_as\" [matAutocomplete]=\"registerAsAuto\" required>\r\n\t\t\t\t<mat-autocomplete #registerAsAuto=\"matAutocomplete\" [displayWith]=\"displayRegisterAs\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRegisterAs | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter register as\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('register_as').invalid\">Please select register as\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Electricity Line</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"electricity_line\" [matAutocomplete]=\"electricityLineAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #electricityLineAuto=\"matAutocomplete\" [displayWith]=\"displayElectricityLine\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsElectricityLine | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter electricity line\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('electricity_line').invalid\">Please select electricity line\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t<mat-label>Open Time</mat-label>\r\n\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"oTime\"\r\n\t\t\t\t\t\trequired> -->\r\n\t\t\t\t<!-- <input matInput [ngxTimepicker]=\"picker\">\r\n\t\t\t\t<ngx-material-timepicker #picker></ngx-material-timepicker> -->\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oTime').invalid\">Please enter open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Close Time</mat-label>\r\n\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"cTime\"\r\n\t\t\t\t\t\trequired> -->\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('required')\">Please enter close time\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('confirm')\">Close time is not be less then Open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t<mat-label>Opportunity Start Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_start_time\" readonly\r\n\t\t\t\t\tformControlName=\"oppo_start_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #oppo_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter occp open time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oppo_start_time').invalid\">Please enter opportunity start time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Opportunity Close Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_end_time\" readonly\r\n\t\t\t\t\tformControlName=\"oppo_end_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #oppo_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter occp close time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('required')\">Please enter occp close time\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('confirm')\">opportunity close time is not be less\r\n\t\t\t\t\tthen Open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t<mat-label>Night Start Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_start_time\" readonly\r\n\t\t\t\t\tformControlName=\"night_start_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #night_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('night_start_time').invalid\">Please enter night open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Night Close Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_end_time\" readonly\r\n\t\t\t\t\tformControlName=\"night_end_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #night_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('required')\">Please enter night close time\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('confirm')\">Night close time is not be less then\r\n\t\t\t\t\tOpen time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/chargingStation/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\r\n\t</form>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate:[AuthGuard]},\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { AddChargerDialogComponent } from '../add-charger-dialog/add-charger-dialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\r\nimport { MultiChargerDialogComponent } from '../multi-charger-dialog/multi-charger-dialog.component';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { eventNames } from 'process';\r\nimport { SetCpoStationService } from 'app/shared/services/setCPOStation.service';\r\n\r\n\r\nexport class ChargingStation {\r\n  id: number;\r\n  cpo_id: number;\r\n  cpo_name: string;\r\n  name: string;\r\n  code: string;\r\n  description: string;\r\n  address: string;\r\n  pin: number;\r\n  lat: number;\r\n  lng: number;\r\n  location_type_id: number;\r\n  cp_name: string;\r\n  mobile: number;\r\n  email: string;\r\n  commissioned_dt: string;\r\n  register_as: number;\r\n  electricity_line_id: number;\r\n  o_time: string;\r\n  c_time: string;\r\n  status: string;\r\n  created_date: string;\r\n  created_by: number;\r\n  modify_date: string;\r\n  modify_by: number;\r\n  statusString: string;\r\n  address1: string;\r\n  total_chargers: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: ChargingStation;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['name', 'cp_name', 'cpo_name', 'code', 'total_chargers', 'address1', 'status', 'action'];\r\n  head = [['CPO Name', 'Station Code', 'Station Name', 'Charger Count', 'Contact Person Name', 'Mobile', 'Address', 'Status']];\r\n  dataSource: MatTableDataSource<ChargingStation>;\r\n\r\n  chargingStations: ChargingStation[];\r\n  localStorage: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  //messageConstant = MessageConstant;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  cpoSearch = false;\r\n  stationCodeSearch = false;\r\n  nameSearch = false;\r\n  contactPersonSearch = false;\r\n  mobileSearch = false;\r\n  addressSearch = false;\r\n  statusSearch = false;\r\n  countSearch = false;\r\n  exportedData: any[];\r\n  previousTabIndex = null;\r\n  cposName: any;\r\n  clientName: any;\r\n  form: FormGroup;\r\n  chargingStationName: any;\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any[];\r\n  selectedClient_id: any;\r\n  selectedCpo_id: any;\r\n  selectedStation_id: any;\r\n  localClient: any;\r\n  constructor(\r\n    private chargingStationService: ChargingStationService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private setCpoStationService: SetCpoStationService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      charClient: ['', Validators.required],\r\n      charCPO: ['', Validators.required],\r\n      charStat: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'))\r\n    this.getClients();\r\n    if (this.localStorage.role_code == 'SC' || this.localStorage.role_code == 'SO') {\r\n      this.form.get('charClient').disable();\r\n      this.form.get('charCPO').disable();\r\n    } else if (this.localStorage.role_code == 'CPO' || this.localStorage.role_code == 'ADMIN') {\r\n      this.form.get('charClient').disable();\r\n    }\r\n    this.filterEntity = new ChargingStation();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getChargingStations() {\r\n    let params = {\r\n\r\n    }\r\n\r\n    this.chargingStationService.getAllChargingStationsWithChargersAndConnectorsCCS(this.localStorage.userId,\r\n      this.selectedClient_id, this.selectedCpo_id, this.selectedStation_id, params).subscribe(\r\n        (data: any) => {\r\n          if (data != null) {\r\n            this.chargingStations = data.data;\r\n            for (var i = 0; i < this.chargingStations.length; i++) {\r\n              if (this.chargingStations[i].status == 'N') {\r\n                this.chargingStations[i].statusString = 'Inactive';\r\n              } else {\r\n                this.chargingStations[i].statusString = 'Active';\r\n              }\r\n            }\r\n            this.dataSource = new MatTableDataSource(this.chargingStations);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          } else {\r\n            return;\r\n          }\r\n        }, (err) => {\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargingStationService.delete(id).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getChargingStations();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  addChargerDialog(data) {\r\n    localStorage.setItem('station', JSON.stringify(data));\r\n    let params = {\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(AddChargerDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  multiChargerDialog(data) {\r\n    localStorage.setItem('station', JSON.stringify(data));\r\n    let params = {\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(MultiChargerDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  manageCharger(data) {\r\n    this.previousTabIndex = null;\r\n    //localStorage.setItem('station', JSON.stringify( data));\r\n    this.chargingStationService.chargerDetail = data;\r\n    this.chargingStationService.tabIndex = null;\r\n    this.router.navigate(['/chargingStation/viewDetails']);\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'cpoSearch') {\r\n      this.cpoSearch = !this.cpoSearch;\r\n      this.filterEntity.cpo_name = '';\r\n    }\r\n    if (visibleOption == 'contactPersonSearch') {\r\n      this.contactPersonSearch = !this.contactPersonSearch;\r\n      this.filterEntity.cp_name = '';\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = null;\r\n    }\r\n    if (visibleOption == 'stationCodeSearch') {\r\n      this.stationCodeSearch = !this.stationCodeSearch;\r\n      this.filterEntity.code = '';\r\n    }\r\n    if (visibleOption == 'countSearch') {\r\n      this.countSearch = !this.countSearch;\r\n      this.filterEntity.total_chargers = '';\r\n    }\r\n    if (visibleOption == 'addressSearch') {\r\n      this.addressSearch = !this.addressSearch;\r\n      this.filterEntity.address1 = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'CPO Name': chargerModel.cpo_name, 'Station Code': chargerModel.code, 'Station Name': chargerModel.name,\r\n        'Charger Count': chargerModel.total_chargers, 'Contact Person Name': chargerModel.cp_name, 'Mobile': chargerModel.mobile,\r\n        'Address': chargerModel.address1, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n    XLSX.writeFile(workBook, 'Charging Station.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.cpo_name, chrger.code, chrger.name, chrger.total_chargers, chrger.cp_name, chrger.mobile, chrger.address1, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Charging Station Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Charging Station report.pdf');\r\n\r\n  }\r\n\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n  getClients() {\r\n    let selectedClient;\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n\r\n    this.localClient = localStorage.getItem('selectedClient');\r\n\r\n    if (this.localStorage.role_code != 'END') {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n\r\n        if (this.localClient != null || this.localClient != undefined) {\r\n          selectedClient = this.clientList.filter(\r\n            client => client.client_id === Number(this.localClient));\r\n          const toSelect = selectedClient[0];\r\n          this.selectedClient_id = toSelect.client_id;\r\n          this.form.get('charClient').setValue(toSelect);\r\n          //this.cdr.detectChanges();\r\n          this.getCPOByClient(toSelect.client_id);\r\n        } else {\r\n          const toSelect = this.clientList[0];\r\n          this.selectedClient_id = toSelect.client_id;\r\n          this.form.get('charClient').setValue(toSelect);\r\n          //this.cdr.detectChanges();\r\n          this.getCPOByClient(toSelect.client_id);\r\n        }\r\n\r\n\r\n        // const toSelect = this.clientList[0];\r\n        // this.selectedClient_id = toSelect.client_id;\r\n        // this.form.get('charClient').setValue(toSelect);\r\n        // this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n\r\n  onClientChange(client_id) {\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.selectedClient_id = client_id;\r\n    this.setCPOStation(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        \r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.selectedCpo_id = toSelect.cpo_id;\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n\r\n  onCPOChange(id) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.selectedCpo_id = id;\r\n    this.getStationByCPO(id);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station = [];\r\n    if (this.localStorage.role_code != 'END') {\r\n      for (var i = 0; i < this.stationList.length; i++) {\r\n        if (id == this.stationList[i].cpo_id) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n        if (this.stationList[i].station_id == -1 && id != -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        //const toSelect = this.station[0];\r\n        // const toSelect = this.station.length == 1 ? this.station[0] : this.station[1];\r\n        let toSelect\r\n        if (this.selectedCpo_id == -1) {\r\n          toSelect = this.station[0];\r\n        } else {\r\n          toSelect = this.station.length == 1 ? this.station[0] : this.station[1];\r\n        }\r\n        this.selectedStation_id = toSelect.station_id;\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getChargingStations();\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    }\r\n  }\r\n\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n\r\n  onStationChange(event) {\r\n    this.selectedStation_id = event;\r\n    this.getChargingStations();\r\n    //this.getAllClientChargers(event);\r\n  }\r\n\r\n  setCPOStation(client_id) {\r\n\r\n    this.setCpoStationService.setCpoStationDetails(client_id);\r\n    setTimeout(() => {\r\n      this.getCPOByClient(client_id);\r\n\r\n    }, 700);\r\n  }\r\n}\r\n\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n\r\n<mat-card style=\"padding:16px  !important;\" *ngIf=\"localStorage.role_code != 'END' \">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\" \r\n                        (optionSelected)='onClientChange($event.option.value.client_id)' >\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.client_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.cpo_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select  CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.station_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>    \r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Station Name \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cp_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!contactPersonSearch\" class=\"custom_font_size\" style=\"display: flex;\">Contact\r\n                            Person &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('contactPersonSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"contactPersonSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Contact Person \" [(ngModel)]=\"filterEntity.cp_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('contactPersonSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cp_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"  CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stationCodeSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stationCodeSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Station Code  \" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationCodeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"total_chargers\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!countSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Count\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('countSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"countSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Count  \" [(ngModel)]=\"filterEntity.total_chargers\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('countSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.total_chargers}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Mobile \" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"address1\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!addressSearch\" class=\"custom_font_size\" style=\"display: flex;\">Address\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('addressSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"addressSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Address \" [(ngModel)]=\"filterEntity.address1\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('addressSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.address1}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\" >\r\n                        <div style=\"display: flex;\">\r\n                            <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Add Charger\" (click)=\"multiChargerDialog(element)\"\r\n                            style=\"cursor:pointer\">add_circle</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Manage Chargers\" (click)=\"manageCharger(element)\"\r\n                            style=\"cursor:pointer\">preview</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                        </div>\r\n                       \r\n                    </td>\r\n\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-add-charger-dialog',\r\n//   templateUrl: './add-charger-dialog.component.html',\r\n//   styleUrls: ['./add-charger-dialog.component.scss']\r\n// })\r\n// export class AddChargerDialogComponent implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit(): void {\r\n//   }\r\n\r\n// }\r\n\r\nimport { Component, OnInit, ViewChild, Inject } from \"@angular/core\";\r\nimport {\r\n    Validators,\r\n    FormBuilder,\r\n    FormGroup,\r\n    ValidatorFn,\r\n    AbstractControl,\r\n} from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ChargerService } from \"app/shared/services/charger/charger.service\";\r\nimport { ChargingStationService } from \"app/shared/services/charging-station/charging-station.service\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatAutocompleteTrigger } from \"@angular/material/autocomplete\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { MtxDialogData } from \"@ng-matero/extensions\";\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === \"string\") {\r\n            return { invalidAutocompleteObject: { value: control.value } };\r\n        }\r\n        return null; /* valid option selected */\r\n    };\r\n}\r\nexport class Charger {\r\n    id: string;\r\n    name: string;\r\n    serial_no: string;\r\n    station_id: number;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-multi-charger-dialog\",\r\n    templateUrl: \"./multi-charger-dialog.component.html\",\r\n    styleUrls: [\"./multi-charger-dialog.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class MultiChargerDialogComponent implements OnInit {\r\n    params: any;\r\n    form: FormGroup;\r\n    stations: any;\r\n    localStorage: any;\r\n    status = false;\r\n    stationDetails: any;\r\n    isEditMode = false;\r\n    client_id: any;\r\n    @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    selectedChargerSerial = [];\r\n    public chipSelectedSerialNo: Charger[] = [];\r\n    chargerSerials: any;\r\n    chargerSerialsOrg: any;\r\n    selectedSerialNo = [];\r\n    unitType: any;\r\n    removable = true;\r\n    isAvailable = false;\r\n    public filteredSerial: Observable<String[]>;\r\n    filteredOptionSerial: Observable<any[]>;\r\n    // messageConstant = MessageConstant;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private chargerService: ChargerService,\r\n        private snackBar: MatSnackBar,\r\n        public dialogRef: MatDialogRef<MultiChargerDialogComponent>,\r\n        private router: Router,\r\n        public dialog: MatDialog,\r\n        @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.stationDetails = JSON.parse(localStorage.getItem(\"station\"));\r\n\r\n        this.form = this.fb.group({\r\n            serialNumber: [\"\"],\r\n            name: [\"\"],\r\n            station: [{ value: \"\", disabled: true }],\r\n            cpo_name: [{ value: \"\", disabled: true }],\r\n            noOfGuns: [{ value: \"\", disabled: true }],\r\n            addressLine1: [{ value: \"\", disabled: true }],\r\n            addressLine2: [{ value: \"\", disabled: true }],\r\n            city: [{ value: \"\", disabled: true }],\r\n            state: [{ value: \"\", disabled: true }],\r\n            country: [{ value: \"\", disabled: true }],\r\n            status: this.status == true ? \"Y\" : \"N\",\r\n        });\r\n        this.params = this.data;\r\n        this.client_id = this.params.data.client_id;\r\n        this.getMultipleChargerSerial();\r\n\r\n        this.assignValues(this.params);\r\n    }\r\n\r\n    assignValues(params) {\r\n        this.form.get(\"station\").setValue(params.data.name);\r\n        this.form.get(\"cpo_name\").setValue(params.data.cpo_name);\r\n        this.form.get(\"noOfGuns\").setValue(params.data.no_of_guns);\r\n        this.form.get(\"addressLine1\").setValue(params.data.address1);\r\n        this.form.get(\"addressLine2\").setValue(params.data.address2);\r\n        this.form.get(\"city\").setValue(params.data.city_name);\r\n        this.form.get(\"state\").setValue(params.data.state_name);\r\n        this.form.get(\"country\").setValue(params.data.country_name);\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            let params: any = {\r\n                station_id: this.stationDetails.id,\r\n                charger_data: this.selectedSerialNo.map((v) => ({\r\n                    charger_id: v.charger_id,\r\n                    serial_no: v.serial_no,\r\n                })),\r\n\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n            };\r\n\r\n            if (this.isEditMode) {\r\n                (params.id = this.stationDetails.id),\r\n                    (params.modify_by = this.localStorage.userId);\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n            } else {\r\n                this.chargerService\r\n                    .addChargerToStationMultiple(params)\r\n                    .subscribe(\r\n                        (data: any) => {\r\n                            //\r\n                            if (data.status == true) {\r\n                                this.snackBar.open(\r\n                                    MessageConstant.chargerMappedWithStation,\r\n                                    \"Dismiss\",\r\n                                    { duration: 5000 }\r\n                                );\r\n                                this.dialogRef.close();\r\n                                this.router.navigate([\r\n                                    \"/chargingStation/crud/list\",\r\n                                ]);\r\n                            } else {\r\n                                this.snackBar.open(\r\n                                    MessageConstant.errorMessage,\r\n                                    \"Dismiss\",\r\n                                    { duration: 5000 }\r\n                                );\r\n                                this.dialogRef.close();\r\n                            }\r\n                        },\r\n                        (err) => {\r\n                            ////\r\n                            this.snackBar.open(\r\n                                MessageConstant.errorMessage,\r\n                                \"Dismiss\",\r\n                                { duration: 5000 }\r\n                            );\r\n                        }\r\n                    );\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get(\"email\").hasError(\"required\")\r\n            ? \"You must enter a value\"\r\n            : form.get(\"email\").hasError(\"email\")\r\n            ? \"Not a valid email\"\r\n            : \"\";\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    onYesClick() {\r\n        this.onSubmit();\r\n    }\r\n\r\n    getMultipleChargerSerial() {\r\n        this.chargerService\r\n            .getClientChargersNotMappedToAnyStation(this.client_id)\r\n            .subscribe(\r\n                (multiChargerData: any) => {\r\n                    //this.form.reset();\r\n                    if (multiChargerData.status == true) {\r\n                        this.chargerSerials = multiChargerData.data;\r\n                        this.chargerSerialsOrg = [...this.chargerSerials];\r\n                        this.filteredOptionSerial =\r\n                            this.form.controls.serialNumber.valueChanges.pipe(\r\n                                startWith(\"\"),\r\n                                map((value) =>\r\n                                    typeof value === \"string\"\r\n                                        ? value\r\n                                        : value.serial_no\r\n                                ),\r\n                                map((serial_no) =>\r\n                                    serial_no\r\n                                        ? this._filterSerial(serial_no)\r\n                                        : this.chargerSerials\r\n                                )\r\n                            );\r\n                    } else {\r\n                        this.snackBar.open(\r\n                            \"All charger are mapped with other station\",\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                    }\r\n                },\r\n                (err) => {}\r\n            );\r\n        // this.chargerSerials =  this.chargingStationService.getMultipleChargerSerial();\r\n        // this.chargerSerialsOrg = [...this.chargerSerials];\r\n    }\r\n    displaySerial(item: any): string {\r\n        return item && item.serial_no ? item.serial_no : \"\";\r\n    }\r\n    private _filterSerial(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        this.chargerSerials = this.resetChrgerList();\r\n\r\n        return this.chargerSerials.filter((option) =>\r\n            option.serial_no.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n    resetChrgerList(): any[] {\r\n        var chargerSerials = [];\r\n        if (\r\n            this.selectedSerialNo != undefined &&\r\n            this.selectedSerialNo.length > 0\r\n        ) {\r\n            var isExist = true;\r\n\r\n            for (var k = 0; k < this.chargerSerialsOrg.length; k++) {\r\n                var serialNo = this.chargerSerialsOrg[k];\r\n                isExist = false;\r\n                for (var i = 0; i < this.selectedSerialNo.length; i++) {\r\n                    var selectedSerialNo = this.selectedSerialNo[i];\r\n                    if (selectedSerialNo.serial_no == serialNo.serial_no) {\r\n                        isExist = true;\r\n                    }\r\n                }\r\n\r\n                if (!isExist) {\r\n                    chargerSerials.push(serialNo);\r\n                }\r\n            }\r\n        } else {\r\n            chargerSerials = [...this.chargerSerialsOrg];\r\n        }\r\n        return chargerSerials;\r\n    }\r\n    onSerialSelected(event) {\r\n        this.selectedSerialNo.push(event.option.value);\r\n        //this.form.controls['serialNumber'].setValue('');\r\n        this.form.get(\"serialNumber\").setValue(\"\");\r\n        this.chargerSerials = this.resetChrgerList();\r\n        this.unitType += 1;\r\n        this.filteredOptionSerial =\r\n            this.form.controls.serialNumber.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.serial_no\r\n                ),\r\n                map((serial_no) =>\r\n                    serial_no\r\n                        ? this._filterSerial(serial_no)\r\n                        : this.chargerSerials\r\n                )\r\n            );\r\n    }\r\n    public removeSerial(i): void {\r\n        this.selectedSerialNo.splice(i, 1);\r\n        this.chargerSerials = this.resetChrgerList();\r\n        this.unitType - 1;\r\n        this.filteredOptionSerial =\r\n            this.form.controls.serialNumber.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.serial_no\r\n                ),\r\n                map((serial_no) =>\r\n                    serial_no\r\n                        ? this._filterSerial(serial_no)\r\n                        : this.chargerSerials\r\n                )\r\n            );\r\n    }\r\n    selectionMade(event: Event, trigger: MatAutocompleteTrigger) {\r\n        event.stopPropagation();\r\n        trigger.openPanel();\r\n    }\r\n    updateAvailable(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n    closeActionPanel() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>   \r\n<mat-toolbar class=\"action_toolbar\">Add Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Station</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"station\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>CPO Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cpo_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<!-- <mat-form-field  appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>No Of Guns</mat-label>\r\n\t\t   \t\t<input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly autocomplete=\"off\">\r\n\t\t\t</mat-form-field> -->\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"city\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"state\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"country\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateAvailable($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"display: block  !important;padding-bottom: 10px;\"\r\n\t\t\t\tfxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-chip-list aria-label=\"Fish selection\">\r\n\t\t\t\t\t<mat-chip *ngFor=\"let option of selectedSerialNo;let i = index;\" [selectable]=\"selectable\"\r\n\t\t\t\t\t\t[removable]=\"removable\" (removed)=\"removeSerial(i)\">\r\n\t\t\t\t\t\t{{option?.serial_no}}\r\n\t\t\t\t\t\t<mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n\t\t\t\t\t</mat-chip>\r\n\t\t\t\t</mat-chip-list>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No</mat-label>\r\n\t\t\t\t\t<input type=\"text\" #trigger=\"matAutocompleteTrigger\" matInput formControlName=\"serialNumber\"\r\n\t\t\t\t\t\ttype=\"search\" autocomplete=\"off\" [matAutocomplete]=\"seialAuto\">\r\n\t\t\t\t\t<mat-autocomplete #seialAuto=\"matAutocomplete\" [displayWith]=\"displaySerial\"\r\n\t\t\t\t\t\t(optionSelected)='onSerialSelected($event)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionSerial | async\" [value]=\"option\"\r\n\t\t\t\t\t\t\t(click)=\"selectionMade($event, trigger)\">\r\n\t\t\t\t\t\t\t<span>{{option?.charger_display_id}}</span> |\r\n\t\t\t\t\t\t\t<small> {{option?.serial_no}}</small>\r\n\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('serialNumber').invalid\">Please select part number </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\n\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { GeoLocationService } from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe, GeoLocationService]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  cpos: any;\r\n  location_types: any;\r\n  register_types: any;\r\n  electricity_lines: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsLocationType: Observable<any[]>;\r\n  filteredOptionsElectricityLine: Observable<any[]>;\r\n  filteredOptionsRegisterAs: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  mLat: any;\r\n  mLong: any;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private dateService: DateService, private snackBar: MatSnackBar,\r\n    private cpoService: CpoService, private chargingStationService: ChargingStationService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public dialog: MatDialog,\r\n    private datePipe: DatePipe, public geoLocationService: GeoLocationService, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n\r\n      lat: ['', [Validators.required]],\r\n      lng: ['', [Validators.required]],\r\n      location_type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cp_name: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      commissioned_dt: [''],\r\n      register_as: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      electricity_line: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      oTime: ['', [Validators.required]],\r\n      cTime: ['', [this.confirmValidator, Validators.required]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      oppo_start_time: ['', [Validators.required]],\r\n      oppo_end_time: ['', [this.confirmOValidator, Validators.required]],\r\n      night_start_time: ['', [Validators.required]],\r\n      night_end_time: ['', [this.confirmNValidator, Validators.required]],\r\n\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getLocationTypes();\r\n    this.getRegisterTypes();\r\n    this.getElectricityLines();\r\n    //this.getRegisterTypes();\r\n    //this.filteredOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude);\r\n        // this.coordinates = {\r\n        //   latitude:  +(pos.coords.latitude),\r\n        //   longitude: +(pos.coords.longitude)\r\n        // };\r\n        // this.form.get('lat').setValue( this.mLat);\r\n        // this.form.get('lng').setValue(this.mLong);\r\n      });\r\n\r\n\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCpos() {\r\n\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n\r\n        this.cpos = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCPO(name) : this.cpos)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  getLocationTypes() {\r\n\r\n    this.chargingStationService.getLocationTypes().subscribe(\r\n      (data: any) => {\r\n        this.location_types = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.location_types.find(c => c.id == this.params.data.location_type_id);\r\n          this.form.get('location_type').setValue(toSelect);\r\n          this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterLocationType(name) : this.location_types)\r\n            );\r\n        }\r\n      }\r\n    )\r\n    // this.location_types = this.chargingStationService.getLocationTypes();\r\n    // this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    // );\r\n\r\n  }\r\n  getRegisterTypes() {\r\n    this.chargingStationService.getRegisterTypes().subscribe(\r\n      (data: any) => {\r\n        this.register_types = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.register_types.find(c => c.id == this.params.data.register_as_id);\r\n          this.form.get('register_as').setValue(toSelect);\r\n          this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n            );\r\n        }\r\n\r\n      }\r\n    )\r\n    // this.register_types =  this.chargingStationService.getRegisterTypes();\r\n    // this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n    // );\r\n\r\n  }\r\n  getElectricityLines() {\r\n    this.chargingStationService.getElectricityLines().subscribe(\r\n      (data: any) => {\r\n        this.electricity_lines = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.electricity_lines.find(c => c.id == this.params.data.electricity_line_id);\r\n          this.form.get('electricity_line').setValue(toSelect);\r\n          this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n            );\r\n        }\r\n      }\r\n    )\r\n    //this.electricity_lines = this.chargingStationService.getElectricityLines();\r\n\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params: any = {\r\n        cpo_id: formValues.cpo.id,\r\n        name: formValues.name,\r\n        code: formValues.code,\r\n        description: formValues.description,\r\n\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        location_type_id: formValues.location_type.id,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        commissioned_dt: this.datePipe.transform(formValues.commissioned_dt, \"yyyy-MM-dd\"),\r\n        register_as: formValues.register_as.id,\r\n        electricity_line_id: formValues.electricity_line.id,\r\n        o_time: formValues.oTime,\r\n        c_time: formValues.cTime,\r\n        opportunityTime_from: formValues.oppo_start_time,\r\n        opportunityTime_to: formValues.oppo_end_time,\r\n        nightTime_from: formValues.night_start_time,\r\n        nightTime_to: formValues.night_end_time,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n\r\n      // tslint:disable-next-line: no-//\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.chargingStationService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n                this.errorMsg = resp.message;\r\n                var index = this.errorMsg.lastIndexOf(\" \");\r\n                this.splitted = this.errorMsg.substring(index + 1);\r\n                if (this.splitted == \"'name'\") {\r\n                  this.snackBar.open(MessageConstant.chargingStationDuplicate, 'Dismiss', { duration: 5000 });\r\n                } if (this.splitted == \"'mobile'\") {\r\n                  this.snackBar.open(MessageConstant.mobileDuplicate, 'Dismiss', { duration: 5000 });\r\n                }\r\n              } else {\r\n                this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }\r\n\r\n\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.chargingStationService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    let tempOppStart = params.data.oppo_start_time.substring(0, 5);\r\n    let tempOppEnd = params.data.oppo_end_time.substring(0, 5);\r\n\r\n    let tempNightStart = params.data.night_start_time.substring(0, 5);\r\n    let tempNightEnd = params.data.night_end_time.substring(0, 5);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('commissioned_dt').setValue(params.data.commissioned_dt);\r\n    this.form.get('oTime').setValue(params.data.o_time);\r\n    this.form.get('cTime').setValue(params.data.c_time);\r\n\r\n    this.form.get('oppo_start_time').setValue(tempOppStart);\r\n    this.form.get('oppo_end_time').setValue(tempOppEnd);\r\n\r\n\r\n    this.form.get('night_start_time').setValue(tempNightStart);\r\n    this.form.get('night_end_time').setValue(tempNightEnd);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  filteredOption() {\r\n    this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCPO(name) : this.cpos)\r\n      );\r\n    this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterLocationType(name) : this.location_types)\r\n      );\r\n    this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n      );\r\n    this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n      );\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayLocationType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayRegisterAs(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayElectricityLine(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterLocationType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.register_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterRegisterAs(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.location_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterElectrictyLine(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.electricity_lines.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    // this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  \r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getLatLong() {\r\n    let params = {\r\n    }\r\n\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height: '410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null || result != undefined) {\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      } else {\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    });\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.oTime.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  confirmOValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.oppo_start_time.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  confirmNValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.night_start_time.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Charging Station</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter CPO name\">account_circle\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" maxlength=\"50\" formControlName=\"name\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter  name\">account_circle</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"20\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" required>\r\n\t\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required>\r\n\t\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Location Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"location_type\" [matAutocomplete]=\"locationTypeAuto\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-autocomplete #locationTypeAuto=\"matAutocomplete\" [displayWith]=\"displayLocationType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsLocationType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please enter location type\">share_location\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('location_type').invalid\">Please select location type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Contact Person Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">\r\n\t\t\t\t\t\taccount_circle</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person name\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"email\" required style=\"text-transform: none;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email id </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please select state\">location_city</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please select city\">location_city</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\" \" formControlName=\"landmark\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Commissioned Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" formControlName=\"commissioned_dt\">\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">\r\n\t\t\t\t\t\t\thelp</mat-icon>\r\n\t\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('commissioned_dt').invalid\">Please enter commissioned date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Register As</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"register_as\" [matAutocomplete]=\"registerAsAuto\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-autocomplete #registerAsAuto=\"matAutocomplete\" [displayWith]=\"displayRegisterAs\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRegisterAs | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter register as\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('register_as').invalid\">Please select register as\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Electricity Line</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"electricity_line\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"electricityLineAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #electricityLineAuto=\"matAutocomplete\" [displayWith]=\"displayElectricityLine\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsElectricityLine | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please enter electricity line\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('electricity_line').invalid\">Please select electricity line\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Open Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"oTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<!-- <input matInput [ngxTimepicker]=\"picker\">\r\n\t\t\t\t\t<ngx-material-timepicker #picker></ngx-material-timepicker> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oTime').invalid\">Please enter open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Close Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"cTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('required')\">Please enter close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('confirm')\">Close time is not be less then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Opportunity Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_start_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_start_time').invalid\">Please enter opportunity start time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Opportunity Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('required')\">Please enter occp close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('confirm')\">Opportunity close time is not be\r\n\t\t\t\t\t\tless then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Night Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_start_time\"\r\n\t\t\t\t\t\treadonly formControlName=\"night_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_start_time').invalid\">Please enter night open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Night Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"night_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('required')\">Please enter night close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('confirm')\">Night close time is not be less\r\n\t\t\t\t\t\tthen Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { ListChargersComponent } from './list-chargers/list-chargers.component';\r\n\r\nimport { MapChargerComponent } from './map-charger/map-charger.component';\r\nimport { MapChargerDialogComponent } from './map-charger-dialog/map-charger-dialog.component';\r\nexport const TABS_MANAGE_CHARGER_ROUTES: Routes = [\r\n  { path: 'map', component: MapChargerComponent },\r\n  { path: 'list', component: ListChargersComponent },\r\n  { path: 'map-charger-dialog', component: MapChargerDialogComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargingStationCrudComponent } from './charging-station-crud/charging-station-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './charging-station-crud/routes';\r\nimport { ManageChargersComponent } from './manage-chargers/manage-chargers.component';\r\nimport { TABS_MANAGE_CHARGER_ROUTES } from './manage-chargers/routes';\r\nimport { ViewDetailsComponent } from './view-details/view-details.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes: Routes = [\r\n    // { path : 'create', component : CreateComponent},\r\n    // { path : 'edit/:id', component : EditComponent},\r\n    // { path : 'list', component : ListComponent},\r\n    // { path : '', redirectTo : 'list',pathMatch:'full'},\r\n    { path: 'crud', component: ChargingStationCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES },\r\n    { path: 'manageChargers', component: ManageChargersComponent, children: TABS_MANAGE_CHARGER_ROUTES },\r\n    { path: 'viewDetails', component: ViewDetailsComponent },\r\n    { path: '', redirectTo: 'crud', pathMatch: 'full' }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ChargingStationRoutingModule { }","\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../../action-dialog/action-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { AddChargerDialogComponent } from '../../add-charger-dialog/add-charger-dialog.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerLogSharedDialogComponent } from 'app/shared/components/charger-log-shared-dialog/charger-log-shared-dialog.component';\r\nimport { MapChargerDialogComponent } from '../map-charger-dialog/map-charger-dialog.component';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport class Charger {\r\n  id: string;\r\n  name: string;\r\n  serial_no: string;\r\n  batch_id: number;\r\n  station_id: number;\r\n  current_version_id: number;\r\n  no_of_guns: number;\r\n  Address: string;\r\n  Lat: number;\r\n  Lng: number;\r\n  OTA_Config: string;\r\n  Periodic_Check_Ref_Time: string;\r\n  Periodicity_in_hours: number;\r\n  When_to_Upgrade: string;\r\n  Upgrade_Specific_Time: number;\r\n  is_available: number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  availableString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list-chargers',\r\n  templateUrl: './list-chargers.component.html',\r\n  styleUrls: ['./list-chargers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListChargersComponent implements OnInit {\r\n  filterEntity: Charger;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [\r\n    'serial_no',\r\n    'name',\r\n    'station_name',\r\n    'version_name',\r\n    'no_of_guns',\r\n    'Address',\r\n    'Lat',\r\n    'Lng',\r\n    'is_available',\r\n    'status',\r\n    'action'\r\n  ];\r\n  dataSource: MatTableDataSource<Charger>;\r\n\r\n  chargers: Charger[];\r\n  stationDetails: any;\r\n  localStorage: any;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  selection = new SelectionModel<Charger>(true, []);\r\n  station: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.station = JSON.parse(this.route.snapshot.paramMap.get('station'));\r\n    this.stationDetails = JSON.parse(localStorage.getItem('station'));\r\n\r\n\r\n    this.getChargersByMappedStationId(this.stationDetails.id);\r\n    this.filterEntity = new Charger();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = !!this.dataSource ? this.dataSource.data.length : 0;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Charger): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\r\n  }\r\n\r\n  getChargersByMappedStationId(stationId) {\r\n    //\r\n    this.chargerService.getChargersByMappedStationId(stationId).subscribe(\r\n      (data: any) => {\r\n        \r\n        if (data != null) {\r\n          this.chargers = data.data;\r\n          for (var i = 0; i < this.chargers.length; i++) {\r\n            if (this.chargers[i].status == 'N') {\r\n              this.chargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.chargers[i].statusString = 'Active';\r\n            }\r\n            if (this.chargers[i].is_available == 0) {\r\n              this.chargers[i].availableString = 'No';\r\n            } else {\r\n              this.chargers[i].availableString = 'yes';\r\n            }\r\n\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.chargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n\r\n    this.chargerService.delete(id).subscribe(\r\n      (data: any) => {\r\n\r\n        this.getChargersByMappedStationId(this.stationDetails.id);\r\n        this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  removeChargerFromStation(data) {\r\n\r\n    let params: any = {\r\n      id: data.map_id,\r\n      charger_id: data.charger_id,\r\n      station_id: this.stationDetails.id,\r\n      modify_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n\r\n    // if(this.isEditMode){\r\n\r\n    // }else{\r\n    //   \r\n    //;\r\n    this.chargerService.removeChargerFromStation(params).subscribe(\r\n      (data: any) => {\r\n        //\r\n        this.snackBar.open(MessageConstant.ChargerRemoved, 'Dismiss', { duration: 5000 });\r\n        // this.router.navigate(['/chargingStation/manageChargers/list']);\r\n        this.getChargersByMappedStationId(this.stationDetails.id);\r\n      },\r\n      (err) => {\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n    // }\r\n\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(MapChargerDialogComponent, {\r\n      width: '1200px',\r\n\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n\r\n  addChargerDialog(data) {\r\n\r\n\r\n    let params = {\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddChargerDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n\r\n  manageCharger(data) {\r\n\r\n    this.router.navigate(['/chargingStation/manageChargers', { station: data }]);\r\n  }\r\n\r\n  openDialogChargerDetails(data) {\r\n\r\n\r\n    let params = {\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ChargerLogSharedDialogComponent, {\r\n      width: '1600px',\r\n      height: '500px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      //this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" matSort>\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Serial No\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station\" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"version_name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Current Version \" [(ngModel)]=\"filterEntity.version_name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.version_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"no_of_guns\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"No Of Guns \" [(ngModel)]=\"filterEntity.no_of_guns\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.no_of_guns}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Address\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Address\" [(ngModel)]=\"filterEntity.address1\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.address1}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Lat\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Lat\" [(ngModel)]=\"filterEntity.Lat\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Lat}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Lng\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Lng\" [(ngModel)]=\"filterEntity.Lng\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Lng}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"is_available\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Available\" [(ngModel)]=\"filterEntity.availableString\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.availableString}}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Charger Logs\" (click)=\"openDialogChargerDetails(element)\"\r\n                            style=\"cursor:pointer\">assessment</mat-icon>\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"removeChargerFromStation(element)\"\r\n                            style=\"cursor:pointer\">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"label_serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Serial No </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_charger_batch_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Batch </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Station </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_version_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Current Version </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_no_of_guns\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> No Of Guns </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_Address\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_Lat\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Lat </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_Lng\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Lng </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_is_available\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Available </th>\r\n\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"label_status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_action\">\r\n                    <th mat-header-cell *matHeaderCellDef > Action </th>\r\n\r\n                </ng-container>\r\n                <tr mat-header-row\r\n                    *matHeaderRowDef=\"['label_serial_no','label_name','label_station_name','label_version_name', 'label_no_of_guns','label_Address','label_Lat','label_Lng','label_is_available','label_status','label_action']\">\r\n                </tr>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-map-charger',\r\n  templateUrl: './map-charger.component.html',\r\n  styleUrls: ['./map-charger.component.scss'],\r\n  providers:[GeoLocationService]\r\n})\r\nexport class MapChargerComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  status = false;\r\n  stationDetails : any;\r\n  isEditMode = false; \r\n  mapDetails : any;\r\n  \r\n  mLat: any;\r\n  mLong:any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private snackBar: MatSnackBar,public dialog : MatDialog,private router : Router,\r\n    public geoLocationService:GeoLocationService,public countryService: CountriesService) {  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.stationDetails = JSON.parse( localStorage.getItem('station'));\r\n    \r\n    // this.stationDetails = this.route.snapshot.paramMap.get('station');\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', ],\r\n      serialNo: ['', [Validators.required]],\r\n      station: [{value : '',disabled:true}, ],\r\n      noOfGuns: ['', [Validators.required]],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],\r\n      lat: ['', ],\r\n      long: ['', ],\r\n      isAvailable: ['', [Validators.required]],\r\n    });\r\n   \r\n    this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n     //this.getCountry();\r\n    // this.getAllCountry();\r\n    // this.getAllState();\r\n     //this.getAllCity();\r\n  }\r\n\r\n\r\n\r\n  getBatches(){\r\n    this.chargerBatchService.getChargerBatches().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.batches = data;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getStations(){\r\n    \r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        // \r\n        this.stations = data.data;\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getChargerBySerialNo(){\r\n    let params = {\r\n      srNo : this.form.value.serialNo.trim(),\r\n      station_id : this.stationDetails.id\r\n    }\r\n    // let srNo = this.form.value.serialNo.trim();\r\n//\r\n    this.chargerService.getChargerBySerialNo(params).subscribe(\r\n      (data:any)=>{\r\n        //\r\n        this.form.reset();\r\n        if(data.length>0){\r\n          this.mapDetails = data[0];\r\n          \r\n          if(this.mapDetails.map_id > 0 && this.mapDetails.map_status != 'D' ){\r\n            this.isEditMode=true;\r\n            this.snackBar.open(MessageConstant.chargerAlMapped, 'Dismiss', { duration: 3000 });\r\n\r\n          }else{\r\n            this.isEditMode=false;\r\n            this.assignValues(this.mapDetails);\r\n            this.getAllCountry();\r\n            this.getAllState();\r\n            this.getAllCity();\r\n          }\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.name);\r\n    this.form.get('serialNo').setValue(params.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.no_of_guns); \r\n  \r\n    this.form.get('lat').setValue(this.stationDetails.lat); \r\n    this.form.get('long').setValue(this.stationDetails.lng); \r\n    this.form.get('addressLine1').setValue(this.stationDetails.address1); \r\n    this.form.get('addressLine2').setValue(this.stationDetails.address2); \r\n    this.form.get('pincode').setValue(this.stationDetails.PIN);\r\n    this.form.get('landmark').setValue(this.stationDetails.landmark);\r\n    this.form.get('city').setValue(this.stationDetails.city_name);\r\n    this.form.get('state').setValue(this.stationDetails.state_name);\r\n    this.form.get('country').setValue(this.stationDetails.country_name);\r\n    const toSelect = this.stations.find(c => c.id == this.stationDetails.id);\r\n    this.form.get('station').setValue(toSelect.id);\r\n  \r\n    this.status = params.status == 'Y' ? true : false;\r\n    this.isAvailable = params.is_available == 1 ? true : false;\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    let formValues = this.form.value;\r\n    \r\n    let params:any = {\r\n      charger_id : this.mapDetails.id , \r\n      station_id : this.stationDetails.id , \r\n      name :formValues.name, \r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      landmark:formValues.landmark,\r\n      country:formValues.country.id,\r\n      state:formValues.state.id,\r\n      city:formValues.city.id,\r\n      PIN :formValues.pincode ,\r\n      lat :formValues.lat, \r\n      lang :formValues.long,\r\n      is_available :this.isAvailable, \r\n      status :'Y' ,\r\n    }\r\n\r\n    if (this.isEditMode){\r\n      params.id = this.stationDetails.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n    \r\n    \r\n\r\n    if(this.isEditMode){\r\n\r\n    }else{\r\n      \r\n      this.chargerService.addChargerToStation(params).subscribe(\r\n        (data:any )=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/chargingStation/crud/list']);\r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.stationDetails.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.countries = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.stationDetails.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.states = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.stationDetails.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.cities = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n    \r\n    \r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n \r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\t\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('long').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('long').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Serial No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"serialNo\" (change)=\"getChargerBySerialNo()\" required\r\n          autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('serialNo').invalid\">Please enter serial no\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" required autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Station</mat-label>\r\n        <mat-select formControlName=\"station\" readonly>\r\n          <mat-option *ngFor=\"let option of stations\" [value]=\"option.id\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>No Of Guns</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly>\r\n        <mat-error *ngIf=\"form.get('noOfGuns').invalid\">Please enter no of guns\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n        <mat-label>Latitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"lat\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"17\" class=\"pr-4\">\r\n        <mat-label>Longitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"long\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('long').invalid\">Please enter longitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly>\r\n        <mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" readonly>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" readonly>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" readonly>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" readonly>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div fxFlex=\"67\" fxFlex.lt-sm=\"100\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n          (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n          {{isAvailable ? 'Available' : 'Unavailable'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n        routerLink=\"/chargingStation/manageChargers/list\">Cancel</button>\r\n\r\n    </div>\r\n\r\n  </form>\r\n</div>","import {Component,OnInit} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-chargers',\r\n  templateUrl: './manage-chargers.component.html',\r\n  styleUrls: ['./manage-chargers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ManageChargersComponent implements OnInit {\r\n   // Nav bar demo\r\n   tabLinks = [\r\n    { label: 'Chargers', link: 'list'},\r\n    { label: 'Add New', link: 'map' }\r\n  ];\r\n\r\n  constructor(private route : ActivatedRoute){\r\n    this.route;\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n    \r\n  }\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">Manage Charger\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ChargingStationRoutingModule } from './charging-station-routing.module';\r\nimport { ChargingStationCrudComponent } from './charging-station-crud/charging-station-crud.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { AddChargerDialogComponent } from './add-charger-dialog/add-charger-dialog.component';\r\nimport { ManageChargersComponent } from './manage-chargers/manage-chargers.component';\r\n// import { ListComponent } from './manage-chargers/list/list.component';\r\nimport { MapChargerComponent } from './manage-chargers/map-charger/map-charger.component';\r\nimport { ListChargersComponent } from './manage-chargers/list-chargers/list-chargers.component';\r\nimport{MapChargerDialogComponent} from './manage-chargers/map-charger-dialog/map-charger-dialog.component';\r\nimport{ViewDetailsComponent} from './view-details/view-details.component';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { MultiChargerDialogComponent } from './multi-charger-dialog/multi-charger-dialog.component';\r\nconst COMPONENTS =[CreateComponent,ListComponent,ChargingStationCrudComponent,ViewDetailsComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,AddChargerDialogComponent,MapChargerDialogComponent,ViewDialogComponent,MultiChargerDialogComponent];\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\n@NgModule({\r\n    imports:[SharedModule, ChargingStationRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC, ManageChargersComponent, ListComponent, MapChargerComponent, ListChargersComponent],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargingStationModule{}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n//import { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charging-station-crud',\r\n  templateUrl: './charging-station-crud.component.html',\r\n  styleUrls: ['./charging-station-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargingStationCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Charging Stations', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n    //\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"chargingStation\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"chargingStations\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Charging Stations', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/chargingStation/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\n\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe,GeoLocationService]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  cpos:any;\r\n  location_types:any;\r\n  register_types:any;\r\n  electricity_lines:any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsLocationType: Observable<any[]>;\r\n  filteredOptionsElectricityLine: Observable<any[]>;\r\n  filteredOptionsRegisterAs: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  mLat: any;\r\n  mLong:any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder,private dateService: DateService, private snackBar: MatSnackBar,\r\n    private cpoService : CpoService,private chargingStationService : ChargingStationService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,public dialog : MatDialog,\r\n    private datePipe: DatePipe,public geoLocationService:GeoLocationService,public countryService: CountriesService) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n   \r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n     \r\n      lat: ['', [Validators.required]],\r\n      lng: ['', [Validators.required]],\r\n      location_type: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      cp_name: ['', [Validators.required]],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      commissioned_dt: ['', [Validators.required]],\r\n      register_as: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      electricity_line: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      oTime: ['', [Validators.required]],\r\n      cTime: ['', [Validators.required]],\r\n      addressLine1:['', [Validators.required]],\r\n      addressLine2:['', [Validators.required]],\r\n      landmark:['', [Validators.required]],\r\n      city:['',[autocompleteObjectValidator(),Validators.required]],\r\n      state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      oppo_start_time: ['', [Validators.required]],\r\n      oppo_end_time: ['', [Validators.required]],\r\n      night_start_time: ['', [Validators.required]],\r\n      night_end_time: ['', [Validators.required]],\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getLocationTypes();\r\n    this.getRegisterTypes();\r\n    this.getElectricityLines();\r\n    //this.getRegisterTypes();\r\n    //this.filteredOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n     this.getAllCity(this.params.data.state_id);\r\n  \r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude); \r\n          // this.coordinates = {\r\n          //   latitude:  +(pos.coords.latitude),\r\n          //   longitude: +(pos.coords.longitude)\r\n          // };\r\n         // this.form.get('lat').setValue( this.mLat);\r\n         // this.form.get('lng').setValue(this.mLong);\r\n      });\r\n     \r\n   \r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getCpos(){\r\n    \r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        \r\n\r\n        this.cpos = data;\r\n\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCPO(name) : this.cpos)\r\n          );\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n  getLocationTypes(){\r\n    \r\n    this.chargingStationService.getLocationTypes().subscribe(\r\n      (data:any)=>{\r\n        this.location_types = data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.location_types.find(c => c.id == this.params.data.location_type_id);\r\n              this.form.get('location_type').setValue(toSelect);\r\n              this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value.name),\r\n                map(name => name ? this._filterLocationType(name) : this.location_types)\r\n             );\r\n            }\r\n        }\r\n    )\r\n    // this.location_types = this.chargingStationService.getLocationTypes();\r\n    // this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    // );\r\n   \r\n  }\r\n  getRegisterTypes(){\r\n    this.chargingStationService.getRegisterTypes().subscribe(\r\n      (data:any)=>{\r\n      this.register_types = data;\r\n      if(this.isEditMode){\r\n      \r\n        const toSelect = this.register_types.find(c => c.id == this.params.data.register_as_id);\r\n        this.form.get('register_as').setValue(toSelect);\r\n        this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n      }\r\n  \r\n    }\r\n    )\r\n    // this.register_types =  this.chargingStationService.getRegisterTypes();\r\n    // this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n    // );\r\n\r\n  }\r\n  getElectricityLines(){\r\n    this.chargingStationService.getElectricityLines().subscribe(\r\n      (data:any)=>{\r\n      this.electricity_lines = data;\r\n      if(this.isEditMode){\r\n      \r\n        const toSelect = this.electricity_lines.find(c => c.id == this.params.data.electricity_line_id);\r\n        this.form.get('electricity_line').setValue(toSelect);\r\n        this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n          );\r\n      }\r\n    }\r\n    )\r\n    //this.electricity_lines = this.chargingStationService.getElectricityLines();\r\n    \r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n  let params : any = {\r\n    cpo_id : formValues.cpo.id,\r\n    name :formValues.name, \r\n    code :formValues.code, \r\n    description :formValues.description, \r\n  \r\n    lat :formValues.lat ,\r\n    lng :formValues.lng ,\r\n    location_type_id :formValues.location_type.id ,\r\n    cp_name :formValues.cp_name ,\r\n    mobile :formValues.mobile ,\r\n    email :formValues.email ,\r\n    address1 :formValues.addressLine1,\r\n    address2 :formValues.addressLine2,\r\n    PIN: formValues.pincode,\r\n    landmark: formValues.landmark,\r\n    city_id : formValues.city.id,\r\n    state_id : formValues.state.id,\r\n    country_id : formValues.country.id, \r\n    commissioned_dt : this.datePipe.transform(formValues.commissioned_dt,\"yyyy-MM-dd\")  ,\r\n    register_as :formValues.register_as.id ,\r\n    electricity_line_id :formValues.electricity_line.id,\r\n    o_time :formValues.oTime ,\r\n    c_time :formValues.cTime ,\r\n\r\n    status : this.status == true ? 'Y' : 'N'\r\n  }\r\n\r\n// tslint:disable-next-line: no-//\r\n\r\n  if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n  if (this.isEditMode){\r\n    this.chargingStationService.update(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.chargingStationService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    let tempOppStart = params.data.oppo_start_time.substring(0,5);\r\n    let tempOppEnd = params.data.oppo_end_time.substring(0,5);\r\n    \r\n    let tempNightStart = params.data.night_start_time.substring(0,5);\r\n    let tempNightEnd = params.data.night_end_time.substring(0,5);\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('commissioned_dt').setValue(params.data.commissioned_dt);\r\n    this.form.get('oTime').setValue(params.data.o_time);\r\n    this.form.get('cTime').setValue(params.data.c_time);\r\n    this.form.get('oppo_start_time').setValue(tempOppStart);\r\n    this.form.get('oppo_end_time').setValue(tempOppEnd);\r\n    \r\n\r\n    this.form.get('night_start_time').setValue(tempNightStart);\r\n    this.form.get('night_end_time').setValue(tempNightEnd);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  filteredOption(){\r\n    this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCPO(name) : this.cpos)\r\n    );\r\n    this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    );\r\n    this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n        );\r\n        this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayLocationType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayRegisterAs(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayElectricityLine(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterLocationType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.register_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterRegisterAs(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.location_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterElectrictyLine(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.electricity_lines.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\t\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Charging Station</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t\t<input type=\"text\" readonly matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly autocomplete=\"off\" maxlength=\"50\" formControlName=\"name\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"code\" maxlength=\"20\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"description\" maxlength=\"200\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"lat\" required>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Location Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"location_type\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"locationTypeAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #locationTypeAuto=\"matAutocomplete\" [displayWith]=\"displayLocationType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsLocationType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('location_type').invalid\">Please select location type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Contact Person Name</mat-label>\r\n\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person name\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"mobile\" type=\"number\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"email\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email id </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"addressLine1\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"addressLine2\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\" \" formControlName=\"landmark\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Commissioned Date</mat-label>\r\n\t\t\t\t\t<input readonly matInput [matDatepicker]=\"dp3\" formControlName=\"commissioned_dt\" disabled required>\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('commissioned_dt').invalid\">Please enter commissioned date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Register As</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"register_as\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"registerAsAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #registerAsAuto=\"matAutocomplete\" [displayWith]=\"displayRegisterAs\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRegisterAs | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('register_as').invalid\">Please select register as\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Electricity Line</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"electricity_line\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"electricityLineAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #electricityLineAuto=\"matAutocomplete\" [displayWith]=\"displayElectricityLine\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsElectricityLine | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please enter electricity line\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('electricity_line').invalid\">Please select electricity line\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Open Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"oTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<!-- <input matInput [ngxTimepicker]=\"picker\">\r\n\t\t\t\t\t<ngx-material-timepicker #picker></ngx-material-timepicker> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oTime').invalid\">Please enter open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Close Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"cTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('required')\">Please enter close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('confirm')\">Close time is not be less then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Opportunity Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_start_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_start_time').invalid\">Please enter opportunity start time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Opportunity Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('required')\">Please enter occp close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('confirm')\">Opportunity close time is not be\r\n\t\t\t\t\t\tless then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Night Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_start_time\"\r\n\t\t\t\t\t\treadonly formControlName=\"night_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_start_time').invalid\">Please enter night open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Night Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"night_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('required')\">Please enter night close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('confirm')\">Night close time is not be less\r\n\t\t\t\t\t\tthen Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, ViewChild,Inject } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-map-charger-dialog',\r\n  templateUrl: './map-charger-dialog.component.html',\r\n  styleUrls: ['./map-charger-dialog.component.scss'],\r\n  providers:[GeoLocationService]\r\n})\r\nexport class MapChargerDialogComponent implements OnInit {\r\n \r\n  params: any;\r\n  form: FormGroup;\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  status = false;\r\n  stationDetails : any;\r\n  isEditMode = false; \r\n  mapDetails : any;\r\n  mLat: any;\r\n  mLong:any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private snackBar: MatSnackBar, public dialogRef: MatDialogRef<MapChargerDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,public dialog : MatDialog,\r\n    private router : Router,private route : ActivatedRoute,public geoLocationService:GeoLocationService,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.stationDetails = JSON.parse( localStorage.getItem('station'));\r\n    // this.stationDetails = this.route.snapshot.paramMap.get('station');\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', ],\r\n      serialNo: ['', [Validators.required]],\r\n      station: [{value : '',disabled:true}, ],\r\n      noOfGuns: ['', [Validators.required]],\r\n      \r\n      lat: ['', ],\r\n      long: ['', ],\r\n      isAvailable: ['', [Validators.required]],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:['']\r\n    });\r\n   \r\n    this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n    //this.getCountry();\r\n    //this.getAllCountry();\r\n    //this.getAllState();\r\n    //this.getAllCity();\r\n   // this.mapDetails = this.params.data.map_id;\r\n    this.getChargerBySerialNo();\r\n    // if (this.isEditMode){\r\n    //   this.assignValues(this.params);\r\n    // }\r\n   \r\n  }\r\n\r\n\r\n\r\n  getBatches(){\r\n    this.chargerBatchService.getChargerBatches().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.batches = data;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        // \r\n        this.stations = data.data;\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getChargerBySerialNo(){\r\n    let params = {\r\n      srNo : this.params.data.serial_no,\r\n      station_id : this.stationDetails.id\r\n    }\r\n    // let srNo = this.form.value.serialNo.trim();\r\n\r\n    this.chargerService.getChargerBySerialNo(params).subscribe(\r\n      (data:any)=>{\r\n        this.form.reset();\r\n        if(data.length>0){\r\n          this.mapDetails = data[0];\r\n            this.isEditMode=true;\r\n            this.getAllCountry(); \r\n            this.getAllState();\r\n            this.getAllCity();\r\n           \r\n          \r\n            this.assignValues(this.mapDetails);\r\n           \r\n         \r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.name);\r\n    this.form.get('serialNo').setValue(params.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.no_of_guns); \r\n    this.form.get('addressLine1').setValue(params.address1); \r\n    this.form.get('addressLine2').setValue(params.address2); \r\n    this.form.get('pincode').setValue(params.PIN);\r\n    this.form.get('landmark').setValue(params.landmark);\r\n    this.form.get('city').setValue(params.city);\r\n    this.form.get('state').setValue(params.state);\r\n    this.form.get('country').setValue(params.country);\r\n    this.form.get('lat').setValue(params.Lat); \r\n    this.form.get('long').setValue(params.Lng); \r\n\r\n    //const toSelect = this.stations.find(c => c.id == this.stationDetails.id);\r\n    this.form.get('station').setValue( this.stationDetails.id);\r\n  \r\n    this.status = params.status == 'Y' ? true : false;\r\n    this.isAvailable = params.is_available == 1 ? true : false;\r\n  }\r\n  onYesClick(){\r\n    this.onSubmit();\r\n  }\r\n\r\n  onSubmit(){\r\n    let formValues = this.form.value;\r\n    \r\n    let params:any = {\r\n      charger_id : this.mapDetails , \r\n      station_id : this.stationDetails.id , \r\n      name :formValues.name, \r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      landmark:formValues.landmark,\r\n      country:formValues.country.id,\r\n      state:formValues.state.id,\r\n      city:formValues.city.id,\r\n      PIN :formValues.pincode ,\r\n      Lat :formValues.lat, \r\n      Lng :formValues.long,\r\n      is_available :this.isAvailable, \r\n      status :'Y' ,\r\n    }\r\n\r\n    if (this.isEditMode){\r\n      params.id = this.stationDetails.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n    \r\n    \r\n\r\n    if(this.isEditMode){\r\n      this.router.navigate(['/chargingStation/manageChargers/list']);\r\n    }else{\r\n      \r\n      this.chargerService.addChargerToStation(params).subscribe(\r\n        (data:any )=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/chargingStation/manageChargers/list']);\r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.mapDetails.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.countries = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.mapDetails.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.states = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n      \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.mapDetails.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.cities = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n \r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('long').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('long').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n    name=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Serial No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"serialNo\" (change)=\"getChargerBySerialNo()\" required\r\n          autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('serialNo').invalid\">Please enter serial no\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" required autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Station</mat-label>\r\n        <mat-select formControlName=\"station\" readonly>\r\n          <mat-option *ngFor=\"let option of stations\" [value]=\"option.id\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>No Of Guns</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly>\r\n        <mat-error *ngIf=\"form.get('noOfGuns').invalid\">Please enter no of guns\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n        <mat-label>Latitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"lat\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"17\" class=\"pr-4\">\r\n        <mat-label>Longitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"long\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('long').invalid\">Please enter longitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly>\r\n        <mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" readonly>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" readonly>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" readonly>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" readonly>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div fxFlex=\"67\" fxFlex.lt-sm=\"100\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n          (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n          {{isAvailable ? 'Available' : 'Unavailable'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button> -->\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\r\n    </div>\r\n\r\n  </form>\r\n</div>"]}