{"version":3,"sources":["webpack:///src/app/main/asset/charger/product-dispatch/action-dialog/action-dialog.component.ts","webpack:///src/app/main/asset/charger/product-dispatch/action-dialog/action-dialog.component.html","webpack:///src/app/main/asset/charger/product-dispatch/view-dialog/view-dialog.component.ts","webpack:///src/app/main/asset/charger/product-dispatch/view-dialog/view-dialog.component.html","webpack:///src/app/main/asset/charger/product-dispatch/add-list/add-list.component.ts","webpack:///src/app/main/asset/charger/product-dispatch/add-list/add-list.component.html","webpack:///src/app/main/asset/charger/charger-management.module.ts","webpack:///src/app/main/asset/charger/charger-management-routing.module.ts"],"names":["autocompleteObjectValidator","control","value","ActionDialogComponent","fb","chargerService","snackBar","datePipe","dialogRef","data","countryService","isEditMode","status","maxDate","Date","chargerAs","initialize","localStorage","JSON","parse","getItem","params","action","form","group","client_name","name","serial_no","dispatch_date","required","assignValues","close","valid","formValues","transform","is_private","id","modify_by","userId","created_by","getUpdateClientCharger","subscribe","open","recordUpdateMessage","duration","err","errorMessage","getProductDispatch","salesDispatch","get","hasError","setValue","event","checked","ref","chargerAsRef","closeActionPanel","updateStatus","updateChargerAsStatus","onYesClick","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","ViewDialogComponent","$event","stopPropagation","Client","is_enable","AddListComponent","dialog","chargingStationService","displayedColumns","head","selection","clientSearch","nameSearch","serialSearch","modelSearch","statusSearch","charClient","charCPO","charStat","clientCpoStaDetails","filterEntity","filterType","ANYWHERE","getClients","filterValue","target","dataSource","filter","trim","toLowerCase","paginator","firstPage","getAllClientChargers","allChargers","i","length","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteChargerFromClient","deleteMessage","width","autoFocus","panelClass","visibleOption","ev","model_name","exportedData","filteredData","chargerModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","clientList","role_code","undefined","toSelect","getCPOByClient","client_id","filteredOptionsCharClient","controls","valueChanges","pipe","_filterCharClient","option","includes","item","cpoList","stationList","getStationByCPO","cpo_id","filteredOptionsCharCPO","cpo_name","_filterCharCPO","station","filteredOptionsCharStat","station_name","_filterCharStat","numSelected","selected","selected_item","numRows","isAllSelected","check","clear","select","row","isSelected","map","v","charger_id","nick_name","loginid","updatedby","updateNickName","splice","forEach","part","index","theArray","is_enabled","addName","CUSTOM_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","COMPONENTS","COMPONENTS_DYNAMIC","ChargerManagementModule","provide","useValue","imports","declarations","entryComponents","routes","path","loadChildren","then","m","ChargersModule","title","ProductDispatchModule","component","ChargerManagementRoutingModule","forChild","exports"],"mappings":"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","file":"charger-charger-management-module-es5.js","sourcesContent":["import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 1 : 0\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        is_private:this.chargerAs == true? 1:0,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n    this.chargerAs = params.data.is_private = 1 ? true: false;//  is_private:this.chargerAs == true? 1:0,\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"client name\">account_circle</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Name\">account_circle</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Serial number\">help</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">\r\n\t\t\t\t\t\t\thelp</mat-icon>\r\n\t\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1,\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        \r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n  \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"10\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" disabled [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"(click)=\"onYesClick()\">\r\n\t\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { AddNicknameComponent } from '../add-nickname/add-nickname.component';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\nexport class Client {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  serial_no: string;\r\n  client_name: string;\r\n  model_name: string;\r\n  nick_name:string;\r\n  charger_id:number;\r\n  is_enable:boolean = false;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-add-list',\r\n  templateUrl: './add-list.component.html',\r\n  styleUrls: ['./add-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class AddListComponent implements OnInit {\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['select', 'client_name', 'name','nick_name', 'serial_no', 'model_name'];\r\n  head = [['Client Name', 'Name', 'Serial Number', 'Model Name', 'Status']]\r\n  dataSource: MatTableDataSource<Client>;\r\n  selection = new SelectionModel<Client>(true, []);\r\n  localStorage: any;\r\n  //clients : Client[];\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  nameSearch = false;\r\n  serialSearch = false;\r\n  modelSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  localData: any;\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any;\r\n  is_enable:boolean= false;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog, private snackBar: MatSnackBar, private fb: FormBuilder,\r\n    private chargingStationService: ChargingStationService,) {\r\n\r\n    this.form = this.fb.group({\r\n      charClient: ['', [autocompleteObjectValidator()]],\r\n      charCPO: ['', [autocompleteObjectValidator()]],\r\n      charStat: ['', [autocompleteObjectValidator()]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'));\r\n    //this.getAllClientChargers(this.localStorage.userId);\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllClientChargers(id) {\r\n    this.chargerService.getAllClientChargers(id).subscribe(\r\n      (data: any) => {\r\n        if (data != null) {\r\n          this.allChargers = data;\r\n          for (var i = 0; i < this.allChargers.length; i++) {\r\n            if (this.allChargers[i].status == 'N') {\r\n              this.allChargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.allChargers[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.allChargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargerService.deleteChargerFromClient(id, this.localStorage.userId).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getAllClientChargers(this.localStorage.userId);\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'clientSearch') {\r\n      this.clientSearch = !this.clientSearch;\r\n      this.filterEntity.client_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no = \"\";\r\n    }\r\n    if (visibleOption == 'modelSearch') {\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.model_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Client Name': chargerModel.client_name, 'Name': chargerModel.name, 'Serial No': chargerModel.serial_no,\r\n        'Model Name': chargerModel.model_name, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n    XLSX.writeFile(workBook, 'Sales Dispatch.xlsx');\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getClients();\r\n    });\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.client_name, chrger.name, chrger.serial_no, chrger.model_name, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Product Dispatch Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Product Dispatch Report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    if (this.localStorage.role_code != 'END') {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  onClientChange(client_id) {\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  onCPOChange(id) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(id);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station = [];\r\n\r\n    if (this.localStorage.role_code != \"END\") {\r\n      for (var i = 0; i < this.stationList.length; i++) {\r\n        if (id == this.stationList[i].cpo_id) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        const toSelect = this.station[0];\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getAllClientChargers(this.localStorage.userId);\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n  onStationChange(event) {\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    //this.getAllClientChargers(event);\r\n  }\r\n\r\n\r\n  isAllSelected() {\r\n    if(this.dataSource != null){\r\n      const numSelected = this.selection.selected.length;\r\n      const selected_item = this.selection.selected;\r\n      const numRows = this.dataSource.data.length;\r\n      //this.check(selected_item);\r\n      return numSelected === numRows;\r\n    }\r\n    \r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n   \r\n    if (this.isAllSelected()) {\r\n      this.check();\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n    this.check( );\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Client): string {\r\n    if (!row) {\r\n      // this.is_enable = !this.is_enable;\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n  \r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.name + 1}`;\r\n  }\r\n  addName(){\r\n    if(this.selection.selected.length>0){\r\n      const params: any = {\r\n        data: this.selection.selected.map(v=>({id:v.charger_id,nick_name:v.nick_name})),\r\n      }\r\n          params.loginid = this.localStorage.userId;\r\n          params.updatedby = this.localStorage.userId;\r\n      \r\n  \r\n      \r\n         this.chargerService.updateNickName(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.getClients();\r\n             this.selection.clear();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n    }else{\r\n      this.snackBar.open(\"Please select at least one charger\", 'Dismiss', { duration: 5000 });\r\n    }\r\n    }\r\n    \r\n    showOptions(event,row){\r\n      if(event.checked == true){\r\n        row.is_enable = true;\r\n        this.selection.selected.push(row);\r\n        //this.is_enable[row].id = true;\r\n      }else{\r\n        row.is_enable = false;\r\n        for (var i = 0; i < this.selection.selected.length; i++)\r\n          if (this.selection.selected[i].id === row.id) { \r\n              this.selection.selected.splice(i, 1);\r\n              break;\r\n          }\r\n        \r\n      }\r\n    }\r\n    allSelected(event){\r\n      if(event.checked == true){\r\n        this.dataSource.filteredData.forEach(function(part, index, theArray) {\r\n          this.dataSource.filteredData[index].is_enabled = true;\r\n        });\r\n      }\r\n\r\n    }\r\n    check(){\r\n      for(var i=0; i<this.dataSource.filteredData.length;i++){\r\n        this.dataSource.filteredData[i].is_enable = !this.dataSource.filteredData[i].is_enable\r\n      }\r\n      // this.dataSource.filteredData.forEach(function(is_enable, index, theArray) {\r\n      //   this.dataSource.filteredData[index].is_enabled =  !this.dataSource.filteredData[index].is_enabled;\r\n      // });\r\n    }\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">Dispatched Chargers\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div style=\"text-align: left ; margin-left: 10px; margin-bottom:10px;margin-top: 10px;\">\r\n            <!-- <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n               <mat-icon>sim_card_download</mat-icon> \r\n             </button>&nbsp;&nbsp;\r\n             <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n               <mat-icon>picture_as_pdf</mat-icon> \r\n             </button> -->\r\n             <!-- <button mat-mini-fab  color=\"primary\" (click)=\"addName()\"  matTooltip=\"Add Nickname\">\r\n               <mat-icon>add_circle</mat-icon> \r\n             </button> -->\r\n             <button mat-raised-button color=\"primary\" style=\"float:right\" class=\"mr-8\" [disabled]=\"!dataSource || dataSource?.data?.length == 0\"\r\n                        mat-stroked-button matTooltip=\"Add Nickname\" (click)=\"addName()\">\r\n                      <span class=\"ml-2 excelIcon\">Update Nickname</span>\r\n                      </button>\r\n           <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n       </div>\r\n       <mat-card style=\"padding:16px  !important;display:none;\" *ngIf=\"localStorage.role_code != 'END' \">\r\n           <mat-card-content>\r\n               <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n                   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                       <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                           <mat-label>Select Client</mat-label>\r\n                           <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n                           <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                               (optionSelected)='onClientChange($event.option.value.client_id)'>\r\n                               <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                                   {{option.client_name}}\r\n                               </mat-option>\r\n                           </mat-autocomplete>\r\n                           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more\r\n                           </mat-icon>\r\n                           <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                               Please select client\r\n                           </mat-error>\r\n                       </mat-form-field>\r\n       \r\n                       <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                           <mat-label>Select CPO's</mat-label>\r\n                           <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n                           <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                               (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                               <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                                   {{option.cpo_name}}\r\n                               </mat-option>\r\n                           </mat-autocomplete>\r\n                           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                           <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                               Please select CPO\r\n                           </mat-error>\r\n                       </mat-form-field>\r\n       \r\n                       <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                           <mat-label>Select Charging Station</mat-label>\r\n                           <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\" readonly>\r\n                           <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                               (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                               <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                                   {{option.station_name}}\r\n                               </mat-option>\r\n                           </mat-autocomplete>\r\n                           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">\r\n                               expand_more</mat-icon>\r\n                           <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                               Please select charging station\r\n                           </mat-error>\r\n                       </mat-form-field>\r\n                   </div>\r\n                   \r\n               </form>\r\n           </mat-card-content>\r\n       </mat-card>\r\n       \r\n       <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n           <div class=\"content\" style=\"min-width: auto;\">\r\n       \r\n               <div class=\"\">\r\n                   <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                       [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n                       <!-- Name Column -->\r\n                       <ng-container matColumnDef=\"select\">\r\n                           <th mat-header-cell *matHeaderCellDef>\r\n                             <mat-checkbox \r\n                             (change)=\"$event ? masterToggle() : null\" \r\n                                           [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                           [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                           [aria-label]=\"checkboxLabel()\">\r\n                             </mat-checkbox>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let row\">\r\n                             <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                            (change)=\"showOptions($event,row)\" \r\n                                         \r\n                                           [checked]=\"selection.isSelected(row)\"\r\n                                           [aria-label]=\"checkboxLabel(row)\">\r\n                             </mat-checkbox>\r\n                           </td>\r\n                         </ng-container>\r\n                       <ng-container matColumnDef=\"client_name\">\r\n                           <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                               <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                                   &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                                   </mat-icon> </span>\r\n                               <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                   <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                                   </mat-icon>\r\n                               </mat-form-field>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                       </ng-container>\r\n       \r\n                       <ng-container matColumnDef=\"name\">\r\n                           <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                               <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                               </span>\r\n                               <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                   <input matInput placeholder=\" Name\" [(ngModel)]=\"filterEntity.name\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                               </mat-form-field>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                       </ng-container>\r\n                       <ng-container matColumnDef=\"nick_name\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Charger Nickname</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <div *ngIf=\"row.is_enable\">\r\n                                <mat-form-field appearance=\"outline\" class=\"pr-4\" style=\"height:48px;\">\r\n                                    <input matInput placeholder=\"Nickname\" value=\"{{row.nick_name}}\" [disabled]=\"isEnabled\" [(ngModel)]=\"row.nick_name\"\r\n                                        maxlength=\"20\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div *ngIf=\"!row.is_enable\">\r\n                                {{row.nick_name}}\r\n                            </div>\r\n                            \r\n                        </td>\r\n                    </ng-container>\r\n                       <ng-container matColumnDef=\"serial_no\">\r\n                           <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                               <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No\r\n                                   &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search\r\n                                   </mat-icon> </span>\r\n                               <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                   <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                                   </mat-icon>\r\n                               </mat-form-field>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                       </ng-container>\r\n                       <ng-container matColumnDef=\"model_name\">\r\n                           <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                               <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Name\r\n                                   &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                                   </mat-icon> </span>\r\n                               <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                                   <input matInput placeholder=\" Model Name \" [(ngModel)]=\"filterEntity.model_name\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                                   </mat-icon>\r\n                               </mat-form-field>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                       </ng-container>\r\n       \r\n                       <ng-container matColumnDef=\"status\">\r\n                           <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                               <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                               </span>\r\n                               <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                   <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                                   </mat-icon>\r\n                               </mat-form-field>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                               {{row.statusString}} </td>\r\n                       </ng-container>\r\n                       <ng-container matColumnDef=\"action\">\r\n                           <th mat-header-cell *matHeaderCellDef>\r\n                               <span class=\"custom_font_size\">Action</span>\r\n                           </th>\r\n                           <td mat-cell *matCellDef=\"let element\">\r\n                               <!-- <button mat-raised-button color=\"primary\"\r\n                                           (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                                   <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                           style=\"margin-left: 1%;\">Remove</button>  -->\r\n                               <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                                   style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n       \r\n                               <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                                   style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n       \r\n                               <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                                   delete</mat-icon>\r\n                           </td>\r\n                       </ng-container>\r\n                       <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                       <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n       \r\n                       <!-- Row shown when there is no matching data. -->\r\n                       <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n                               <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                               </td>\r\n                           </tr> -->\r\n                   </table>\r\n                   <div style=\"background-color: white;\">\r\n                    <div flex=\"100\" style=\"display: flex;align-items: center;\">\r\n                        <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                        \r\n                        </div>\r\n                   </div>\r\n                  \r\n                 \r\n               </div>\r\n           </div>\r\n       </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ChargerManagementRoutingModule } from './charger-management-routing.module';\r\n// import { CreateComponent } from './create/create.component';\r\n// import { ListComponent } from './list/list.component';\r\n// import { ChargingStationRoutingModule } from './charging-station-routing.module';\r\n//import {MatTableExporterModule} from 'mat-table-exporter';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport {\r\n    NgxMatDatetimePickerModule, \r\n    NgxMatNativeDateModule, \r\n    NgxMatTimepickerModule ,\r\n    NgxMatDateFormats,\r\n    NGX_MAT_DATE_FORMATS,\r\n    NgxMatDateAdapter,\r\n    \r\n  } from '@angular-material-components/datetime-picker';\r\n  const CUSTOM_DATE_FORMATS: NgxMatDateFormats = {\r\n    parse: {\r\n      dateInput: 'l, LTS'\r\n    },\r\n    display: {\r\n      dateInput: 'YYYY-MM-DD HH:mm:ss',\r\n      monthYearLabel: 'MMM YYYY',\r\n      dateA11yLabel: 'LL',\r\n      monthYearA11yLabel: 'MMMM YYYY',\r\n      \r\n    }\r\n  };\r\nconst COMPONENTS =[];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule,FuseSharedModule, ChargerManagementRoutingModule, NgxMatDatetimePickerModule, \r\n        NgxMatNativeDateModule, \r\n        NgxMatTimepickerModule ],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC],\r\n    providers:[\r\n      \r\n        { provide: NGX_MAT_DATE_FORMATS, useValue: CUSTOM_DATE_FORMATS }\r\n    \r\n  ]\r\n})\r\n\r\nexport class ChargerManagementModule{}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddListComponent } from './product-dispatch/add-list/add-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'chargers',\r\n        loadChildren: () => import('./chargers/chargers.module').then(m => m.ChargersModule),\r\n        data: { title: 'charger' }\r\n    },\r\n    {\r\n        path: 'salesDispatch',\r\n        loadChildren: () => import('./product-dispatch/product-dispatch.module').then(m => m.ProductDispatchModule),\r\n        data: { title: 'On Board' }\r\n    },\r\n    {\r\n        path: 'dispatchedChargers',component:AddListComponent,\r\n        data: { title: 'Dispatch Charger' }\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ChargerManagementRoutingModule { }"]}