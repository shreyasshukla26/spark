{"version":3,"sources":["./src/app/main/profile/profile-routing.module.ts","./src/app/main/profile/overview/overview.component.ts","./src/app/main/profile/overview/overview.component.html","./src/app/main/profile/profile.module.ts","./src/app/main/profile/profile-layout/profile-layout.component.ts","./src/app/main/profile/profile-layout/profile-layout.component.html","./src/app/main/profile/settings/settings.component.ts","./src/app/main/profile/settings/settings.component.html","./src/app/main/profile/change-password/change-password.component.ts","./src/app/main/profile/change-password/change-password.component.html"],"names":[],"mappings":"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","file":"app-main-profile-profile-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileLayoutComponent } from './profile-layout/profile-layout.component';\r\nimport { ProfileOverviewComponent } from './overview/overview.component';\r\nimport { ProfileSettingsComponent } from './settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfileLayoutComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'overview', pathMatch: 'full' },\r\n     {\r\n        path: 'overview',\r\n        component: ProfileOverviewComponent,\r\n        data: { title: 'Profile Overview' },\r\n      }\r\n    //   {\r\n    //     path: 'settings',\r\n    //     component: ProfileSettingsComponent,\r\n    //     data: { title: 'Profile Settings' },\r\n    //   },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfileRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-profile-overview',\r\n  templateUrl: './overview.component.html',\r\n})\r\nexport class ProfileOverviewComponent {\r\n  \r\n  localStorage : any;\r\n  userInfo:any;\r\n  selectedIndex=0;\r\n  endUserTab = false;\r\n  cmsUserTab = false;\r\n  userObj: any;\r\n  constructor(private snackBar: MatSnackBar,private accountService: AccountService,private router: Router) {\r\n\r\n  }\r\n  ngOnInit()\r\n   {\r\n    this.initialize();\r\n    this.getUserInfo();\r\n   }\r\n   initialize(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n   }\r\n   getUserInfo(){\r\n    this.accountService.getUserInfo(this.localStorage.userId).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.userInfo = data;\r\n        this.userObj = data;\r\n        if(this.userObj[0].user_type == \"END\"){\r\n          this.endUserTab = true;\r\n          this.cmsUserTab = false;\r\n        }else{\r\n          this.endUserTab = false;\r\n          this.cmsUserTab = true;\r\n        }\r\n      },(err)=>{}\r\n\t\t)\r\n   }\r\n   \r\n}\r\n","<mat-card>\r\n  <mat-tab-group class=\"m--16\">\r\n    <mat-tab label=\"Profile\">\r\n      <div class=\"m-16\">\r\n       <h3>Profile</h3>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"endUserTab\" label=\"Vehicle Details\">\r\n      <div class=\"m-16\">\r\n        <h3>Vehicle Details</h3>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"cmsUserTab\" label=\"Assigned CPO\">\r\n      <div class=\"m-16\">\r\n       <h3>Assigned CPO</h3>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Selected Product\">\r\n      <div class=\"m-16\">\r\n       <h3>Selected Product</h3>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ProfileLayoutComponent } from './profile-layout/profile-layout.component';\r\nimport { ProfileOverviewComponent } from './overview/overview.component';\r\nimport { ProfileSettingsComponent } from './settings/settings.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS = [ProfileLayoutComponent, ProfileOverviewComponent, ProfileSettingsComponent];\r\nconst COMPONENTS_DYNAMIC = [ChangePasswordComponent];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, ProfileRoutingModule,FuseSharedModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class ProfileModule {}\r\n","import { Component,ChangeDetectorRef } from '@angular/core';\r\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\nimport { FormGroup, Validators, FormBuilder,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-profile-layout',\r\n  templateUrl: './profile-layout.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ProfileLayoutComponent {\r\n  localStorage : any;\r\n  userInfo:any;\r\n  userObj: any;\r\n  selectedIndex=0;\r\n  endUserTab = false;\r\n  cmsUserTab = false;\r\n  reactiveForm: FormGroup;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  \r\n\r\n  states:any;\r\n\t constructor(private fb: FormBuilder,public dialog : MatDialog,private accountService: AccountService,\r\n    private snackBar : MatSnackBar,private cdr: ChangeDetectorRef,public countryService: CountriesService) {\r\n      this.reactiveForm = this.fb.group({\r\n        f_name:['', [Validators.required]],\r\n        m_name:['', [Validators.required]],\r\n        l_name:['', [Validators.required]],\r\n        pan:['', [Validators.required]],\r\n        pin:['', [Validators.required]],\r\n        aadhar:['', [Validators.required]],\r\n        address1:['', [Validators.required]],\r\n        address2:['', [Validators.required]],\r\n        alt_mobile:['', [Validators.required]],\r\n        city:['', [Validators.required]],\r\n        state:['', [Validators.required]],\r\n        country:['', [Validators.required]],\r\n        dob:['', [Validators.required]],\r\n        email:['', [Validators.required, Validators.email]],\r\n        employee_code:['', [Validators.required]],\r\n        landmark:['', [Validators.required]],\r\n        mobile:['', [Validators.required]],\r\n        username:['', [Validators.required]]\r\n     \r\n       \r\n      });\r\n   \r\n  }\r\n  ngOnInit()\r\n   {\r\n    this.initialize();\r\n    this.getUserInfo();\r\n   }\r\n   initialize(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    //this.getCountry();\r\n   }\r\n   getUserInfo(){\r\n    this.accountService.getUserInfo(this.localStorage.userId).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.userInfo = data;\r\n        this.userObj = data[0];\r\n        this.getAllCountry();\r\n        this.getAllState(this.userObj.country_id);\r\n        this.getAllCity(this.userObj.state_id);\r\n        this.assignValues(this.userObj);\r\n        if(this.userObj.user_type == \"END\"){\r\n          this.endUserTab = true;\r\n          this.cmsUserTab = false;\r\n        }else{\r\n          this.endUserTab = false;\r\n          this.cmsUserTab = true;\r\n        }\r\n\r\n      },(err)=>{}\r\n\t\t)\r\n   }\r\n   assignValues(userObj){\r\n    this.reactiveForm.get('f_name').setValue(userObj.f_Name);\r\n    this.reactiveForm.get('m_name').setValue(userObj.m_name);\r\n    this.reactiveForm.get('l_name').setValue(userObj.l_Name);\r\n    this.reactiveForm.get('dob').setValue(userObj.dob);\r\n    this.reactiveForm.get('email').setValue(userObj.email);\r\n    this.reactiveForm.get('employee_code').setValue(userObj.employee_code);\r\n    this.reactiveForm.get('username').setValue(userObj.username);\r\n     this.reactiveForm.get('mobile').setValue(userObj.mobile);\r\n     this.reactiveForm.get('alt_mobile').setValue(userObj.alt_mobile);\r\n     this.reactiveForm.get('pan').setValue(userObj.PAN);\r\n     this.reactiveForm.get('aadhar').setValue(userObj.aadhar);\r\n     //this.reactiveForm.get('city').setValue(userObj.city_id);\r\n     //this.reactiveForm.get('state').setValue(userObj.state_id);\r\n     //this.reactiveForm.get('country').setValue(userObj.country_id);\r\n     this.reactiveForm.get('landmark').setValue(userObj.landmark)\r\n     this.reactiveForm.get('pin').setValue(userObj.PIN);\r\n   }\r\n   openDialog(){\r\n    \r\n   // let params = {\r\n    //  action : action,\r\n   //   data : data\r\n    //}\r\n\r\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\r\n      width: '1200px',\r\n     // data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n     // this.getPlantChargers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.reactiveForm.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.reactiveForm.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.reactiveForm.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.reactiveForm.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.reactiveForm.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.reactiveForm.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.reactiveForm),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.reactiveForm.get('state').setValue(\"\");\r\n    this.reactiveForm.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.reactiveForm.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.reactiveForm.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event){\r\n  \r\n   //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        \r\n        this.filteredOptionCity = this.reactiveForm.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.reactiveForm.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.reactiveForm.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.userObj.country_id);\r\n          this.reactiveForm.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.reactiveForm.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.userObj.state_id);\r\n          this.reactiveForm.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.reactiveForm.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.userObj.city_id);\r\n          this.reactiveForm.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.reactiveForm.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n}\r\n","<!--page-header class=\"p-t-32 p-b-48 m-b--24 bg-gray-900\"\r\n             [title]=\"'Personal Profile'\"\r\n             style=\"background-color: #00bcd4 !important;\">\r\n</page-header-->\r\n<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n      <!-- HEADER -->\r\n      <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n          <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\" [@animate]=\"{value:'*',params:{x:'50px'}}\">Personal\r\n            Profile\r\n          </span>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n    <div fxLayout=\"row\" class=\"p-24\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"20\" class=\"pr-4\">\r\n        <mat-card>\r\n          <div class=\"text-center\">\r\n            <img class=\"m-b-8 r-full\" src=\"assets/images/avatar.png\" alt=\"\" width=\"80\">\r\n            <h2 class=\"m-t-0 m-b-8 f-w-400\">{{userObj?.username}}</h2>\r\n            <p class=\"m-t-0 m-b-8\">{{userObj?.email}}</p>\r\n            <button mat-raised-button color=\"accent\" class=\"m-l-8\" (click)=\"openDialog()\">Change Password</button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <div fxFlex=\"80\">\r\n        <mat-card>\r\n          <mat-tab-group class=\"m--16\">\r\n            <mat-tab label=\"Profile\">\r\n              <div>\r\n                <mat-card-content>\r\n                  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n                    <form [formGroup]=\"reactiveForm\" class=\"mat-card mat-elevation-z4  \" fxLayout=\"column\"\r\n                      fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                        <mat-form-field fxFlex=\"33\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>First Name</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"f_name\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('f_name').invalid\">Please enter first name\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field fxFlex=\"33\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Middle Name</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"m_name\">\r\n                          <mat-error *ngIf=\"reactiveForm.get('m_name').invalid\">Please enter middle name\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field fxFlex=\"33\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Last Name</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"l_name\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('l_name').invalid\">Please enter last name\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Date Of Birth</mat-label>\r\n                          <input matInput [matDatepicker]=\"dp3\" formControlName=\"dob\" disabled>\r\n                          <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                          <mat-error *ngIf=\"reactiveForm.get('dob').invalid\">Please enter date of birth\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Email</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"email\" required  style=\"text-transform: none;\">\r\n                          <mat-error *ngIf=\"reactiveForm.get('email').invalid\">Please enter email address\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Employee Code</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"employee_code\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('employee_code').invalid\">Please enter employee code\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>User Name</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"username\" required style=\"text-transform: none;\">\r\n                          <mat-error *ngIf=\"reactiveForm.get('username').invalid\">Please enter user name\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Mobile Number</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"mobile\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('mobile').invalid\">Please enter mobile number\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Alternate Mobile Number</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"alt_mobile\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('alt_mobile').invalid\">Please enter alternative mobile\r\n                            number\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Pan</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"pan\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('pan').invalid\">Please enter pan\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Aadhar Number</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"aadhar\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('aadhar').invalid\">Please enter aadhar number\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                        <mat-divider></mat-divider>\r\n\r\n                      </div>\r\n                      <h3>Address Information</h3>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Address Line 1</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"address1\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('address1').invalid\">Please enter address line\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Address Line 2</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"address2\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('address2').invalid\">Please enter address line\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Pin Code</mat-label>\r\n                          <input matInput placeholder=\" \" formControlName=\"pin\" required (change)=\"getStateCountry()\">\r\n                          <mat-error *ngIf=\"reactiveForm.get('pin').invalid\">Please enter pin code\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"example-full-width pr-4\">\r\n                          <mat-label>City</mat-label>\r\n                          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\">\r\n                          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n                            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                              {{option.name}}\r\n                            </mat-option>\r\n                          </mat-autocomplete>\r\n                            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                          <mat-error *ngIf=\"reactiveForm.get('city').invalid\">Please select city\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"example-full-width pr-4\">\r\n                          <mat-label>State</mat-label>\r\n                          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\">\r\n                          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n                            (optionSelected)='onStateChange($event.option.value)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                              {{option.name}}\r\n                            </mat-option>\r\n                          </mat-autocomplete>\r\n                            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                          <mat-error *ngIf=\"reactiveForm.get('state').invalid\">Please select state\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"example-full-width pr-4\">\r\n                          <mat-label>Country</mat-label>\r\n                          <input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\">\r\n                          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n                            (optionSelected)='onCountryChange($event.option.value)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                              {{option.name}}\r\n                            </mat-option>\r\n                          </mat-autocomplete>\r\n                            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                          <mat-error *ngIf=\"reactiveForm.get('country').invalid\">Please select country\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                        <mat-form-field fxFlex=\"50\" appearance=\"outline\" class=\"pr-4\">\r\n                          <mat-label>Landmark</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"landmark\" required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('landmark').invalid\">Please enter landmark\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </mat-card-content>\r\n              </div>\r\n            </mat-tab>\r\n            <mat-tab *ngIf=\"endUserTab\" label=\"Vehicle Details\">\r\n              <div class=\"m-16\">\r\n                <h3>Vehicle Details</h3>\r\n              </div>\r\n            </mat-tab>\r\n            <mat-tab *ngIf=\"cmsUserTab\" label=\"Assigned CPO\">\r\n              <div class=\"m-16\">\r\n                <h3>Assigned CPO</h3>\r\n              </div>\r\n            </mat-tab>\r\n\r\n          </mat-tab-group>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!--div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div class=\"matero-col\" fxFlex=\"100\" fxFlex.gt-xs=\"50\" fxFlex.gt-sm=\"33.33\" fxFlex.gt-md=\"25\">\r\n    <mat-card>\r\n      <div class=\"text-center\">\r\n        <img class=\"m-b-8 r-full\" src=\"assets/images/avatar.png\" alt=\"\" width=\"80\">\r\n        <h2 class=\"m-t-0 m-b-8 f-w-400\">{{userObj?.username}}</h2>\r\n        <p class=\"m-t-0 m-b-8\">{{userObj?.email}}</p>\r\n        \r\n        <button mat-raised-button color=\"accent\" class=\"m-l-8\" (click)=\"openDialog()\" >Change Password</button>\r\n      </div>\r\n      \r\n    </mat-card>\r\n  </div>\r\n  <div class=\"matero-col\" fxFlex=\"100\" fxFlex.gt-xs=\"50\" fxFlex.gt-sm=\"66.67\" fxFlex.gt-md=\"75\">\r\n    <mat-card>\r\n      <mat-tab-group class=\"m--16\">\r\n        <mat-tab label=\"Profile\">\r\n          <div class=\"m-16\">\r\n            <mat-card-content>\r\n                <form [formGroup]=\"reactiveForm\" class=\"form-field-full\">\r\n                  <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n                    <div fxFlex=\"33\" fxFlex.lt-md=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>First Name</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"f_name\"  required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('f_name').invalid\">Please enter first name\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33\" fxFlex.lt-md=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Middle Name</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"m_name\"  >\r\n                        <mat-error *ngIf=\"reactiveForm.get('m_name').invalid\">Please enter middle name\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33\" fxFlex.lt-md=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Last Name</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"l_name\"  required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('l_name').invalid\">Please enter middle name\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Date of Birth</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp3\" formControlName=\"dob\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                        <mat-error *ngIf=\"reactiveForm.get('dob').invalid\">Please enter date of birth\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div> \r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"email\"\r\n                               required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('email').invalid\">Please enter email address\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Employee Code</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"employee_code\"\r\n                        required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('employee_code').invalid\">Please enter employee code\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>User Name</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"username\"\r\n                        required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('username').invalid\">Please enter user name\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                        <mat-form-field>\r\n                          <mat-label>Mobile Number</mat-label>\r\n                          <input matInput placeholder=\"\" formControlName=\"mobile\"\r\n                          required>\r\n                          <mat-error *ngIf=\"reactiveForm.get('mobile').invalid\">Please enter mobile number\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Alternate Mobile Number</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"alt_mobile\"\r\n                        required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('alt_mobile').invalid\">Please enter  alternative mobile number\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                   \r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                        <mat-label>Pan</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"pan\"\r\n                               required>\r\n                        <mat-error *ngIf=\"reactiveForm.get('pan').invalid\">Please enter pan\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>    \r\n                    <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                      <mat-form-field>\r\n                      <mat-label>Aadhar Number</mat-label>\r\n                      <input matInput placeholder=\"\" formControlName=\"aadhar\"\r\n                      required>\r\n                      <mat-error *ngIf=\"reactiveForm.get('aadhar').invalid\">Please enter addhar number\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                </div>\r\n                <mat-divider></mat-divider>\r\n          <h3>Address Information</h3>\r\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n            <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field>\r\n                  <mat-label>Address Line 1</mat-label>\r\n                  <input matInput placeholder=\"\" formControlName=\"address1\"\r\n                         required>\r\n                  <mat-error *ngIf=\"reactiveForm.get('address1').invalid\">Please enter address line\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field>\r\n                  <mat-label>Address Line 2</mat-label>\r\n                  <input matInput placeholder=\"\" formControlName=\"address2\"\r\n                         required>\r\n                  <mat-error *ngIf=\"reactiveForm.get('address2').invalid\">Please enter address line \r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field>\r\n                  <mat-label>Pin code</mat-label>\r\n                  <input matInput placeholder=\" \" formControlName=\"pin\"\r\n                         required>\r\n                  <mat-error *ngIf=\"reactiveForm.get('pin').invalid\">Please enter pin code\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>City</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"city\"  [matAutocomplete]=\"cityAuto\">\r\n                  <mat-autocomplete #cityAuto=\"matAutocomplete\"  [displayWith]=\"displayCity\">\r\n                    <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                        {{option}}\r\n                      </mat-option>\r\n                  </mat-autocomplete>\r\n                  <mat-error *ngIf=\"reactiveForm.get('city').invalid\">Please select city\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>State</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"state\"  [matAutocomplete]=\"stateAuto\">\r\n                  <mat-autocomplete #stateAuto=\"matAutocomplete\"  [displayWith]=\"displayState\"\r\n                  (optionSelected)='onStateChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                        {{option.StateName}}\r\n                      </mat-option>\r\n                  </mat-autocomplete>\r\n                  <mat-error *ngIf=\"reactiveForm.get('state').invalid\">Please select state\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              \r\n              </div>\r\n              <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>Country</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"country\"  [matAutocomplete]=\"countryAuto\">\r\n                  <mat-autocomplete #countryAuto=\"matAutocomplete\"  [displayWith]=\"displayCountry\"\r\n                  (optionSelected)='onCountryChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionCountry | async\"    [value]=\"option\">\r\n                        {{option.CountryName}}\r\n                      </mat-option>\r\n                  </mat-autocomplete>\r\n                  <mat-error *ngIf=\"reactiveForm.get('country').invalid\">Please select country\r\n                  </mat-error>\r\n                </mat-form-field>\r\n               \r\n              </div>\r\n              <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n                <mat-form-field>\r\n                  <mat-label>Landmark</mat-label>\r\n                  <input matInput placeholder=\"\" formControlName=\"landmark\"\r\n                         required>\r\n                  <mat-error *ngIf=\"reactiveForm.get('landmark').invalid\">Please enter landmark\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n          </div>\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                    <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n                  </div>\r\n            \r\n                </form>\r\n              </mat-card-content>\r\n            \r\n            \r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab *ngIf=\"endUserTab\" label=\"Vehicle Details\">\r\n          <div class=\"m-16\">\r\n            <h3>Vehicle Details</h3>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab *ngIf=\"cmsUserTab\" label=\"Assigned CPO\">\r\n          <div class=\"m-16\">\r\n           <h3>Assigned CPO</h3>\r\n          </div>\r\n        </mat-tab>\r\n       \r\n      </mat-tab-group>\r\n    </mat-card>\r\n  </div>\r\n</div-->","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\n@Component({\r\n  selector: 'app-profile-settings',\r\n  templateUrl: './settings.component.html',\r\n})\r\nexport class ProfileSettingsComponent implements OnInit {\r\n  reactiveForm: FormGroup;\r\n  localStorage : any;\r\n  userInfo:any;\r\n  userObj: any;\r\n  constructor(private fb: FormBuilder,private accountService: AccountService,) {\r\n    this.reactiveForm = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n       mobile: ['', [Validators.required]],\r\n      tele: ['', [Validators.required]],\r\n     \r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getUserInfo();\r\n  }\r\n  initialize(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n   }\r\n   getUserInfo(){\r\n    this.accountService.getUserInfo(this.localStorage.userId).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.userObj = data[0];\r\n       this.assignValues(this.userObj);\r\n\r\n      },(err)=>{}\r\n\t\t)\r\n   }\r\n   assignValues(userObj){\r\n    this.reactiveForm.get('username').setValue(userObj.username);\r\n    this.reactiveForm.get('email').setValue(userObj.email);\r\n    this.reactiveForm.get('mobile').setValue(userObj.mobile);\r\n    this.reactiveForm.get('tele').setValue(userObj.alt_mobile);\r\n   }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-title>Edit Profile</mat-card-title>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"reactiveForm\" class=\"form-field-full\">\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n        <div fxFlex=\"50\" fxFlex.lt-md=\"100\">\r\n          <mat-form-field>\r\n            <mat-label>Username</mat-label>\r\n            <input matInput placeholder=\"Simple placeholder\" formControlName=\"username\" readonly required>\r\n            <mat-error *ngIf=\"reactiveForm.get('username').invalid\">Please enter username\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"50\" fxFlex.lt-md=\"100\">\r\n          <mat-form-field>\r\n            <mat-label>Email</mat-label>\r\n            <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" readonly required>\r\n            <mat-error *ngIf=\"reactiveForm.get('email').invalid\">\r\n              {{getErrorMessage(reactiveForm)}}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"50\" fxFlex.lt-md=\"100\">\r\n          <mat-form-field>\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"mobile\" required>\r\n            <mat-icon matSuffix>smartphone</mat-icon>\r\n            <mat-error *ngIf=\"reactiveForm.get('mobile').invalid\">Please enter mobile</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"50\" fxFlex.lt-md=\"100\">\r\n          <mat-form-field>\r\n            <mat-label>Tele</mat-label>\r\n            <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"tele\" required>\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"reactiveForm.get('tele').invalid\">Please enter tele</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n      </div>\r\n\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  logs:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  constructor(private fb: FormBuilder,private snackBar: MatSnackBar,private accountService: AccountService,\r\n    public dialogRef: MatDialogRef<ChangePasswordComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n   // this.params = this.data;\r\n    \r\n    //this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      currentPassword: ['' ],\r\n      newPassword: ['', [Validators.required]],\r\n      cnPassword: ['',[this.confirmValidator] ]\r\n      \r\n    });\r\n\r\n   \r\n   \r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType(){\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType(){\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n\r\n  close() {\r\n     this.dialogRef.close();\r\n  }\r\n\r\n  \r\n\r\n  onYesClick(){\r\n    //if(this.form.valid){\r\n         \r\n      let formValues = this.form.value;\r\n      let formMobileValues = this.form.value;\r\n      let params = {\r\n        id:this.localStorage.userId,\r\n        password: formValues.newPassword,\r\n        registration_origin: \"WEB\",\r\n        modify_by: this.localStorage.userId,\r\n       \r\n      }\r\n      //\r\n      this.accountService.updatePassword(params).subscribe((res:any)=>{\r\n        //\r\n        this.logs = res;\r\n          this.snackBar.open(res.message, 'Dismiss', { duration: 3000 });\r\n        \r\n       },(err)=>{\r\n        //this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n      // this.router.navigateByUrl('/login');   \r\n    })\r\n\r\n\r\n    // }else{\r\n    // //  this.snackBar.open(MessageConstant.validOTPError, 'Dismiss', { duration: 5000 });\r\n    // }\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    \r\n    this.form.get('currentPassword').setValue(params.data.currentPassword);\r\n    this.form.get('newPassword').setValue(params.data.newPassword); \r\n    \r\n  }\r\n\r\n\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n\r\n\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <mat-card>\r\n\r\n    <form [formGroup]=\"form\" class=\" \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field fxFlex=\"100\" appearance=\"outline\" class=\"example-full-width pr-4\">\r\n          <mat-label>Current Password</mat-label>\r\n          <input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\"\r\n            formControlName=\"currentPassword\" required style=\"text-transform: none;\">\r\n          <mat-icon (click)=\"togglePasswordFieldType()\" matSuffix>{{isPasswordFieldType ? 'visibility_off' :\r\n            'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"form.get('currentPassword').invalid\">Please enter current password\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field fxFlex=\"100\" appearance=\"outline\" class=\"example-full-width pr-4\">\r\n          <mat-label>New Password</mat-label>\r\n          <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n            formControlName=\"newPassword\" required style=\"text-transform: none;\">\r\n          <mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix>{{isPasswordConfirmFieldType ? 'visibility_off'\r\n            : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"form.get('newPassword').invalid\">Please enter new password\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field fxFlex=\"100\" appearance=\"outline\" class=\"example-full-width pr-4\">\r\n          <mat-label>Confirm Password</mat-label>\r\n          <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n            formControlName=\"cnPassword\" required style=\"text-transform: none;\">\r\n          <mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix>{{isPasswordConfirmFieldType ? 'visibility_off'\r\n            : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cnPassword').invalid\">Please enter confirm password\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('cnPassword').hasError('confirm')\">Password is inconsistent!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"m-t-8\" (click)=\"close()\"\r\n          style=\"margin-left: 1%;\">Cancel</button>\r\n      </div>\r\n    </form>\r\n\r\n  </mat-card>\r\n</div>"],"sourceRoot":"webpack:///"}