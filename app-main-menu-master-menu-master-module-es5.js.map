{"version":3,"sources":["webpack:///src/app/main/menu-master/menu-master-crud/routes.ts","webpack:///src/app/main/menu-master/menu-master-routing.module.ts","webpack:///src/app/main/menu-master/create/create.component.ts","webpack:///src/app/main/menu-master/create/create.component.html","webpack:///src/app/main/menu-master/action-dialog/action-dialog.component.ts","webpack:///src/app/main/menu-master/action-dialog/action-dialog.component.html","webpack:///src/app/main/menu-master/menu-master-crud/menu-master-crud.component.ts","webpack:///src/app/main/menu-master/menu-master-crud/menu-master-crud.component.html","webpack:///src/app/main/menu-master/list/list.component.ts","webpack:///src/app/main/menu-master/list/list.component.html","webpack:///src/app/main/menu-master/menu-master.module.ts","webpack:///src/app/main/menu-master/view-dialog/view-dialog.component.ts","webpack:///src/app/main/menu-master/view-dialog/view-dialog.component.html"],"names":["TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","routes","children","MenuMasterRoutingModule","forChild","imports","exports","autocompleteObjectValidator","control","value","CreateComponent","fb","snackBar","router","menuMasterService","status","initialize","localStorage","JSON","parse","getItem","form","group","nav_level","required","project","parent_id","nav_id","title","pattern","type","icon","icon_url","url","display_ord","getNavLevel","getProject","getType","getMenuIcon","formValues","get","setValue","clearValidators","setValidators","valid","params","project_id","id","display_order","created_by","userId","create","subscribe","resp","open","menuMasterCreate","duration","navigate","message","err","errorMessage","formInvalid","hasError","data","next_display_order","filteredOptionsNavLevel","controls","valueChanges","pipe","_filterNavLevel","$navLevel_id","getParentByNavLevel","filterValue","toString","toLowerCase","filter","option","includes","item","filteredOptionsProject","code","_filterProject","getMenuType","menuType","filteredOptionsMenuType","_filterMenuType","menuIcon","filteredOptionsMenuIcon","name","_filterMenuIcon","navLevel_id","parentId","filteredOptionsParentId","_filterParentId","event","checked","active","onSubmit","$event","preventDefault","onNavLevelChange","updateStatus","selector","templateUrl","styleUrls","ActionDialogComponent","dialogRef","isEditMode","menuArray","action","assignValues","close","modify_by","update","recordUpdateMessage","toSelect","find","c","closeActionPanel","onYesClick","encapsulation","None","animations","MenuMasterCrudComponent","cdr","_utilityService","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","undefined","y","objectChildData","isDefaultRoutePermeted","z","push","label","link","activeMenuItems$","menuItemSelecte","detectChanges","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","MenuMaster","ListComponent","dialog","displayedColumns","head","titleSearch","navlevelSearch","typeSearch","disp_ordSearch","iconSearch","urlSearch","nav_idSearch","statusSearch","getMenuMaster","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","getAllMenus","menuMasterData","i","length","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteMessage","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","exportedData","filteredData","menuMaster","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","COMPONENTS","COMPONENTS_DYNAMIC","MenuMasterModule","declarations","entryComponents","ViewDialogComponent"],"mappings":"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","file":"app-main-menu-master-menu-master-module-es5.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","// import {NgModule} from '@angular/core';\r\n// import { Routes, RouterModule } from '@angular/router';\r\n// import { CreateComponent } from './create/create.component';\r\n// import { EditComponent } from './edit/edit.component';\r\n// import { ListComponent } from './list/list.component';\r\n\r\n// const routes : Routes = [\r\n//     { path : 'create', component : CreateComponent},\r\n//     { path : 'edit/:id', component : EditComponent},\r\n//     { path : 'list', component : ListComponent},\r\n//     { path : '', redirectTo : 'list',pathMatch:'full'}\r\n// ]\r\n\r\n// @NgModule({\r\n//     imports : [RouterModule.forChild(routes)],\r\n//     exports : [RouterModule]\r\n// })\r\n\r\n// export class ChargingModelRoutingModule{}\r\n\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenuMasterCrudComponent } from './menu-master-crud/menu-master-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './menu-master-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : MenuMasterCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class MenuMasterRoutingModule{}","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level:any;\r\n  display_order:any;\r\n  project:any;\r\n  menuType:any;\r\n  menuIcon:any;\r\n  parentId:any;\r\n  status = false;\r\n  \r\n  filteredOptionsNavLevel : Observable<any[]>;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  filteredOptionsMenuType : Observable<any[]>;\r\n  filteredOptionsMenuIcon : Observable<any[]>;\r\n  filteredOptionsParentId : Observable<any[]>;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n  \r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router,private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize(); \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['',[autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: ['', []],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.getNavLevel();\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    let formValues = this.form.value;\r\n    if(formValues.nav_level == \"1\" ){\r\n      this.form.get('parent_id').setValue(null);\r\n      this.form.get('parent_id').clearValidators();\r\n    }else{\r\n      this.form.get('parent_id').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if (this.form.valid) {\r\n      //console.log(formValues);\r\n      let params = {\r\n        \r\n        nav_level:formValues.nav_level,\r\n        project_id:formValues.project.id,\r\n        parent_id: formValues.parent_id == \"\" ? null  : formValues.parent_id.id,\r\n        nav_id:formValues.nav_id,\r\n        title:formValues.title,\r\n        type:formValues.type.type,\r\n        icon:formValues.icon.icon,\r\n        icon_url:formValues.icon_url,\r\n        url:formValues.url == \"\" ? null : formValues.url,\r\n        display_order:formValues.display_ord,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n      //console.log(params)\r\n      this.menuMasterService.create(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            //console.log(params,resp.data);\r\n            this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/menuManagement/crud/list/']);\r\n          }else{\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n\r\n        },(err) =>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n         }\r\n      );\r\n    }else{\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getNavLevel(){\r\n    this.menuMasterService.getNavLevel().subscribe(\r\n      (resp:any) =>{\r\n        if(resp.status == true){\r\n          this.nav_level = resp.data.nav_level;\r\n          this.display_order = resp.data.next_display_order;\r\n          //console.log('navDrop',this.nav_level, this.display_order )\r\n          this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value),\r\n            map(value => value ? this._filterNavLevel(value) : this.nav_level)\r\n          );\r\n\r\n        }\r\n      },(err) => { }\r\n    );\r\n    //this.getParentByNavLevel(this.nav_level);\r\n  }\r\n  onNavLevelChange($navLevel_id){\r\n    if($navLevel_id == '1'){\r\n      this.form.get('parent_id').setValue(null);\r\n      this.form.get('parent_id').clearValidators();\r\n    }\r\n    this.form.get('parent_id').setValue('');\r\n    this.getParentByNavLevel($navLevel_id);\r\n    this.form.get('display_ord').setValue( this.display_order);\r\n  }\r\n  private _filterNavLevel(value:string): any[] {\r\n    const filterValue = value.toString().toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string{\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject(){\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp:any) =>{\r\n        if(resp != null){\r\n          this.project = resp;\r\n          this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.code),\r\n            map(code => code ? this._filterProject(code) : this.project)\r\n          );\r\n\r\n        }\r\n      },(err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(code: string): any[] {\r\n    const filterValue = code.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string{\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType(){\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp:any) =>{\r\n        if(resp.status == true){\r\n          this.menuType = resp.data;\r\n          this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.type),\r\n            map(type => type ? this._filterMenuType(type) : this.menuType)\r\n          );\r\n\r\n        }\r\n      },(err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(type: string): any[] {\r\n    const filterValue = type.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string{\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon(){\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp:any) =>{\r\n        if(resp.status == true){\r\n          this.menuIcon = resp.data;\r\n          this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.icon),\r\n            map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n          );\r\n\r\n        }\r\n      },(err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option => option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string{\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id){\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp:any) =>{\r\n        if(resp.status == true){\r\n          this.parentId = resp.data;\r\n          this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n            map(title => title ? this._filterParentId(title) : this.parentId)\r\n          );\r\n\r\n        }\r\n      },(err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(title: string): any[] {\r\n    const filterValue = title.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string{\r\n    return item && item.title ? item.title : '';\r\n  }\r\n\r\n  \r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\" required\r\n\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\">\r\n\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\" \r\n\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\" >\r\n\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t<input type=\"search\" matInput formControlName=\"parent_id\" autocomplete=\"off\" \r\n\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\">\r\n\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t<input type=\"search\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.code}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" required\r\n\t\t\t\t\tautocomplete=\"off\" style=\"text-transform:none\">\r\n\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" required autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"typeAuto\">\r\n\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.type}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\"  autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"iconAuto\">\r\n\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.icon}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\tstyle=\"text-transform:none\">\r\n\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" style=\"text-transform:none\" >\r\n\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('url').errors?.required\">Please enter url</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" required autocomplete=\"off\" type=\"number\" min=\"0\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').errors?.required\">Please enter display order\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\" routerLink=\"menuManagement/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level: any;\r\n  project: any;\r\n  menuType: any;\r\n  menuIcon: any;\r\n  parentId: any;\r\n  display_order:any;\r\n  status = false;\r\n  filteredOptionsNavLevel: Observable<any[]>;\r\n  filteredOptionsProject: Observable<any[]>;\r\n  filteredOptionsMenuType: Observable<any[]>;\r\n  filteredOptionsMenuIcon: Observable<any[]>;\r\n  filteredOptionsParentId: Observable<any[]>;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private menuMasterService: MenuMasterService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['',[autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: [''],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.getNavLevel();\r\n    this.getParentByNavLevel(this.params.data.nav_level);\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    //console.log(formValues); \r\n    if(formValues.nav_level == 1 ){\r\n      this.form.get('parent_id').setValue(null);\r\n      this.form.get('parent_id').clearValidators();\r\n    }\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      const params: any = {\r\n        nav_level: formValues.nav_level,\r\n        project_id: formValues.project.id,\r\n        parent_id: formValues.parent_id == null ? null  : formValues.parent_id.id,\r\n        nav_id: formValues.nav_id,\r\n        title: formValues.title,\r\n        type: formValues.type.type,\r\n        icon: formValues.icon.icon,\r\n        icon_url: formValues.icon_url,\r\n        url: formValues.url == \"\" ? null : formValues.url,\r\n        display_order: formValues.display_ord,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n      \r\n  \r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        this.menuMasterService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n                this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                this.dialogRef.close();\r\n                \r\n            }else{\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n            \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.menuMasterService.create(params).subscribe(\r\n          (resp: any) => {\r\n            this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }else{\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n      return form.get('email').hasError('required')\r\n        ? 'You must enter a value'\r\n        : form.get('email').hasError('email')\r\n          ? 'Not a valid email'\r\n          : '';\r\n    }\r\n\r\n    assignValues(params) {\r\n      this.form.get('nav_id').setValue(params.data.nav_id);\r\n      this.form.get('title').setValue(this.params.data.title);\r\n      this.form.get('icon_url').setValue(params.data.icon_url);\r\n      this.form.get('url').setValue(params.data.url);\r\n      this.form.get('display_ord').setValue(params.data.display_order);\r\n      this.status = this.params.data.status == 'Y' ? true : false;\r\n    }\r\n\r\n    getNavLevel(){\r\n      this.menuMasterService.getNavLevel().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.nav_level =resp.data.nav_level;\r\n            //this.display_order = resp.data.next_display_order;\r\n            if(this.isEditMode){\r\n                const toSelect = this.nav_level.find(c => c == this.params.data.nav_level);\r\n                this.form.get('nav_level').setValue(toSelect);\r\n              }\r\n              this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value),\r\n                map(value => value ? this._filterNavLevel(value) : this.nav_level)\r\n              );\r\n          }\r\n        }, (err) => { }\r\n      );\r\n      \r\n\r\n    }\r\n    onNavLevelChange(navLevel_id){\r\n      //console.log($navLevel_id);\r\n      this.form.get('parent_id').setValue('');\r\n      this.getParentByNavLevel(navLevel_id);\r\n      //this.form.get('display_ord').setValue( this.display_order);\r\n    }\r\n  private _filterNavLevel(value: string): any[] {\r\n    const filterValue = value.toString().toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string {\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n           this.form.get('project').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.code),\r\n              map(code => code ? this._filterProject(code) : this.project)\r\n            );\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(code: string): any[] {\r\n    const filterValue = code.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string {\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType() {\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuType = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuType.find(c => c.type == this.params.data.type);\r\n           this.form.get('type').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.type),\r\n              map(name => name ? this._filterMenuType(name) : this.menuType)\r\n            );  \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string {\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon() {\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuIcon = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuIcon.find(c => c.icon == this.params.data.icon);\r\n           this.form.get('icon').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.icon),\r\n              map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n            ); \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option =>  option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string {\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id) {\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.parentId = resp.data;\r\n          if(this.isEditMode){\r\n                if(navLevel_id != 1){\r\n                  const toSelect = this.parentId.find(c => c.id == this.params.data.parent_id);\r\n                 this.form.get('parent_id').setValue(toSelect);\r\n               }else{\r\n                this.form.get('parent_id').setValue(null);\r\n                this.form.get('parent_id').clearValidators();\r\n               }\r\n          }\r\n           this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n              map(name => name ? this._filterParentId(name) : this.parentId)\r\n            );\r\n          \r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string {\r\n    return item && item.title ? item.title : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\t\t<form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\">\r\n\t\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\"\r\n\t\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"parent_id\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\">\r\n\t\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.code}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" required autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform:none\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"typeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.type}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"iconAuto\">\r\n\t\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.icon}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform: none\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" style=\"text-transform: none\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('url').invalid\">Please enter url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').invalid\">Please enter display order\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t{{isEditMode? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\r\n\t</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-menu-master-crud',\r\n  templateUrl: './menu-master-crud.component.html',\r\n  styleUrls: ['./menu-master-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class MenuMasterCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Menu Master', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"menuManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"menuMaster\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Menu Master', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/menuManagement/crud/crud/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nexport class MenuMaster {\r\n  id: number;\r\n  nav_level: number;\r\n  project_id: number;\r\n  nav_id: string;\r\n  title: string;\r\n  type: string;\r\n  icon: string;\r\n  icon_url: string;\r\n  url: string;\r\n  display_order: number;\r\n  parent_id: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: MenuMaster;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['nav_level', 'title', 'type', 'icon', 'url', 'status', 'action'];\r\n  head = [['Title', 'Type', 'Display Order', 'Icon', 'Url', 'Nav Level', 'Nav Id', 'Status']]\r\n  dataSource: MatTableDataSource<MenuMaster>;\r\n  menuMasterData: MenuMaster[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dialogRef: any;\r\n  titleSearch = false;\r\n  navlevelSearch = false;\r\n  typeSearch = false;\r\n  disp_ordSearch = false;\r\n  iconSearch = false;\r\n  urlSearch = false;\r\n  nav_idSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(public dialog: MatDialog, private menuMasterService: MenuMasterService,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getMenuMaster();\r\n    this.filterEntity = new MenuMaster();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getMenuMaster() {\r\n    this.menuMasterService.getAllMenus().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuMasterData = resp.data;\r\n          for (var i = 0; i < this.menuMasterData.length; i++) {\r\n            if (this.menuMasterData[i].status == 'N') {\r\n              this.menuMasterData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.menuMasterData[i].statusString = 'Active';\r\n            }\r\n            if(this.menuMasterData[i].title == null ){\r\n              this.menuMasterData[i].title = '';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.menuMasterData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.menuMasterService.delete(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.getMenuMaster();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n            }\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getMenuMaster();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getMenuMaster();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'titleSearch') {\r\n      this.titleSearch = !this.titleSearch;\r\n      this.filterEntity.title = '';\r\n    }\r\n    if (visibleOption == 'typeSearch') {\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.type = ''\r\n    }\r\n    if (visibleOption == 'disp_ordSearch') {\r\n      this.disp_ordSearch = !this.disp_ordSearch;\r\n      this.filterEntity.display_order = null;\r\n    }\r\n    if (visibleOption == 'iconSearch') {\r\n      this.iconSearch = !this.iconSearch;\r\n      this.filterEntity.icon = '';\r\n    }\r\n    if (visibleOption == 'urlSearch') {\r\n      this.urlSearch = !this.urlSearch;\r\n      this.filterEntity.url = '';\r\n    }\r\n    if (visibleOption == 'nav_idSearch') {\r\n      this.nav_idSearch = !this.nav_idSearch;\r\n      this.filterEntity.nav_id = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if (visibleOption == 'navlevelSearch') {\r\n      this.navlevelSearch = !this.navlevelSearch;\r\n      this.filterEntity.nav_level = null;\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var menuMaster = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Title': menuMaster.title, 'Type': menuMaster.type, 'Display Order': menuMaster.display_order,\r\n        'Icon': menuMaster.icon, 'Url ': menuMaster.url, 'Nav Level': menuMaster.nav_level,\r\n        'Nav ID': menuMaster.nav_id, 'Status': menuMaster.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'MenuMaster.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var menuMaster = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [menuMaster.title, menuMaster.type, menuMaster.display_order, menuMaster.icon, menuMaster.url, menuMaster.nav_level,\r\n      menuMaster.nav_id, menuMaster.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('MenuMaster Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not For Public Use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('MenuMaster report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <mat-table  [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table\r\n        [dataSource]=\"dataSource\" matSort matTableFilter>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"title\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!titleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Title &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('titleSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"titleSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Title \" [(ngModel)]=\"filterEntity.title\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('titleSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.title}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"nav_level\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!navlevelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Nav Level\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('navlevelSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"navlevelSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\"Nav Level \" [(ngModel)]=\"filterEntity.nav_level\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('navlevelSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.nav_level}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"type\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Menu Type\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Type\" [(ngModel)]=\"filterEntity.type\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.type}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"icon\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!iconSearch\" class=\"custom_font_size\" style=\"display: flex;\">Icon\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('iconSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"iconSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Icon\" [(ngModel)]=\"filterEntity.icon\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('iconSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.icon}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"url\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!urlSearch\" class=\"custom_font_size\" style=\"display: flex;\">Url\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"urlSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Url \" [(ngModel)]=\"filterEntity.url\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.url}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"status\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                {{row.statusString}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef >\r\n                <span class=\"custom_font_size\">Action</span>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let element\">\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                    style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                    style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                    delete</mat-icon>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n        <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { MenuMasterRoutingModule } from './menu-master-routing.module';\r\nimport { MenuMasterCrudComponent } from './menu-master-crud/menu-master-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ MenuMasterCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, MenuMasterRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class MenuMasterModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level:any;\r\n  project:any;\r\n  menuType:any;\r\n  menuIcon:any;\r\n  parentId:any;\r\n  display_order:any;\r\n  filteredOptionsNavLevel : Observable<any[]>;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  filteredOptionsMenuType : Observable<any[]>;\r\n  filteredOptionsMenuIcon : Observable<any[]>;\r\n  filteredOptionsParentId : Observable<any[]>;\r\n  status = false;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router,private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      // code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      //description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: ['', [Validators.required]],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getNavLevel();\r\n    this.getParentByNavLevel(this.params.data.nav_level);\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n     this.form.get('nav_id').setValue(params.data.nav_id);\r\n     this.form.get('title').setValue(this.params.data.title);\r\n     this.form.get('icon_url').setValue(params.data.icon_url);\r\n     this.form.get('url').setValue(params.data.url);\r\n     this.form.get('display_ord').setValue(params.data.display_order);\r\n     this.status = this.params.data.status == 'Y' ? true : false; \r\n  }\r\n\r\n getNavLevel(){\r\n      this.menuMasterService.getNavLevel().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.nav_level =resp.data.nav_level;\r\n            //this.display_order = resp.data.next_display_order;\r\n            if(this.isEditMode){\r\n                const toSelect = this.nav_level.find(c => c == this.params.data.nav_level);\r\n                this.form.get('nav_level').setValue(toSelect);\r\n                this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value),\r\n                map(name => name ? this._filterNavLevel(name) : this.nav_level)\r\n              );\r\n            }\r\n\r\n          }\r\n        }, (err) => { }\r\n      );\r\n\r\n    }\r\n  onNavLevelChange($navLevel_id){\r\n    //console.log($navLevel_id);\r\n    this.form.get('parent_id').setValue('');\r\n    this.getParentByNavLevel($navLevel_id);\r\n    //this.form.get('display_ord').setValue( this.display_order);\r\n  }\r\n  private _filterNavLevel(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string{\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n           this.form.get('project').setValue(toSelect);\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.code),\r\n              map(name => name ? this._filterProject(name) : this.project)\r\n            );\r\n          }\r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string{\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType() {\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuType = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuType.find(c => c.type == this.params.data.type);\r\n           this.form.get('type').setValue(toSelect);\r\n           this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.type),\r\n              map(name => name ? this._filterMenuType(name) : this.menuType)\r\n            );\r\n\r\n          }\r\n          \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string{\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon() {\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuIcon = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuIcon.find(c => c.icon == this.params.data.icon);\r\n           this.form.get('icon').setValue(toSelect);\r\n           this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.icon),\r\n              map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n            );\r\n          }\r\n          \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option => option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string{\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id) {\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.parentId = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.parentId.find(c => c.id == this.params.data.parent_id);\r\n           this.form.get('parent_id').setValue(toSelect);\r\n           this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n              map(name => name ? this._filterParentId(name) : this.parentId)\r\n            );\r\n          }\r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string{\r\n    return item && item.title ? item.title : '';\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white; \" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Menu Master</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\"\r\n\t\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"parent_id\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"project\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" autocomplete=\"off\" readonly\r\n\t\t\t\t\tstyle=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" autocomplete=\"off\" [matAutocomplete]=\"typeAuto\"\r\n\t\t\t\t\t\treadonly>\r\n\t\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\" autocomplete=\"off\" [matAutocomplete]=\"iconAuto\"\r\n\t\t\t\t\t\treadonly>\r\n\t\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\t\t\treadonly style=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" readonly style=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('url').errors?.required\">Please enter url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').errors?.required\">Please enter display order\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement [disabled]=\"true\">\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>"]}