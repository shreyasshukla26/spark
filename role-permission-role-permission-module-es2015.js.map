{"version":3,"sources":["./src/app/main/user-management/role-permission/create/create.component.ts","./src/app/main/user-management/role-permission/create/create.component.html","./src/app/main/user-management/role-permission/action-dialog/action-dialog.component.ts","./src/app/main/user-management/role-permission/action-dialog/action-dialog.component.html","./src/app/shared/services/rfid/rfid.service.ts","./src/app/main/user-management/role-permission/role-permission-routing.module.ts","./src/app/main/user-management/role-permission/role-permission-crud/routes.ts","./src/app/main/user-management/role-permission/role-permission-crud/role-permission-crud.component.ts","./src/app/main/user-management/role-permission/role-permission-crud/role-permission-crud.component.html","./src/app/main/user-management/role-permission/role-permission.module.ts","./src/app/main/user-management/role-permission/list/list.component.ts","./src/app/main/user-management/role-permission/list/list.component.html"],"names":[],"mappings":"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","file":"role-permission-role-permission-module-es2015.js","sourcesContent":["import { Component, OnInit ,Injectable} from '@angular/core';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport { Validators, FormBuilder, FormGroup,FormControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\ninterface RoleType {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport class TodoItemNode {\r\n  children: TodoItemNode[];\r\n  item: string;\r\n  actionNode:ActionNode[];\r\n}\r\nexport class ActionNode{\r\n  add:boolean;\r\n  delete:boolean;\r\n  download : boolean;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n  actionAll : ActionMenuNode[];\r\n}\r\nexport class ActionMenuNode{\r\n  add:boolean;\r\n  delete:boolean;\r\n  download : boolean;\r\n  selectAll:boolean;\r\n}\r\n/**\r\n * The Json object for to-do list data.\r\n */\r\nconst TREE_DATA = {\r\n  'Home': {\r\n    'Map View': null,\r\n    'List View': null,\r\n  },\r\n  'Asset Management': {\r\n    'Charger Name': null,\r\n    'Charger Model': null,\r\n    'Vehicle On-board': null,\r\n    'RFID Management': {\r\n      'RFID': null,\r\n      'CPO-RFID Mapping': null,\r\n    }\r\n  },\r\n\r\n  'Client Management': {\r\n    'Client': null\r\n  },\r\n  'Operation Management': {\r\n    'CPOs': null,\r\n    'Station': null,\r\n  },\r\n  'Vehicle Registration': {\r\n    'End User - Vehicle Registation': null\r\n  },\r\n  'User Management': {\r\n    'User': null,\r\n    'End User': null,\r\n    'Role Permission': null,\r\n  },\r\n  'Charger Monitoring': {\r\n    'Charger Logs': null,\r\n   \r\n  },\r\n  'Logs History': {\r\n    'OCCP Logs': null,\r\n   \r\n  }\r\n};\r\nexport interface MenuAction {\r\n  name: string;\r\n  completed: boolean;\r\n  subMenu?: MenuAction[];\r\n}\r\n\r\n/**\r\n * Checklist database, it can build a tree structured Json object.\r\n * Each node in Json object represents a to-do item or a category.\r\n * If a node is a category, it has children items and new items can be added under the category.\r\n */\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\r\n\r\n  get data(): TodoItemNode[] { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(TREE_DATA, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `TodoItemNode`.\r\n   */\r\n  buildFileTree(obj: {[key: string]: any}, level: number): TodoItemNode[] {\r\n    return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\r\n      const value = obj[key];\r\n      const node = new TodoItemNode();\r\n      node.item = key;\r\n\r\n      if (value != null) {\r\n        if (typeof value === 'object') {\r\n          node.children = this.buildFileTree(value, level + 1);\r\n        } else {\r\n          node.item = value;\r\n        }\r\n      }\r\n\r\n      return accumulator.concat(node);\r\n    }, []);\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  insertItem(parent: TodoItemNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({item: name} as TodoItemNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  providers: [ChecklistDatabase,DatePipe],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  menuAction: MenuAction = {\r\n    name: 'select All',\r\n    completed: false,\r\n    subMenu: [\r\n      {name: 'Add/Update', completed: false},\r\n      {name: 'Delete', completed: false},\r\n      {name: 'Download', completed: false}\r\n    ]\r\n  };\r\n  \r\n  permissionForm: FormGroup;\r\n  actionMenu =false;\r\n  menuNode = false;\r\n  localStorage : any;\r\n  roleType: RoleType[] = [\r\n    {id: '1', name: 'Admin'},\r\n    {id: '2', name: 'CMS User'},\r\n    {id: '3', name: 'End User'}\r\n  ];\r\n  \r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\r\n\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\r\n\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private rfidService : RfidService,private snackBar: MatSnackBar,\r\n    private router : Router,private datePipe: DatePipe,private _database: ChecklistDatabase) {\r\n     \r\n      this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n        this.isExpandable, this.getChildren);\r\n      this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n      this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n  \r\n      _database.dataChange.subscribe(data => {\r\n        this.dataSource.data = data;\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n \r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n \r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.permissionForm = this.fb.group({\r\n      roleType:['', [Validators.required]]\r\n    });\r\n   \r\n   \r\n  }\r\n\r\n  onSubmit(){\r\n  \r\n      \r\n      \r\n   \r\n\r\n  }\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n\r\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n        ? existingNode\r\n        : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.expandable = !!node.children?.length;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n    this.actionMenu=true;\r\n    this.menuNode = true;\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n    \r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\r\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n    this.actionMenu=true;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this._database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this._database.updateItem(nestedNode!, itemValue);\r\n  }\r\n  allComplete: boolean = false;\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.menuAction.subMenu != null && this.menuAction.subMenu.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(node:any): boolean {\r\n\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n    if (node.this.menuAction.subMenu == null) {\r\n      return false;\r\n    }\r\n    return node.this.menuAction.subMenu.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.menuAction.subMenu  == null) {\r\n      return;\r\n    }\r\n    this.menuAction.subMenu .forEach(t => t.completed = completed);\r\n  }\r\n  \r\n \r\n}\r\n\r\n\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <form class=\"example-form\" [formGroup]=\"permissionForm\" (submit)=\"onSubmit()\" autocomplete=\"off\">\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-form-field style=\"width:100%\">\r\n            <mat-select placeholder=\"Role\" formControlName=\"roleType\" required>\r\n              <mat-option *ngFor=\"let role of roleType\" [value]=\"role.id\">\r\n                {{role.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"permissionForm.get('roleType').invalid\" class=\"mat-text-warn\">Role required</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <mat-divider></mat-divider>\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n        <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"margin-top:20px ;\">\r\n          <mat-card>\r\n            <div fxLayout=\"row wrap\" style=\"padding-top:20px;\">\r\n              <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"border: 1px solid #ddd;;border-radius: 10px;\">\r\n                <mat-toolbar color=\"primary\" class=\"connector-toolbar\">\r\n                  <!-- sidebar toggle button -->\r\n                  <h6 class=\"m-0 pl-16 font-normal fz-1\">\r\n                    <button mat-icon-button [style.alignSelf]=\"'center'\" class=\"mr-16\">\r\n                      <mat-icon>list</mat-icon>\r\n                    </button> &nbsp;Menu List\r\n                  </h6>\r\n                </mat-toolbar>\r\n                <div fxLayout=\"row wrap\" style=\"padding-top:20px;\">\r\n                  <div fxFlex=\"100\" fxFlex.lt-sm=\"100\">\r\n                    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n                      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n                        <button mat-icon-button disabled></button>\r\n                        <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"checklistSelection.isSelected(node)\"\r\n                          (change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n                        <div *ngIf=\"checklistSelection.isSelected(node)\"\r\n                          style=\"text-align: end;display: flex; margin-left: auto;\">\r\n                          <div fxLayout=\"row wrap\" style=\"padding-right: 10px;\">\r\n                            <div fxFlex=\"100\" fxFlex.lt-sm=\"100\">\r\n                              <mat-checkbox class=\"checklist-leaf-node\" id=\"selectAdd\">Add/Update</mat-checkbox>\r\n                              &nbsp;&nbsp;\r\n                              <mat-checkbox class=\"checklist-leaf-node\" id=\"selectDelete\">Delete</mat-checkbox>\r\n                              &nbsp;&nbsp;\r\n                              <mat-checkbox class=\"checklist-leaf-node\" id=\"selectDownload\">Download</mat-checkbox>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </mat-tree-node>\r\n\r\n                      <mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n                        <button mat-icon-button disabled></button>\r\n                      </mat-tree-node>\r\n\r\n                      <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\r\n                        <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.item\">\r\n                          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n                          </mat-icon>\r\n                        </button>\r\n                        <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n                          [indeterminate]=\"descendantsPartiallySelected(node)\" (change)=\"todoItemSelectionToggle(node)\">\r\n                          {{node.item}}</mat-checkbox>\r\n                        <div *ngIf=\"descendantsAllSelected(node)\"\r\n                          style=\"text-align: end;display: flex; margin-left: auto;\">\r\n                          <div class=\"cb-wrapper\" [ngClass]=\"{'cb-vertival': !tmp }\">\r\n                            <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"allComplete\"\r\n                              [indeterminate]=\"someComplete(node)\" (change)=\"setAll($event.checked)\">\r\n                              {{menuAction.name}}</mat-checkbox>&nbsp;&nbsp;\r\n                            <div *ngFor=\"let subMenu of menuAction.subMenu\">\r\n                              <mat-checkbox [(ngModel)]=\"subMenu.completed\" [ngModelOptions]=\"{standalone: true}\"\r\n                                (ngModelChange)=\"updateAllComplete()\">\r\n                                {{subMenu.name}}\r\n                              </mat-checkbox>&nbsp;&nbsp;\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <!--button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button-->\r\n                      </mat-tree-node>\r\n\r\n                    </mat-tree>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers: [DatePipe],\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder,private rfidService: RfidService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      description : ['', [Validators.required]] ,\r\n      rfid_no: ['', [Validators.required]],\r\n      rfid_expDate : ['', [Validators.required]]   \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      rfid_no :formValues.rfid_no,\r\n      expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n      created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_by : this.localStorage.userId,\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.update(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('rfid_no').setValue(params.data.rf_id_no);\r\n    this.form.get('rfid_expDate').setValue(params.data.expiry_date);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n\r\n      <form [formGroup]=\"form\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Name</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"name\" required>\r\n              <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Description</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"description\" required>\r\n              <mat-error *ngIf=\"form.get('description').invalid\">Please enter description\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>RFID Number</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"rfid_no\" required>\r\n              <mat-error *ngIf=\"form.get('rfid_no').invalid\">Please enter RFID number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Expiry Date</mat-label>\r\n              <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n              <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n              <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n              #toggleElement>\r\n              {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"m-t-8\" (click)=\"close()\"\r\n          style=\"margin-left: 1%;\">Cancel</button>\r\n\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RolePermissionCrudComponent } from './role-permission-crud/role-permission-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './role-permission-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RolePermissionCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RolePermissionRoutingModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent},\r\n  { path : 'list', component : ListComponent},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import {Component,OnInit} from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-role-permission-crud',\r\n  templateUrl: './role-permission-crud.component.html',\r\n  styleUrls: ['./role-permission-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n})\r\nexport class RolePermissionCrudComponent implements OnInit {\r\n   // Nav bar demo\r\n   tabLinks = [\r\n    { label: 'User', link: 'list' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n\r\n  menuArray:any;\r\n  ngOnInit(){\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { RolePermissionCrudComponent } from './role-permission-crud/role-permission-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RolePermissionRoutingModule } from './role-permission-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS =[RolePermissionCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, RolePermissionRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RolePermissionModule{}","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface RFID {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  rf_id_no: string;\r\n  expiry_date: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n})\r\nexport class ListComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'name', 'description','rf_id_no',\r\n  'expiry_date','status','action'];\r\n  dataSource: MatTableDataSource<RFID>;\r\n\r\n  rfid : RFID[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(private rfidService : RfidService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRFids();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getRFids(){\r\n    this.rfidService.getAllRfid().subscribe(\r\n      (data:any)=>{\r\n        this.rfid = data;\r\n        this.dataSource = new MatTableDataSource(this.rfid);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    \r\n    // this.rfidService.delete(id).subscribe(\r\n    //   (data:any)=>{\r\n        \r\n    //     this.getRFids();\r\n    //     this.snackBar.open('Deleted successfully','Dismiss',{duration:2000});\r\n    //   },(err)=>{\r\n        \r\n    //   }\r\n    // )\r\n  }\r\n\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getRFids();\r\n    });\r\n  }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <!-- Progress Column -->\r\n                <!-- <ng-container matColumnDef=\"description\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.description}}% </td>\r\n      </ng-container>\r\n   -->\r\n                <!-- Color Column -->\r\n                <!-- <ng-container matColumnDef=\"address\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.address}} </td>\r\n      </ng-container> -->\r\n                <!-- <ng-container matColumnDef=\"logoPath\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Logo Path </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.logoPath}} </td>\r\n      </ng-container> -->\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> RFID Number </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.rf_id_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"expiry_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Expiry Date </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.expiry_date | date : 'dd/MM/yyyy'}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.status == 'Y' ? 'Active' : 'Inactive'}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef > Action </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"],"sourceRoot":"webpack:///"}