{"version":3,"sources":["./src/app/main/customer-management/register-charger-request/approved-list/approved-list.component.ts","./src/app/main/customer-management/register-charger-request/approved-list/approved-list.component.html","./src/app/main/customer-management/register-charger-request/register-charger-request-routing.module.ts","./src/app/main/customer-management/register-charger-request/register-charger-request-crud/register-charger-request-crud.component.ts","./src/app/main/customer-management/register-charger-request/register-charger-request-crud/register-charger-request-crud.component.html","./src/app/main/customer-management/register-charger-request/register-charger-request-crud/routes.ts","./src/app/main/customer-management/register-charger-request/list/list.component.ts","./src/app/main/customer-management/register-charger-request/list/list.component.html","./src/app/main/customer-management/register-charger-request/register-charger-request.module.ts","./src/app/main/customer-management/register-charger-request/action-dialog/action-dialog.component.ts","./src/app/main/customer-management/register-charger-request/action-dialog/action-dialog.component.html","./src/app/main/customer-management/register-charger-request/view-dialog/view-dialog.component.ts","./src/app/main/customer-management/register-charger-request/view-dialog/view-dialog.component.html","./src/app/shared/services/customer-management/register-charger-request.service.ts","./src/app/main/customer-management/register-charger-request/create/create.component.ts","./src/app/main/customer-management/register-charger-request/create/create.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AACrB;AACV;AACY;AAIO;AAClB;AACA;AACA;AAGrB;AAC8C;AAC7C;AACL;;;;;;;;;;;;;;;;;;;ICGD,2EAA8E;IAAA,mEAAQ;IAAA,+EAChB;IAApD,8UAA0B,gBAAgB,aAAS;IAAC,iEAAM;IAAA,4DAAW;IAAC,4DAAO;;;;IAC/F,qFACI;IAAA,4EACA;IADuC,uXAAoC;IAA3E,4DACA;IAAA,+EAAwE;IAApD,wVAA0B,gBAAgB,aAAS;IAAC,yEACxE;IAAA,4DAAW;IACf,4DAAiB;;;IAH0B,0DAAoC;IAApC,mGAAoC;;;IAJnF,yEACI;IAAA,0HAC+F;IAC/F,8IAIiB;IACrB,4DAAK;;;IAPM,0DAAqB;IAArB,wFAAqB;IAEX,0DAAoB;IAApB,uFAAoB;;;IAMzC,yEAAoC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;;IAKlD,2EAA8E;IAAA,wEAC1E;IAAA,+EAAwE;IAApD,8UAA0B,gBAAgB,aAAS;IAAC,iEAAM;IAAA,4DAAW;IAC7F,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IAD2C,0XAAuC;IAAlF,4DACA;IAAA,+EAAwE;IAApD,wVAA0B,gBAAgB,aAAS;IAAC,yEACxE;IAAA,4DAAW;IACf,4DAAiB;;;IAH8B,0DAAuC;IAAvC,sGAAuC;;;IAL1F,yEACI;IAAA,0HAEO;IACP,8IAIiB;IACrB,4DAAK;;;IARM,0DAAqB;IAArB,wFAAqB;IAGX,0DAAoB;IAApB,uFAAoB;;;IAMzC,yEAAoC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;;IAKrD,2EAA4E;IAAA,0FAC3D;IAAA,+EACT;IAD6B,8UAA0B,cAAc,aAAS;IAC9E,kEAAM;IAAA,4DAAW;IACzB,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IADgD,+XAA4C;IAA5F,4DACA;IAAA,+EAAsE;IAAlD,wVAA0B,cAAc,aAAS;IAAC,yEACtE;IAAA,4DAAW;IACf,4DAAiB;;;IAHmC,0DAA4C;IAA5C,2GAA4C;;;IANpG,yEACI;IAAA,0HAGO;IACP,8IAIiB;IACrB,4DAAK;;;IATM,0DAAmB;IAAnB,sFAAmB;IAIT,0DAAkB;IAAlB,qFAAkB;;;IAMvC,yEAAoC;IAAA,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;;IAK1D,2EAA6E;IAAA,qFAC5D;IAAA,+EAAuE;IAAnD,8UAA0B,eAAe,aAAS;IAAC,kEACpF;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IAD4C,0XAAuC;IAAnF,4DACA;IAAA,+EAAuE;IAAnD,wVAA0B,eAAe,aAAS;IAAC,yEACvE;IAAA,4DAAW;IACf,4DAAiB;;;IAH+B,0DAAuC;IAAvC,sGAAuC;;;IAN3F,yEACI;IAAA,0HAGO;IACP,8IAIiB;IACrB,4DAAK;;;IATM,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IAMxC,yEAAoC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;;IAKrD,2EAA0E;IAAA,6EACzD;IAAA,+EAAoE;IAAhD,8UAA0B,YAAY,aAAS;IAAC,kEACjF;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFACI;IAAA,4EACA;IADmC,uXAAoC;IAAvE,4DACA;IAAA,+EAAoE;IAAhD,wVAA0B,YAAY,aAAS;IAAC,yEACpE;IAAA,4DAAW;IACf,4DAAiB;;;IAHsB,0DAAoC;IAApC,mGAAoC;;;IAL/E,yEACI;IAAA,0HAEuB;IACvB,8IAIiB;IACrB,4DAAK;;;IARM,0DAAiB;IAAjB,oFAAiB;IAGP,0DAAgB;IAAhB,mFAAgB;;;IAMrC,yEAAoC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;;IAKlD,2EAA2E;IAAA,8EAC1D;IAAA,+EAAqE;IAAjD,8UAA0B,aAAa,aAAS;IAAC,kEAClF;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFACI;IAAA,4EACA;IADoC,wXAAqC;IAAzE,4DACA;IAAA,+EAAqE;IAAjD,wVAA0B,aAAa,aAAS;IAAC,yEACrE;IAAA,4DAAW;IACf,4DAAiB;;;IAHuB,0DAAqC;IAArC,oGAAqC;;;IALjF,yEACI;IAAA,0HAEuB;IACvB,8IAIiB;IACrB,4DAAK;;;IARM,0DAAkB;IAAlB,sFAAkB;IAGR,0DAAiB;IAAjB,qFAAiB;;;IAMtC,yEAAoC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;;IAKnD,2EAA4E;IAAA,+EACxE;IAAA,+EAAsE;IAAlD,8UAA0B,cAAc,aAAS;IAAC,iEAAM;IAAA,4DAAW;IAC3F,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IADqC,0XAAuC;IAA5E,4DACA;IAAA,+EAAsE;IAAlD,wVAA0B,cAAc,aAAS;IAAC,yEACtE;IAAA,4DAAW;IACf,4DAAiB;;;IAHwB,0DAAuC;IAAvC,sGAAuC;;;IALpF,yEACI;IAAA,0HAEO;IACP,8IAIiB;IACrB,4DAAK;;;IARM,0DAAmB;IAAnB,uFAAmB;IAGT,0DAAkB;IAAlB,sFAAkB;;;IAMvC,yEACI;IAAA,uDAAqB;IAAA,4DAAK;;;IADK,2GAAmD;IAClF,0DAAqB;IAArB,gGAAqB;;;IAIzB,yEACI;IAAA,2EAA+B;IAAA,iEAAM;IAAA,4DAAO;IAChD,4DAAK;;;;IAKD,+EACwE;IADxB,kaAAoB,UAAU,eAAS,gBAAgB,KAAE;IACjC,iFAAsB;IAAA,4DAAW;;;;IAL7G,yEACI;IAAA,+EAC2B;IADiB,6VAAoB,MAAM,kBAAU;IACrD,qEAAU;IAAA,4DAAW;IAAA,wEAEhD;IAAA,kIACyG;IAC7G,4DAAK;;;IAD2B,0DAAyC;IAAzC,8GAAyC;;;IAG7E,oEAA4D;;;IAC5D,oEAAkE;;;ADzG3E,MAAM,sBAAsB;CA6BlC;AAUM,MAAM,qBAAqB;IAwBhC,YAAoB,iBAAgD,EAAS,MAAiB,EAAU,EAAe,EAC7G,QAAqB,EAAU,GAAsB;QAD3C,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,OAAE,GAAF,EAAE,CAAa;QAC7G,aAAQ,GAAR,QAAQ,CAAa;QAAU,QAAG,GAAH,GAAG,CAAmB;QArB/D,qBAAgB,GAAa,CAAC,WAAW,EAAE,cAAc,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAC,QAAQ,CAAC,CAAC;QAC9I,SAAI,GAAG,CAAC,CAAC,UAAU,EAAE,cAAc,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QAQtG,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;IAQrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,sBAAsB,EAAE,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,wBAAwB;QACtB,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,UAAU,EAAE;YAC7C,IAAI,CAAC,iBAAiB,CAAC,iCAAiC,EAAE,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACpD,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,EAAE;gCACzC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BACnD;iCAAM;gCACL,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BACnD;4BACD,IAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE;gCAC5C,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC;6BACxC;yBACF;wBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC/D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACjC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;qBAC1B;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACjE;iBAEF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,oBAAoB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvF,OAAO;iBACR;YAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACX,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAC/F,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACpD,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,EAAE;gCACzC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BACnD;iCAAM;gCACL,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BACnD;yBACF;wBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC/D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACjC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;qBAC1B;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACjE;iBAEF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,oBAAoB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvF,OAAO;iBACR;YAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACX,CAAC,CACF,CAAC;SACH;IAEH,CAAC;IACD,eAAe;IACf,2EAA2E;IAC3E,yBAAyB;IACzB,QAAQ;IACR,8DAA8D;IAC9D,oBAAoB;IACpB,6FAA6F;IAC7F,2BAA2B;IAC3B,uCAAuC;IACvC,+CAA+C;IAC/C,wCAAwC;IACxC,gGAAgG;IAChG,qBAAqB;IACrB,+EAA+E;IAC/E,cAAc;IAEd,wBAAwB;IACxB,6FAA6F;IAC7F,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,oCAAoC;IACpC,QAAQ;IAER,IAAI;IAEJ,mCAAmC;IACnC,mBAAmB;IACnB,sBAAsB;IACtB,iBAAiB;IACjB,MAAM;IACN,gEAAgE;IAChE,uBAAuB;IACvB,oBAAoB;IACpB,wBAAwB;IACxB,0BAA0B;IAC1B,uCAAuC;IACvC,QAAQ;IACR,kDAAkD;IAClD,uCAAuC;IACvC,gCAAgC;IAChC,QAAQ;IACR,IAAI;IAEJ,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY;QACnC,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,YAAY;SAC3B;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,mBAAmB;YAC/B,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,aAAa,EAAE,EAAE;QAChC,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,IAAI,aAAa,IAAI,gBAAgB,EAAE;YACrC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;SAClC;QACD,IAAI,aAAa,IAAI,gBAAgB,EAAE;YACrC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,EAAE,CAAC;SAC1C;QACD,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,YAAY,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;SAClC;QACD,IAAI,aAAa,IAAI,aAAa,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;SACnC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,IAAI,GAAG;gBACT,UAAU,EAAE,SAAS,CAAC,SAAS,EAAE,cAAc,EAAE,SAAS,CAAC,YAAY,EAAE,mBAAmB,EAAE,SAAS,CAAC,iBAAiB;gBACzH,cAAc,EAAE,SAAS,CAAC,YAAY,EAAE,MAAM,EAAE,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,UAAU;gBAClG,QAAQ,EAAE,SAAS,CAAC,YAAY;aACjC,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAkB,0CAAU,CAAC,QAAQ,EAAE,CAAC;QAEtD,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,sCAAsC,CAAC,CAAC;QAC1F,8CAAc,CAAC,QAAQ,EAAE,2CAA2C,CAAC,CAAC;IACxE,CAAC;IAED,SAAS;QACP,IAAI,GAAG,GAAG,IAAI,2CAAK,CAAC,EAAE,uCAAuC;SAE5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAEhD,IAAI,IAAI,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,iBAAiB,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,SAAS;gBACjI,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC;YAE9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC9D,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAE,IAAI,CAAC,EAAE;gBAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,6CAA6C,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAEvH,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBAChE,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAExC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QAEF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/B,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;IAE9D,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,+BAA+B;QAE/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAClG,OAAO,GAAG,CAAC;IACb,CAAC;;0FAxSU,qBAAqB;qGAArB,qBAAqB;wEASrB,wEAAY;wEACZ,8DAAO;;;;;;QC1EpB,yEACI;QAAA,4EACI;QADiC,6IAAS,iBAAa,IAAC;QACxD,2EAAU;QAAA,4EAAiB;QAAA,4DAAW;QAC1C,4DAAS;QAAA,wEACT;QAAA,4EACI;QADiC,6IAAS,eAAW,IAAC;QACtD,2EAAU;QAAA,yEAAc;QAAA,4DAAW;QACvC,4DAAS;QAEb,4DAAM;QAEN,yEACI;QAAA,yEAEI;QAAA,0EACI;QAAA,4EAGI;QAAA,4EACI;QAAA,iHAQK;QACL,iHAA2D;QAC/D,qEAAe;QAEf,6EACI;QAAA,iHASK;QACL,iHAA8D;QAClE,qEAAe;QAEf,6EACI;QAAA,iHAUK;QACL,iHAAmE;QACvE,qEAAe;QAEf,6EACI;QAAA,iHAUK;QACL,iHAA8D;QAClE,qEAAe;QAEf,6EACI;QAAA,iHASK;QACL,iHAA2D;QAC/D,qEAAe;QAEf,6EACI;QAAA,iHASK;QACL,iHAA4D;QAChE,qEAAe;QAEf,6EACI;QAAA,iHASK;QACL,kHAC8B;QAClC,qEAAe;QAEf,6EACI;QAAA,kHAEK;QACL,iHAMK;QACT,qEAAe;QACf,kHAA4D;QAC5D,kHAAkE;QACtE,4DAAQ;QAER,gFAAkE;QACtE,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA1HsC,2DAAyB;QAAzB,sFAAyB;QAmHjC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAGhD,0DAAkC;QAAlC,kJAAkC;+1GDxE/C,+DAAc;6FAGf,qBAAqB;cARjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;gBAC7C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;aAC3B;4eAW4C,SAAS;kBAAnD,uDAAS;mBAAC,wEAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;YACH,IAAI;kBAAzC,uDAAS;mBAAC,8DAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AE1EtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACe;AACuE;AACpD;AACX;;;AAC/D,MAAM,MAAM,GAAY;IACpB;QACI,IAAI,EAAG,MAAM,EAAC,SAAS,EAAG,0IAAmC,EAAC,WAAW,EAAE,CAAC,4EAAS,CAAC,EAAE,QAAQ,EAAG,sFAAgB;KACtH;CACJ;AAOM,MAAM,mCAAmC;;kHAAnC,mCAAmC;gMAAnC,mCAAmC,kBAJlC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGd,mCAAmC,uFAHjC,4DAAY;6FAGd,mCAAmC;cAL/C,sDAAQ;eAAC;gBACN,OAAO,EAAG,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACzC,OAAO,EAAG,CAAC,4DAAY,CAAC;aAC3B;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACnB;AACA;;;;;;;;;ICqB9C,0EAKE;IAAA,uDACF;IAAA,4DAAI;;;;IAJD,uFAA2B;IAG5B,0DACF;IADE,4FACF;;;;ADvBJ;;GAEG;AAQI,MAAM,mCAAmC;IAa9C,YAAoB,MAAc,EAAU,GAAsB,EAAU,eAA+B;QAAvF,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAX3G,aAAQ,GAAG;QACT,gEAAgE;QAChE,8EAA8E;QAC9E,uCAAuC;SACxC,CAAC;QAKF,cAAS,GAAG,EAAE,CAAC;IAIf,CAAC;IACD,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;YAChE,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,EAAE;gBAC9H,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACtE;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;QACnD,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;YACpB,IAAI,CAAC,CAAC,EAAE,KAAK,oBAAoB,EAAE;gBACjC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,SAAS,EAAE;oBAC7E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;wBACpC,IAAI,CAAC,CAAC,EAAE,KAAK,wBAAwB,EAAE;4BACrC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;4BACzB,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,IAAI,SAAS,EAAE;gCACvF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;oCACzC,IAAI,sBAAsB,GAAG,KAAK,CAAC;oCACnC,IAAI,CAAC,CAAC,EAAE,KAAK,mBAAmB,EAAE;wCAChC,sBAAsB,GAAG,IAAI,CAAC;wCAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC;qCACnF;oCACD,IAAI,CAAC,CAAC,EAAE,KAAK,0BAA0B,EAAE;wCACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,IAAI,EAAE,8BAA8B,EAAE,CAAC,CAAC;qCACjG;oCACD,IAAI,CAAC,CAAC,EAAE,KAAK,sBAAsB,EAAE;wCACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;qCAC3D;oCAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;oCAC/B,IAAI,CAAC,sBAAsB,EAAE;wCAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kDAAkD,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;qCACrG;gCAEH,CAAC,CAAC,CAAC;6BACJ;yBAEF;oBAEH,CAAC,CAAC,CAAC;iBACJ;aAEF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;sHAlEU,mCAAmC;mHAAnC,mCAAmC;QCjBhD,yEACE;QAAA,yEAEE;QACA,yEAEI;QACA,yEAEI;QAAA,yEAEI;QAAA,0EACiD;QAAA,uDACjD;QAAA,4DAAO;QAMX,4DAAM;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,yEACI;QAAA,2HAMI;QACN,4DAAM;QACN,2EAA+B;QACjC,4DAAM;;QArBgB,0DAA0C;QAA1C,kNAA0C;QAAC,0DACjD;QADiD,6HACjD;QAYW,0DAAa;QAAb,iFAAa;g8BDV1B,+DAAc;6FAEf,mCAAmC;cAP/C,uDAAS;eAAC;gBACT,QAAQ,EAAE,mCAAmC;gBAC7C,WAAW,EAAE,gDAAgD;gBAC7D,SAAS,EAAE,CAAC,gDAAgD,CAAC;gBAC7D,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;aAC3B;;AAgFM,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QAFxB,8FAAmC;;6FAEnC,wBAAwB;cAJpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,qCAAqC;aAChD;;AAOM,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QAFxB,4GAAiD;;6FAEjD,wBAAwB;cAJpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,mDAAmD;aAC9D;;AAOM,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QAFxB,gGAAqC;;6FAErC,wBAAwB;cAJpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,uCAAuC;aAClD;;;;;;;;;;;;;;AE3GD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;GAMG;AAG4D;AAEF;AACoB;AAC1B;AAEhD,MAAM,gBAAgB,GAAW;IACtC;QACG,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAG,wEAAe,EAAC,WAAW,EAAC,CAAC,4EAAS,CAAC;KACtE;IACD;QACE,IAAI,EAAG,uBAAuB,EAAE,SAAS,EAAG,kEAAa,EAAG,WAAW,EAAC,CAAC,4EAAS,CAAC;KACpF;IACD;QACE,IAAI,EAAG,8BAA8B,EAAE,SAAS,EAAG,4FAAqB,EAAG,WAAW,EAAC,CAAC,4EAAS,CAAC;KACnG;IACD;QACE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM;KACjE;CACF,CAAC;;;;;;;;;;;;;AC3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AACrB;AACV;AACY;AACoB;AAGb;AAClB;AACA;AACA;AACoD;AAC3B;AAC9C;AACC;AACL;;;;;;;;;;;;;;;;;;;ICID,2EAA8E;IAAA,gEAAK;IAAA,+EACb;IAApD,sUAA0B,gBAAgB,aAAS;IAAC,iEAAM;IAAA,4DAAW;IAAC,4DAAO;;;;IAC/F,qFACI;IAAA,4EACA;IADuC,+WAAoC;IAA3E,4DACA;IAAA,+EAAwE;IAApD,gVAA0B,gBAAgB,aAAS;IAAC,yEACxE;IAAA,4DAAW;IACf,4DAAiB;;;IAH0B,0DAAoC;IAApC,mGAAoC;;;IAJnF,yEACI;IAAA,kHAC+F;IAC/F,sIAIiB;IACrB,4DAAK;;;IAPM,0DAAqB;IAArB,wFAAqB;IAEX,0DAAoB;IAApB,uFAAoB;;;IAMzC,yEAAoC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;;IAMlD,2EAA8E;IAAA,wEAC1E;IAAA,+EAAwE;IAApD,sUAA0B,gBAAgB,aAAS;IAAC,iEAAM;IAAA,4DAAW;IAC7F,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IAD2C,kXAAuC;IAAlF,4DACA;IAAA,+EAAwE;IAApD,gVAA0B,gBAAgB,aAAS;IAAC,yEACxE;IAAA,4DAAW;IACf,4DAAiB;;;IAH8B,0DAAuC;IAAvC,sGAAuC;;;IAL1F,yEACI;IAAA,kHAEO;IACP,sIAIiB;IACrB,4DAAK;;;IARM,0DAAqB;IAArB,wFAAqB;IAGX,0DAAoB;IAApB,uFAAoB;;;IAMzC,yEAAoC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;;IAKrD,2EAA4E;IAAA,0FAC3D;IAAA,+EACT;IAD6B,sUAA0B,cAAc,aAAS;IAC9E,kEAAM;IAAA,4DAAW;IACzB,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IADgD,uXAA4C;IAA5F,4DACA;IAAA,+EAAsE;IAAlD,gVAA0B,cAAc,aAAS;IAAC,yEACtE;IAAA,4DAAW;IACf,4DAAiB;;;IAHmC,0DAA4C;IAA5C,2GAA4C;;;IANpG,yEACI;IAAA,kHAGO;IACP,sIAIiB;IACrB,4DAAK;;;IATM,0DAAmB;IAAnB,sFAAmB;IAIT,0DAAkB;IAAlB,qFAAkB;;;IAMvC,yEAAoC;IAAA,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;;IAK1D,2EAA6E;IAAA,qFAC5D;IAAA,+EAAuE;IAAnD,sUAA0B,eAAe,aAAS;IAAC,kEACpF;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IAD4C,kXAAuC;IAAnF,4DACA;IAAA,+EAAuE;IAAnD,gVAA0B,eAAe,aAAS;IAAC,yEACvE;IAAA,4DAAW;IACf,4DAAiB;;;IAH+B,0DAAuC;IAAvC,sGAAuC;;;IAN3F,yEACI;IAAA,kHAGO;IACP,sIAIiB;IACrB,4DAAK;;;IATM,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IAMxC,yEAAoC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,gGAAqB;;;;IAKrD,2EAA0E;IAAA,6EACzD;IAAA,+EAAoE;IAAhD,sUAA0B,YAAY,aAAS;IAAC,kEACjF;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFACI;IAAA,4EACA;IADmC,+WAAoC;IAAvE,4DACA;IAAA,+EAAoE;IAAhD,gVAA0B,YAAY,aAAS;IAAC,yEACpE;IAAA,4DAAW;IACf,4DAAiB;;;IAHsB,0DAAoC;IAApC,mGAAoC;;;IAL/E,yEACI;IAAA,kHAEuB;IACvB,sIAIiB;IACrB,4DAAK;;;IARM,0DAAiB;IAAjB,oFAAiB;IAGP,0DAAgB;IAAhB,mFAAgB;;;IAMrC,yEAAoC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;;IAKlD,2EAA2E;IAAA,8EAC1D;IAAA,+EAAqE;IAAjD,sUAA0B,aAAa,aAAS;IAAC,kEAClF;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFACI;IAAA,4EACA;IADoC,gXAAqC;IAAzE,4DACA;IAAA,+EAAqE;IAAjD,gVAA0B,aAAa,aAAS;IAAC,yEACrE;IAAA,4DAAW;IACf,4DAAiB;;;IAHuB,0DAAqC;IAArC,oGAAqC;;;IALjF,yEACI;IAAA,kHAEuB;IACvB,sIAIiB;IACrB,4DAAK;;;IARM,0DAAkB;IAAlB,sFAAkB;IAGR,0DAAiB;IAAjB,qFAAiB;;;IAMtC,yEAAoC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;;IAKnD,2EAA4E;IAAA,+EACxE;IAAA,+EAAsE;IAAlD,sUAA0B,cAAc,aAAS;IAAC,iEAAM;IAAA,4DAAW;IAC3F,4DAAO;;;;IACP,qFACI;IAAA,4EACA;IADqC,kXAAuC;IAA5E,4DACA;IAAA,+EAAsE;IAAlD,gVAA0B,cAAc,aAAS;IAAC,yEACtE;IAAA,4DAAW;IACf,4DAAiB;;;IAHwB,0DAAuC;IAAvC,sGAAuC;;;IALpF,yEACI;IAAA,kHAEO;IACP,sIAIiB;IACrB,4DAAK;;;IARM,0DAAmB;IAAnB,uFAAmB;IAGT,0DAAkB;IAAlB,sFAAkB;;;IAMvC,yEACI;IAAA,uDAAqB;IAAA,4DAAK;;;IADK,2GAAmD;IAClF,0DAAqB;IAArB,gGAAqB;;;IAIzB,yEACI;IAAA,2EAA+B;IAAA,iEAAM;IAAA,4DAAO;IAChD,4DAAK;;;;IAKD,+EACwE;IADf,0ZAAoB,QAAQ,eAAS,cAAc,KAAE;IACtC,iFAAsB;IAAA,4DAAW;;;;IAKzG,+EACwE;IAD5B,0ZAAoB,MAAM,kBAAU;IACR,+DAAI;IAAA,4DAAW;;;;IAEvF,+EACwE;IAD7B,yaAA4B;IACC,iEAAM;IAAA,4DAAW;;;;IAd7F,yEACI;IAAA,+EAC2B;IADiB,qVAAoB,MAAM,kBAAU;IACrD,qEAAU;IAAA,4DAAW;IAAA,wEAEhD;IAAA,0HACyG;IAAA,wEAEzG;IAGA,0HACuF;IAAA,wEAEvF;IAAA,0HACyF;IAC7F,4DAAK;;;IAV2B,0DAAyC;IAAzC,8GAAyC;IAMzC,0DAAyC;IAAzC,8GAAyC;IAGzC,0DAAyC;IAAzC,8GAAyC;;;IAG7E,oEAA4D;;;IAC5D,oEAAkE;;;ADzH3E,MAAM,cAAc;CA6B1B;AAYM,MAAM,aAAa;IA0BxB,YAAoB,iBAAgD,EAAS,MAAiB,EAAU,QAAqB,EACnH,GAAsB;QADZ,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAa;QACnH,QAAG,GAAH,GAAG,CAAmB;QAvBhC,qBAAgB,GAAa,CAAC,WAAW,EAAE,cAAc,EAAE,mBAAmB,EAAE,cAAc,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC/I,SAAI,GAAG,CAAC,CAAC,UAAU,EAAE,cAAc,EAAE,mBAAmB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QAUtG,mBAAc,GAAG,KAAK,CAAC;QACvB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;IAQrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,UAAU,EAAE;YAC7C,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAC7D,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC/C,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,EAAE;gCACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BAC9C;iCAAM;gCACL,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BAC9C;yBACF;wBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC1D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACjC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;qBAC1B;yBAAI;wBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACjE;iBAEF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,oBAAoB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvF,OAAO;iBACR;YAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACX,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,iCAAiC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1F,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC/C,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,EAAE;gCACpC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BAC9C;iCAAM;gCACL,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;6BAC9C;4BACD,IAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE;gCACvC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC;6BACnC;yBACF;wBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC1D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACjC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;qBAC1B;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;qBAChE;iBAEF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,oBAAoB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvF,OAAO;iBACR;YAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACX,CAAC,CACF,CAAC;SACH;IAEH,CAAC;IAED,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mHAA0B,EAAE;YACnE,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrD,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CACjF,CAAC,IAAS,EAAE,EAAE;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;wBACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;wBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,aAAa,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAClF;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACjF;gBAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,CAAC,CACF;aACF;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY;QACnC,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,YAAY;SAC3B;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,mBAAmB;YAC/B,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAM,EAAE,IAAI;QACrB,IAAI,MAAM,GAAG;YACX,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;SACX;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;YACxD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,mBAAmB;SAChC,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,aAAa,EAAE,EAAE;QAChC,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,IAAI,aAAa,IAAI,gBAAgB,EAAE;YACrC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;SAClC;QACD,IAAI,aAAa,IAAI,gBAAgB,EAAE;YACrC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,EAAE,CAAC;SAC1C;QACD,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,YAAY,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;SAClC;QACD,IAAI,aAAa,IAAI,aAAa,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;SACnC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,IAAI,GAAG;gBACT,UAAU,EAAE,OAAO,CAAC,SAAS,EAAE,cAAc,EAAE,OAAO,CAAC,YAAY,EAAE,mBAAmB,EAAE,OAAO,CAAC,iBAAiB;gBACnH,cAAc,EAAE,OAAO,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,UAAU;gBAC5F,QAAQ,EAAE,OAAO,CAAC,YAAY;aAC/B,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,MAAM,SAAS,GAAG,2CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAkB,2CAAU,CAAC,QAAQ,EAAE,CAAC;QACtD,2CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,sBAAsB,CAAC,CAAC;QAC1E,+CAAc,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;QACtD,yDAAyD;QACzD,yBAAyB;IAC3B,CAAC;IAED,SAAS;QACP,IAAI,GAAG,GAAG,IAAI,4CAAK,CAAC,EAAE,uCAAuC;SAC5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAE9C,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,SAAS;gBACvH,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;YAE1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC9D,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAE,IAAI,CAAC,EAAE;gBAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAEvG,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBAChE,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAExC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QACF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC9B,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IAEvC,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,+BAA+B;QAC/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC;QACjG,OAAO,GAAG,CAAC;IAEb,CAAC;;0EAxSU,aAAa;6FAAb,aAAa;wEAUb,wEAAY;wEACZ,8DAAO;;;;;;QCxEpB,yEAGI;QAAA,4EACI;QADiC,qIAAS,iBAAa,IAAC;QACxD,2EAAU;QAAA,4EAAiB;QAAA,4DAAW;QAC1C,4DAAS;QAAA,wEACT;QAAA,4EACI;QADiC,qIAAS,eAAW,IAAC;QACtD,2EAAU;QAAA,yEAAc;QAAA,4DAAW;QACvC,4DAAS;QACb,4DAAM;QAEN,yEACI;QAAA,yEAEI;QAAA,0EACI;QAAA,4EAGI;QAAA,4EACI;QAAA,yGAQK;QACL,yGAA2D;QAC/D,qEAAe;QAGf,6EACI;QAAA,yGASK;QACL,yGAA8D;QAClE,qEAAe;QAEf,6EACI;QAAA,yGAUK;QACL,yGAAmE;QACvE,qEAAe;QAEf,6EACI;QAAA,yGAUK;QACL,yGAA8D;QAClE,qEAAe;QAEf,6EACI;QAAA,yGASK;QACL,yGAA2D;QAC/D,qEAAe;QAEf,6EACI;QAAA,yGASK;QACL,yGAA4D;QAChE,qEAAe;QAEf,6EACI;QAAA,yGASK;QACL,0GAC8B;QAClC,qEAAe;QAEf,6EACI;QAAA,0GAEK;QACL,yGAeK;QACT,qEAAe;QACf,0GAA4D;QAC5D,0GAAkE;QACtE,4DAAQ;QACR,gFAAqE;QACzE,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnIsC,2DAAyB;QAAzB,sFAAyB;QA6HjC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAEhD,0DAAqC;QAArC,kJAAqC;21GDtFlD,+DAAc;6FAIf,aAAa;cATzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;aAC3B;qaAa4C,SAAS;kBAAnD,uDAAS;mBAAC,wEAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;YACH,IAAI;kBAAzC,uDAAS;mBAAC,8DAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AExEtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACe;AACI;AACN;AAC0C;AAChB;AAC8C;AAC9C;AACzB;AACmB;;AAE1E,MAAM,UAAU,GAAG,CAAC,0IAAmC,EAAE,wEAAe,EAAE,kEAAa,EAAE,4FAAqB,CAAC,CAAC;AAChH,MAAM,kBAAkB,GAAG,CAAC,4FAAqB,EAAE,sFAAmB,CAAC,CAAC;AAYjE,MAAM,4BAA4B;;2GAA5B,4BAA4B;kLAA5B,4BAA4B,kBAT5B;YACL,qEAAY;YACZ,4GAAmC;YACnC,oEAAgB;SACnB;mIAKQ,4BAA4B,mBAbrB,0IAAmC,EAAE,wEAAe,EAAE,kEAAa,EAAE,4FAAqB,EAClF,4FAAqB,EAAE,sFAAmB,aAI9D,qEAAY;QACZ,4GAAmC;QACnC,oEAAgB;6FAMX,4BAA4B;cAVxC,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,qEAAY;oBACZ,4GAAmC;oBACnC,oEAAgB;iBACnB;gBACD,YAAY,EAAE,CAAC,UAAU,EAAE,kBAAkB,CAAC;gBAC9C,eAAe,EAAE,CAAC,kBAAkB,CAAC;aACxC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACiB;AAEf;AAG9B;AAEe;AAClB;AACA;AACP;AAEgD;;;;;;;;;;;;;;;;;;;;;;;ICOjF,4EAAoD;IAAA,qFAA0B;IAAA,4DAAY;;;IAQ1F,4EAAoD;IAAA,0FACpD;IAAA,4DAAY;;;IAQZ,4EAA6D;IAAA,gFAAqB;IAAA,4DAAY;;;IAQ5F,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF2D,6EAAgB;IACtF,0DACF;IADE,2FACF;;;IAMA,4EAA6C;IAAA,8EAAmB;IAAA,4DAAY;;;IAU9E,4EAA2C;IAAA,gFAAqB;IAAA,4DAAY;;;IAM5E,4EAA2C;IAAA,iFAAsB;IAAA,4DAAY;;;IAc7E,4EAAoD;IAAA,qFACpD;IAAA,4DAAY;;;IAUZ,4EAAoD;IAAA,qFACpD;IAAA,4DAAY;;;IAQZ,4EAA4D;IAAA,iFAC5D;IAAA,4DAAY;;;IACZ,4EAA2D;IAAA,uFAC3D;IAAA,4DAAY;;;IASV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMD,4EAA4C;IAAA,8EAC7C;IAAA,4DAAY;;;IAQV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMA,4EAA6C;IAAA,+EAC/C;IAAA,4DAAY;;;IAYV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMA,4EAA+C;IAAA,iFACjD;IAAA,4DAAY;;ADhJtB,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AAaM,MAAM,qBAAqB;IAsChC,YAAoB,EAAe,EAAU,iBAAgD,EAAS,aAA4B,EACxH,QAAqB,EAAS,cAAgC,EAAQ,MAAkB,EAAS,MAAc,EAChH,SAA8C,EAAkC,IAAmB;QAFxF,OAAE,GAAF,EAAE,CAAa;QAAU,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAS,kBAAa,GAAb,aAAa,CAAe;QACxH,aAAQ,GAAR,QAAQ,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAkB;QAAQ,WAAM,GAAN,MAAM,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAChH,cAAS,GAAT,SAAS,CAAqC;QAAkC,SAAI,GAAJ,IAAI,CAAe;QApC5G,eAAU,GAAG,KAAK,CAAC;QAGnB,WAAM,GAAG,KAAK,CAAC;QAKf,gBAAW,GAAG,KAAK,CAAC;QAgBpB,YAAO,GAAY,KAAK,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QAOvB,SAAI,GAAY,IAAI,CAAC;IAI2F,CAAC;IAEjH,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,CAAC;YAC3C,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAE,CAAC;YACvE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACnC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACjC,GAAG,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5B,YAAY,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;YAC9F,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,KAAK,EAAC,CAAC,EAAE,CAAC;YACV,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACxC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IACD,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,WAAW,CAAC,SAAS;QACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CACxD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,YAAY,CAAC,IAAY;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAG,IAAI,CAAC,UAAU,EAAC;gBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC;gBACzE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,WAAW,CAAC,IAAY;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAEjC,MAAM,MAAM,GAAQ;gBAClB,UAAU,EAAE,UAAU,CAAC,UAAU;gBACjC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBACjC,YAAY,EAAE,UAAU,CAAC,YAAY;gBACrC,QAAQ,EAAE,UAAU,CAAC,QAAQ;gBAC7B,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC1B,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,iBAAiB,EAAE,UAAU,CAAC,YAAY;gBAC1C,QAAQ,EAAE,UAAU,CAAC,YAAY;gBACjC,QAAQ,EAAE,UAAU,CAAC,YAAY;gBACjC,GAAG,EAAE,UAAU,CAAC,OAAO;gBACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ;gBAC7B,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC3B,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC7B,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE;gBACjC,OAAO,EAAC,UAAU,CAAC,OAAO;gBAC1B,SAAS,EAAE,UAAU,CAAC,KAAK;gBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;aACxC;YACD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBAC/B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aAC/C;iBAAM;gBACH,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aAChD;YACD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3D,CAAC,IAAS,EAAE,EAAE;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;wBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBACvF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;qBACxB;yBAAK;wBACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACjF;gBACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3D,CAAC,IAAS,EAAE,EAAE;oBACZ,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;wBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,cAAc,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBAClF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;qBACxB;gBACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,CAAC,CACF,CAAC;aACH;SACF;aAAI;YACH,OAAM;YACN,iFAAiF;SAClF;IAEH,CAAC;IAED,eAAe,CAAC,IAAe;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3C,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACnC,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACX,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC;IAGD,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;oBACnB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;yBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;oBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC9D,CAAC,SAAc,EAAE,EAAE;wBACjB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;wBACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACjE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;6BAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACjC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,QAAa,EAAE,EAAE;wBAChB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;wBACvB,mEAAmE;wBACnE,4CAA4C;wBAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;6BAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;gBACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBAEX,CAAC,CACF;aACF;iBAAM;aAEN;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,yCAAyC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,SAAc,EAAE,EAAE;YACjB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,oEAAoE;YACpE,6CAA6C;YAC7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,UAAe,EAAE,EAAE;YAClB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;YACnB,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnC,wCAAwC;IAC1C,CAAC;IACD,YAAY,CAAC,KAAK;QAChB,wCAAwC;IAC1C,CAAC;IAED,UAAU;QACR,IAAI,MAAM,GAAG,EAEZ;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAkB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,MAAM,EAAC,OAAO;YACd,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,SAAS,EAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC9C;iBAAI;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,qBAAqB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC1F;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC9C,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAG,IAAI,CAAC,UAAU,EAAC;gBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBACxE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAC1E,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QACT,CAAC,CACF;IACH,CAAC;IACO,oBAAoB,CAAC,IAAY;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/F,CAAC;IACD,oBAAoB,CAAC,IAAS;QAC5B,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IAED,0BAA0B;QACxB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,SAAS,CACrE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;gBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;oBAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChE,wDAAwD;iBACzD;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,kGAAkG;aACnG;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF,CAAC;IACJ,CAAC;;0FAheU,qBAAqB,8sCAwCiC,wEAAe;qGAxCrE,qBAAqB;;;;;;;qFAJrB,CAAC,wDAAQ,CAAC;QCjCvB,8EACqE;QADR,+IAAS,sBAAkB,IAAC;QACpB,gEAAK;QAAA,4DAAW;QAErF,iFAAoC;QAAA,uDAAoB;QAAA,4DAAc;QAEtE,yEACE;QAAA,yEAEE;QAAA,0EAGE;QAAA,yEAEE;QAAA,oFACE;QAAA,4EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,uEACA;QAAA,0EACE;QAAA,+EAAkF;QAAA,0EAAc;QAAA,4DAAW;QAC7G,4DAAM;QACN,gIAA0F;QAC5F,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,6EAEA;QADA,+IAAU,gCAA4B,IAAC;QADvC,4DAEA;QAAA,gFAAuF;QAAA,uEAAW;QAAA,4DAAW;QAC7G,gIACY;QACd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA8E;QAAA,2EAC9E;QAAA,4DAAW;QACX,gIAA8F;QAEhG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,4FACE;QAAA,kIAEa;;QACf,4DAAmB;QACnB,0EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAA8E;QAAA,0EAAc;QAAA,4DAAW;QACzG,4DAAM;QACJ,gIAA4E;QAChF,4DAAiB;QACnB,4DAAM;QAEN,0EAEE;QAAA,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA2C;QAAvB,gJAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAW;QACjE,gIAA4E;QAC9E,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,gFAA2C;QAAvB,gJAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAW;QACjE,gIAA6E;QAC/E,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,gFAA2E;QAAA,iEAAK;QAAA,4DAAW;QAG7F,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QACjG,gIACY;QACd,4DAAiB;QAEnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QACjG,gIACY;QACd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,6EAEA;QADE,+IAAU,qBAAiB,IAAC;QAD9B,4DAEA;QAAA,gFAA8E;QAAA,qEAAS;QAAA,4DAAW;QAClG,gIACY;QACZ,gIACY;QACd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEAEA;QAAA,4FAEE;QADF,gLAAkB,qCAAiC,IAAC;QAClD,kIAEa;;QACf,4DAAmB;QACnB,0EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QAClE,gFAA2E;QAAA,0EAAa;QAAA,4DAAW;QACpG,4DAAM;QACL,kIACW;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,kEAAK;QAAA,4DAAY;QAC5B,yEAEA;QAAA,6FAEE;QADA,iLAAkB,sCAAkC,IAAC;QACrD,oIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA4E;QAAA,0EAAa;QAAA,4DAAW;QACtG,4DAAM;QACJ,kIACU;QACd,4DAAiB;QACnB,4DAAM;QAEN,2EAEE;QAAA,sFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEAEA;QAAA,6FAEE;QADA,iLAAkB,wCAAoC,IAAC;QACvD,oIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA8E;QAAA,0EAAa;QAAA,4DAAW;QACxG,4DAAM;QACJ,kIACU;QACd,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAC/B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QAGtG,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QAGtG,4DAAiB;QACjB,4EACE;QAAA,6FAEE;QAF0E,iKAAU,wBAAoB,IAAC;QAEzG,yDAAoC;QAAA,4DAAmB;QAC3D,4DAAM;QAER,4DAAM;QAGN,4EACE;QAAA,+EAA4F;QAAvB,+IAAS,gBAAY,IAAC;QAAC,yDACzE;QAAA,4DAAS;QAC5B,+EAAoF;QAAlB,+IAAS,WAAO,IAAC;QAAC,mEAAM;QAAA,4DAAS;QACrG,4DAAM;QAER,4DAAO;QAET,4DAAM;QACR,4DAAM;;;;;;QAjM8B,0DAAoB;QAApB,mHAAoB;QAK9C,0DAAkB;QAAlB,+EAAkB;QAWN,0DAAsC;QAAtC,sGAAsC;QAQtC,0DAAsC;QAAtC,sGAAsC;QAStC,0DAA+C;QAA/C,+GAA+C;QAMsB,0DAA6B;QAA7B,gFAA6B;QAC9D,0DAAoC;QAApC,iGAAoC;QACnD,0DAAuC;QAAvC,wKAAuC;QAQ1D,0DAA+B;QAA/B,+FAA+B;QAUjC,0DAA6B;QAA7B,6FAA6B;QAM7B,0DAA6B;QAA7B,6FAA6B;QAc7B,2DAAsC;QAAtC,sGAAsC;QAWtC,0DAAsC;QAAtC,sGAAsC;QAStC,0DAA8C;QAA9C,8GAA8C;QAE9C,0DAA6C;QAA7C,6GAA6C;QAMN,0DAA4B;QAA5B,iFAA4B;QAEjC,0DAA2B;QAA3B,wFAA2B;QAExC,0DAA6B;QAA7B,8JAA6B;QAQjD,0DAA8B;QAA9B,8FAA8B;QAKS,0DAA6B;QAA7B,iFAA6B;QAElC,0DAA4B;QAA5B,yFAA4B;QAE1C,0DAA8B;QAA9B,gKAA8B;QAQjD,0DAA+B;QAA/B,+FAA+B;QAU3C,0DAA+B;QAA/B,iFAA+B;QACgB,0DAA8B;QAA9B,2FAA8B;QAE9C,0DAAgC;QAAhC,kKAAgC;QAQnD,0DAAiC;QAAjC,iGAAiC;QAmBU,2DAAkB;QAAlB,+EAAkB;QAEzE,0DAAoC;QAApC,+GAAoC;QAOoD,0DACzE;QADyE,iGACzE;45FD7Jb,+DAAc;6FAKf,qBAAqB;cAVjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;gBAC7C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;;sBA2C2D,oDAAM;uBAAC,wEAAe;wBAzBpD,GAAG;kBAA9B,uDAAS;mBAAC,eAAe;YACI,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;;;;;;;;;;;;;;AEtD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACiB;AAEd;AAG/B;AAEe;AAClB;AACA;AACP;AAEgD;;;;;;;;;;;;;;;;;;;;;;ICOjF,4EAAoD;IAAA,qFAA0B;IAAA,4DAAY;;;IAQ1F,4EAAoD;IAAA,0FACpD;IAAA,4DAAY;;;IAQZ,4EAA6D;IAAA,gFAAqB;IAAA,4DAAY;;;IAQ5F,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF2D,6EAAgB;IACtF,0DACF;IADE,2FACF;;;IAMA,4EAA6C;IAAA,8EAAmB;IAAA,4DAAY;;;IAU9E,4EAA2C;IAAA,gFAAqB;IAAA,4DAAY;;;IAM5E,4EAA2C;IAAA,iFAAsB;IAAA,4DAAY;;;IAc7E,4EAAoD;IAAA,qFACpD;IAAA,4DAAY;;;IAWZ,4EAAoD;IAAA,qFACpD;IAAA,4DAAY;;;IAQZ,4EAA4D;IAAA,iFAC5D;IAAA,4DAAY;;;IACZ,4EAA2D;IAAA,uFAC3D;IAAA,4DAAY;;;IASV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMD,4EAA4C;IAAA,8EAC7C;IAAA,4DAAY;;;IAQV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMF,4EAA6C;IAAA,+EAC7C;IAAA,4DAAY;;;IAWV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMF,4EAA+C;IAAA,iFAC/C;IAAA,4DAAY;;;;IA2Bd,6EAAkH;IAArB,8TAAoB;IAAC,iEAAM;IAAA,4DAAS;;;;IACjI,6EAAgH;IAAvB,gUAAsB;IAAC,mEAAQ;IAAA,4DAAS;;;;IACjI,6EAAoH;IAAvB,gUAAsB;IAAC,mEAAQ;IAAA,4DAAS;;AD9K7I,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AAWM,MAAM,mBAAmB;IA4B9B,YAAoB,EAAe,EAAU,iBAAgD,EAAS,aAA4B,EACxH,QAAqB,EAAS,cAAgC,EAAQ,MAAkB,EAAS,MAAc,EAChH,SAA4C,EAAkC,IAAmB;QAFtF,OAAE,GAAF,EAAE,CAAa;QAAU,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAS,kBAAa,GAAb,aAAa,CAAe;QACxH,aAAQ,GAAR,QAAQ,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAkB;QAAQ,WAAM,GAAN,MAAM,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAChH,cAAS,GAAT,SAAS,CAAmC;QAAkC,SAAI,GAAJ,IAAI,CAAe;QA3B1G,eAAU,GAAG,KAAK,CAAC;QAGnB,WAAM,GAAG,KAAK,CAAC;QAYf,mBAAc,GAAY,KAAK,CAAC;QAChC,eAAU,GAAY,KAAK,CAAC;QAO5B,SAAI,GAAY,IAAI,CAAC;IAIyF,CAAC;IAE/G,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAChE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,4BAA4B;QAC7G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,6BAA6B;QAC5G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,CAAC;YAC3C,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAE,CAAC;YACvE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACnC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACjC,GAAG,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5B,YAAY,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;YAC9F,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,KAAK,EAAC,CAAC,EAAE,CAAC;YACV,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACxC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IACD,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,WAAW,CAAC,SAAS;QACnB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CACxD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,YAAY,CAAC,IAAY;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC1C;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,WAAW,CAAC,IAAY;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,eAAe,CAAC,IAAe;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3C,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACnC,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACX,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACvD,IAAG,IAAI,CAAC,UAAU,EAAC;YACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC7F;IAEH,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;oBACnB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;yBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;oBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC9D,CAAC,SAAc,EAAE,EAAE;wBACjB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;wBACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACjE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;6BAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACjC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,QAAa,EAAE,EAAE;wBAChB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;wBACvB,mEAAmE;wBACnE,4CAA4C;wBAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;6BAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;gBACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBAEX,CAAC,CACF;aACF;iBAAM;aAEN;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,yCAAyC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,SAAc,EAAE,EAAE;YACjB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,oEAAoE;YACpE,6CAA6C;YAC7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnC,wCAAwC;IAC1C,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,UAAe,EAAE,EAAE;YAClB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;YACnB,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,wCAAwC;IAC1C,CAAC;IACD,UAAU;QACR,MAAM,MAAM,GAAQ;YAClB,EAAE,EAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACxB,MAAM,EAAE,GAAG;YACX,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;SACpC;QACD,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACxB;iBAAI;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACxB;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAChF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CACF;IACH,CAAC;IACD,QAAQ;QACN,MAAM,MAAM,GAAQ;YAClB,EAAE,EAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACxB,MAAM,EAAE,GAAG;YACX,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;SACpC;QACD,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACxB;iBAAI;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aACxB;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAChF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CACF;IACH,CAAC;IACD,UAAU;QACR,IAAG,IAAI,CAAC,UAAU,EAAC;YACjB,MAAM,MAAM,GAAO;gBACjB,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBACvB,MAAM,EAAE,GAAG;gBACX,SAAS,EAAC,IAAI,CAAC,YAAY,CAAC,MAAM;aACnC;YACD,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,CAAC,IAAQ,EAAE,EAAE;gBACX,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;oBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBACvF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;qBAAI;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,SAAS,EAAC,EAAE,QAAQ,EAAC,IAAI,EAAE,CAAC,CAAC;oBAC7D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;YAEH,CAAC,EAAC,CAAC,GAAG,EAAE,EAAE;gBACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAC,SAAS,EAAC,EAAE,QAAQ,EAAC,IAAI,EAAE,CAAC,CAAC;gBAC7E,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CACF,CAAC;SACH;IAEH,CAAC;IAED,UAAU;QACR,IAAI,MAAM,GAAG,EAEZ;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAkB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,MAAM,EAAC,OAAO;YACd,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,SAAS,EAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC9C;iBAAI;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,qBAAqB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC1F;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC9C,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAG,IAAI,CAAC,UAAU,EAAC;gBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBACxE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAC1E,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QACT,CAAC,CACF;IACH,CAAC;IACO,oBAAoB,CAAC,IAAY;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/F,CAAC;IACD,oBAAoB,CAAC,IAAS;QAC5B,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACD,0BAA0B;QACxB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,SAAS,CACrE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;gBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;oBAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChE,wDAAwD;iBACzD;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,kGAAkG;aACnG;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF,CAAC;IACJ,CAAC;;sFA5dU,mBAAmB,8sCA8BiC,wEAAe;mGA9BnE,mBAAmB;;;;;qFAHnB,CAAC,wDAAQ,CAAC;QC/BvB,8EACqE;QADR,6IAAS,sBAAkB,IAAC;QACpB,gEAAK;QAAA,4DAAW;QAErF,iFAAoC;QAAA,uDAAoB;QAAA,4DAAc;QAEtE,yEACE;QAAA,yEAEE;QAAA,0EAGE;QAAA,yEAEE;QAAA,oFACE;QAAA,4EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,uEACA;QAAA,0EACE;QAAA,+EAAkF;QAAA,0EAAc;QAAA,4DAAW;QAC7G,4DAAM;QACN,8HAA0F;QAC5F,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,6EAEA;QADA,6IAAU,gCAA4B,IAAC;QADvC,4DAEA;QAAA,gFAAuF;QAAA,uEAAW;QAAA,4DAAW;QAC7G,8HACY;QACd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA8E;QAAA,2EAC9E;QAAA,4DAAW;QACX,8HAA8F;QAEhG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,4FACE;QAAA,gIAEa;;QACf,4DAAmB;QACnB,0EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAA8E;QAAA,0EAAc;QAAA,4DAAW;QACzG,4DAAM;QACJ,8HAA4E;QAChF,4DAAiB;QACnB,4DAAM;QAEN,0EAEE;QAAA,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA2C;QAAvB,8IAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAW;QACjE,8HAA4E;QAC9E,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,gFAA2C;QAAvB,8IAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAW;QACjE,8HAA6E;QAC/E,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,gFAA2E;QAAA,iEAAK;QAAA,4DAAW;QAG7F,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QACjG,8HACY;QACd,4DAAiB;QAEnB,4DAAM;QAEN,0EAEE;QAAA,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QACjG,8HACY;QACd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,6EAEA;QADE,6IAAU,qBAAiB,IAAC;QAD9B,4DAEA;QAAA,gFAA8E;QAAA,qEAAS;QAAA,4DAAW;QAClG,8HACY;QACZ,8HACY;QACd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEAEA;QAAA,4FAEE;QADF,8KAAkB,qCAAiC,IAAC;QAClD,gIAEa;;QACf,4DAAmB;QACnB,0EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QAClE,gFAA2E;QAAA,0EAAa;QAAA,4DAAW;QACpG,4DAAM;QACL,gIACW;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,kEAAK;QAAA,4DAAY;QAC5B,yEAEA;QAAA,6FAEE;QADA,+KAAkB,sCAAkC,IAAC;QACrD,kIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA4E;QAAA,0EAAa;QAAA,4DAAW;QACtG,4DAAM;QACN,gIACY;QACd,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,sFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEAEA;QAAA,6FAEE;QADA,+KAAkB,wCAAoC,IAAC;QACvD,kIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA8E;QAAA,0EAAa;QAAA,4DAAW;QACxG,4DAAM;QACN,gIACY;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAC/B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QAGtG,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QAGtG,4DAAiB;QACjB,4EACE;QAAA,6FAEE;QADA,+JAAU,wBAAoB,IAAC;QAC/B,yDAAoC;QAAA,4DAAmB;QAC3D,4DAAM;QAER,4DAAM;QAGN,4EACE;QAAA,0HAAiI;QACjI,0HAAiI;QACjI,0HAAqI;QACrI,+EAAoF;QAAlB,6IAAS,WAAO,IAAC;QAAC,mEAAM;QAAA,4DAAS;QAErG,4DAAM;QAER,4DAAO;QAET,4DAAM;QACR,4DAAM;;;;;;QAnM8B,0DAAoB;QAApB,mHAAoB;QAK9C,0DAAkB;QAAlB,+EAAkB;QAWN,0DAAsC;QAAtC,sGAAsC;QAQtC,0DAAsC;QAAtC,sGAAsC;QAStC,0DAA+C;QAA/C,+GAA+C;QAMsB,0DAA6B;QAA7B,gFAA6B;QAC9D,0DAAoC;QAApC,iGAAoC;QACnD,0DAAuC;QAAvC,wKAAuC;QAQ1D,0DAA+B;QAA/B,+FAA+B;QAUjC,0DAA6B;QAA7B,6FAA6B;QAM7B,0DAA6B;QAA7B,6FAA6B;QAc7B,2DAAsC;QAAtC,sGAAsC;QAYtC,0DAAsC;QAAtC,sGAAsC;QAStC,0DAA8C;QAA9C,8GAA8C;QAE9C,0DAA6C;QAA7C,6GAA6C;QAMN,0DAA4B;QAA5B,iFAA4B;QAEjC,0DAA2B;QAA3B,wFAA2B;QAExC,0DAA6B;QAA7B,8JAA6B;QAQjD,0DAA8B;QAA9B,8FAA8B;QAKS,0DAA6B;QAA7B,iFAA6B;QAElC,0DAA4B;QAA5B,yFAA4B;QAE1C,0DAA8B;QAA9B,gKAA8B;QAQnD,0DAA+B;QAA/B,+FAA+B;QASzC,0DAA+B;QAA/B,iFAA+B;QACgB,0DAA8B;QAA9B,2FAA8B;QAE9C,0DAAgC;QAAhC,kKAAgC;QAQrD,0DAAiC;QAAjC,iGAAiC;QAmBqB,2DAAkB;QAAlB,+EAAkB;QAElF,0DAAoC;QAApC,+GAAoC;QAO+B,0DAAoB;QAApB,oFAAoB;QACpB,0DAAgB;QAAhB,gFAAgB;QAChB,0DAAoB;QAApB,oFAAoB;o5FDhKrF,+DAAc;6FAIf,mBAAmB;cAT/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;;sBAgCyD,oDAAM;uBAAC,wEAAe;wBAvBlD,GAAG;kBAA9B,uDAAS;mBAAC,eAAe;;;;;;;;;;;;;;AE1C5B;AAAA;AAAA;AAAA;AAAA;AAA2C;AACwB;;;AAO1D,MAAM,6BAA6B;IAGxC,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAFrC,YAAO,GAAG,GAAG,qEAAW,CAAC,QAAQ,UAAU,CAAE;IAEJ,CAAC;IAE1C,oBAAoB,CAAC,MAAM;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,uBAAuB,EAAC,MAAM,CAAC,CAAC;IACzE,CAAC;IAED,oBAAoB,CAAC,MAAM;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,uBAAuB,EAAC,MAAM,CAAC,CAAC;IACzE,CAAC;IACD,iCAAiC;IACjC,4BAA4B;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,+BAA+B,CAAC,CAAC;IACzE,CAAC;IACD,iCAAiC;IACjC,iCAAiC,CAAC,EAAE;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,sCAAsC,EAAE,EAAE,CAAC,CAAC;IACpF,CAAC;IACD,EAAE;IACF,2BAA2B,CAAC,MAAM;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,8BAA8B,EAAC,MAAM,CAAC,CAAC;IAChF,CAAC;IACD,YAAY;IACZ,iCAAiC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,oCAAoC,CAAC,CAAC;IAC9E,CAAC;IACD,cAAc;IACd,sCAAsC,CAAC,EAAE;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,2CAA2C,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IACD,oBAAoB,CAAC,EAAE,EAAC,OAAO;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,yBAAyB,EAAE,IAAI,OAAO,EAAE,CAAC,CAAC;IACrF,CAAC;IAED,2BAA2B,CAAC,YAAY;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,sCAAsC,YAAY,EAAE,CAAC,CAAC;IAC9F,CAAC;;0GAtCU,6BAA6B;gHAA7B,6BAA6B,WAA7B,6BAA6B,mBAH5B,MAAM;6FAGP,6BAA6B;cAJ3C,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACNH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACqC;AAIlD;AAEL;AACyB;AAClB;AACA;AAGyC;;;;;;;;;;;;;;;;;;;;;ICAnF,4EAAiE;IAAA,oFAAyB;IAAA,4DAAY;;;IAUtG,4EAAiE;IAAA,yFAA8B;IAAA,4DAAY;;;IAU3G,4EAA6D;IAAA,gFAAqB;IAAA,4DAAY;;;IASjG,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAF2D,6EAAgB;IACvF,0DACD;IADC,2FACD;;;IAMA,4EAA6C;IAAA,8EAAmB;IAAA,4DAAY;;;IAUzE,4EAAwD;IAAA,gFAAqB;IAAA,4DAAY;;;IAOzF,4EAAwD;IAAA,iFAAsB;IAAA,4DAAY;;;IAqC1F,4EAA4D;IAAA,iFAC5D;IAAA,4DAAY;;;IACZ,4EAA2D;IAAA,uFAC3D;IAAA,4DAAY;;;IAUV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMA,4EAAyD;IAAA,4EAAiB;IAAA,4DAAY;;;IAStF,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMA,4EAA0D;IAAA,6EAAkB;IAAA,4DAAY;;;IAaxF,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMA,4EAA4D;IAAA,+EAAoB;IAAA,4DAAY;;ADjJtG,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AAaM,MAAM,eAAe;IAuB1B,YAAoB,EAAe,EAAS,cAAgC,EAAU,iBAAgD,EAC5H,QAAqB,EAAU,MAAc,EAAU,QAAkB,EAAS,MAAiB,EACnG,aAA4B;QAFlB,OAAE,GAAF,EAAE,CAAa;QAAS,mBAAc,GAAd,cAAc,CAAkB;QAAU,sBAAiB,GAAjB,iBAAiB,CAA+B;QAC5H,aAAQ,GAAR,QAAQ,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,WAAM,GAAN,MAAM,CAAW;QACnG,kBAAa,GAAb,aAAa,CAAe;QAVtC,WAAM,GAAG,IAAI,CAAC;QAMd,SAAI,GAAY,IAAI,CAAC;IAMrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YAC1C,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACnC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,CAAC;YACjC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;YAC9F,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACxC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,oBAAoB;IACtB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,YAAY,CAAC,IAAY;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,WAAW,CAAC,IAAY;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;oBACnB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;yBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;oBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC9D,CAAC,SAAc,EAAE,EAAE;wBACjB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;wBACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACjE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;6BAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACjC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,QAAa,EAAE,EAAE;wBAChB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;wBACvB,mEAAmE;wBACnE,4CAA4C;wBAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;6BAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;gBACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBAEX,CAAC,CACF;aACF;iBAAM;aAEN;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,yCAAyC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,SAAc,EAAE,EAAE;YACjB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,oEAAoE;YACpE,6CAA6C;YAC7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAEjC,IAAI,MAAM,GAAG;gBACX,UAAU,EAAE,IAAI,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU;gBAC3E,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBACjC,YAAY,EAAE,UAAU,CAAC,YAAY;gBACrC,QAAQ,EAAE,UAAU,CAAC,QAAQ;gBAC7B,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC1B,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,iBAAiB,EAAE,UAAU,CAAC,YAAY;gBAC1C,QAAQ,EAAE,UAAU,CAAC,YAAY;gBACjC,QAAQ,EAAE,UAAU,CAAC,YAAY;gBACjC,GAAG,EAAE,UAAU,CAAC,OAAO;gBACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ;gBAC7B,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC3B,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC7B,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE;gBACjC,OAAO,EAAE,UAAU,CAAC,OAAO;gBAC3B,SAAS,EAAE,UAAU,CAAC,KAAK;gBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;gBACvC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;aACrC;YACD,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3D,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,cAAc,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAClF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uEAAuE,CAAC,CAAC,CAAC;iBACjG;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;YACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAClF,CAAC,CACF;SACF;aACI;YACH,OAAM;YACN,iFAAiF;SAClF;IAGH,CAAC;IAED,eAAe,CAAC,IAAe;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3C,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACnC,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACX,CAAC;IAED,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,UAAe,EAAE,EAAE;YAClB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,oEAAoE;YACpE,6CAA6C;YAE7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;YACnB,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnC,wCAAwC;IAC1C,CAAC;IACD,YAAY,CAAC,KAAK;QAChB,wCAAwC;IAC1C,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC;IAED,UAAU;QACR,IAAI,MAAM,GAAG,EAEZ;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAkB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YACf,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,SAAS,EAAE;gBACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC9C;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,qBAAqB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC1F;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC9C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBACtE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAC1E,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QACX,CAAC,CACF;IACH,CAAC;IACO,oBAAoB,CAAC,IAAY;QACvC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/F,CAAC;IACD,oBAAoB,CAAC,IAAS;QAC5B,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IAED,0BAA0B;QACxB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,SAAS,CACrE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;gBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;oBAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAChE,wDAAwD;iBACzD;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChE,kGAAkG;aACnG;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF,CAAC;IAEJ,CAAC;;8EArZU,eAAe;+FAAf,eAAe;;;;;qFAJf,CAAC,wDAAQ,CAAC;QClCvB,yEAEE;QAAA,0EAGE;QAF8B,uIAAU,cAAU,IAAC,mGAAkB,uBAAuB,IAAzC;QAEnD,yEAEE;QAAA,oFACE;QAAA,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,sEACA;QAAA,yEACE;QAAA,8EAAkF;QAAA,yEAAc;QAAA,4DAAW;QAC7G,4DAAM;QACN,yHAAsG;QAExG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,6EAAiB;QAAA,4DAAY;QACxC,4EAEA;QADA,yIAAU,gCAA4B,IAAC;QADvC,4DAEA;QAAA,+EAC+C;QAAA,uEAAW;QAAA,4DAAW;QACrE,yHAA2G;QAG7G,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA8E;QAAA,2EAC9E;QAAA,4DAAW;QACX,yHAA8F;QAGhG,4DAAiB;QAEjB,qFACF;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,4FACC;QAAA,4HAEa;;QACd,4DAAmB;QACnB,0EACC;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAA8E;QAAA,0EAAc;QAAA,4DAAW;QACxG,4DAAM;QACL,yHAA4E;QAC9E,4DAAiB;QAChB,4DAAM;QAEN,0EAEE;QAAA,qFACF;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA2C;QAAvB,0IAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAW;QAC7D,yHAAyF;QAE9F,4DAAiB;QACjB,qFACC;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,gFAA2C;QAAvB,0IAAS,gBAAY,IAAC;QAAC,uEAAW;QAAA,4DAAW;QAC7D,yHAA0F;QAE/F,4DAAiB;QAEd,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,gFAA2E;QAAA,iEAAK;QAAA,4DAAW;QAG7F,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QAGnG,4DAAiB;QAEnB,4DAAM;QAEN,0EAEE;QAAA,qFACE;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QAGnG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,6EAEA;QADE,yIAAU,qBAAiB,IAAC;QAD9B,4DAEA;QAAA,gFAA8E;QAAA,qEAAS;QAAA,4DAAW;QAClG,yHACY;QACZ,yHACY;QAEd,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,wEAEA;QAAA,4FAEE;QADF,0KAAkB,qCAAiC,IAAC;QAClD,4HAEa;;QACf,4DAAmB;QACnB,0EACH;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QAC7D,gFAA2E;QAAA,yEAAa;QAAA,4DAAW;QACpG,4DAAM;QACJ,yHAAsF;QAE1F,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEAEA;QAAA,4FAEE;QADA,0KAAkB,sCAAkC,IAAC;QACrD,8HAEa;;QACf,4DAAmB;QACnB,2EACH;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QAC5D,iFAA4E;QAAA,0EAAa;QAAA,4DAAW;QACtG,4DAAM;QACJ,2HAAwF;QAE5F,4DAAiB;QACnB,4DAAM;QAEN,2EAEE;QAAA,sFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEAEA;QAAA,6FAEE;QADA,2KAAkB,wCAAoC,IAAC;QACvD,8HAEa;;QACf,4DAAmB;QACnB,2EACH;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QAC5D,iFAA8E;QAAA,0EAAa;QAAA,4DAAW;QACxG,4DAAM;QACJ,2HAA4F;QAEhG,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAC/B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QAGtG,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QAGtG,4DAAiB;QACjB,4EACE;QAAA,6FAEE;QAF0E,2JAAU,wBAAoB,IAAC;QAEzG,yDAAoC;QAAA,4DAAmB;QAC3D,4DAAM;QAER,4DAAM;QAEN,4EACE;QAAA,+EAAuD;QAAA,iEAAI;QAAA,4DAAS;QACpE,+EACqF;QAAA,mEAAM;QAAA,4DAAS;QACtG,4DAAM;QACR,4DAAO;QACT,4DAAM;;;;;;QAjME,0DAAkB;QAAlB,+EAAkB;QAWN,0DAAmD;QAAnD,mHAAmD;QAS/D,0DAA8C;QAA9C,yGAA8C;QAClC,0DAAmD;QAAnD,mHAAmD;QAUnD,0DAA+C;QAA/C,+GAA+C;QAOkB,0DAA6B;QAA7B,gFAA6B;QAC9D,0DAAoC;QAApC,iGAAoC;QACpD,0DAAuC;QAAvC,wKAAuC;QAQ1D,0DAA+B;QAA/B,+FAA+B;QAU5B,0DAA0C;QAA1C,0GAA0C;QAO1C,0DAA0C;QAA1C,0GAA0C;QAqC1C,2DAA8C;QAA9C,8GAA8C;QAE9C,0DAA6C;QAA7C,6GAA6C;QAON,0DAA4B;QAA5B,iFAA4B;QAEjC,0DAA2B;QAA3B,wFAA2B;QAExC,0DAA6B;QAA7B,8JAA6B;QAQhD,0DAA2C;QAA3C,2GAA2C;QAKL,0DAA6B;QAA7B,iFAA6B;QAElC,0DAA4B;QAA5B,yFAA4B;QAE1C,0DAA8B;QAA9B,gKAA8B;QAQjD,0DAA4C;QAA5C,4GAA4C;QAUxD,0DAA+B;QAA/B,iFAA+B;QACgB,0DAA8B;QAA9B,2FAA8B;QAE9C,0DAAgC;QAAhC,kKAAgC;QAQnD,0DAA8C;QAA9C,8GAA8C;QAmBH,2DAAkB;QAAlB,+EAAkB;QAEzE,0DAAoC;QAApC,+GAAoC;ssEDvJhC,+DAAc;6FAKf,eAAe;cAV3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;2uBAiB6B,GAAG;kBAA9B,uDAAS;mBAAC,eAAe","file":"register-charger-request-register-charger-request-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\n\r\nexport class ApprovedChargerRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  charger_id: string;\r\n  charger_name: string;\r\n  charger_serial_no: string;\r\n  station_name: string;\r\n  provider: string;\r\n  model: string;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  image_url: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-approved-list',\r\n  templateUrl: './approved-list.component.html',\r\n  styleUrls: ['./approved-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class ApprovedListComponent implements OnInit {\r\n\r\n  filterEntity: ApprovedChargerRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'charger_name', 'charger_serial_no', 'station_name', 'city_name', 'state_name', 'status','action'];\r\n  head = [['UserName', 'Charger Name', 'Charger Serial No', 'Station Name', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<ApprovedChargerRequest>;\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  charNameSearch = false;\r\n  serialSearch = false;\r\n  stationSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  approvedCharReq: any;\r\n\r\n  constructor(private regCharReqService: RegisterChargerRequestService, public dialog: MatDialog, private fb: FormBuilder,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new ApprovedChargerRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getApprovedRejectCharReq();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getApprovedRejectCharReq() {\r\n    if (this.localStorage.role_name != \"END USER\") {\r\n      this.regCharReqService.getAllApproveRejectChargerRequest().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.approvedCharReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.approvedCharReq.length; i++) {\r\n                if (this.approvedCharReq[i].status == 'A') {\r\n                  this.approvedCharReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.approvedCharReq[i].statusString = 'Rejected';\r\n                }\r\n                if(this.approvedCharReq[i].user_name == null ){\r\n                  this.approvedCharReq[i].user_name = '';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.approvedCharReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    } else {\r\n      this.regCharReqService.getApproveRejectChargerRequestByUserId(this.localStorage.userId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.approvedCharReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.approvedCharReq.length; i++) {\r\n                if (this.approvedCharReq[i].status == 'A') {\r\n                  this.approvedCharReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.approvedCharReq[i].statusString = 'Rejected';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.approvedCharReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.regCharReqService.deleteChargerRequest(id, this.localStorage.userId).subscribe(\r\n  //         (resp: any) => {\r\n  //           if (resp.status == true) {\r\n  //             this.getApprovedRejectCharReq();\r\n  //             this.cdr.detectChanges();\r\n  //             this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n  //           } else {\r\n  //             this.snackBar.open(resp.message, 'Dismiss', { duration: 2000 });\r\n  //           }\r\n\r\n  //         }, (err) => {\r\n  //           this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getApprovedRejectCharReq();\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getApprovedRejectCharReq();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = '';\r\n    }\r\n    if (visibleOption == 'charNameSearch') {\r\n      this.charNameSearch = !this.charNameSearch;\r\n      this.filterEntity.charger_name = '';\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.charger_serial_no = '';\r\n    }\r\n    if (visibleOption == 'stationSearch') {\r\n      this.stationSearch = !this.stationSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = '';\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'UserName': evDealers.user_name, 'Charger Name': evDealers.charger_name, 'Charger Serial No': evDealers.charger_serial_no,\r\n        'Station Name': evDealers.station_name, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Approved/Reject Charger Request List');\r\n    XLSX.writeFile(workBook, 'Approved/Reject Charger Request List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.user_name, evDealers.charger_name, evDealers.charger_serial_no, evDealers.station_name, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Approved/Reject Charger Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Approved/Reject Charger Request List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">UserName<mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"UserName\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charger_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"charNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Name\" [(ngModel)]=\"filterEntity.charger_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charger_serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Serial No\" [(ngModel)]=\"filterEntity.charger_serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_serial_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"stationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Name \" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'moderateAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>  \r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterChargerRequestCrudComponent } from './register-charger-request-crud/register-charger-request-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './register-charger-request-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RegisterChargerRequestCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RegisterChargerRequestRoutingModule{}","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-register-charger-request-crud',\r\n  templateUrl: './register-charger-request-crud.component.html',\r\n  styleUrls: ['./register-charger-request-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class RegisterChargerRequestCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Charger Requests', link: 'listMyChargerRequests' },\r\n    // { label: 'Approve/Reject Requests', link: 'listMyPendingChargerRequests' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"customerManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"registerChargerRequest\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"myChargerRequests\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Charger Requests', link: 'listMyChargerRequests' });\r\n                  }\r\n                  if (z.id === \"myPendingChargerRequests\") {\r\n                    this.tempLinks.push({ label: 'Approve/Reject Requests', link: 'listMyPendingChargerRequests' });\r\n                  }\r\n                  if (z.id === \"addChargerToRegister\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/customerManagement/registerChargerRequest/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ApprovedListComponent } from '../approved-list/approved-list.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n     path : 'create', component : CreateComponent,canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listMyChargerRequests', component : ListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listMyPendingChargerRequests', component : ApprovedListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path: '', redirectTo: 'listMyChargerRequests', pathMatch: 'full' \r\n  },\r\n];\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\n\r\n\r\nexport class ChargerRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  charger_id: string;\r\n  charger_name: string;\r\n  charger_serial_no: string;\r\n  station_name: string;\r\n  provider: string;\r\n  model: string;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  image_url: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: ChargerRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'charger_name', 'charger_serial_no', 'station_name', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['UserName', 'Charger Name', 'Charger Serial No', 'Station Name', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<ChargerRequest>;\r\n\r\n  chargerReq: ChargerRequest[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  charNameSearch = false;\r\n  serialSearch = false;\r\n  stationSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n\r\n\r\n  constructor(private regCharReqService: RegisterChargerRequestService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new ChargerRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllModCharRequest();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllModCharRequest() {\r\n    if (this.localStorage.role_name != \"END USER\") {\r\n      this.regCharReqService.getAllModerateChargerRequest().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.chargerReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.chargerReq.length; i++) {\r\n                if (this.chargerReq[i].status == 'A') {\r\n                  this.chargerReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.chargerReq[i].statusString = 'Moderate';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.chargerReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 });\r\n            }\r\n            \r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    } else {\r\n      this.regCharReqService.getModerateChargerRequestByUserId(this.localStorage.userId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.chargerReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.chargerReq.length; i++) {\r\n                if (this.chargerReq[i].status == 'A') {\r\n                  this.chargerReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.chargerReq[i].statusString = 'Moderate';\r\n                }\r\n                if(this.chargerReq[i].user_name == null ){\r\n                  this.chargerReq[i].user_name = '';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.chargerReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 })\r\n            }\r\n\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.regCharReqService.deleteChargerRequest(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.getAllModCharRequest();\r\n              this.cdr.detectChanges();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModCharRequest();\r\n    });\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModCharRequest();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = '';\r\n    }\r\n    if (visibleOption == 'charNameSearch') {\r\n      this.charNameSearch = !this.charNameSearch;\r\n      this.filterEntity.charger_name = '';\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.charger_serial_no = '';\r\n    }\r\n    if (visibleOption == 'stationSearch') {\r\n      this.stationSearch = !this.stationSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = '';\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var charReq = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Username': charReq.user_name, 'Charger Name': charReq.charger_name, 'Charger Serial No': charReq.charger_serial_no,\r\n        'Station Name': charReq.station_name, 'City': charReq.city_name, 'State': charReq.state_name,\r\n        'Status': charReq.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Charger Request List');\r\n    XLSX.writeFile(workBook, 'Charger Request List.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var charReq = this.dataSource.filteredData[i];\r\n\r\n      var data = [charReq.user_name, charReq.charger_name, charReq.charger_serial_no, charReq.station_name, charReq.city_name,\r\n      charReq.state_name, charReq.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Charger Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('Charger Request List.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"UserName\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"charger_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"charNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Name\" [(ngModel)]=\"filterEntity.charger_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charger_serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Serial No\" [(ngModel)]=\"filterEntity.charger_serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_serial_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"stationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Name \" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Approved / Reject\" (click)=\"viewDialog('Action',element,'buttonAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Reject\" (click)=\"viewDialog('Reject',element,'rejectAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='End User' \">remove_moderator</mat-icon>&nbsp;&nbsp; -->\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" \r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RegisterChargerRequestRoutingModule } from './register-charger-request-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { RegisterChargerRequestCrudComponent } from './register-charger-request-crud/register-charger-request-crud.component';\r\nimport { ApprovedListComponent } from './approved-list/approved-list.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\n\r\nconst COMPONENTS = [RegisterChargerRequestCrudComponent, CreateComponent, ListComponent, ApprovedListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        RegisterChargerRequestRoutingModule,\r\n        FuseSharedModule,\r\n    ],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RegisterChargerRequestModule { }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog,MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  menuArray: any;\r\n  mLat: any;\r\n  mLong:any;\r\n  connectorTypes: any;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerData: any;\r\n  flag: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder, private regCharReqService :RegisterChargerRequestService,private masterService: MasterService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,public dialog : MatDialog,private router: Router,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      station_name: ['', [Validators.required, ]],\r\n      charger_id: ['', [Validators.required,Validators.pattern(/^[0-9]*$/) ]],\r\n      provider: ['', [Validators.required, ]],\r\n      model: ['', [Validators.required,]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      char_seri_no:['',Validators.required],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks:[''],\r\n      image:[''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n    this.getConnectorTypes();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id); \r\n    this.getAllCity(this.params.data.state_id); \r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c =>c.id == this.params.data.city_id );\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        charger_id: formValues.charger_id,\r\n        user_id: this.localStorage.userId, \r\n        station_name: formValues.station_name,\r\n        provider: formValues.provider,\r\n        model: formValues.model.id,\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        charger_serial_no: formValues.char_seri_no,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks:formValues.remarks,\r\n        image_url: formValues.image,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.regCharReqService.updateChargerRequest(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            } \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      } else {\r\n        this.regCharReqService.createChargerRequest(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }\r\n    }else{\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('station_name').setValue(params.data.station_name);\r\n    this.form.get('charger_id').setValue(params.data.charger_id);\r\n    this.form.get('provider').setValue(params.data.provider);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('char_seri_no').setValue(params.data.charger_serial_no);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.form.get('image').setValue(params.data.image_url);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        this.connectorTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.connectorTypes.find(c => c.id == this.params.data.model);\r\n          this.form.get('model').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsConnectorType = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  } \r\n  \r\n  checkMappedChargerSerialNo() {\r\n    let charSerNo = this.form.value.char_seri_no;\r\n    this.regCharReqService.checkChargerSeriolNoMapping(charSerNo).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == false) {\r\n          this.flag = true;\r\n          if (resp.data != null || resp.data != undefined) {\r\n            this.chargerData = resp.data[0];\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            //this.snackBar.open('', 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        } else {\r\n          this.chargerData = resp.data[0];\r\n          this.flag = false;\r\n          this.form.get('char_seri_no').setValue('');\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          //this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Station Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"station_name\" type=\"text\"  autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station name\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('station_name').invalid\">Please enter station name </mat-error>\r\n        </mat-form-field>\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Charger Seriol No</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"char_seri_no\"  autocomplete=\"off\" type=\"text\"\r\n          (change)=\"checkMappedChargerSerialNo()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger seriol no\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('char_seri_no').invalid\">Please enter charger seriol no\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Provider</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"provider\" type=\"text\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter provider\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('provider').hasError('required')\">Please enter provider</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('provider').hasError('pattern')\">Special character are not allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Model</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required  [matAutocomplete]=\"modelAuto\">\r\n          <mat-autocomplete #modelAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select model\">model_training</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('model').invalid\">Please select model</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Latitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lat\" required type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Longitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lng\" required type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Image</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"image\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter image\">image</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('image').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n           <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" type=\"text\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement disabled=\"true\">\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n  \r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isButtonAction: boolean = false;\r\n  isModerate: boolean = false;\r\n  menuArray: any;\r\n  mLat: any;\r\n  mLong:any;\r\n  connectorTypes: any;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerData: any;\r\n  flag: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder, private regCharReqService :RegisterChargerRequestService,private masterService: MasterService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,public dialog : MatDialog,private router: Router,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isButtonAction = this.params.buttonAction == 'buttonAction' ? true : false; //convert moderate to reject\r\n    this.isModerate = this.params.buttonAction == 'moderateAction' ? true : false; //convert publish to approved\r\n    this.form = this.fb.group({\r\n      station_name: ['', [Validators.required, ]],\r\n      charger_id: ['', [Validators.required,Validators.pattern(/^[0-9]*$/) ]],\r\n      provider: ['', [Validators.required, ]],\r\n      model: ['', [Validators.required,]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      char_seri_no:['',Validators.required],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks:[''],\r\n      image:[''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getConnectorTypes();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('station_name').setValue(params.data.station_name);\r\n    this.form.get('charger_id').setValue(params.data.charger_id);\r\n    this.form.get('provider').setValue(params.data.provider);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('char_seri_no').setValue(params.data.charger_serial_no);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.form.get('image').setValue(params.data.image_url);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n    if(this.isModerate){\r\n      this.status = params.data.status == 'A' ? true : (params.data.status == 'R' ? true : false);\r\n    }\r\n\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onApproved(){\r\n    const params: any = {\r\n      id : this.params.data.id,\r\n      status: \"A\",//this.params.data.status === \"Y\" ? \"M\" : \"N\",\r\n      modify_by :this.localStorage.userId\r\n    }\r\n    this.regCharReqService.approveRejectChargerRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if(resp.status == true){\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } \r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onReject(){\r\n    const params: any = {\r\n      id : this.params.data.id,\r\n      status: \"R\",//this.params.data.status === \"M\" ? \"R\" : \"N\",\r\n      modify_by :this.localStorage.userId\r\n    }\r\n    this.regCharReqService.approveRejectChargerRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if(resp.status == true){\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } \r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onModerate(){\r\n    if(this.isModerate){\r\n      const params:any = {\r\n        id: this.params.data.id,\r\n        status: \"M\",\r\n        modify_by:this.localStorage.userId\r\n      }\r\n      this.regCharReqService.approveRejectChargerRequest(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(resp.message,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n          \r\n        },(err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        this.connectorTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.connectorTypes.find(c => c.id == this.params.data.model);\r\n          this.form.get('model').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsConnectorType = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  checkMappedChargerSerialNo() {\r\n    let charSerNo = this.form.value.char_seri_no;\r\n    this.regCharReqService.checkChargerSeriolNoMapping(charSerNo).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == false) {\r\n          this.flag = true;\r\n          if (resp.data != null || resp.data != undefined) {\r\n            this.chargerData = resp.data[0];\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            //this.snackBar.open('', 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        } else {\r\n          this.chargerData = resp.data[0];\r\n          this.flag = false;\r\n          this.form.get('char_seri_no').setValue('');\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          //this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    );\r\n  }  \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Station Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"station_name\" type=\"text\"  autocomplete=\"off\" readonly>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station name\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('station_name').invalid\">Please enter station name </mat-error>\r\n        </mat-form-field>\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Charger Seriol No</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"char_seri_no\"  autocomplete=\"off\" type=\"text\"\r\n          (change)=\"checkMappedChargerSerialNo()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger seriol no\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('char_seri_no').invalid\">Please enter charger seriol no\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Provider</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"provider\" type=\"text\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter provider\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('provider').hasError('required')\">Please enter provider</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('provider').hasError('pattern')\">Special character are not allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Model</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required  [matAutocomplete]=\"modelAuto\">\r\n          <mat-autocomplete #modelAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select model\">model_training</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('model').invalid\">Please select model</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Latitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lat\" readonly type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Longitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lng\" readonly type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Image</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"image\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter image\">image</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('image').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n           <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" readonly>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" type=\"text\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      \r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isButtonAction\" (click)=\"onReject()\">Reject</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModerate\" (click)=\"onModerate()\">Moderate</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isButtonAction\" (click)=\"onApproved()\">Approved</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n        \r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\n  export class RegisterChargerRequestService {\r\n    apiUrl2 = `${environment.API_URL2}/charger` ;\r\n  \r\n    constructor(private http : HttpClient) { }\r\n\r\n    createChargerRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/createChargerRequest`,params);\r\n    }\r\n    \r\n    updateChargerRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/updateChargerRequest`,params);\r\n    }\r\n    //for admin get all moderate list\r\n    getAllModerateChargerRequest(){\r\n        return this.http.get(`${this.apiUrl2}/getAllModerateChargerRequest`);\r\n    }\r\n    // for end user get moderate list\r\n    getModerateChargerRequestByUserId(id){\r\n        return this.http.get(`${this.apiUrl2}/getModerateChargerRequestByUserId/${id}`);\r\n    }\r\n    //\r\n    approveRejectChargerRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/approveRejectChargerRequest`,params);\r\n    }\r\n    // for admin\r\n    getAllApproveRejectChargerRequest(){\r\n        return this.http.get(`${this.apiUrl2}/getAllApproveRejectChargerRequest`);\r\n    }\r\n    //for end user\r\n    getApproveRejectChargerRequestByUserId(id){\r\n        return this.http.get(`${this.apiUrl2}/getApproveRejectChargerRequestByUserId/${id}`);\r\n    }\r\n    deleteChargerRequest(id,user_id){\r\n        return this.http.delete(`${this.apiUrl2}/deleteChargerRequest/${id}/${user_id}`);\r\n    }\r\n\r\n    checkChargerSeriolNoMapping(charSeriolNo){\r\n        return this.http.get(`${this.apiUrl2}/checkChargerMappedToStationBySrNo/${charSeriolNo}`);\r\n    }\r\n\r\n\r\n  }","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  mLat: any;\r\n  mLong: any;\r\n  connectorTypes: any;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerData: any;\r\n  flag: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder, public countryService: CountriesService, private regCharReqService: RegisterChargerRequestService,\r\n    private snackBar: MatSnackBar, private router: Router, private datePipe: DatePipe, public dialog: MatDialog,\r\n    private masterService: MasterService,) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      station_name: ['', [Validators.required,]],\r\n      provider: ['', [Validators.required,]],\r\n      model: ['', [Validators.required,]],\r\n      lat: ['', [Validators.required,]],\r\n      lng: ['', Validators.required],\r\n      char_seri_no: ['', Validators.required],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      image: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    this.getConnectorTypes();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        charger_id: this.chargerData == undefined ? 0 : this.chargerData.charger_id,\r\n        user_id: this.localStorage.userId,\r\n        station_name: formValues.station_name,\r\n        provider: formValues.provider,\r\n        model: formValues.model.id,\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        charger_serial_no: formValues.char_seri_no,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks: formValues.remarks,\r\n        image_url: formValues.image,\r\n        status: this.status == true ? 'M' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n      this.regCharReqService.createChargerRequest(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.chargerRequest, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getLatLong() {\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height: '410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null || result != undefined) {\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      } else {\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getConnectorTypes() {\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data: any) => {\r\n        this.connectorTypes = data;\r\n        this.filteredOptionsConnectorType = this.form.controls.model.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  checkMappedChargerSerialNo() {\r\n    let charSerNo = this.form.value.char_seri_no;\r\n    this.regCharReqService.checkChargerSeriolNoMapping(charSerNo).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == false) {\r\n          this.flag = true;\r\n          if (resp.data != null || resp.data != undefined) {\r\n            this.chargerData = resp.data[0];\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            //this.snackBar.open('', 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        } else {\r\n          this.chargerData = resp.data[0];\r\n          this.flag = false;\r\n          this.form.get('char_seri_no').setValue('');\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          //this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Station Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"station_name\" type=\"text\"  autocomplete=\"off\" required>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station name\">model_training</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('station_name').hasError('required')\">Please enter station name</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('station_name').invalid\">Please enter station name </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Charger Seriol No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"char_seri_no\"  autocomplete=\"off\" type=\"text\"\r\n        (change)=\"checkMappedChargerSerialNo()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger seriol no\" \r\n        [color]=\"flag  === true ? 'primary' : 'warn' \">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('char_seri_no').hasError('required')\">Please enter charger seriol no</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('char_seri_no').invalid\">Please enter charger seriol no\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Provider</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"provider\" type=\"text\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter provider\">account_circle\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('provider').hasError('required')\">Please enter provider</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('provider').invalid\">Please enter provider</mat-error> -->\r\n        <!-- <mat-error *ngIf=\"form.get('provider').hasError('pattern')\">Special character are not allowed</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Model</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required  [matAutocomplete]=\"modelAuto\">\r\n\t\t\t\t<mat-autocomplete #modelAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select model\">model_training</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('model').invalid\">Please select model</mat-error>\r\n\t\t\t</mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      \r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" required type=\"text\">\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter latitude</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required type=\"text\">\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter longitude</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Image</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"image\"  autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter image\">image</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('image').invalid\">Please enter remarks\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" >\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n          (change)=\"getStateCountry()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n        (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n         <!-- <mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error> -->\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"countryAuto\" required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Remarks</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" type=\"text\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n      <div fxFlex=\"25\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement disabled=\"true\" disabled=\"true\">\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n\r\n    </div>\r\n  \r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/customerManagement/registerChargerRequest/crud/listMyChargerRequests\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>"],"sourceRoot":"webpack:///"}