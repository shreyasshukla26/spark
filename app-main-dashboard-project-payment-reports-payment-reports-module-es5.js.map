{"version":3,"sources":["webpack:///src/app/main/dashboard/project/payment-reports/pending-payment-report/pending-payment-report.component.ts","webpack:///src/app/main/dashboard/project/payment-reports/pending-payment-report/pending-payment-report.component.html","webpack:///src/app/main/dashboard/project/payment-reports/refund-payment-report/refund-payment-report.component.ts","webpack:///src/app/main/dashboard/project/payment-reports/refund-payment-report/refund-payment-report.component.html","webpack:///src/app/main/dashboard/project/payment-reports/cancle-payment-report/cancle-payment-report.component.ts","webpack:///src/app/main/dashboard/project/payment-reports/cancle-payment-report/cancle-payment-report.component.html","webpack:///src/app/main/dashboard/project/payment-reports/payment-reports-routing.module.ts","webpack:///src/app/main/dashboard/project/payment-reports/successful-payment-report/successful-payment-report.component.ts","webpack:///src/app/main/dashboard/project/payment-reports/successful-payment-report/successful-payment-report.component.html","webpack:///src/app/main/dashboard/project/payment-reports/payment-reports.module.ts"],"names":["PendingPaymentReport","PendingPaymentReportComponent","snackBar","reportservice","fb","datepipe","cdr","_utilityService","displayedRfidColumns","head","transIdSearch","payModeSearch","charTransIdSearch","chargerTypeSearch","amountSearch","dateConvertSearch","statusSearch","tempDate","Date","currDate","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","filterEntity","filterType","ANYWHERE","chargerForm","group","name","toDate","fromDate","setDate","getDate","getPendingTransaction","event","filterValue","target","value","dataChargerSource","filter","trim","toLowerCase","paginator","firstPage","formValues","params","station_id","status","f_date","transform","t_date","getPendingTransactionCW","userId","resp","pendingPayment","data","i","length","dateConvert","rfidPaginator","sort","rfidSort","open","err_code","duration","err","visibleOption","ev","TransactionId","ChargerType","Amount","charger_transaction_id","payment_mode","Status","exportedData","filteredData","pendingpay","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","applyFilter","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","energyPaginator","energySort","RefundPaymentReport","RefundPaymentReportComponent","form","getRefundTransaction","dataSource","refundPayment","refundpay","CanclePaymentReport","CanclePaymentReportComponent","getCancleTransaction","canclePayment","canclepay","routes","path","component","canActivate","PaymentReportsRoutingModule","forChild","imports","exports","SuccessfulPaymentReport","SuccessfulPaymentReportComponent","getSuccessTransaction","getSuccessTransactionCW","succPayment","succpay","COMPONENTS","COMPONENTS_DYNAMIC","PaymentReportsModule","declarations","entryComponents"],"mappings":"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","file":"app-main-dashboard-project-payment-reports-payment-reports-module-es5.js","sourcesContent":["\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class PendingPaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Gateway_transactionid: string;\r\n  bank_transactionid: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'pending-payment-report',\r\n  templateUrl: './pending-payment-report.component.html',\r\n  styleUrls: ['./pending-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class PendingPaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: PendingPaymentReport;\r\n  dataSource: MatTableDataSource<PendingPaymentReport>;\r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  chargerForm: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  pendingPayment: PendingPaymentReport[];\r\n  dataChargerSource: MatTableDataSource<PendingPaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new PendingPaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.chargerForm = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getPendingTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataChargerSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataChargerSource.paginator) {\r\n      this.dataChargerSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getPendingTransaction() {\r\n    let formValues = this.chargerForm.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      status:\"P\",\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n    }\r\n    this.reportservice.getPendingTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.pendingPayment = resp.data;\r\n          for (var i = 0; i < this.pendingPayment.length; i++) {\r\n            this.pendingPayment[i].dateConvert = this.datepipe.transform(this.pendingPayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataChargerSource = new MatTableDataSource(this.pendingPayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataChargerSource.paginator = this.rfidPaginator;\r\n          this.dataChargerSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var pendingpay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': pendingpay.TransactionId, 'Charger Type': pendingpay.ChargerType, 'Payment Mode': pendingpay.payment_mode,\r\n        'Charger Trans Id': pendingpay.charger_transaction_id, 'Status': pendingpay.Status, 'Amount': pendingpay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Pending Transaction Report');\r\n    XLSX.writeFile(workBook, 'Pending Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  // getChargerLogs(){\r\n  //   this.getChargerReportCW();\r\n  // }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var pendingpay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [pendingpay.TransactionId, pendingpay.ChargerType, pendingpay.payment_mode, pendingpay.charger_transaction_id, pendingpay.Status,\r\n         pendingpay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Pending Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Pendiing Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"chargerForm\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!chargerForm.value.fromDate ? chargerForm.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getPendingTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getPendingTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataChargerSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class RefundPaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'refund-payment-report',\r\n  templateUrl: './refund-payment-report.component.html',\r\n  styleUrls: ['./refund-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class RefundPaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: RefundPaymentReport;\r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  refundPayment: RefundPaymentReport[];\r\n  dataSource: MatTableDataSource<RefundPaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new RefundPaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.form = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getRefundTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getRefundTransaction() {\r\n    let formValues = this.form.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n      status:\"R\"\r\n    }\r\n    this.reportservice.getPendingTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.refundPayment = resp.data;\r\n          for (var i = 0; i < this.refundPayment.length; i++) {\r\n            this.refundPayment[i].dateConvert = this.datepipe.transform(this.refundPayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.refundPayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataSource.paginator = this.rfidPaginator;\r\n          this.dataSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var refundpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': refundpay.TransactionId, 'Charger Type': refundpay.ChargerType, 'Payment Mode': refundpay.payment_mode,\r\n        'Charger Trans Id': refundpay.charger_transaction_id, 'Status': refundpay.Status, 'Amount': refundpay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Refund Transaction Report');\r\n    XLSX.writeFile(workBook, 'Refund Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var refundpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [refundpay.TransactionId, refundpay.ChargerType, refundpay.payment_mode, refundpay.charger_transaction_id, \r\n            refundpay.Status, refundpay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Refund Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Refund Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!form.value.fromDate ? form.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getRefundTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getRefundTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class CanclePaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Gateway_transactionid: string;\r\n  bank_transactionid: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'cancle-payment-report',\r\n  templateUrl: './cancle-payment-report.component.html',\r\n  styleUrls: ['./cancle-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CanclePaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: CanclePaymentReport;\r\n  dataSource: MatTableDataSource<CanclePaymentReport>;\r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  canclePayment: CanclePaymentReport[];\r\n  dataChargerSource: MatTableDataSource<CanclePaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new CanclePaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.form = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getCancleTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataChargerSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataChargerSource.paginator) {\r\n      this.dataChargerSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getCancleTransaction() {\r\n    let formValues = this.form.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      status:\"C\",\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n    }\r\n    this.reportservice.getPendingTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.canclePayment = resp.data;\r\n          for (var i = 0; i < this.canclePayment.length; i++) {\r\n            this.canclePayment[i].dateConvert = this.datepipe.transform(this.canclePayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataChargerSource = new MatTableDataSource(this.canclePayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataChargerSource.paginator = this.rfidPaginator;\r\n          this.dataChargerSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var canclepay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': canclepay.TransactionId, 'Charger Type': canclepay.ChargerType, 'Payment Mode': canclepay.payment_mode,\r\n        'Charger Trans Id': canclepay.charger_transaction_id, 'Status': canclepay.Status, 'Amount': canclepay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Cancelled  Transaction Report');\r\n    XLSX.writeFile(workBook, 'Cancelled  Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  // getChargerLogs(){\r\n  //   this.getChargerReportCW();\r\n  // }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var canclepay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [canclepay.TransactionId, canclepay.ChargerType, canclepay.payment_mode, canclepay.charger_transaction_id, canclepay.Status, \r\n        canclepay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Cancelled  Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Cancelled  Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!form.value.fromDate ? form.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getCancleTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getCancleTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataChargerSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SuccessfulPaymentReportComponent } from './successful-payment-report/successful-payment-report.component';\r\nimport { CanclePaymentReportComponent } from './cancle-payment-report/cancle-payment-report.component';\r\nimport { PendingPaymentReportComponent } from './pending-payment-report/pending-payment-report.component';\r\nimport { RefundPaymentReportComponent } from './refund-payment-report/refund-payment-report.component'\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'successfulPaymentReports',component : SuccessfulPaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path : 'cancelPaymentReports',component : CanclePaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path : 'pendingPaymentReports',component : PendingPaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path : 'refundPaymentReports',component : RefundPaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    \r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class PaymentReportsRoutingModule{}","\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class SuccessfulPaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Gateway_transactionid: string;\r\n  bank_transactionid: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'successful-payment-report',\r\n  templateUrl: './successful-payment-report.component.html',\r\n  styleUrls: ['./successful-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class SuccessfulPaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: SuccessfulPaymentReport;\r\n  \r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  chargerForm: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  succPayment: SuccessfulPaymentReport[];\r\n  dataSource: MatTableDataSource<SuccessfulPaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new SuccessfulPaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.chargerForm = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getSuccessTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getSuccessTransaction() {\r\n    let formValues = this.chargerForm.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n    }\r\n    this.reportservice.getSuccessTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.succPayment = resp.data;\r\n          for (var i = 0; i < this.succPayment.length; i++) {\r\n            this.succPayment[i].dateConvert = this.datepipe.transform(this.succPayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.succPayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataSource.paginator = this.rfidPaginator;\r\n          this.dataSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var succpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': succpay.TransactionId, 'Charger Type': succpay.ChargerType, 'Payment Mode': succpay.payment_mode,\r\n        'Charger Trans Id': succpay.charger_transaction_id, 'Status': succpay.Status, 'Amount': succpay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Successful Transaction Report');\r\n    XLSX.writeFile(workBook, 'Successful Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  // getChargerLogs(){\r\n  //   this.getChargerReportCW();\r\n  // }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var succpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [succpay.TransactionId, succpay.ChargerType, succpay.payment_mode, succpay.charger_transaction_id, succpay.Status, succpay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Successful Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Successful Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"chargerForm\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!chargerForm.value.fromDate ? chargerForm.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getSuccessTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getSuccessTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payable_amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { SuccessfulPaymentReportComponent } from './successful-payment-report/successful-payment-report.component';\r\nimport { CanclePaymentReportComponent } from './cancle-payment-report/cancle-payment-report.component';\r\nimport { PendingPaymentReportComponent } from './pending-payment-report/pending-payment-report.component';\r\nimport { RefundPaymentReportComponent } from './refund-payment-report/refund-payment-report.component'\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { PaymentReportsRoutingModule } from './payment-reports-routing.module'\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\n\r\nconst COMPONENTS =[ SuccessfulPaymentReportComponent,CanclePaymentReportComponent,PendingPaymentReportComponent,RefundPaymentReportComponent];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, PaymentReportsRoutingModule,FuseSharedModule,CdkTableModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\nexport class PaymentReportsModule\r\n{\r\n}\r\n\r\n"]}