{"version":3,"sources":["./src/app/main/asset/charger/chargers/charger-crud/charger-crud.component.ts","./src/app/main/asset/charger/chargers/charger-crud/charger-crud.component.html","./src/app/main/asset/charger/chargers/create/create.component.ts","./src/app/main/asset/charger/chargers/create/create.component.html","./src/app/main/asset/charger/chargers/list-client/list-client.component.ts","./src/app/main/asset/charger/chargers/list-client/list-client.component.html","./src/app/main/asset/charger/chargers/action-dialog/action-dialog.component.ts","./src/app/main/asset/charger/chargers/action-dialog/action-dialog.component.html","./src/app/main/asset/charger/chargers/charger-crud/routes.ts","./src/app/main/asset/charger/chargers/chargers-routing.module.ts","./src/app/main/asset/charger/chargers/chargers.module.ts","./src/app/main/asset/charger/chargers/view-dialog/view-dialog.component.ts","./src/app/main/asset/charger/chargers/view-dialog/view-dialog.component.html","./src/app/main/asset/charger/chargers/list/list.component.ts","./src/app/main/asset/charger/chargers/list/list.component.html"],"names":[],"mappings":"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","file":"chargers-chargers-module-es2015.js","sourcesContent":["\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charger-crud',\r\n  templateUrl: './charger-crud.component.html',\r\n  styleUrls: ['./charger-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargerCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Chargers - Plant', link: 'list' },\r\n    // { label: 'Chargers Client', link: 'listClient' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if(this.objectData.children != undefined){\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"chargerManagement\") {\r\n              this.objectChildData = y;\r\n              if(this.objectChildData.children != undefined){\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"crud\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if(this.childData.children != undefined){\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"chargersPlant\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'Chargers - Plant', link: 'list' });\r\n                        }\r\n                        if(t.id === \"chargersClient\"){\r\n                          this.tempLinks.push({ label: 'Chargers Client', link: 'listClient' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n            \r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/chargerManagement/chargers/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n              \r\n  \r\n            }\r\n  \r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { ChargerService } from '@shared/services/client/client.service';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  minDate = new Date();\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n\r\n  form: FormGroup;\r\n  batches:any;\r\n  chargingModels:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  connector_data :any;\r\n\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  filteredOptionsBatch: Observable<any[]>;\r\n  filteredOptionsCharModel: Observable<any[]>;\r\n  filteredOptionsCurrVersion: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  states:any;\r\n  stateName:any;\r\n  cities:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n \r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private chargingModelService : ChargingModelService,\r\n    private snackBar: MatSnackBar,public countryService: CountriesService,\r\n    private router : Router, private datePipe: DatePipe,private dateService : DateService,) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name: ['',[ Validators.required,Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]  ],\r\n      serialNo: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)] ],\r\n     // batch: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      chargingModel: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      station: [''],\r\n      currentVersion: ['', [autocompleteObjectValidator()]],\r\n      noOfGuns: [''],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],   \r\n      lat: ['', ],\r\n      long: ['', ],\r\n     \r\n      otaConfig: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/) ]],\r\n      periodicCheckRefTime: ['', ],\r\n      periodicityInHours: ['', [ Validators.pattern(/^[0-9]*$/),Validators.max(48), Validators.min(0)]],\r\n      whenToUpgrade: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      upgradeSpecificTime: [''],\r\n      isAvailable: [{value:'false'}, [Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n    });\r\n   \r\n   // this.getBatches();\r\n    this.getChargingModels();\r\n    this.getStations();\r\n    this.getVersions();\r\n    this.fillterOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n       \r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getChargingModels(){\r\n    this.chargingModelService.getChargingModels().subscribe(\r\n      (data:any)=>{\r\n        this.chargingModels = data;\r\n        this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // getBatches(){\r\n  //   this.chargerBatchService.getChargerBatches().subscribe(\r\n  //     (data:any)=>{\r\n        \r\n  //       this.batches = data;\r\n  //       this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n  //       .pipe(\r\n  //         startWith(''),\r\n  //         map(value => typeof value === 'string' ? value : value.name),\r\n  //         map(name => name ? this._filterBatch(name) : this.batches)\r\n  //       );\r\n  //     },(err)=>{\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.stations = data.data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n        this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  onChangeChargingModel(selectedValue){\r\n    const toSelect = this.chargingModels.find(c => c.id == selectedValue);\r\n    this.connector_data = toSelect.connector_data;\r\n    this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n  }\r\n\r\n  onSubmit(){\r\n    \r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      if(formValues.otaConfig  == ''){\r\n        formValues.otaConfig =  null;\r\n      }\r\n      if(formValues.periodicityInHours  == ''){\r\n        formValues.periodicityInHours =  null;\r\n      }\r\n      if(formValues.whenToUpgrade  == ''){\r\n        formValues.whenToUpgrade =  null;\r\n      }\r\n      if(formValues.upgradeSpecificTime  == ''){\r\n        formValues.upgradeSpecificTime =  null;\r\n      }\r\n\r\n    \r\n    let params = {\r\n      name :formValues.name, \r\n      serial_no :formValues.serialNo, \r\n      //batch_id :formValues.batch.id, \r\n      model_id :formValues.chargingModel.id, \r\n      station_id : !!formValues.station ? formValues.station : 0, \r\n      current_version_id :formValues.currentVersion.id, \r\n      no_of_guns :formValues.noOfGuns, \r\n      //address1 : !!formValues.address ? formValues.address : '', \r\n      Lat :!!formValues.lat ? formValues.lat : 0, \r\n      Lng : !!formValues.long ? formValues.long : 0, \r\n      OTA_Config :formValues.otaConfig, \r\n      Periodic_Check_Ref_Time :this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd HH:mm:ss\") ,  //this.dateService.refineDate(formValues.periodicCheckRefTime),//this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\") , \r\n      Periodicity_in_hours :formValues.periodicityInHours, \r\n      When_to_Upgrade :formValues.whenToUpgrade, \r\n      Upgrade_Specific_Time :this.datePipe.transform(formValues.upgradeSpecificTime, \"yyyy-MM-dd HH:mm:ss\") ,//formValues.upgradeSpecificTime, \r\n      is_available :this.isAvailable == true ? 1 : 0, \r\n      status :  this.status == true ? 'Y' : 'N', \r\n      created_by : this.localStorage.userId,\r\n      connector_data : this.connector_data,\r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      PIN: formValues.pincode,\r\n      landmark: formValues.landmark,\r\n      city_id : formValues.city.id,//formValues.city,\r\n      state_id : formValues.state.id,\r\n      country_id :formValues.country.id \r\n    }\r\n    this.chargerService.create(params).subscribe(\r\n      (data:any )=>{\r\n        if(data.status){\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/assetManagement/chargerManagement/chargers/crud/list']);\r\n        }else{\r\n          this.snackBar.open(MessageConstant.dublicateCharger, 'Dismiss', { duration: 5000 });\r\n        }\r\n      },\r\n      (err)=>{\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n    }\r\n    else{\r\n      return;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  fillterOption(){\r\n    \r\n      this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n      );\r\n      this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n  }\r\n  displayBatch(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayChargingModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCurrentVersion(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterBatch(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.batches.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingModels.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCurrVersion(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.versions.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry(){\r\n    \r\n      this.pin_code_id = this.form.value.pincode;\r\n      this.form.get('state').setValue( \"\");\r\n      this.form.get('city').setValue( \"\");\r\n      this.form.get('country').setValue(\"\");\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n      (data:any)=>{\r\n        //this.form.reset();\r\n        if(data != undefined && data != null && data.length > 0){\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id ).subscribe(\r\n            (countrydata:any)=>{\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n              \r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value.name),\r\n                map(name => name ? this._filterCountry(name) : this.countries)\r\n              );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n                (statedata:any)=>{\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n                  \r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                  .pipe(\r\n                    startWith(''),\r\n                    map(value => typeof value === 'string' ? value : value.name),\r\n                    map(name => name ? this._filterState(name) : this.states)\r\n                  );\r\n                  \r\n                },(err)=>{\r\n                  \r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id ).subscribe(\r\n                (Citydata:any)=>{\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                 // this.form.get('state').setValue(toSelect);\r\n                  \r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                  .pipe(\r\n                    startWith(''),\r\n                    map(value => typeof value === 'string' ? value : value.name),\r\n                    map(name => name ? this._filterCity(name) : this.cities)\r\n                  );\r\n                  \r\n                },(err)=>{\r\n                  \r\n                }\r\n              )\r\n            },(err)=>{\r\n              \r\n            }\r\n          )\r\n        }else{\r\n\r\n        }\r\n       \r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event){\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    \r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue( \"\");\r\n    this.form.get('city').setValue( \"\");\r\n  }\r\n  getStatesByCountry(state){\r\n     this.state_id = state.id;\r\n     this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n      (statedata:any)=>{\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  onStateChange(event){\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId){\r\n    this.state_id = stateId.id;\r\n     this.countryService.getCityByState(this.state_id ).subscribe(\r\n      (citiesdata:any)=>{\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId){\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id ).subscribe(\r\n      (countrydata:any)=>{\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n        \r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n       \r\n     },(err)=>{\r\n       \r\n     }\r\n   )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Model Variant</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"chargingModel\" required id=\"chargerCreateCModel\"\r\n          [matAutocomplete]=\"chargingModelAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model variant\">model_training</mat-icon>\r\n          </div>\r\n          \r\n          <mat-autocomplete #chargingModelAuto=\"matAutocomplete\" [displayWith]=\"displayChargingModel\"\r\n          (optionSelected)=\"onChangeChargingModel($event.option.value.id)\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCharModel | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n       \r\n        <mat-error *ngIf=\"form.get('chargingModel').invalid\">Please select model variant </mat-error>\r\n      </mat-form-field>\r\n      <!--mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n              <mat-label>Part No</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"batch\"   type=\"search\" autocomplete=\"off\" id=\"createChargerBatch\" [matAutocomplete]=\"batchAuto\" required >\r\n              <mat-autocomplete #batchAuto=\"matAutocomplete\"  [displayWith]=\"displayBatch\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsBatch | async\" [value]=\"option\">\r\n                    {{option.name}}\r\n                  </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"form.get('batch').invalid\">Please select part number \r\n              </mat-error>\r\n            </mat-form-field-->\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Serial No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"serialNo\" type=\"search\" maxlength=\"20\" required\r\n          autocomplete=\"off\" id=\"chargerCreateSerial\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <!-- <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon> -->\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n          </div>\r\n        <mat-error *ngIf=\"form.get('serialNo').hasError('required')\">Please enter serial no</mat-error>\r\n        <mat-error *ngIf=\"form.get('serialNo').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Charger Display Id</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" type=\"search\" maxlength=\"20\" required autocomplete=\"off\"\r\n          id=\"chargerCreateDisplayId\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger display id\">desktop_windows\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter charger display id</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Current Version</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"currentVersion\" id=\"chargerCreateCVersion\"\r\n          [matAutocomplete]=\"currentVersionAuto\" type=\"search\" autocomplete=\"off\">\r\n        <mat-autocomplete #currentVersionAuto=\"matAutocomplete\" [displayWith]=\"displayCurrentVersion\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCurrVersion | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n            \r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select current version \">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('currentVersion').invalid\">Please select current version\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>OTA Config</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"otaConfig\" id=\"chargerCreateOTAConfig\" maxlength=\"100\"\r\n          type=\"search\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter OTA Config \">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('otaConfig').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Periodic Check Ref Time</mat-label>\r\n        <input matInput [ngxMatDatetimePicker]=\"startDatePicker\" placeholder=\"\" formControlName=\"periodicCheckRefTime\"\r\n          [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\" readonly required>\r\n\r\n        <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon class=\"secondary-text\" matTooltip=\"Please enter periodic check ref time\">help</mat-icon>\r\n          <mat-icon mat-icon-button type=\"button\" (click)=\"startDatePicker.open(); $event.stopPropagation();\">today\r\n          </mat-icon>\r\n        </div>\r\n\r\n\r\n        <ngx-mat-datetime-picker #startDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n          [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n          [enableMeridian]=\"enableMeridian\">\r\n        </ngx-mat-datetime-picker>\r\n        <mat-error *ngIf=\"form.get('periodicCheckRefTime').invalid\">Please enter periodic check ref time </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Periodicity In Hours</mat-label>\r\n        <input matInput placeholder=\"\" aria-label=\"Periodicity In Hours\" max=\"48\" type=\"number\"\r\n          id=\"periodicityInHoursmat\" formControlName=\"periodicityInHours\" autocomplete=\"off\" type=\"number\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter proidicity in hours\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('periodicityInHours').hasError('max')\">Maximum value is not greater then equal 48\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('periodicityInHours').hasError('min')\">Maximum value is not greater then equal 0\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>When To Upgrade</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"whenToUpgrade\" maxlength=\"100\" id=\"chargerCreateWhenToUpgrade\"\r\n          type=\"search\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter when to upgrade\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('pattern')\">Only character are allowed</mat-error>\r\n      </mat-form-field>\r\n      <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n              <mat-label>Upgrade Specific Time</mat-label>\r\n              <input matInput placeholder=\"\" aria-label=\"Editable dial\" \r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  formControlName=\"upgradeSpecificTime\" [format]=\"24\" required> \r\n\r\n                <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter upgrade specific time\">help</mat-icon>\r\n              <ngx-material-timepicker #upgradeSpecificTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\r\n              <mat-error *ngIf=\"form.get('upgradeSpecificTime').hasError('hasError')\">Please enter upgrade specific time</mat-error>\r\n            </mat-form-field> -->\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Upgrade Specific Time</mat-label>\r\n\r\n        <input matInput [ngxMatDatetimePicker]=\"upgradeDatePicker\" placeholder=\"\" readonly\r\n          formControlName=\"upgradeSpecificTime\" [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\" readonly required>\r\n        <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n        <button mat-icon-button matSuffix type=\"button\" (click)=\"upgradeDatePicker.open(); $event.stopPropagation();\">\r\n          <mat-icon>today</mat-icon>\r\n        </button>\r\n        <ngx-mat-datetime-picker #upgradeDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n          [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n          [enableMeridian]=\"enableMeridian\">\r\n        </ngx-mat-datetime-picker>\r\n        <mat-error *ngIf=\"form.get('upgradeSpecificTime').invalid\">Please enter upgrade specific time </mat-error>\r\n\r\n        <!-- <input matInput placeholder=\"\" aria-label=\"Editable dial\" required\r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  [disabled]=\" (form.get('whenToUpgrade').value.value != 'SPECIFIC_TIME')? true:false\"  readonly formControlName=\"upgradeSpecificTime\"  [value]=\"'12:00'\" [format]=\"24\"> \r\n              <ngx-material-timepicker #upgradeSpecificTime  [enableKeyboardInput]=\"false\"></ngx-material-timepicker> -->\r\n\r\n\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <div fxFlex=\"16\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n          (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n          {{isAvailable ? 'Available' : 'Unavailable'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxFlex=\"16\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/chargerManagement/chargers/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nexport class Client {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  serial_no: string;\r\n  client_name: string;\r\n  model_name: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list-client',\r\n  templateUrl: './list-client.component.html',\r\n  styleUrls: ['./list-client.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListClientComponent implements OnInit {\r\n\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['client_name', 'name', 'serial_no', 'model_name', 'status', 'action'];\r\n  head = [['Client Name', 'Name', 'Serial No', 'Model Name', 'Status']];\r\n  dataSource: MatTableDataSource<Client>;\r\n\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  nameSearch = false;\r\n  serialSearch = false;\r\n  modelSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  cposName: any;\r\n  clientName:any;\r\n  chargingStationName: any;\r\n  filteredOptionsCharClient:Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog,private cpoService: CpoService,private fb: FormBuilder, \r\n    private chargingStationService: ChargingStationService,private clientService:ClientService,private snackBar: MatSnackBar, \r\n    private cdr: ChangeDetectorRef) {\r\n      this.form = this.fb.group({\r\n        charClient:[''],\r\n        charCPO: [''],\r\n        charStat: ['']\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    \r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'))\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllClientChargers(id) {\r\n    this.chargerService.getAllClientChargers(id).subscribe(\r\n      (data: any) => {\r\n        if (data != null) {\r\n          this.allChargers = data;\r\n          for (var i = 0; i < this.allChargers.length; i++) {\r\n            if (this.allChargers[i].status == 'N') {\r\n              this.allChargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.allChargers[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.allChargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargerService.deleteChargerFromClient(id, this.localStorage.userId).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getAllClientChargers(this.localStorage.userId);\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'clientSearch') {\r\n      this.clientSearch = !this.clientSearch;\r\n      this.filterEntity.client_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no = \"\";\r\n    }\r\n    if (visibleOption == 'modelSearch') {\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.model_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Client Name': chargerModel.client_name, 'Name': chargerModel.name, 'Serial No': chargerModel.serial_no,\r\n        'Model Name': chargerModel.model_name, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n    XLSX.writeFile(workBook, 'Sales Dispatch.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.client_name, chrger.name, chrger.name, chrger.serial_no, chrger.model_name, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage( img, 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Sales Dispatch Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Sales Dispatch report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.clientList != null && this.clientList != undefined && this.clientList.length >0 ) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n\r\n    } \r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  onClientChange(client_id){\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined && this.cpoList.length > 0) {\r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  \r\n  onCPOChange(event) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station =[];\r\n\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      for(var i = 0; i< this.stationList.length; i++){\r\n        if(id == this.stationList[i].cpo_id){\r\n          this.station.push( this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        const toSelect = this.station[0];//this.station.find(c => c.cpo_id == id);\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getAllClientChargers(this.localStorage.userId);\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    } \r\n\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n  onStationChange(event) {\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    //this.getAllClientChargers();\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n      \r\n</div>\r\n<mat-card style=\"padding:16px  !important; display:none\" *ngIf=\"localStorage.role_code == 'END'\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                        (optionSelected)='onClientChange($event.option.value.client_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.client_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.cpo_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select  CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.station_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Model Name \" [(ngModel)]=\"filterEntity.model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                        </td>\r\n                    </tr> -->\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  public minDate: moment.Moment;\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionsBatch: Observable<any[]>;\r\n  filteredOptionsCharModel: Observable<any[]>;\r\n  filteredOptionsCurrVersion: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerBatchService: ChargerBatchService,\r\n    private chargingStationService: ChargingStationService,\r\n    private versionService: VersionService, private chargerService: ChargerService,\r\n    private dateService: DateService, private chargingModelService: ChargingModelService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      serialNo: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      //batch: ['',[autocompleteObjectValidator(),Validators.required] ],\r\n      chargingModel: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      station: ['',],\r\n      currentVersion: ['', [autocompleteObjectValidator()]],\r\n      noOfGuns: ['', [Validators.required]],\r\n      // addressLine1:[''],\r\n      // addressLine2:[''],\r\n      // landmark:[''],\r\n      // city:['',[Validators.required]],\r\n      // state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // pincode:[''],   \r\n      // lat: ['', ],\r\n      // long: ['', ],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      pincode: [''],\r\n      lat: ['',],\r\n      long: ['',],\r\n      otaConfig: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      periodicCheckRefTime: [''],\r\n      periodicityInHours: ['', [Validators.pattern(/^[0-9]*$/), Validators.max(48), Validators.min(0)]],\r\n      whenToUpgrade: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      upgradeSpecificTime: [''],\r\n      isAvailable: [{ value: 'false' }, [Validators.required]],\r\n    });\r\n\r\n\r\n    this.getChargingModels();\r\n    //this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n    //this.onChangeChargingModel();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.fillterOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getChargingModels() {\r\n    this.chargingModelService.getChargingModels().subscribe(\r\n      (data: any) => {\r\n        this.chargingModels = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargingModels.find(c => c.id == this.params.data.model_id);\r\n          this.form.get('chargingModel').setValue(toSelect);\r\n          this.connector_data = toSelect.connector_data;\r\n          this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n          this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  // getBatches(){\r\n  //   this.chargerBatchService.getChargerBatches().subscribe(\r\n  //     (data:any)=>{\r\n\r\n  //       this.batches = data;\r\n\r\n  //       if(this.isEditMode){\r\n\r\n  //         const toSelect = this.batches.find(c => c.id == this.params.data.batch_id);\r\n  //         this.form.get('batch').setValue(toSelect);\r\n  //         this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n  //         .pipe(\r\n  //           startWith(''),\r\n  //           // tap(() => this.form.controls.batch.setValue(toSelect)),\r\n  //           map(value => typeof value === 'string' ? value : value.name),\r\n  //           map(name => name ? this._filterBatch(name) : this.batches)\r\n  //         );\r\n  //       }\r\n  //     },(err)=>{\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getStations() {\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data: any) => {\r\n\r\n        this.stations = data.data;\r\n        // if(this.isEditMode){\r\n\r\n        //   const toSelect = this.stations.find(c => c.id == this.params.data.station_id);\r\n        //   this.form.get('station').setValue(toSelect.id);\r\n        // }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions() {\r\n    this.versionService.getVersions().subscribe(\r\n      (data: any) => {\r\n        \r\n        this.versions = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.versions.find(c => c.id == this.params.data.current_version_id);\r\n\r\n          this.form.get('currentVersion').setValue(toSelect);\r\n          this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onChangeChargingModel(selectedValue) {\r\n    const toSelect = this.chargingModels.find(c => c.id == selectedValue);\r\n    this.connector_data = toSelect.connector_data;\r\n    this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      if (formValues.otaConfig == '') {\r\n        formValues.otaConfig = null;\r\n      }\r\n      if (formValues.periodicityInHours == '') {\r\n        formValues.periodicityInHours = null;\r\n      }\r\n      if (formValues.whenToUpgrade == '') {\r\n        formValues.whenToUpgrade = null;\r\n      }\r\n      if (formValues.upgradeSpecificTime == '') {\r\n        formValues.upgradeSpecificTime = null;\r\n      }\r\n\r\n      const params: any = {\r\n\r\n        name: formValues.name,\r\n        serial_no: formValues.serialNo,\r\n        //batch_id :formValues.batch.id, \r\n        model_id: formValues.chargingModel.id,\r\n        station_id: !!formValues.station ? formValues.station : 0,\r\n        current_version_id: formValues.currentVersion.id,\r\n        no_of_guns: formValues.noOfGuns,\r\n        //address1 : !!formValues.address ? formValues.address : '', \r\n        Lat: !!formValues.lat ? formValues.lat : 0,\r\n        Lng: !!formValues.long ? formValues.long : 0,\r\n        OTA_Config: formValues.otaConfig,\r\n        Periodic_Check_Ref_Time: this.dateService.refineDate(formValues.periodicCheckRefTime),\r\n        Periodicity_in_hours: formValues.periodicityInHours,\r\n        When_to_Upgrade: formValues.whenToUpgrade,\r\n        Upgrade_Specific_Time: this.datePipe.transform(formValues.upgradeSpecificTime, \"yyyy-MM-dd HH:mm:ss\"),//formValues.upgradeSpecificTime, \r\n        connector_data: this.connector_data,\r\n        is_available: this.isAvailable == true ? 1 : 0,\r\n        // address1 :formValues.addressLine1,\r\n        // address2 :formValues.addressLine2,\r\n        // PIN: formValues.pincode,\r\n        // landmark: formValues.landmark,\r\n        // city_id : formValues.city.id,\r\n        // state_id : formValues.state.id,\r\n        // country_id : formValues.country.id, \r\n        status: this.status == true ? 'Y' : 'N'\r\n\r\n\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = !!this.params.data.charger_id ? this.params.data.charger_id : this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.chargerService.update(params).subscribe(\r\n          (data: any) => {\r\n\r\n            if (data.status) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.dublicateCharger, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.chargerService.create(params).subscribe(\r\n          (data: any) => {\r\n\r\n            this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      // this.dialogRef.close(params);\r\n    }\r\n    return;\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    ;\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serialNo').setValue(params.data.serial_no);\r\n    this.form.get('noOfGuns').setValue(params.data.no_of_guns);\r\n    this.form.get('lat').setValue(params.data.Lat);\r\n    this.form.get('long').setValue(params.data.Lng);\r\n    this.form.get('otaConfig').setValue(params.data.OTA_Config);\r\n    //this.form.get('periodicCheckRefTime').setValue(this.dateService.refineDate(params.data.Periodic_Check_Ref_Time)); \r\n    this.form.get('periodicCheckRefTime').setValue(params.data.Periodic_Check_Ref_Time);                     //this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd HH:mm:ss\") ,\r\n    this.form.get('periodicityInHours').setValue(params.data.Periodicity_in_hours);\r\n    this.form.get('whenToUpgrade').setValue(params.data.When_to_Upgrade);\r\n    // this.form.get('upgradeSpecificTime').setValue(this.datePipe.transform(params.data.Upgrade_Specific_Time, \"HH:mm\"));//(params.data.Upgrade_Specific_Time); \r\n    this.form.get('upgradeSpecificTime').setValue(params.data.Upgrade_Specific_Time);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.isAvailable = params.data.is_available == 1 ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  updateAvailable(event) {\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n\r\n  fillterOption() {\r\n    // this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n    //   .pipe(\r\n    //     startWith(''),\r\n    //     map(value => typeof value === 'string' ? value : value.name),\r\n    //     map(name => name ? this._filterBatch(name) : this.batches)\r\n    //   );\r\n    this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n      );\r\n    this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n      );\r\n    //       this.countries = this.form.controls.country.valueChanges\r\n    //       .pipe(\r\n    //      startWith(''),\r\n    //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n    //      map(value => typeof value === 'string' ? value : value.name),\r\n    //      map(name => name ? this._filterCountry(name) : this.countries)\r\n    //    ); \r\n    //       this.states = this.form.controls.state.valueChanges\r\n    //       .pipe(\r\n    //      startWith(''),\r\n    //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n    //      map(value => typeof value === 'string' ? value : value.name),\r\n    //      map(name => name ? this._filterState(name) : this.states)\r\n    //    );\r\n\r\n    // this.cities = this.form.controls.city.valueChanges\r\n    //          .pipe(\r\n    //         startWith(''),\r\n    //         //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n    //         map(value => typeof value === 'string' ? value : value.name),\r\n    //         map(name => name ? this._filterCity(name) : this.cities)\r\n    //       );\r\n  }\r\n\r\n  // displayBatch(item: any): string {\r\n  //   return item && item.name ? item.name : '';\r\n  // }\r\n\r\n  displayChargingModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayCurrentVersion(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  // private _filterBatch(name: string): any[] {\r\n  //   const filterValue = name.toLowerCase();\r\n  //   return this.batches.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  // }\r\n\r\n  private _filterCharModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingModels.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterCurrVersion(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.versions.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Model Variant</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"chargingModel\" required id=\"chargerCreateCModel\"\r\n            [matAutocomplete]=\"chargingModelAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n            <div matSuffix style=\"display: flex;\">\r\n              <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n              <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model variant\">model_training</mat-icon>\r\n            </div>\r\n          \r\n            <mat-autocomplete #chargingModelAuto=\"matAutocomplete\" [displayWith]=\"displayChargingModel\"\r\n            (optionSelected)=\"onChangeChargingModel($event.option.value.id)\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharModel | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        \r\n          <mat-error *ngIf=\"form.get('chargingModel').invalid\">Please select model variant </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Serial No</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"serialNo\" type=\"search\" maxlength=\"20\" required\r\n            autocomplete=\"off\" id=\"chargerCreateSerial\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('required')\">Please enter serial no</mat-error>\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Charger Display Id</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" type=\"search\" required autocomplete=\"off\"\r\n            id=\"chargerCreateDisplayId\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger display id\">desktop_windows\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter charger display id</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Current Version</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"currentVersion\" id=\"chargerCreateCVersion\"\r\n            [matAutocomplete]=\"currentVersionAuto\" type=\"search\" required autocomplete=\"off\">\r\n            <div matSuffix style=\"display: flex;\">\r\n              <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n              <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select current version \">help</mat-icon>\r\n            </div>\r\n          \r\n            <mat-autocomplete #currentVersionAuto=\"matAutocomplete\" [displayWith]=\"displayCurrentVersion\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCurrVersion | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          \r\n          <mat-error *ngIf=\"form.get('currentVersion').invalid\">Please select current version\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>OTA Config</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"otaConfig\" id=\"chargerCreateOTAConfig\" type=\"search\"\r\n            autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter OTA Config \">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('otaConfig').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodic Check Ref Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"startDatePicker\" placeholder=\"\" formControlName=\"periodicCheckRefTime\"\r\n            [disabled]=\"disabled\" readonly>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon class=\"secondary-text\" matTooltip=\"Please enter periodic check ref time\">help</mat-icon>\r\n            <mat-icon mat-icon-button type=\"button\" (click)=\"startDatePicker.open(); $event.stopPropagation();\">today\r\n            </mat-icon>\r\n          </div>\r\n          <!-- <button mat-icon-button matSuffix type=\"button\" (click)=\"startDatePicker.open(); $event.stopPropagation();\">\r\n                <mat-icon>today</mat-icon>\r\n             </button> -->\r\n          <ngx-mat-datetime-picker #startDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodicity In Hours</mat-label>\r\n          <input matInput placeholder=\"\" aria-label=\"Periodicity In Hours\" max=\"48\" id=\"periodicityInHoursmat\"\r\n            formControlName=\"periodicityInHours\" autocomplete=\"off\" type=\"number\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter proidicity in hours\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('max')\">Maximum value is not greater then equal 48\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('min')\">Maximum value is not greater then equal 0\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>When To Upgrade</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"whenToUpgrade\" id=\"chargerCreateWhenToUpgrade\" type=\"search\"\r\n            autocomplete=\"off\">\r\n\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter when to upgrade\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('pattern')\">Only character are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Upgrade Specific Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"upgradeDatePicker\" placeholder=\"\" readonly\r\n            formControlName=\"upgradeSpecificTime\" [disabled]=\"disabled\" readonly required>\r\n          <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n          <button mat-icon-button matSuffix type=\"button\" (click)=\"upgradeDatePicker.open(); $event.stopPropagation();\">\r\n            <mat-icon>today</mat-icon>\r\n          </button>\r\n          <ngx-mat-datetime-picker #upgradeDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n          <!-- <input matInput placeholder=\"\" aria-label=\"Editable dial\" required\r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  [disabled]=\" (form.get('whenToUpgrade').value.value != 'SPECIFIC_TIME')? true:false\"  readonly formControlName=\"upgradeSpecificTime\"  [value]=\"'12:00'\" [format]=\"24\"> \r\n              <ngx-material-timepicker #upgradeSpecificTime  [enableKeyboardInput]=\"false\"></ngx-material-timepicker> -->\r\n\r\n          <mat-error *ngIf=\"form.get('upgradeSpecificTime').invalid\">Please enter upgrade specific time </mat-error>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n              <mat-label>Upgrade Specific Time</mat-label>\r\n             \r\n              <input matInput placeholder=\"\" aria-label=\"Editable dial\" \r\n                [ngxTimepicker]=\"upgradeSpecificTime\" readonly formControlName=\"upgradeSpecificTime\" [format]=\"24\"> \r\n                <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter upgrade specific time\">help</mat-icon>\r\n              <ngx-material-timepicker #upgradeSpecificTime [enableKeyboardInput]=\"false\"></ngx-material-timepicker>\r\n\r\n             \r\n            </mat-form-field> -->\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n            (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n            {{isAvailable ? 'Available' : 'Unavailable'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListClientComponent } from '../list-client/list-client.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard] },\r\n  { path : 'listClient', component : ListClientComponent , canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargerCrudComponent } from './charger-crud/charger-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './charger-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ChargerCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n    {\r\n        path : 'listClient',component : ChargerCrudComponent,canActivate: [AuthGuard],\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ChargersRoutingModule{}","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\n// import { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ChargersRoutingModule } from './chargers-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ChargerCrudComponent } from './charger-crud/charger-crud.component';\r\nimport { ListClientComponent } from './list-client/list-client.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport {\r\n    NgxMatDatetimePickerModule, \r\n    NgxMatNativeDateModule, \r\n    NgxMatTimepickerModule ,\r\n    NgxMatDateFormats,\r\n    NGX_MAT_DATE_FORMATS,\r\n    NgxMatDateAdapter,\r\n    \r\n  } from '@angular-material-components/datetime-picker';\r\nconst COMPONENTS =[ChargerCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ChargersRoutingModule,FuseSharedModule,NgxMatDatetimePickerModule, \r\n        NgxMatNativeDateModule, \r\n        NgxMatTimepickerModule ,],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC, ListClientComponent],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargersModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  public minDate: moment.Moment;\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  chargingModels:any;\r\n  connector_data :any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionsBatch: Observable<any[]>;\r\n  filteredOptionsCharModel: Observable<any[]>;\r\n  filteredOptionsCurrVersion: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder,private chargerBatchService : ChargerBatchService,\r\n    private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private dateService : DateService, private chargingModelService : ChargingModelService,\r\n    private snackBar: MatSnackBar,public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [ Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      serialNo: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      //batch: ['',[autocompleteObjectValidator(),Validators.required] ],\r\n      chargingModel: ['',[autocompleteObjectValidator(),Validators.required]],\r\n      station: ['', ],\r\n      currentVersion: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      noOfGuns: ['', [Validators.required]],\r\n      // addressLine1:[''],\r\n      // addressLine2:[''],\r\n      // landmark:[''],\r\n      // city:['',[Validators.required]],\r\n      // state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // pincode:[''],   \r\n      // lat: ['', ],\r\n      // long: ['', ],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],   \r\n      lat: ['', ],\r\n      long: ['', ],\r\n      otaConfig: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      periodicCheckRefTime: [''],\r\n      periodicityInHours: ['', [Validators.required, Validators.pattern(/^[0-9]*$/),Validators.max(48), Validators.min(0)]],\r\n      whenToUpgrade: ['', [Validators.required, Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      upgradeSpecificTime: [''],\r\n      isAvailable: [{value:'false'}, [Validators.required]],\r\n    });\r\n\r\n    this.getChargingModels();\r\n    //this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n    //this.onChangeChargingModel();\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n    this.fillterOption();\r\n     //this.getCountry();\r\n     this.getAllCountry();\r\n     this.getAllState(this.params.data.country_id);\r\n     this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.countries = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getChargingModels(){\r\n    this.chargingModelService.getChargingModels().subscribe(\r\n      (data:any)=>{\r\n        this.chargingModels = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargingModels.find(c => c.id == this.params.data.model_id);\r\n          this.form.get('chargingModel').setValue(toSelect);\r\n          this.connector_data = toSelect.connector_data;\r\n          this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n          this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n        );\r\n        }\r\n\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // getBatches(){\r\n  //   this.chargerBatchService.getChargerBatches().subscribe(\r\n  //     (data:any)=>{\r\n        \r\n  //       this.batches = data;\r\n\r\n  //       if(this.isEditMode){\r\n          \r\n  //         const toSelect = this.batches.find(c => c.id == this.params.data.batch_id);\r\n  //         this.form.get('batch').setValue(toSelect);\r\n  //         this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n  //         .pipe(\r\n  //           startWith(''),\r\n  //           // tap(() => this.form.controls.batch.setValue(toSelect)),\r\n  //           map(value => typeof value === 'string' ? value : value.name),\r\n  //           map(name => name ? this._filterBatch(name) : this.batches)\r\n  //         );\r\n  //       }\r\n  //     },(err)=>{\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.stations = data.data;\r\n        // if(this.isEditMode){\r\n          \r\n        //   const toSelect = this.stations.find(c => c.id == this.params.data.station_id);\r\n        //   this.form.get('station').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.versions.find(c => c.id == this.params.data.current_version_id);\r\n          this.form.get('currentVersion').setValue(toSelect);\r\n          this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n         // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  onChangeChargingModel(selectedValue){\r\n    const toSelect = this.chargingModels.find(c => c.id == selectedValue);\r\n    this.connector_data = toSelect.connector_data;\r\n    this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n    \r\n      const params: any = {\r\n  \r\n        name :formValues.name, \r\n        serial_no :formValues.serialNo, \r\n        //batch_id :formValues.batch.id, \r\n        model_id :formValues.chargingModel.id, \r\n        station_id : !!formValues.station ? formValues.station : 0, \r\n        current_version_id :formValues.currentVersion.id, \r\n        no_of_guns :formValues.noOfGuns, \r\n        //address1 : !!formValues.address ? formValues.address : '', \r\n        Lat :!!formValues.lat ? formValues.lat : 0, \r\n        Lng : !!formValues.long ? formValues.long : 0, \r\n        OTA_Config :formValues.otaConfig, \r\n        Periodic_Check_Ref_Time : this.dateService.refineDate(formValues.periodicCheckRefTime) , \r\n        Periodicity_in_hours :formValues.periodicityInHours, \r\n        When_to_Upgrade :formValues.whenToUpgrade, \r\n        Upgrade_Specific_Time :this.datePipe.transform(formValues.upgradeSpecificTime, \"yyyy-MM-dd HH:mm:ss\"),\r\n        connector_data : this.connector_data,\r\n        is_available :this.isAvailable == true ? 1 : 0, \r\n        // address1 :formValues.addressLine1,\r\n        // address2 :formValues.addressLine2,\r\n        // PIN: formValues.pincode,\r\n        // landmark: formValues.landmark,\r\n        // city_id : formValues.city.id,\r\n        // state_id : formValues.state.id,\r\n        // country_id : formValues.country.id, \r\n        status : this.status == true ? 'Y' : 'N'\r\n        \r\n       \r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n      if (this.isEditMode){\r\n      this.chargerService.update(params).subscribe(\r\n        (data: any ) => {\r\n        \r\n          if(data.status){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(MessageConstant.dublicateCharger, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.chargerService.create(params).subscribe(\r\n        (data: any ) => {\r\n          \r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          \r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n  \r\n      // this.dialogRef.close(params);\r\n    }\r\n    return;\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    ;\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serialNo').setValue(params.data.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.data.no_of_guns); \r\n    this.form.get('lat').setValue(params.data.Lat); \r\n    this.form.get('long').setValue(params.data.Lng); \r\n    this.form.get('otaConfig').setValue(params.data.OTA_Config); \r\n    //this.form.get('periodicCheckRefTime').setValue(this.dateService.refineDate(params.data.Periodic_Check_Ref_Time)); \r\n    this.form.get('periodicCheckRefTime').setValue(params.data.Periodic_Check_Ref_Time);                     //this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd HH:mm:ss\") ,\r\n    this.form.get('periodicityInHours').setValue(params.data.Periodicity_in_hours); \r\n    this.form.get('whenToUpgrade').setValue(params.data.When_to_Upgrade); \r\n   // this.form.get('upgradeSpecificTime').setValue(this.datePipe.transform(params.data.Upgrade_Specific_Time, \"HH:mm\"));//(params.data.Upgrade_Specific_Time); \r\n   this.form.get('upgradeSpecificTime').setValue(params.data.Upgrade_Specific_Time);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.isAvailable = params.data.is_available == 1 ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  fillterOption(){\r\n    // this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n    //   .pipe(\r\n    //     startWith(''),\r\n    //     map(value => typeof value === 'string' ? value : value.name),\r\n    //     map(name => name ? this._filterBatch(name) : this.batches)\r\n    //   );\r\n      this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n      );\r\n      this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n  //       this.countries = this.form.controls.country.valueChanges\r\n  //       .pipe(\r\n  //      startWith(''),\r\n  //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n  //      map(value => typeof value === 'string' ? value : value.name),\r\n  //      map(name => name ? this._filterCountry(name) : this.countries)\r\n  //    ); \r\n  //       this.states = this.form.controls.state.valueChanges\r\n  //       .pipe(\r\n  //      startWith(''),\r\n  //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n  //      map(value => typeof value === 'string' ? value : value.name),\r\n  //      map(name => name ? this._filterState(name) : this.states)\r\n  //    );\r\n    \r\n  // this.cities = this.form.controls.city.valueChanges\r\n  //          .pipe(\r\n  //         startWith(''),\r\n  //         //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n  //         map(value => typeof value === 'string' ? value : value.name),\r\n  //         map(name => name ? this._filterCity(name) : this.cities)\r\n  //       );\r\n  }\r\n  // displayBatch(item: any): string {\r\n  //   return item && item.name ? item.name : '';\r\n  // }\r\n  displayChargingModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCurrentVersion(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  // private _filterBatch(name: string): any[] {\r\n  //   const filterValue = name.toLowerCase();\r\n  //   return this.batches.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  // }\r\n  private _filterCharModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingModels.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCurrVersion(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.versions.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n    \r\n    \r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n  \r\n}\r\n\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Model Variant</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"chargingModel\" required id=\"chargerCreateCModel\"\r\n            [matAutocomplete]=\"chargingModelAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-autocomplete #chargingModelAuto=\"matAutocomplete\" [displayWith]=\"displayChargingModel\"\r\n            (optionSelected)=\"onChangeChargingModel($event.option.value.id)\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharModel | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"form.get('chargingModel').invalid\">Please select model variant </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Serial No</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"serialNo\" type=\"search\" maxlength=\"15\" required\r\n            autocomplete=\"off\" id=\"chargerCreateSerial\">\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('required')\">Please enter serial no</mat-error>\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Charger Display Id</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"name\" type=\"search\" required autocomplete=\"off\"\r\n            id=\"chargerCreateDisplayId\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter charger display id</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Current Version</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"currentVersion\" id=\"chargerCreateCVersion\"\r\n            [matAutocomplete]=\"currentVersionAuto\" type=\"search\" required autocomplete=\"off\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-autocomplete #currentVersionAuto=\"matAutocomplete\" [displayWith]=\"displayCurrentVersion\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCurrVersion | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"form.get('currentVersion').invalid\">Please select current version\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>OTA Config</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"otaConfig\" id=\"chargerCreateOTAConfig\" type=\"search\"\r\n            required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('otaConfig').invalid\">Please enter OTA config\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('otaConfig').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodic Check Ref Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"startDatePicker\" placeholder=\"\" formControlName=\"periodicCheckRefTime\"\r\n            [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\" readonly required>\r\n\r\n          <button mat-icon-button matSuffix type=\"button\" disabled\r\n            (click)=\"startDatePicker.open(); $event.stopPropagation();\">\r\n            <mat-icon>today</mat-icon>\r\n          </button>\r\n          <ngx-mat-datetime-picker #startDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n          <mat-error *ngIf=\"form.get('periodicCheckRefTime').invalid\">Please enter periodic check ref time\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodicity In Hours</mat-label>\r\n          <input matInput readonly placeholder=\"\" aria-label=\"Periodicity In Hours\" max=\"48\" id=\"periodicityInHoursmat\"\r\n            formControlName=\"periodicityInHours\" required autocomplete=\"off\" type=\"number\">\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('max')\">Maximum value is not greater then equal 48\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('min')\">Maximum value is not greater then equal 0\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>When To Upgrade</mat-label>\r\n          <input readonly matInput placeholder=\"\" formControlName=\"whenToUpgrade\" id=\"chargerCreateWhenToUpgrade\"\r\n            type=\"search\" required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('required')\">Please enter when to upgrade</mat-error>\r\n          <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('pattern')\">Only character are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Upgrade Specific Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"upgradeDatePicker\" placeholder=\"\" readonly\r\n            formControlName=\"upgradeSpecificTime\" [disabled]=\"disabled\" readonly required>\r\n          <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n          <button mat-icon-button matSuffix type=\"button\" disabled (click)=\"upgradeDatePicker.open(); $event.stopPropagation();\">\r\n            <mat-icon>today</mat-icon>\r\n          </button>\r\n          <ngx-mat-datetime-picker #upgradeDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n          <!-- <input matInput placeholder=\"\" aria-label=\"Editable dial\" required\r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  [disabled]=\" (form.get('whenToUpgrade').value.value != 'SPECIFIC_TIME')? true:false\"  readonly formControlName=\"upgradeSpecificTime\"  [value]=\"'12:00'\" [format]=\"24\"> \r\n              <ngx-material-timepicker #upgradeSpecificTime  [enableKeyboardInput]=\"false\"></ngx-material-timepicker> -->\r\n\r\n          <mat-error *ngIf=\"form.get('upgradeSpecificTime').invalid\">Please enter upgrade specific time </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n            (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n            {{isAvailable ? 'Available' : 'Unavailable'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n                (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport class Charger {\r\n  id: string;\r\n  name: string;\r\n  serial_no: string;\r\n  batch_id: number;\r\n  station_id: number;\r\n  current_version_id: number;\r\n  no_of_guns: number;\r\n  model_name: string;\r\n  Address: string;\r\n  Lat: number;\r\n  Lng: number;\r\n  OTA_Config: string;\r\n  Periodic_Check_Ref_Time: string;\r\n  Periodicity_in_hours: number;\r\n  When_to_Upgrade: string;\r\n  Upgrade_Specific_Time: number;\r\n  is_available: number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  availableString: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Charger;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['serial_no', 'name', 'model_name',\r\n    'version_name', 'status', 'action'];\r\n  head = [['Serial Number', 'Name', 'Model Name', 'Version Name', 'Status']]\r\n  dataSource: MatTableDataSource<Charger>;\r\n\r\n  chargers: Charger[];\r\n  //messageConstant = MessageConstant;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  serialSearch = false;\r\n  displaySearch = false;\r\n  modelVarientSearch = false;\r\n  currentVersionSearch = false;\r\n  noGunsSearch = false;\r\n  availabbleSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPlantChargers();\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new Charger();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getPlantChargers() {\r\n    this.chargerService.getPlantChargers().subscribe(\r\n      (data: any) => {\r\n        if (data.length > 0) {\r\n          this.chargers = data;\r\n          for (var i = 0; i < this.chargers.length; i++) {\r\n            if (this.chargers[i].status == 'N') {\r\n              this.chargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.chargers[i].statusString = 'Active';\r\n            }\r\n            if (this.chargers[i].is_available = 0) {\r\n              this.chargers[i].availableString = \"No\"\r\n            } else {\r\n              this.chargers[i].availableString = \"Yes\"\r\n            }\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.chargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargerService.delete(id).subscribe(\r\n          (data: any) => {\r\n            this.getPlantChargers();\r\n            this.cdr.detectChanges();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getPlantChargers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  //  convertToYesNo(row){\r\n  //       var rtString = 'No';\r\n  //       if(row.is_available == 0){\r\n  //         rtString = 'No';\r\n\r\n  //       }else{\r\n  //         rtString = 'Yes';\r\n\r\n  //       }\r\n  //       row.is_available_string = rtString;\r\n  //       //row.is_available == 0 ? 'No' : 'Yes';\r\n  //       return rtString;\r\n  //  }\r\n  changeVisibility(visibleOption, ev) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;e\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'displaySearch') {\r\n      this.displaySearch = !this.displaySearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if (visibleOption == 'modelVarientSearch') {\r\n      this.modelVarientSearch = !this.modelVarientSearch;\r\n      this.filterEntity.model_name = \"\";\r\n    }\r\n    if (visibleOption == 'currentVersionSearch') {\r\n      this.currentVersionSearch = !this.currentVersionSearch;\r\n      this.filterEntity.current_version_id = null;\r\n    }\r\n    if (visibleOption == 'noGunsSearch') {\r\n      this.noGunsSearch = !this.noGunsSearch;\r\n      this.filterEntity.no_of_guns = null;\r\n    }\r\n    if (visibleOption == 'availabbleSearch') {\r\n      this.availabbleSearch = !this.availabbleSearch;\r\n      this.filterEntity.availableString = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n  tableExport() {\r\n    // const tab = document.getElementById('mapTable');\r\n    // const ws: XLSX.WorkSheet=XLSX.utils.table_to_sheet(tab);//converts a DOM TABLE element to a worksheet\r\n    // const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    // XLSX.utils.book_append_sheet(wb, ws, 'Mapped Charger');\r\n\r\n    // /* save to file */\r\n    // XLSX.writeFile(wb, 'Mapped Charger.xlsx');\r\n    //this.preloader.open();\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Serial No': chargerModel.serial_no, 'Charger Display Id': chargerModel.name, 'Model Varitent': chargerModel.model_name,\r\n        'Current Version': chargerModel.current_version_id, 'No of Guns ': chargerModel.no_of_guns,\r\n        'Available': chargerModel.availableString, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Chargers.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n\r\n\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getPlantChargers();\r\n    });\r\n  }\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n\r\n      var data = [chargerModel.serial_no, chargerModel.name, chargerModel.model_name, chargerModel.current_version_id, chargerModel.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage( img, 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Plant Charger Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Plant charger report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n\r\n\r\n\r\n    return doc;\r\n\r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!displaySearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Display\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('displaySearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"displaySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Display \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('displaySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelVarientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Varitent\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelVarientSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelVarientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Model Variant\" [(ngModel)]=\"filterEntity.model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelVarientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"version_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!currentVersionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Current\r\n                            Version &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('currentVersionSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"currentVersionSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Current Version\" [(ngModel)]=\"filterEntity.current_version_id\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('currentVersionSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.version_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <!-- Row shown when there is no matching data. -->\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"],"sourceRoot":"webpack:///"}