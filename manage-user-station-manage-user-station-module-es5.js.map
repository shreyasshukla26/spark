{"version":3,"sources":["webpack:///src/app/main/user-management/manage-user-station/manage-user-station.module.ts","webpack:///src/app/main/user-management/manage-user-station/action-dialog/action-dialog.component.ts","webpack:///src/app/main/user-management/manage-user-station/action-dialog/action-dialog.component.html","webpack:///src/app/main/user-management/manage-user-station/manage-user-station-routing.module.ts","webpack:///src/app/main/user-management/manage-user-station/list/list.component.ts","webpack:///src/app/main/user-management/manage-user-station/list/list.component.html","webpack:///src/app/main/user-management/manage-user-station/manage-user-station-crud/routes.ts","webpack:///src/app/main/user-management/manage-user-station/manage-user-station-crud/manage-user-station-crud.component.ts","webpack:///src/app/main/user-management/manage-user-station/manage-user-station-crud/manage-user-station-crud.component.html","webpack:///src/app/main/user-management/manage-user-station/view-dialog/view-dialog.component.ts","webpack:///src/app/main/user-management/manage-user-station/view-dialog/view-dialog.component.html","webpack:///src/app/main/user-management/manage-user-station/create/create.component.ts","webpack:///src/app/main/user-management/manage-user-station/create/create.component.html"],"names":["COMPONENTS","COMPONENTS_DYNAMIC","ManageUserStationModule","imports","declarations","entryComponents","autocompleteObjectValidator","control","value","ActionDialogComponent","fb","datePipe","router","cpoService","snackBar","clientService","userService","dialogRef","data","cdr","isEditMode","status","initialize","localStorage","JSON","parse","getItem","params","getClients","getCPOS","client_id","getUserList","getDefaultStation","action","form","group","client","required","cpos","userList","stationList","defaultStation","assignValues","close","formValues","user_id","id","station_data","radiobuttonList","map","v","station_id","created_date","create_by","createdby","modify_date","modify_by","modifyby","default_station","created_by","userId","UserStationMappingV1","subscribe","resp","open","duration","navigate","err_code","errorMsg","message","nameDuplicateCity","err","get","hasError","event","checked","ref","cpo","setValue","detectChanges","getActiveClientsCW","clients","toSelect","find","c","filteredOptionsClient","controls","valueChanges","pipe","name","_filterClientModels","item","filterValue","toLowerCase","filter","option","includes","getCpoByClientId","cposName","cpo_id","filteredOptionsCpo","_filterCharCPO","getActiveUsersByClient","users","filteredOptionsUser","username","_filterUserModels","user","getStationListWithStationAssignedToUser","stations","selectedList","i","length","userStation","map_id","undefined","push","e","k","closeActionPanel","onClientChange","onCPOChange","onUserChange","onStationChange","updateStatus","onYesClick","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","routes","path","component","canActivate","children","ManageUserStationRoutingModule","forChild","exports","ManageUserStation","ListComponent","stateService","dialog","displayedColumns","head","defStationSearch","nameSearch","stationSearch","statusSearch","getAllUserStationMapping","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","userStanList","statusString","sort","confirmDialogRef","disableClose","componentInstance","confirmMessage","afterClosed","result","deleteUserStationMapping","autoFocus","panelClass","width","visibleOption","station_name","f_name","exportedData","filteredData","userstation","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","TABS_DEMO_ROUTES","redirectTo","pathMatch","ManageUserStationCrudComponent","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","z","isDefaultRoutePermeted","label","link","menuArray","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","ViewDialogComponent","create_date","default_role","CreateComponent","roleService","currentCheckedValue","valid","userStationAssign","errorMessage","onSubmit"],"mappings":"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","file":"manage-user-station-manage-user-station-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ManageUserStationCrudComponent } from './manage-user-station-crud/manage-user-station-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ManageUserStationRoutingModule } from './manage-user-station-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ManageUserStationCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ManageUserStationRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ManageUserStationModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  users: any;\r\n  cposName: any;\r\n  stations: any;\r\n  radiobuttonList: any;\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsUser: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n\r\n  constructor(private fb: FormBuilder, private datePipe: DatePipe, private router: Router, private cpoService: CpoService, private snackBar: MatSnackBar,\r\n    private clientService: ClientService, private userService: UserService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.getClients();\r\n    this.getCPOS(this.params.data.client_id);\r\n    this.getUserList(this.params.data.client_id)\r\n    this.getDefaultStation();\r\n   \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpos: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      stationList: ['', [Validators.required]],\r\n      defaultStation: ['', [Validators.required]],\r\n      status: [{ value: false }, [Validators.required]]\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    //this.pins.push(formValues.pins);\r\n    const params: any = {\r\n      user_id: formValues.userList.id,\r\n      station_data: this.radiobuttonList.map(v => ({ station_id: v.station_id, created_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_station: v.default_station })),\r\n      status: this.status == true ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n\r\n    }\r\n    if (this.isEditMode) {\r\n      params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n    } else {\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n\r\n    if (this.isEditMode) {\r\n      this.userService.UserStationMappingV1(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open('User Station Update successfully!', 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/userManagement/manageUserStation/crud']);\r\n\r\n          }\r\n          else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              this.snackBar.open(MessageConstant.nameDuplicateCity, 'Dismiss', { duration: 5000 });\r\n            }\r\n            else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else { }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    // this.form.get('client').setValue(params.data.name);\r\n    // this.form.get('cpos').setValue(params.data.name);\r\n    // this.form.get('userList').setValue(params.data.state_name);\r\n    // this.form.get('stationList').setValue(params.data.PIN);\r\n    // this.form.get('defaultStation').setValue(params.data.defaultStation);\r\n    //this.setDefaultPin(sta_id);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  onCPOChange(cpo){\r\n    this.form.get('userList').setValue(\"\");\r\n    this.form.get('stationList').setValue(\"\");\r\n    this.radiobuttonList = [];\r\n    this.cdr.detectChanges();\r\n  \r\n}\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCPOS(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cposName = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpos').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpos.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n          );\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getUserList(id) {\r\n    this.userService.getActiveUsersByClient(id).subscribe(\r\n      (resp: any) => {\r\n        this.users = resp.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.users.find(c => c.id == this.params.data.user_id);\r\n          this.form.get('userList').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.username),\r\n            map(username => username ? this._filterUserModels(username) : this.users)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayUser(item: any): string {\r\n    return item && item.username ? item.username : '';\r\n  }\r\n  private _filterUserModels(username: string): any[] {\r\n    const filterValue = username.toLowerCase();\r\n    return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onClientChange(client) {\r\n    this.getCPOS(client.id);\r\n    this.getUserList(client.id);\r\n    this.form.get('userList').setValue(\"\");\r\n    this.form.get('stationList').setValue(\"\");\r\n    this.radiobuttonList = [];\r\n  }\r\n\r\n  onUserChange(user) {\r\n    // this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n    this.userService.getStationListWithStationAssignedToUser(this.form.controls.client.value.id, user.id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            var userStation = this.stations[i];\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  onStationChange(event) {\r\n    this.radiobuttonList = event.value;\r\n  }\r\n  radioChange(e) {\r\n    for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n      if (e.value == this.radiobuttonList[i].station_id) {\r\n        this.radiobuttonList[i].default_station = 'Y'\r\n\r\n      } else {\r\n        this.radiobuttonList[i].default_station = 'N'\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultStation() {\r\n    this.userService.getStationListWithStationAssignedToUser(this.params.data.client_id, this.params.data.user_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            var userStation = this.stations[i];\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n          for (var k = 0; k < this.radiobuttonList; k++) {\r\n            if (this.radiobuttonList[k].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue((this.radiobuttonList[k]));\r\n            }\r\n          }\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage User Station</mat-toolbar>\r\n\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            required>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n            (optionSelected)='onClientChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>CPO</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpos\"  (optionSelected)='onCPOChange($event.option.value)' autocomplete=\"off\" [matAutocomplete]=\"cpoAuto\" required>\r\n          <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\"\r\n           (optionSelected)='onCPOChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo\">account_circle\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpos').invalid\">Please select cpo </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>User</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\" [matAutocomplete]=\"userListAuto\"\r\n            required style=\"text-transform: none;\">\r\n          <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n            (optionSelected)='onUserChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n              {{option.username}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Station</mat-label>\r\n          <mat-select formControlName=\"stationList\" multiple (selectionChange)=\"onStationChange($event)\">\r\n            <mat-option *ngFor=\"let option of stations\" [value]=\"option\">\r\n              {{option.station_name}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Station\">help</mat-icon>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <div fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-radio-group aria-label=\"defaultStation\" formControlName=\"defaultStation\">\r\n            <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.station_id\" name=\"stationRadio\"\r\n              (change)=\"radioChange($event)\" [checked]=\"'Y' == radioButton.default_station ? true : false\">\r\n              {{radioButton.station_name}}&nbsp;&nbsp;\r\n            </mat-radio-button>\r\n            <mat-error *ngIf=\"form.get('defaultStation').hasError('required')\">Please select default station\r\n            </mat-error>\r\n          </mat-radio-group>\r\n        </div>\r\n\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?'Save'\r\n          : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageUserStationCrudComponent } from './manage-user-station-crud/manage-user-station-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './manage-user-station-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ManageUserStationCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ManageUserStationRoutingModule{}","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CityService } from 'app/shared/services/geographics/city.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { StateService } from 'app/shared/services/geographics/state.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\n\r\n\r\n\r\nexport class ManageUserStation {\r\n  f_name: string;\r\n  l_name: string;\r\n  station_id: number;\r\n  cpo_id:number;\r\n  client_id:number;\r\n  station_name: string;\r\n  default_station: string;\r\n  created_date: string;\r\n  status: string;\r\n  statusString: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['station_name', 'f_name', 'default_station', 'status', 'action'];\r\n  head = [['Station Name', 'First Name', 'Default Station', 'Status ']];\r\n  dataSource: MatTableDataSource<ManageUserStation>;\r\n\r\n  manageUserStation: ManageUserStation[];\r\n  filterEntity: ManageUserStation;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  defStationSearch = false;\r\n  nameSearch = false;\r\n  stationSearch=false;\r\n  statusSearch = false;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  userStanList: any[];\r\n  constructor(private stateService: StateService, public dialog: MatDialog, private userService: UserService,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getAllUserStationMapping();\r\n    this.filterEntity = new ManageUserStation();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllUserStationMapping() {\r\n    this.userService.getAllUserStationMapping(this.localStorage.userId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.data != null) {\r\n          this.userStanList = resp.data;\r\n          \r\n          for (var i = 0; i < this.userStanList.length; i++) {\r\n            if (this.userStanList[i].status == 'N') {\r\n              this.userStanList[i].statusString = 'Inactive';\r\n            } else {\r\n              this.userStanList[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.userStanList);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.userService.deleteUserStationMapping(id, this.localStorage.userId).subscribe(\r\n          (data: any) => {\r\n            if (data.status == true) {\r\n              this.getAllUserStationMapping();\r\n              this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n            } else {\r\n              this.getAllUserStationMapping();\r\n              this.snackBar.open(data.message, 'Dismiss', { duration: 2000 });\r\n            }\r\n\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllUserStationMapping();\r\n    });\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllUserStationMapping();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n\r\n    if (visibleOption == 'defStationSearch') {\r\n      this.defStationSearch = !this.defStationSearch;\r\n      this.filterEntity.default_station = '';\r\n    }\r\n    if (visibleOption == 'stationSearch') {\r\n      this.stationSearch = !this.stationSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.f_name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var userstation = this.dataSource.filteredData[i];\r\n      var data = { 'Station name': userstation.station_name, 'Name': userstation.f_name, 'Default Station': userstation.default_station, 'Status ': userstation.statusString };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Manage User Station');\r\n    XLSX.writeFile(workBook, 'Manage User Station.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen  \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var userstation = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [userstation.station_name, userstation.f_name, userstation.default_station, userstation.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Manage User Station Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Manage User Station report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n     <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Name\" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"f_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.f_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.f_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"default_station\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!defStationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Default Station &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('defStationSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"defStationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Default Station\" [(ngModel)]=\"filterEntity.default_station\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('defStationSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.default_station}} </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.map_id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent, canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-user-station-crud',\r\n  templateUrl: './manage-user-station-crud.component.html',\r\n  styleUrls: ['./manage-user-station-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ManageUserStationCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Station-User List', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"manageUserStation\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"stationUserList\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Station-User List', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/manageUserStation/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  users: any;\r\n  stations: any;\r\n  cposName:any;\r\n  radiobuttonList: any;\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsUser: Observable<any[]>;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private datePipe: DatePipe, private clientService: ClientService, private userService: UserService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cpoService: CpoService,) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClients();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.getCPOS(this.params.data.client_id);\r\n    this.getUserList(this.params.data.client_id);\r\n    this.getDefaultStation();\r\n  \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpos: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      stationList: ['', [Validators.required]],\r\n      defaultStation: ['', [Validators.required]],\r\n      status: [{ value: false }, [Validators.required]]\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n\r\n    const params: any = {\r\n      user_id: formValues.userList.id,\r\n      station_data: this.radiobuttonList.map(v => ({ station_id: v.id, create_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_role: v.default_role })),\r\n      status: this.status == true ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n    if (this.isEditMode) {\r\n      params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n    } else {\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n\r\n    // if (this.isEditMode) {\r\n    //   this.cityService.update(params).subscribe(\r\n    //     (cityData: any) => {\r\n    //       if (cityData.status == true) {\r\n    //         this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n    //         this.dialogRef.close();\r\n    //       } else {\r\n    //         this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    //         this.dialogRef.close();\r\n    //       }\r\n\r\n    //     },\r\n    //     (err) => {\r\n    //       this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n    //     }\r\n    //   )\r\n    // } else {\r\n    //   this.cityService.create(params).subscribe(\r\n    //     (data: any) => {\r\n    //       this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n    //       this.dialogRef.close();\r\n    //     },\r\n    //     (err) => {\r\n    //       this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n    //     }\r\n    //   )\r\n\r\n    // }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  assignValues(params) {\r\n\r\n    // this.form.get('client').setValue(params.data.name);\r\n    // this.form.get('cpos').setValue(params.data.name);\r\n    // this.form.get('userList').setValue(params.data.state_name);\r\n    // this.form.get('stationList').setValue(params.data.PIN);\r\n    // this.form.get('defaultStation').setValue(params.data.defaultStation);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCPOS(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cposName = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpos').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpos.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n          );\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getUserList(id) {\r\n    this.userService.getActiveUsersByClient(id).subscribe(\r\n      (resp: any) => {\r\n        this.users = resp.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.users.find(c => c.id == this.params.data.user_id);\r\n          this.form.get('userList').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.username),\r\n            map(username => username ? this._filterUserModels(username) : this.users)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayUser(item: any): string {\r\n    return item && item.username ? item.username : '';\r\n  }\r\n  private _filterUserModels(username: string): any[] {\r\n    const filterValue = username.toLowerCase();\r\n    return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onClientChange(client) {\r\n    this.getCPOS(client.id);\r\n    this.getUserList(client.id);\r\n    this.form.get('userList').setValue('');\r\n    this.form.get('stationList').setValue('');\r\n    this.form.get('defaultStation').setValue('')\r\n  }\r\n\r\n  onUserChange(user) {\r\n    // this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n    this.userService.getStationListWithStationAssignedToUser(this.form.controls.client.value.id, user.id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            var userStation = this.stations[i];\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  onStationChange(event) {\r\n    this.radiobuttonList = event.value;\r\n  }\r\n  radioChange(e) {\r\n    for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n      if (e.value == this.radiobuttonList[i].station_id) {\r\n        this.radiobuttonList[i].default_station = 'Y'\r\n\r\n      } else {\r\n        this.radiobuttonList[i].default_station = 'N'\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultStation() {\r\n    this.userService.getStationListWithStationAssignedToUser(this.params.data.client_id, this.params.data.user_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            var userStation = this.stations[i];\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n          for (var k = 0; k < this.radiobuttonList; k++) {\r\n            if (this.radiobuttonList[k].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue((this.radiobuttonList[k]));\r\n            }\r\n          }\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage User Station</mat-toolbar>\r\n\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" readonly>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n          (optionSelected)='onClientChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n          </mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>CPO</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"cpos\" autocomplete=\"off\" [matAutocomplete]=\"cpoAuto\" required>\r\n        <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo\">account_circle\r\n          </mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('cpos').invalid\">Please select cpo </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>User</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\" [matAutocomplete]=\"userListAuto\"\r\n          readonly style=\"text-transform: none;\">\r\n        <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n          (optionSelected)='onUserChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n            {{option.username}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Station</mat-label>\r\n        <mat-select formControlName=\"stationList\" multiple (selectionChange)=\"onStationChange($event)\"disabled=\"true\" >\r\n          <mat-option *ngFor=\"let option of stations\" [value]=\"option\">\r\n            {{option.station_name}}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Station\">help</mat-icon>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-radio-group aria-label=\"defaultStation\" formControlName=\"defaultStation\" >\r\n          <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.id\" name=\"roleRadio\"\r\n            (change)=\"radioChange($event)\" [checked]=\"'Y' == radioButton.default_station ? true : false\" disabled=\"true\">\r\n            {{radioButton.station_name}}&nbsp;&nbsp;\r\n          </mat-radio-button>\r\n          <mat-error *ngIf=\"form.get('defaultStation').hasError('required')\">Please select default station\r\n          </mat-error>\r\n        </mat-radio-group>\r\n      </div>\r\n\r\n      <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\" #toggleElemen\r\n        disabled=\"true\">\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n        routerLink=\"/userManagement/manageUserStation/crud\">Cancel</button>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserRoleService } from 'app/shared/services/user/user-role.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === 'string') {\r\n            return { 'invalidAutocompleteObject': { value: control.value } }\r\n        }\r\n        return null  /* valid option selected */\r\n    }\r\n}\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html',\r\n    styleUrls: ['./create.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n    form: FormGroup;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsCpo: Observable<any[]>;\r\n    filteredOptionsUser: Observable<any[]>;\r\n    filteredOptionsRole: Observable<any[]>;\r\n    clients: any;\r\n    cposName: any;\r\n    users: any;\r\n    stations: any;\r\n    station_id: any;\r\n    default_station: any;\r\n    localStorage: any;\r\n    radiobuttonList: any;\r\n    currentCheckedValue = null;\r\n    messageConstant: MessageConstant;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    status = true;\r\n    selectedStation: any;\r\n    defaultSelectedStation: any;\r\n    default_checkedStation: any;\r\n    constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router, private cpoService: CpoService,\r\n        private clientService: ClientService, private userService: UserService, private roleService: RoleService,private cdr:ChangeDetectorRef) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n        this.getClients();\r\n        // this.getUserList();\r\n        //this.getRoleList();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n        this.form = this.fb.group({\r\n            client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            cpos: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            stationList: ['', [Validators.required]],\r\n            defaultStation: ['', [Validators.required]],\r\n            status: [{ value: false }, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            let params = {\r\n                user_id: formValues.userList.id,\r\n                station_data: this.radiobuttonList.map(v => ({ station_id: v.station_id, created_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_station: v.default_station })),\r\n                status: this.status == true ? 'Y' : 'N',\r\n                created_by: this.localStorage.userId,\r\n                modify_by: this.localStorage.userId\r\n            }\r\n\r\n            this.userService.UserStationMappingV1(params).subscribe(\r\n                (resp: any) => {\r\n                    if (resp.status == true) {\r\n                        this.snackBar.open(MessageConstant.userStationAssign, 'Dismiss', { duration: 5000 });\r\n                        this.router.navigate(['userManagement/manageUserStation/crud']);\r\n                    } else {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n\r\n                },\r\n                (err) => {\r\n                    this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                }\r\n            )\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get('email').hasError('required')\r\n            ? 'You must enter a value'\r\n            : form.get('email').hasError('email')\r\n                ? 'Not a valid email'\r\n                : '';\r\n    }\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n            (data: any) => {\r\n                this.clients = data;\r\n                const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n                this.form.get('client').setValue(toSelect);\r\n                this.getCPOS(toSelect.id);\r\n                this.getUserList(toSelect.id);\r\n                this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterClientModels(name) : this.clients)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n    onClientChange(client) {\r\n        this.getCPOS(client.id);\r\n        this.getUserList(client.id);\r\n        this.form.get('cpos').setValue(\"\");\r\n        this.form.get('userList').setValue(\"\");\r\n        this.form.get('stationList').setValue(\"\");\r\n        this.radiobuttonList = [];\r\n        this.cdr.detectChanges();\r\n    }\r\n    onCPOChange(cpo){\r\n        this.form.get('userList').setValue(\"\");\r\n        this.form.get('stationList').setValue(\"\");\r\n        this.radiobuttonList = [];\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterClientModels(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getCPOS(client_id) {\r\n        this.cpoService.getCpoByClientId(client_id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                this.filteredOptionsCpo = this.form.controls.cpos.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n                    );\r\n            }, (err) => { }\r\n        )\r\n    }\r\n    displayCpo(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n    private _filterCharCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getUserList(id) {\r\n        this.userService.getActiveUsersByClient(id).subscribe(\r\n            (resp: any) => {\r\n                this.users = resp.data;\r\n                this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.username),\r\n                        map(username => username ? this._filterUserModels(username) : this.users)\r\n                    );\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    displayUser(item: any): string {\r\n        return item && item.username ? item.username : '';\r\n    }\r\n\r\n    private _filterUserModels(username: string): any[] {\r\n        const filterValue = username.toLowerCase();\r\n        return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n\r\n\r\n    onStationChange(event) {\r\n        this.radiobuttonList = event.value;\r\n    }\r\n\r\n    radioChange(e) {\r\n        for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n            if (e.value == this.radiobuttonList[i].station_id) {\r\n                this.radiobuttonList[i].default_station = 'Y'\r\n\r\n            } else {\r\n                this.radiobuttonList[i].default_station = 'N'\r\n\r\n            }\r\n        }\r\n    }\r\n    onUserChange(user) {\r\n        this.userService.getStationListWithStationAssignedToUser(this.form.controls.client.value.id, user.id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.stations = resp.data;\r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.stations.length; i++) {\r\n                        if (this.stations[i].default_station == 'Y') {\r\n                            this.form.get('defaultStation').setValue(this.stations[i]);\r\n                        }\r\n                        var userStation = this.stations[i];\r\n                        if (userStation.map_id != null && userStation.map_id != undefined) {\r\n                            selectedList.push(userStation);\r\n                        }\r\n                    }\r\n                    this.form.get('stationList').setValue(selectedList);\r\n                    this.radiobuttonList = selectedList;\r\n                }\r\n            }, (err) => {  }\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Client</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n                    required>\r\n                <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n                    (optionSelected)='onClientChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">account_circle\r\n                    </mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>CPO</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"cpos\" autocomplete=\"off\" [matAutocomplete]=\"cpoAuto\"\r\n                    required >\r\n                <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\"\r\n                (optionSelected)='onCPOChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo\">account_circle\r\n                    </mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('cpos').invalid\">Please select cpo </mat-error>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n        \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>User</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\"\r\n                    [matAutocomplete]=\"userListAuto\" required style=\"text-transform: none;\">\r\n                <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n                    (optionSelected)='onUserChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n                        {{option.username}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n                <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Station</mat-label>\r\n                <mat-select formControlName=\"stationList\" multiple (selectionChange)=\"onStationChange($event)\">\r\n                    <mat-option *ngFor=\"let option of stations\" [value]=\"option\">\r\n                        {{option.station_name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Station\">help</mat-icon>\r\n               \r\n            </mat-form-field>\r\n\r\n            \r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <div fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Default Station</mat-label>&nbsp;&nbsp;\r\n                <mat-radio-group aria-label=\"defaultStation\" formControlName=\"defaultStation\">\r\n                    <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.station_id\"\r\n                        name=\"roleRadio\" (change)=\"radioChange($event)\"\r\n                        [checked]=\"'Y' == radioButton.default_station ? true : false\">\r\n                        {{radioButton.station_name}}&nbsp;&nbsp;\r\n                    </mat-radio-button>\r\n                    <mat-error *ngIf=\"form.get('defaultStation').hasError('required')\">Please select default station\r\n                    </mat-error>\r\n                </mat-radio-group>\r\n            </div>\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n                color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n                {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n        </div>\r\n\r\n        <!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            \r\n        </div> -->\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n            <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n                routerLink=\"/userManagement/user-role/crud/list\">Cancel</button>\r\n        </div>\r\n\r\n    </form>\r\n</div>"]}