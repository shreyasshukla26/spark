{"version":3,"sources":["webpack:///src/app/main/user-management/role/create/create.component.ts","webpack:///src/app/main/user-management/role/create/create.component.html","webpack:///src/app/main/user-management/role/role-crud/role-crud.component.ts","webpack:///src/app/main/user-management/role/role-crud/role-crud.component.html","webpack:///src/app/main/user-management/role/role.module.ts","webpack:///src/app/main/user-management/role/view-dialog/view-dialog.component.ts","webpack:///src/app/main/user-management/role/view-dialog/view-dialog.component.html","webpack:///src/app/main/user-management/role/role-routing.module.ts","webpack:///src/app/main/user-management/role/action-dialog/action-dialog.component.ts","webpack:///src/app/main/user-management/role/action-dialog/action-dialog.component.html","webpack:///src/app/main/user-management/role/role-crud/routes.ts","webpack:///src/app/main/user-management/role/list/list.component.ts","webpack:///src/app/main/user-management/role/list/list.component.html","webpack:///src/app/main/user-management/role-menu/role-menu.component.ts","webpack:///src/app/main/user-management/role-menu/role-menu.component.html"],"names":["autocompleteObjectValidator","control","value","CreateComponent","fb","roleService","snackBar","router","clientService","status","initialize","getClients","localStorage","JSON","parse","getItem","form","group","client","required","code","pattern","name","description","valid","formValues","params","client_id","id","project_id","created_by","userId","create","subscribe","resp","open","roleCreated","duration","navigate","message","errorMessage","err","get","hasError","event","checked","ref","getActiveClientsCW","data","clients","toSelect","find","c","setValue","filteredOptionsClient","controls","valueChanges","pipe","_filterClientModels","item","filterValue","toLowerCase","filter","option","includes","onSubmit","$event","preventDefault","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","RoleCrudComponent","cdr","_utilityService","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","children","undefined","y","objectChildData","z","isDefaultRoutePermeted","push","label","link","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","COMPONENTS","COMPONENTS_DYNAMIC","RoleModule","imports","declarations","entryComponents","ViewDialogComponent","dialogRef","isEditMode","action","assignValues","close","modify_by","update","recordUpdateMessage","chargerNCreate","closeActionPanel","routes","path","component","canActivate","RoleRoutingModule","forChild","exports","ActionDialogComponent","onYesClick","TABS_DEMO_ROUTES","redirectTo","pathMatch","Role","ListComponent","dialog","displayedColumns","head","clientSearch","codeSearch","nameSearch","descSearch","statusSearch","getRolesCW","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","roles","i","length","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteMessage","width","autoFocus","panelClass","visibleOption","ev","stopPropagation","client_name","exportedData","role","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","filteredData","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","TodoItemNodeTest","isSelected","ActionNode","TodoItemFlatNode","ActionMenuNode","ChecklistDatabase","_menuConfigService","changeDetectorRef","dataChange","getRoleMenuList","role_id","getMenusByClientIdWithAlreadyMappedToRole","menuConfigLit","menuChildList","index","menuCfg","parent_id","parentMenu","getParentMenu","buildFileTree","next","menuConfigList","menuConfig","menu_id","menudata","level","todoItemList","node","map_id","rm_map_id","parent","RoleMenuComponent","menuConfigService","_database","actionMenu","menuNode","flatNodeMap","Map","menuAction","completed","subMenu","nestedNodeMap","selectedParent","newItemName","checklistSelection","selectChange","collaspedChange","selectedMenus","getLevel","isExpandable","expandable","getChildren","hasChild","_","_nodeData","hasNoContent","transformer","existingNode","flatNode","set","nodeSelectionToggle","allComplete","treeFlattener","treeControl","getMenuListClientWise","expandAll","roleMenuForm","getRolesList","toggle","descendants","getDescendants","select","deselect","markForCheck","k","checkParentIsSelected","t","isAlreadyPush","selected","menus","map","v","setRoleMenuMapping","roleMenuMappedSucess","selectedClientID","getActiveRolesByClientId","filteredOptionsRole","_filterRoleModels","clear","descAllSelected","every","child","some","descendantsAllSelected","forEach","checkAllParentsSelection","getParentNode","checkRootNodeSelection","nodeSelected","currentLevel","startIndex","dataNodes","indexOf","currentNode","parentNode","insertItem","expand","itemValue","nestedNode","updateItem","selectAll","unSelectAll","collaspedRef","collapseAll","onClientChange","onRoleChange","updateSelectChange","updatecollaspedChange","openSubmit","providers","tree"],"mappings":"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","file":"role-role-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { ChargerService } from '@shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  clients: any;\r\n  localStorage: any;\r\n  messageConstant: MessageConstant;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  constructor(private fb: FormBuilder,\r\n    private roleService: RoleService, private snackBar: MatSnackBar,\r\n    private router: Router, private clientService: ClientService,) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClients();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      code: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      status: [{ value: false }, [Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        client_id: formValues.client.id,\r\n        code: formValues.code,\r\n        name: formValues.name,\r\n        project_id: this.localStorage.project_id,\r\n        description: formValues.description,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      this.roleService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.roleCreated, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/userManagement/role/crud/list']);\r\n          } else if (resp.status == false) {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getClients() {\r\n\r\n\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n        this.form.get('client').setValue(toSelect);\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n        <mat-label>Code</mat-label>\r\n        <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"code\" maxlength=\"20\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter code</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">account_circle</mat-icon>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\"\r\n        [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\" routerLink=\"/userManagement/role/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","\r\nimport {ChangeDetectorRef, Component,OnInit} from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-role-crud',\r\n  templateUrl: './role-crud.component.html',\r\n  styleUrls: ['./role-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class RoleCrudComponent implements OnInit {\r\n   // Nav bar demo\r\n   tabLinks = [\r\n    // { label: 'List', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray:any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"mangeRole\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                    if (z.id === \"list\") {\r\n                      isDefaultRoutePermeted = true;\r\n                      this.tempLinks.push({ label: 'Manage Role', link: 'list' });\r\n                    }\r\n                    if (z.id === \"addNew\") {\r\n                      this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                    }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/role/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n    \r\n              }\r\n             \r\n            }\r\n  \r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n    \r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0 \" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\"> {{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\n// import { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { RoleCrudComponent } from './role-crud/role-crud.component';\r\nimport { RoleRoutingModule } from './role-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { RoleMenuComponent } from '../role-menu/role-menu.component';\r\nconst COMPONENTS =[RoleCrudComponent, CreateComponent, ListComponent,RoleMenuComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, RoleRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RoleModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  messageConstant:MessageConstant;\r\n  constructor(private fb: FormBuilder,private roleService: RoleService, private snackBar: MatSnackBar,private clientService: ClientService,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.getClients();\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      code : ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9]*$/)]] ,\r\n      name: ['',  [Validators.required,Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      description: ['',  [Validators.pattern(/^[a-zA-Z0-9]*$/)]]\r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n  \r\n        name : formValues.name,\r\n        description : formValues.description,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.roleService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.roleService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n    this.dialogRef.close(params);\r\n    }\r\n    return;\r\n   \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('code').setValue(params.data.name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage Role</mat-toolbar>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" style=\"padding-top:8px;\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" readonly autocomplete=\"off\" [matAutocomplete]=\"clientAuto\">\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n        <mat-label>Code</mat-label>\r\n        <input matInput placeholder=\"\" autocomplete=\"off\" readonly formControlName=\"code\" maxlength=\"200\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('code').hasError('required')\">Please enter code</mat-error>\r\n        <mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" readonly autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\" readonly>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">account_circle</mat-icon>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"padding-bottom:3.24\" disabled=\"true\" style=\"margin-bottom: 10px;\" fxFlex=\"50\"\r\n        class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n        #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"accent\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      <!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"\r\n    (click)=\"onYesClick()\">Save</button> -->\r\n\r\n    </div>\r\n  </form>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TABS_DEMO_ROUTES } from './role-crud/routes';\r\nimport { RoleCrudComponent } from './role-crud/role-crud.component';\r\nimport { RoleMenuComponent } from '../role-menu/role-menu.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RoleCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n    {\r\n        path : 'roleMenuMappings',component : RoleMenuComponent,canActivate: [AuthGuard]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RoleRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  clients: any;\r\n  messageConstant:MessageConstant;\r\n  constructor(private fb: FormBuilder,private roleService: RoleService, private snackBar: MatSnackBar,private clientService: ClientService,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getClients();\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      code : ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]] ,\r\n      name: ['',  [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',  [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]]\r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        client_id : formValues.client.id,\r\n        code:formValues.code,\r\n        name : formValues.name,\r\n        project_id:this.localStorage.project_id ,\r\n        description : formValues.description,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.roleService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.roleService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n    this.dialogRef.close(params);\r\n    }\r\n    return;\r\n   \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage Role</mat-toolbar>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" style=\"padding-top:8px;\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Code</mat-label>\r\n        <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"code\" maxlength=\"200\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('code').hasError('required')\">Please enter code</mat-error>\r\n        <mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"padding-bottom:3.24\" style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\"\r\n        class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"accent\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">Save</button>\r\n\r\n    </div>\r\n  </form>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\n\r\nexport class Role {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  client:string;\r\n  code:string;\r\n  client_name:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Role;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'name', 'client','code', 'description','status','action'];\r\n  head = [['Role Name', 'Client','Code','Description','Status']];\r\n  dataSource: MatTableDataSource<Role>;\r\n\r\n  roles : Role[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  codeSearch = false;\r\n  nameSearch = false;\r\n  descSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private roleService : RoleService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getRolesCW();\r\n    this.filterEntity = new Role();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getRolesCW(){\r\n    this.roleService.getRolesCW(this.localStorage.userId,this.localStorage.project_id).subscribe(\r\n      (resp:any)=>{\r\n        if(resp.data != null){\r\n          this.roles = resp.data;\r\n          for(var i=0; i < this.roles.length;i++){\r\n            if(this.roles[i].status == 'N'){\r\n              this.roles[i].statusString = 'Inactive';\r\n            }else{\r\n              this.roles[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.roles);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 5000 })\r\n          return;\r\n        }  \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.roleService.delete(id,this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n            if(data.status == true){\r\n              this.getRolesCW();\r\n            this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:5000});\r\n            }else{\r\n              this.snackBar.open(data.message,'Dismiss',{duration:5000});\r\n            }\r\n\r\n          },(err)=>{\r\n        } \r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n    \r\n  }\r\n  viewDialog(data):void{\r\n    let params = {\r\n      action : 'View',\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRolesCW();\r\n          \r\n    });\r\n  }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data, \r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getRolesCW();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n      if(visibleOption == 'clientSearch'){\r\n        this.clientSearch = !this.clientSearch;\r\n        this.filterEntity.client_name = \"\";\r\n      }\r\n      if(visibleOption == 'codeSearch'){\r\n        this.codeSearch = !this.codeSearch;\r\n        this.filterEntity.code = \"\";\r\n      }\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    \r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = \"\";\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString= \"\";\r\n    }\r\n   }\r\n\r\n   tableExport()\r\n   {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.roles.length; i++) {\r\n       var role = this.roles[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Role Name':role.name,'Client': role.client_name,'Code': role.code,'Description':role.description,'Status':role.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n      \r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n       XLSX.writeFile(workBook, 'Role.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n   }\r\n\r\n   pdfExport(){\r\n   \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.client_name,chrger.code,chrger.description,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Role Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('Role report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n\r\n        <div>\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Role Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Role Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"client\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Client\" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!codeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Code &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"codeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Code\" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <button  (click)=\"tableExport()\" mat-fab color=\"primary\" matTooltip=\"export to excel\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;position:fixed;bottom:30px;right:20px\">\r\n    <mat-icon>downloading</mat-icon>\r\n  </button> -->\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Injectable, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MenuConfigService } from 'app/shared/services/menu-config/menu-config.service';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class TodoItemNodeTest {\r\n  children: TodoItemNodeTest[];\r\n  item: string;\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  isSelected: boolean = false;\r\n  parent_id: string;\r\n  rm_map_id: string;\r\n}\r\nexport class ActionNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n  actionAll: ActionMenuNode[];\r\n  children: TodoItemFlatNode[];\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  map_id: string;\r\n  parent_id: string;\r\n  rm_map_id: string;\r\n  isSelected: boolean = false;\r\n}\r\nexport class ActionMenuNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n  selectAll: boolean;\r\n}\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemFlatNode[]>([]);\r\n  localStorage: any;\r\n  get data(): TodoItemFlatNode[] { return this.dataChange.value; }\r\n\r\n  constructor(private _menuConfigService: MenuConfigService, private changeDetectorRef: ChangeDetectorRef) {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.getRoleMenuList(this.localStorage.project_id, this.localStorage.client_id, this.localStorage.role_id);\r\n\r\n\r\n  }\r\n  getRoleMenuList(project_id, client_id, role_id) {\r\n    this._menuConfigService.getMenusByClientIdWithAlreadyMappedToRole(project_id, client_id, role_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          let menuConfigLit = [];\r\n          let menuChildList = [];\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            let menuCfg = resp.data[index];\r\n            if (menuCfg.parent_id == null) {\r\n              menuConfigLit.push(menuCfg);\r\n            } else {\r\n              let parentMenu = this.getParentMenu(menuConfigLit, menuCfg.parent_id);\r\n              menuChildList = parentMenu.children;\r\n              if (undefined == menuChildList) {\r\n                menuChildList = [];\r\n                parentMenu.children = menuChildList;\r\n              }\r\n              menuChildList.push(menuCfg);\r\n            }\r\n          }\r\n          this.changeDetectorRef.detectChanges();\r\n          const data = this.buildFileTree(menuConfigLit, 0);\r\n          this.dataChange.next(data);\r\n\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getParentMenu(menuConfigList, parent_id) {\r\n    let parentMenu;\r\n    for (let index = 0; index < menuConfigList.length; index++) {\r\n      let menuConfig = menuConfigList[index];\r\n      if (menuConfig.menu_id == parent_id) {\r\n        parentMenu = menuConfig;\r\n        break;\r\n      } else {\r\n        let menuChildList = menuConfig.children;\r\n        if (undefined != menuChildList) {\r\n          parentMenu = this.getParentMenu(menuChildList, parent_id);\r\n          if (parentMenu != undefined) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return parentMenu;\r\n  }\r\n  buildFileTree(menudata, level: number): TodoItemFlatNode[] {\r\n    let todoItemList = [];\r\n    for (let index = 0; index < menudata.length; index++) {\r\n      let menuCfg = menudata[index];\r\n      const node = new TodoItemFlatNode();\r\n      node.item = menuCfg.title;\r\n      node.id = menuCfg.id;\r\n      node.title = menuCfg.title;\r\n      node.menu_id = menuCfg.menu_id;\r\n      node.map_id = menuCfg.map_id;\r\n      node.parent_id = menuCfg.parent_id;\r\n      node.rm_map_id = menuCfg.rm_map_id;\r\n      this.changeDetectorRef.detectChanges();\r\n      if (menuCfg.children != undefined)\r\n        node.children = this.buildFileTree(menuCfg.children, level + 1);\r\n      todoItemList.push(node);\r\n\r\n    }\r\n    return todoItemList;\r\n  }\r\n\r\n  insertItem(parent: TodoItemFlatNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({ item: name } as TodoItemFlatNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemFlatNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\nexport interface MenuAction {\r\n  name: string;\r\n  completed: boolean;\r\n  subMenu?: MenuAction[];\r\n}\r\n@Component({\r\n  selector: 'app-role-menu',\r\n  templateUrl: './role-menu.component.html',\r\n  styleUrls: ['./role-menu.component.scss'],\r\n  providers: [ChecklistDatabase, DatePipe],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class RoleMenuComponent implements OnInit {\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  roles: any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  roleMenuForm: FormGroup;\r\n  actionMenu = false;\r\n  menuNode = false;\r\n  localStorage: any;\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  menuAction: MenuAction = {\r\n    name: 'select All',\r\n    completed: false,\r\n    subMenu: [\r\n      { name: 'Add/Update', completed: false },\r\n      { name: 'Delete', completed: false },\r\n      { name: 'Download', completed: false }\r\n    ]\r\n  };\r\n  selectedClientID: any;\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  TREE_DATA: any;\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n  @ViewChild('tree') tree;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleCollasped\") collaspedRef: any;\r\n  selectChange = false;\r\n  collaspedChange = false;\r\n  selectedMenus = [];\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private menuConfigService: MenuConfigService, private changeDetectorRef: ChangeDetectorRef, private fb: FormBuilder, private clientService: ClientService, private _database: ChecklistDatabase,\r\n    private roleService: RoleService,private _utilityService:UtilityService) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n    this.getMenuListClientWise();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.changeDetectorRef.detectChanges();\r\n    })\r\n    this.treeControl.expandAll();\r\n  }\r\n  \r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.roleMenuForm = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      role: ['', [autocompleteObjectValidator(), Validators.required]],\r\n    });\r\n    this.getClients();\r\n    this.getRolesList(this.localStorage.client_id);\r\n  }\r\n  getMenuListClientWise() {\r\n    this._database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n      this.treeControl.expandAll()\r\n\r\n    });\r\n  }\r\n\r\n\r\n  nodeSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants, node)\r\n      : this.checklistSelection.deselect(...descendants, node);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  checkParentIsSelected(data) {\r\n    for (var k = 0; k < data.length; k++) {\r\n      let node = data[k];\r\n      if (node.children != undefined) {\r\n        const children = node.children;\r\n        this.checkParentIsSelected(children);\r\n        let result = false;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          const isSelected = this.selectedMenus.filter(t => { return children[i].menu_id == t.menu_id });\r\n          if (isSelected != null && isSelected.length > 0) {\r\n            result = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (result == true) {\r\n          const isAlreadyPush = this.selectedMenus.filter(t => { return node.menu_id == t.menu_id });\r\n          if (isAlreadyPush == null || isAlreadyPush.length == 0) {\r\n            this.selectedMenus.push(node);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  openSubmit() {\r\n    let formValues = this.roleMenuForm.value;\r\n    ////\r\n    this.selectedMenus = [];\r\n    this.selectedMenus = [...this.checklistSelection.selected];\r\n\r\n    this.checkParentIsSelected(this.dataSource.data);\r\n\r\n    //;\r\n    let params = {\r\n      role_id: formValues.role.id,\r\n      menus: this.selectedMenus.map(v => ({ menu_id: v.menu_id })),\r\n      status: \"Y\",\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n    this.menuConfigService.setRoleMenuMapping(params).subscribe(\r\n      (resp: any) => {\r\n        // \r\n        if (resp.status = true) {\r\n          this.snackBar.open(MessageConstant.roleMenuMappedSucess, 'Dismiss', { duration: 5000 });\r\n          this._database.getRoleMenuList(this.localStorage.project_id, formValues.client.id, formValues.role.id)\r\n        } else {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n\r\n\r\n\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n        this.roleMenuForm.get('client').setValue(toSelect);\r\n        this.selectedClientID = toSelect.id;\r\n        this.filteredOptionsClient = this.roleMenuForm.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value) {\r\n    //this.dataSource.data =[];\r\n    //this._database.dataChange.next(null);\r\n    //this.checklistSelection.clear();\r\n    //this.descendantsAllSelected( this.checklistSelection.);\r\n    //this._database.getRoleMenuList(this.localStorage.project_id,value.id);\r\n    this.getRolesList(value.id);\r\n    this.roleMenuForm.get('role').setValue('');\r\n    this.selectedClientID = value.id;\r\n    //this.getMenuListClientWise();\r\n  }\r\n\r\n  getRolesList(client_id) {\r\n    this.roles = [];\r\n    this.roleService.getActiveRolesByClientId(this.localStorage.project_id, client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status = true) {\r\n          this.roles = resp.data;\r\n\r\n          const toSelect = this.roles.find(c => c.id == this.localStorage.role_id);\r\n          if (toSelect != null) {\r\n            if (toSelect.id = this.localStorage.role_id) {\r\n              this.roleMenuForm.get('role').setValue(toSelect);\r\n            }\r\n\r\n          }\r\n\r\n\r\n          this.filteredOptionsRole = this.roleMenuForm.controls.role.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterRoleModels(name) : this.roles)\r\n            );\r\n          //this._database.getRoleMenuList(this.localStorage.project_id,client_id,toSelect.id); \r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterRoleModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.roles.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onRoleChange(value) {\r\n\r\n    this.checklistSelection.clear();\r\n    this._database.getRoleMenuList(this.localStorage.project_id, this.selectedClientID, value.id);\r\n  }\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n  menu_id = (node: TodoItemFlatNode) => node.menu_id;\r\n  parent_id = (node: TodoItemFlatNode) => node.parent_id;\r\n  getChildren = (node: TodoItemFlatNode): TodoItemFlatNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemFlatNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n      ? existingNode\r\n      : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.menu_id = node.menu_id;\r\n    flatNode.parent_id = node.parent_id;\r\n    flatNode.expandable = !!node.children?.length;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    if (node.rm_map_id != null) {\r\n      this.nodeSelectionToggle(flatNode);\r\n    }\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  // descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n  //   const descendants = this.treeControl.getDescendants(node);\r\n\r\n  //   if (!descendants.length) {\r\n  //     return this.checklistSelection.isSelected(node);\r\n  //   }\r\n  //   const selected = this.checklistSelection.isSelected(node);\r\n  //   const allSelected = descendants.every(child => this.checklistSelection.isSelected(child));\r\n  //   if (!selected && allSelected) {\r\n  //     this.checklistSelection.select(node);\r\n\r\n  //   }\r\n  //   return allSelected;\r\n  // }\r\n\r\n\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      this.changeDetectorRef.markForCheck();\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n    this.actionMenu = true;\r\n    this.menuNode = true;\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\r\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n    this.actionMenu = true;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this._database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this._database.updateItem(nestedNode!, itemValue);\r\n  }\r\n  allComplete: boolean = false;\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.menuAction.subMenu != null && this.menuAction.subMenu.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(node: any): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n    // if (node.this.menuAction.subMenu == null) {\r\n    // return false;\r\n    // }\r\n    //return node.this.menuAction.subMenu.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.menuAction.subMenu == null) {\r\n      return;\r\n    }\r\n    this.menuAction.subMenu.forEach(t => t.completed = completed);\r\n  }\r\n  updateSelectChange(event) {\r\n    this.selectChange = event.checked;\r\n    this.ref.checked = this.selectChange;\r\n    if (this.selectChange == true) {\r\n      this.checklistSelection.clear();\r\n      this.selectAll();\r\n\r\n      // this.treeControl.collapseAll();\r\n    } else {\r\n      this.unSelectAll();\r\n      this.checklistSelection.clear();\r\n      //this.checklistSelection.selected\r\n      //this.treeControl.expandAll();\r\n    }\r\n  }\r\n  updatecollaspedChange(event) {\r\n    this.collaspedChange = event.checked;\r\n    this.collaspedRef.checked = this.collaspedChange;\r\n    if (this.collaspedChange == true) {\r\n      this.treeControl.collapseAll();\r\n    } else {\r\n      this.treeControl.expandAll();\r\n    }\r\n  }\r\n  selectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n  unSelectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n\t  <!-- CENTER -->\r\n\t  <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n\t\t  <!-- HEADER -->\r\n\t\t  <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n\t\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n\t\t\t\t  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n\t\t\t\t  </span>\r\n  \r\n\t\t\t\t  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n\t\t\t\t\t\t  (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n\t\t\t\t\t  <mat-icon>menu</mat-icon>\r\n\t\t\t\t  </button-->\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"roleMenuForm\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"roleMenuForm\" >\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"30\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t(optionSelected)='onClientChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"roleMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"30\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"role\" autocomplete=\"off\" [matAutocomplete]=\"roleAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #roleAuto=\"matAutocomplete\" [displayWith]=\"displayRole\"\r\n\t\t\t\t(optionSelected)='onRoleChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter role name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"roleMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"20\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: 18px;\" >\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"selectChange\"(change)=\"updateSelectChange($event)\" #toggleElement>\r\n\t\t\t\t\t{{selectChange ? 'Select All' : 'Un Select All'}}</mat-slide-toggle> &nbsp;&nbsp;\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"collaspedChange\"(change)=\"updatecollaspedChange($event)\" #toggleCollasped>\r\n\t\t\t\t\t\t{{collaspedChange ? 'Collasped' : 'Un Collasped'}}</mat-slide-toggle>\r\n\t\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" routerLink=\"/chargingStation/crud/list\">Cancel</button> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"20\" style=\"margin-bottom: 18px;\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" style=\"float: right;\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t\t</div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"margin-top:20px ;\">\r\n        <mat-toolbar  style=\"background-color: #00acc1 !important;color:white\" class=\"connector-toolbar\">\r\n          <!-- sidebar toggle button -->\r\n          <h6 class=\"m-0 pl-16 font-normal fz-1\"> \r\n            <button mat-icon-button [style.alignSelf]=\"'center'\"  class=\"mr-16\">\r\n              <mat-icon>list</mat-icon>\r\n            </button> &nbsp;Menu List\r\n          </h6>\r\n        </mat-toolbar>\r\n      </div>\r\n\t</div>\r\n\t<div fxLayout=\"row wrap\"  style=\"padding-top:20px;\">\r\n\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t  <mat-tree #tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t  <mat-checkbox class=\"checklist-leaf-node\"\r\n\t\t\t\t\t\t\t[checked]=\"checklistSelection.isSelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"checklistSelection.isSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t  <div fxLayout=\"row wrap\" style=\"padding-right: 10px;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectAdd\">Add/Update</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDelete\">Delete</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDownload\">Download</mat-checkbox>\r\n\t\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t  </div>           -->\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\t\t\t  \r\n\t\t\t  <button mat-icon-button matTreeNodeToggle\r\n\t\t\t\t\t  [attr.aria-label]=\"'Toggle ' + node.item\">\r\n\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t</mat-icon>\r\n\t\t\t  </button>\r\n\t\t\t  <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n\t\t\t\t\t\t\t[indeterminate]=\"descendantsPartiallySelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t  <!-- <div *ngIf=\"descendantsAllSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t<div class=\"cb-wrapper\" [ngClass]=\"{'cb-vertival': !tmp }\">\r\n\t\t\t\t\t\t\t  <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"allComplete\"  [indeterminate]=\"someComplete(node)\" (change)=\"setAll($event.checked)\" > {{menuAction.name}}</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  <div *ngFor=\"let subMenu of menuAction.subMenu\">\r\n\t\t\t\t\t\t\t\t<mat-checkbox [(ngModel)]=\"subMenu.completed\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"updateAllComplete()\">\r\n\t\t\t\t\t\t\t\t  {{subMenu.name}}\r\n\t\t\t\t\t\t\t\t</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>                   -->\r\n\t\t\t  <!--button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button-->\r\n\t\t\t</mat-tree-node>\r\n\t\t\t\r\n\t\t  </mat-tree>\r\n\t\t  </div>\r\n\t\t \r\n\t\t</div>\r\n\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start start\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t</div> -->\r\n  </form>\r\n</div> \r\n"]}