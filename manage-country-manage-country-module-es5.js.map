{"version":3,"sources":["webpack:///src/app/main/manage-geographics/manage-country/list/list.component.ts","webpack:///src/app/main/manage-geographics/manage-country/list/list.component.html","webpack:///src/app/main/manage-geographics/manage-country/action-dialog/action-dialog.component.ts","webpack:///src/app/main/manage-geographics/manage-country/action-dialog/action-dialog.component.html","webpack:///src/app/main/manage-geographics/manage-country/create/create.component.ts","webpack:///src/app/main/manage-geographics/manage-country/create/create.component.html","webpack:///src/app/main/manage-geographics/manage-country/manage-country-crud/manage-country-crud.component.ts","webpack:///src/app/main/manage-geographics/manage-country/manage-country-crud/manage-country-crud.component.html","webpack:///src/app/main/manage-geographics/manage-country/view-dialog/view-dialog.component.ts","webpack:///src/app/main/manage-geographics/manage-country/view-dialog/view-dialog.component.html","webpack:///src/app/main/manage-geographics/manage-country/manage-country-routing.module.ts","webpack:///src/app/main/manage-geographics/manage-country/manage-country.module.ts","webpack:///src/app/main/manage-geographics/manage-country/manage-country-crud/routes.ts"],"names":["ManageCountry","ListComponent","countryService","dialog","snackBar","displayedColumns","head","nameSearch","descriptionSearch","iso_codeSearch","country_codeSearch","statusSearch","getAllCountry","filterEntity","filterType","ANYWHERE","localStorage","JSON","parse","getItem","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","getAllCountries","subscribe","countryData","manageCountry","data","i","length","status","statusString","sort","err","id","confirmDialogRef","open","disableClose","afterClosed","result","userId","duration","action","params","dialogRef","width","autoFocus","panelClass","visibleOption","name","description","iso_code","country_code","exportedData","filteredData","countryModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","ActionDialogComponent","fb","datePipe","isEditMode","initialize","form","group","required","pattern","min_mobileLen","max_mobileLen","assignValues","close","valid","formValues","min_mobile_length","max_mobile_length","modify_by","created_by","update","err_code","errorMsg","message","index","lastIndexOf","splitted","substring","nameDuplicateCountry","isoDuplicateCountry","countryCodeDuplicateCountry","errorMessage","create","formInvalid","get","hasError","setValue","checked","ref","closeActionPanel","updateStatus","onYesClick","providers","autocompleteObjectValidator","control","CreateComponent","router","invalid","navigate","onSubmit","$event","preventDefault","ManageCountryCrudComponent","cdr","_utilityService","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","children","undefined","y","objectChildData","isDefaultRoutePermeted","z","label","link","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","ViewDialogComponent","routes","path","component","canActivate","ManageCountryRoutingModule","forChild","imports","exports","COMPONENTS","COMPONENTS_DYNAMIC","ManageCountryModule","declarations","entryComponents","TABS_DEMO_ROUTES","redirectTo","pathMatch"],"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","file":"manage-country-manage-country-module-es5.js","sourcesContent":["\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CountryService } from 'app/shared/services/geographics/country.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nexport class ManageCountry {\r\n  name: string;\r\n  description: string;\r\n  iso_code: string;\r\n  country_code: string;\r\n  min_mobile_length:number;\r\n  max_mobile_length:number;\r\n  status: string;\r\n  statusString: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'description', 'iso_code','country_code', 'status', 'action'];\r\n  head = [['Country Name','Description','ISO Code','Country Code','Status ']];\r\n  dataSource: MatTableDataSource<ManageCountry>;\r\n\r\n  manageCountry: ManageCountry[];\r\n  filterEntity: ManageCountry;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  nameSearch = false;\r\n  descriptionSearch = false;\r\n  iso_codeSearch = false;\r\n  country_codeSearch = false;\r\n  statusSearch = false;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  constructor(private countryService: CountryService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllCountry();\r\n    this.filterEntity = new ManageCountry();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountries().subscribe(\r\n      (countryData: any) => {\r\n        this.manageCountry = countryData.data;\r\n        for (var i = 0; i < this.manageCountry.length; i++) {\r\n          if (this.manageCountry[i].status == 'N') {\r\n            this.manageCountry[i].statusString = 'Inactive';\r\n          } else {\r\n            this.manageCountry[i].statusString = 'Active';\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(this.manageCountry);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.countryService.delete(id, this.localStorage.userId).subscribe(\r\n          (data: any) => {\r\n            if (data.status = true) {\r\n              this.getAllCountry();\r\n              this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n            } else {\r\n              this.getAllCountry();\r\n              this.snackBar.open('Error while saving data', 'Dismiss', { duration: 2000 });\r\n            }\r\n\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllCountry();\r\n    });\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllCountry();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n\r\n\r\n    if (visibleOption == 'descriptionSearch') {\r\n      this.descriptionSearch = !this.descriptionSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n\r\n    if (visibleOption == 'iso_codeSearch') {\r\n      this.iso_codeSearch = !this.iso_codeSearch;\r\n      this.filterEntity.iso_code = '';\r\n    }\r\n    if (visibleOption == 'country_codeSearch') {\r\n      this.country_codeSearch = !this.country_codeSearch;\r\n      this.filterEntity.country_code = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var countryModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Country Name': countryModel.name, 'Description': countryModel.description, 'ISO Code': countryModel.iso_code,\r\n        'Country Code': countryModel.country_code, 'Status ': countryModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Manage Country');\r\n    XLSX.writeFile(workBook, 'Manage Country.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport(){\r\n   \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.description,chrger.iso_code,chrger.country_code,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Manage Country Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Manage Country report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\");\r\n    return doc;\r\n  }\r\n  \r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n      \r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Country Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 250px\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Country Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descriptionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descriptionSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"iso_code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!iso_codeSearch\" class=\"custom_font_size\" style=\"display: flex;\">ISO Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('iso_codeSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"iso_codeSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"ISO Code\" [(ngModel)]=\"filterEntity.iso_code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('iso_codeSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.iso_code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"country_code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!country_codeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Country Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('country_codeSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"country_codeSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Country Code\" [(ngModel)]=\"filterEntity.country_code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('country_codeSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.country_code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CountryService } from 'app/shared/services/geographics/country.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder, private countryService: CountryService, private snackBar: MatSnackBar, private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      iso_code: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9/ ]*$/)]],\r\n      country_code: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      min_mobileLen:['',[Validators.required,Validators.pattern(/[0-9]/)]],\r\n      max_mobileLen:['',[Validators.required,Validators.pattern(/[0-9]/)]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      const params: any = {\r\n        name: formValues.name,\r\n        description: formValues.description,\r\n        iso_code: formValues.iso_code,\r\n        country_code: formValues.country_code,\r\n        min_mobile_length: formValues.min_mobileLen,//10,\r\n        max_mobile_length: formValues.max_mobileLen, //15,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        modify_by: this.localStorage.userId\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.countryService.update(params).subscribe(\r\n          (countryData: any) => {\r\n            if (countryData.status == true) {\r\n              this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              if (countryData.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n                this.errorMsg = countryData.message;\r\n                var index = this.errorMsg.lastIndexOf(\" \");\r\n\r\n                this.splitted = this.errorMsg.substring(index + 1);\r\n                if (this.splitted == \"'name'\") {\r\n                  this.snackBar.open(MessageConstant.nameDuplicateCountry, 'Dismiss', { duration: 5000 });\r\n                } if (this.splitted == \"'iso_code'\") {\r\n                  this.snackBar.open(MessageConstant.isoDuplicateCountry, 'Dismiss', { duration: 5000 });\r\n                } if (this.splitted == \"'country_code'\") {\r\n                  this.snackBar.open(MessageConstant.countryCodeDuplicateCountry, 'Dismiss', { duration: 5000 });\r\n                }\r\n              } else {\r\n                this.snackBar.open(countryData.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n              //this.dialogRef.close(); \r\n            }\r\n\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.countryService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 2000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('iso_code').setValue(params.data.iso_code);\r\n    this.form.get('country_code').setValue(params.data.country_code);\r\n    this.form.get('min_mobileLen').setValue(params.data.min_mobile_length);\r\n    this.form.get('max_mobileLen').setValue(params.data.max_mobile_length);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage COuntry</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label> Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"description\">\r\n          <mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>ISO Code</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"iso_code\" required>\r\n          <mat-error *ngIf=\"form.get('iso_code').hasError('required')\">ISO code required</mat-error>\r\n          <mat-error *ngIf=\"form.get('iso_code').hasError('pattern')\">Please enter valid ISO code</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country Code</mat-label>\r\n          <input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"country_code\">\r\n          <mat-error *ngIf=\"form.get('country_code').hasError('required')\">Country code required</mat-error>\r\n          <mat-error *ngIf=\"form.get('country_code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Min Mobile Length</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"min_mobileLen\" required>\r\n          <mat-error *ngIf=\"form.get('min_mobileLen').hasError('required')\">Minimum mobile length is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('min_mobileLen').hasError('pattern')\">Only number is allowed</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('min_mobileLen').hasError('minLength')\">Minimum length is 10</mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Max Mobile Length</mat-label>\r\n          <input matInput placeholder=\"\" required autocomplete=\"off\" autocomplete=\"off\"\r\n            formControlName=\"max_mobileLen\">\r\n          <mat-error *ngIf=\"form.get('max_mobileLen').hasError('required')\">Maximum mobile length required</mat-error>\r\n          <mat-error *ngIf=\"form.get('max_mobileLen').hasError('pattern')\">Only number is allowed</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('max_mobileLen').hasError('maxLength')\">Maximum length is 15 only</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CountryService } from 'app/shared/services/geographics/country.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router, public countryService: CountryService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    //this.getCountry();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      iso_code: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9/ ]*$/)]],\r\n      country_code: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      min_mobileLen:['',[Validators.required,Validators.pattern(/[0-9]/)]],\r\n      max_mobileLen:['',[Validators.required,Validators.pattern(/[0-9]/)]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    } else {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        name: formValues.name,\r\n        description: formValues.description,\r\n        iso_code: formValues.iso_code,\r\n        country_code: formValues.country_code,\r\n        min_mobile_length: formValues.min_mobileLen,//10,\r\n        max_mobile_length: formValues.max_mobileLen, //15,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      this.countryService.create(params).subscribe(\r\n        (countryData: any) => {\r\n          if (countryData.status == true) {\r\n            this.snackBar.open('Country Created!', 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/manageGeographics/manageCountry/list']);\r\n          } else {\r\n            if (countryData.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = countryData.message;\r\n              var index = this.errorMsg.lastIndexOf(\" \");\r\n\r\n              this.splitted = this.errorMsg.substring(index + 1);\r\n              if (this.splitted == \"'name'\") {\r\n                this.snackBar.open(MessageConstant.nameDuplicateCountry, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'iso_code'\") {\r\n                this.snackBar.open(MessageConstant.isoDuplicateCountry, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'country_code'\") {\r\n                this.snackBar.open(MessageConstant.countryCodeDuplicateCountry, 'Dismiss', { duration: 5000 });\r\n              }\r\n            } else {\r\n              this.snackBar.open(countryData.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label> Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"description\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>ISO Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"iso_code\" required>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('iso_code').hasError('required')\">ISO code required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('iso_code').hasError('pattern')\">Please enter valid ISO code</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"country_code\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country_code').hasError('required')\">Country code required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country_code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Min Mobile Length</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"min_mobileLen\"  required>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('min_mobileLen').hasError('required')\">Minimum mobile length is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('min_mobileLen').hasError('pattern')\">Only number is allowed</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('min_mobileLen').hasError('minLength')\">Minimum length is 10</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Max Mobile Length</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\"  autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"max_mobileLen\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('max_mobileLen').hasError('required')\">Maximum mobile length required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('max_mobileLen').hasError('pattern')\">Only number is allowed</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('max_mobileLen').hasError('maxLength')\">Maximum length is 15 only</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t</mat-slide-toggle>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/manageGeographics/manageCountry/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-country-crud',\r\n  templateUrl: './manage-country-crud.component.html',\r\n  styleUrls: ['./manage-country-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ManageCountryCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Manage Country', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"manageGeographics\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"manageCountry\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"manageCountry\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Manage Country', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/manageGeographics/manageCountry/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CountryService } from 'app/shared/services/geographics/country.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder,private countryService: CountryService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      iso_code:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9/ ]*$/)]],\r\n      country_code:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      min_mobileLen:['',[Validators.required,Validators.pattern(/[0-9]/)]],\r\n      max_mobileLen:['',[Validators.required,Validators.pattern(/[0-9]/)]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('iso_code').setValue(params.data.iso_code);\r\n    this.form.get('country_code').setValue(params.data.country_code);\r\n    this.form.get('min_mobileLen').setValue(params.data.min_mobile_length);\r\n    this.form.get('max_mobileLen').setValue(params.data.max_mobile_length);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage COuntry</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label> Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" readonly autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"description\">\r\n          <mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>ISO Code</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"iso_code\" readonly>\r\n          <mat-error *ngIf=\"form.get('iso_code').hasError('required')\">ISO Code required</mat-error>\r\n          <mat-error *ngIf=\"form.get('iso_code').hasError('pattern')\">Please enter valid ISO code</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country Code</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"country_code\">\r\n          <mat-error *ngIf=\"form.get('country_code').hasError('required')\">Country code required</mat-error>\r\n          <mat-error *ngIf=\"form.get('country_code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Min Mobile Length</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"min_mobileLen\" required>\r\n          <mat-error *ngIf=\"form.get('min_mobileLen').hasError('required')\">Minimum mobile length is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('min_mobileLen').hasError('pattern')\">Only number is allowed</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('min_mobileLen').hasError('minLength')\">Minimum length is 10</mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Max Mobile Length</mat-label>\r\n          <input matInput placeholder=\"\" required autocomplete=\"off\" autocomplete=\"off\"\r\n            formControlName=\"max_mobileLen\">\r\n          <mat-error *ngIf=\"form.get('max_mobileLen').hasError('required')\">Maximum mobile length required</mat-error>\r\n          <mat-error *ngIf=\"form.get('max_mobileLen').hasError('pattern')\">Only number is allowed</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('max_mobileLen').hasError('maxLength')\">Maximum length is 15 only</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" disabled=\"true\" class=\"example-margin\" color=\"primary\"\r\n          [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n                         (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageCountryCrudComponent } from './manage-country-crud/manage-country-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './manage-country-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : ManageCountryCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ManageCountryRoutingModule{}","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ManageCountryCrudComponent } from './manage-country-crud/manage-country-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ManageCountryRoutingModule } from './manage-country-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ManageCountryCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ManageCountryRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ManageCountryModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n"]}