{"version":3,"sources":["webpack:///src/app/main/customer-management/register-charger-request/approved-list/approved-list.component.ts","webpack:///src/app/main/customer-management/register-charger-request/approved-list/approved-list.component.html","webpack:///src/app/main/customer-management/register-charger-request/register-charger-request-routing.module.ts","webpack:///src/app/main/customer-management/register-charger-request/register-charger-request-crud/register-charger-request-crud.component.ts","webpack:///src/app/main/customer-management/register-charger-request/register-charger-request-crud/register-charger-request-crud.component.html","webpack:///src/app/main/customer-management/register-charger-request/register-charger-request-crud/routes.ts","webpack:///src/app/main/customer-management/register-charger-request/list/list.component.ts","webpack:///src/app/main/customer-management/register-charger-request/list/list.component.html","webpack:///src/app/main/customer-management/register-charger-request/register-charger-request.module.ts","webpack:///src/app/main/customer-management/register-charger-request/action-dialog/action-dialog.component.ts","webpack:///src/app/main/customer-management/register-charger-request/action-dialog/action-dialog.component.html","webpack:///src/app/main/customer-management/register-charger-request/view-dialog/view-dialog.component.ts","webpack:///src/app/main/customer-management/register-charger-request/view-dialog/view-dialog.component.html","webpack:///src/app/shared/services/customer-management/register-charger-request.service.ts","webpack:///src/app/main/customer-management/register-charger-request/create/create.component.ts","webpack:///src/app/main/customer-management/register-charger-request/create/create.component.html"],"names":["ApprovedChargerRequest","ApprovedListComponent","regCharReqService","dialog","fb","snackBar","cdr","displayedColumns","head","usernameSearch","charNameSearch","serialSearch","stationSearch","citySearch","stateSearch","statusSearch","localStorage","JSON","parse","getItem","filterEntity","filterType","ANYWHERE","getApprovedRejectCharReq","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","role_name","getAllApproveRejectChargerRequest","subscribe","resp","status","approvedCharReq","data","length","i","statusString","user_name","sort","detectChanges","open","message","duration","NoRecordFoundMessage","err","getApproveRejectChargerRequestByUserId","userId","action","buttonAction","params","dialogRef","width","panelClass","autoFocus","disableClose","afterClosed","result","visibleOption","ev","stopPropagation","charger_name","charger_serial_no","station_name","city_name","state_name","exportedData","filteredData","evDealers","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","routes","path","component","canActivate","children","RegisterChargerRequestRoutingModule","forChild","imports","exports","RegisterChargerRequestCrudComponent","router","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","undefined","title","nav_list","nav_list_with_tab","x","id","objectData","y","objectChildData","z","isDefaultRoutePermeted","label","link","navigate","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","TABS_DEMO_ROUTES","redirectTo","pathMatch","ChargerRequest","ListComponent","getAllModCharRequest","getAllModerateChargerRequest","chargerReq","getModerateChargerRequestByUserId","confirmDialogRef","deleteChargerRequest","deleteMessage","errorMessage","charReq","COMPONENTS","COMPONENTS_DYNAMIC","RegisterChargerRequestModule","declarations","entryComponents","autocompleteObjectValidator","control","ActionDialogComponent","masterService","countryService","isEditMode","isAvailable","isDirty","validatingForm","flag","initialize","form","group","required","charger_id","pattern","provider","model","lat","lng","char_seri_no","addressLine1","addressLine2","pincode","city","state","country","landmark","remarks","image","assignValues","getConnectorTypes","getAllCountry","getAllState","country_id","getAllCity","state_id","countries","toSelect","find","c","get","setValue","filteredOptionCountry","controls","valueChanges","pipe","name","_filterCountry","item","option","includes","countryID","getStateByCountry","states","filteredOptionState","_filterState","stateID","getCityByState","cities","city_id","filteredOptionCity","_filterCity","close","valid","formValues","user_id","address1","address2","PIN","image_url","modify_by","created_by","updateChargerRequest","recordUpdateMessage","createChargerRequest","chargerNCreate","hasError","checked","ref","pin_code_id","getCountryStateByPIN","getCountryByState","countrydata","statedata","Citydata","getStatesByCountry","stateId","citiesdata","getCitiesByStates","height","mLat","mLong","customLocationMessage","connectorTypes","filteredOptionsConnectorType","_filterConnectorType","charSerNo","checkChargerSeriolNoMapping","chargerData","closeActionPanel","checkMappedChargerSerialNo","getLatLong","getStateCountry","onCityChange","onStateChange","onCountryChange","updateStatus","onYesClick","providers","toggleAvailable","ViewDialogComponent","isButtonAction","isModerate","approveRejectChargerRequest","RegisterChargerRequestService","http","apiUrl2","API_URL2","post","charSeriolNo","providedIn","CreateComponent","datePipe","getAllCities","chargerRequest","onSubmit","$event","preventDefault"],"mappingsmBwB;;AAA8E;;AAAQ;;AACpE;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAAY;;;;;;;;AACxF;;AACI;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH2C;;AAAA;;;;;;AAJ/C;;AACI;;AAEA;;AAKJ;;;;;;AAPW;;AAAA;;AAEU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA8E;;AAC1E;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAClF;;;;;;;;AACA;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH+C;;AAAA;;;;;;AALnD;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AAC3D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAC7B;;AAAM;;AACd;;;;;;;;AACA;;AACI;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAhD;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHoD;;AAAA;;;;;;AANxD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA6E;;AAC5D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AACpF;;AACJ;;;;;;;;AACA;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AACvE;;AACJ;;;;;;AAHgD;;AAAA;;;;;;AANpD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAKhC;;AAA0E;;AACzD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACjF;;AAAY;;;;;;;;AAChB;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAnC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACpE;;AACJ;;;;;;AAHuC;;AAAA;;;;;;AAL3C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AAAY;;;;;;;;AAChB;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAL5C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AACI;;AAAqB;;;;;;AADU;;AAC/B;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AAKI;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,UAApB,EAA8B,WAA9B,EAAuC,gBAAvC;AAAuD,WAAvD;;AACwB;;AAAsB;;;;;;;;AALlG;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAEhD;;AAEJ;;;;;;AADgC;;AAAA;;;;;;AAGpC;;;;;;AACA;;;;;;;;UDzGHA,sB;;;;UAuCAC,qB;AAwBX,uCAAoBC,iBAApB,EAA6EC,MAA7E,EAAwGC,EAAxG,EACUC,QADV,EACyCC,GADzC,EACiE;AAAA;;AAD7C,eAAAJ,iBAAA,GAAAA,iBAAA;AAAyD,eAAAC,MAAA,GAAAA,MAAA;AAA2B,eAAAC,EAAA,GAAAA,EAAA;AAC9F,eAAAC,QAAA,GAAAA,QAAA;AAA+B,eAAAC,GAAA,GAAAA,GAAA;AArBzC,eAAAC,gBAAA,GAA6B,CAAC,WAAD,EAAc,cAAd,EAA8B,mBAA9B,EAAmD,cAAnD,EAAmE,WAAnE,EAAgF,YAAhF,EAA8F,QAA9F,EAAuG,QAAvG,CAA7B;AACA,eAAAC,IAAA,GAAO,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,mBAA7B,EAAkD,cAAlD,EAAkE,MAAlE,EAA0E,OAA1E,EAAmF,QAAnF,CAAD,CAAP;AAQA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,YAAA,GAAe,KAAf;AAQC;;;;qCAEU;AACT,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,YAAL,GAAoB,IAAIpB,sBAAJ,EAApB;AACA,iBAAKqB,UAAL,GAAkB,gEAAeC,QAAjC;AACA,iBAAKC,wBAAL;AACD;;;sCAEWC,K,EAAc;AACxB,gBAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,iBAAKC,UAAL,CAAgBC,MAAhB,GAAyBJ,WAAW,CAACK,IAAZ,GAAmBC,WAAnB,EAAzB;;AACA,gBAAI,KAAKH,UAAL,CAAgBI,SAApB,EAA+B;AAC7B,mBAAKJ,UAAL,CAAgBI,SAAhB,CAA0BC,SAA1B;AACD;AACF;;;qDAE0B;AAAA;;AACzB,gBAAI,KAAKjB,YAAL,CAAkBkB,SAAlB,IAA+B,UAAnC,EAA+C;AAC7C,mBAAKhC,iBAAL,CAAuBiC,iCAAvB,GAA2DC,SAA3D,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,uBAAI,CAACC,eAAL,GAAuBF,IAAI,CAACG,IAA5B;;AACA,sBAAIH,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,yBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAACH,eAAL,CAAqBE,MAAzC,EAAiDC,CAAC,EAAlD,EAAsD;AACpD,0BAAI,KAAI,CAACH,eAAL,CAAqBG,CAArB,EAAwBJ,MAAxB,IAAkC,GAAtC,EAA2C;AACzC,6BAAI,CAACC,eAAL,CAAqBG,CAArB,EAAwBC,YAAxB,GAAuC,UAAvC;AACD,uBAFD,MAEO;AACL,6BAAI,CAACJ,eAAL,CAAqBG,CAArB,EAAwBC,YAAxB,GAAuC,UAAvC;AACD;;AACD,0BAAG,KAAI,CAACJ,eAAL,CAAqBG,CAArB,EAAwBE,SAAxB,IAAqC,IAAxC,EAA8C;AAC5C,6BAAI,CAACL,eAAL,CAAqBG,CAArB,EAAwBE,SAAxB,GAAoC,EAApC;AACD;AACF;;AACD,yBAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAI,CAACW,eAA5B,CAAlB;AACA,yBAAI,CAACX,UAAL,CAAgBI,SAAhB,GAA4B,KAAI,CAACA,SAAjC;AACA,yBAAI,CAACJ,UAAL,CAAgBiB,IAAhB,GAAuB,KAAI,CAACA,IAA5B;;AACA,yBAAI,CAACvC,GAAL,CAASwC,aAAT;AACD,mBAfD,MAeO;AACL,yBAAI,CAACzC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,8BAAQ,EAAE;AAAZ,qBAA5C;AACD;AAEF,iBArBD,MAqBO;AACL,uBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBG,oBAAnC,EAAyD,SAAzD,EAAoE;AAAED,4BAAQ,EAAE;AAAZ,mBAApE;;AACA;AACD;AAEF,eA5BH,EA4BK,UAACE,GAAD,EAAS,CACX,CA7BH;AA+BD,aAhCD,MAgCO;AACL,mBAAKjD,iBAAL,CAAuBkD,sCAAvB,CAA8D,KAAKpC,YAAL,CAAkBqC,MAAhF,EAAwFjB,SAAxF,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,uBAAI,CAACC,eAAL,GAAuBF,IAAI,CAACG,IAA5B;;AACA,sBAAIH,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,yBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAACH,eAAL,CAAqBE,MAAzC,EAAiDC,CAAC,EAAlD,EAAsD;AACpD,0BAAI,KAAI,CAACH,eAAL,CAAqBG,CAArB,EAAwBJ,MAAxB,IAAkC,GAAtC,EAA2C;AACzC,6BAAI,CAACC,eAAL,CAAqBG,CAArB,EAAwBC,YAAxB,GAAuC,UAAvC;AACD,uBAFD,MAEO;AACL,6BAAI,CAACJ,eAAL,CAAqBG,CAArB,EAAwBC,YAAxB,GAAuC,UAAvC;AACD;AACF;;AACD,yBAAI,CAACf,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAI,CAACW,eAA5B,CAAlB;AACA,yBAAI,CAACX,UAAL,CAAgBI,SAAhB,GAA4B,KAAI,CAACA,SAAjC;AACA,yBAAI,CAACJ,UAAL,CAAgBiB,IAAhB,GAAuB,KAAI,CAACA,IAA5B;;AACA,yBAAI,CAACvC,GAAL,CAASwC,aAAT;AACD,mBAZD,MAYO;AACL,yBAAI,CAACzC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,8BAAQ,EAAE;AAAZ,qBAA5C;AACD;AAEF,iBAlBD,MAkBO;AACL,uBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBG,oBAAnC,EAAyD,SAAzD,EAAoE;AAAED,4BAAQ,EAAE;AAAZ,mBAApE;;AACA;AACD;AAEF,eAzBH,EAyBK,UAACE,GAAD,EAAS,CACX,CA1BH;AA4BD;AAEF,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;qCAEWG,M,EAAQd,I,EAAMe,Y,EAAY;AAAA;;AACnC,gBAAIC,MAAM,GAAG;AACXF,oBAAM,EAAEA,MADG;AAEXd,kBAAI,EAAEA,IAFK;AAGXe,0BAAY,EAAEA;AAHH,aAAb;AAKA,gBAAME,SAAS,GAAG,KAAKtD,MAAL,CAAY4C,IAAZ,CAAiB,sFAAjB,EAAsC;AACtDW,mBAAK,EAAE,QAD+C;AAEtDlB,kBAAI,EAAEgB,MAFgD;AAGtDG,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDC,0BAAY,EAAE;AALwC,aAAtC,CAAlB;AAQAJ,qBAAS,CAACK,WAAV,GAAwB1B,SAAxB,CAAkC,UAAA2B,MAAM,EAAI;AAC1C,oBAAI,CAACxC,wBAAL;;AACA,oBAAI,CAACjB,GAAL,CAASwC,aAAT;AACD,aAHD;AAID;;;2CAEgBkB,a,EAAeC,E,EAAI;AAClCA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKvD,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKW,YAAL,CAAkBwB,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIoB,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKtD,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKU,YAAL,CAAkB+C,YAAlB,GAAiC,EAAjC;AACD;;AACD,gBAAIH,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAKrD,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKS,YAAL,CAAkBgD,iBAAlB,GAAsC,EAAtC;AACD;;AACD,gBAAIJ,aAAa,IAAI,eAArB,EAAsC;AACpC,mBAAKpD,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,mBAAKQ,YAAL,CAAkBiD,YAAlB,GAAiC,EAAjC;AACD;;AACD,gBAAIL,aAAa,IAAI,YAArB,EAAmC;AACjC,mBAAKnD,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKO,YAAL,CAAkBkD,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIN,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAKlD,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKM,YAAL,CAAkBmD,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIP,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAKjD,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKK,YAAL,CAAkBuB,YAAlB,GAAiC,EAAjC;AACD;AACF;;;wCAEa;AACZ,iBAAK6B,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,UAAL,CAAgB6C,YAAhB,CAA6BhC,MAAjD,EAAyDC,CAAC,EAA1D,EAA8D;AAC5D,kBAAIgC,SAAS,GAAG,KAAK9C,UAAL,CAAgB6C,YAAhB,CAA6B/B,CAA7B,CAAhB;AACA,kBAAIF,IAAI,GAAG;AACT,4BAAYkC,SAAS,CAAC9B,SADb;AACwB,gCAAgB8B,SAAS,CAACP,YADlD;AACgE,qCAAqBO,SAAS,CAACN,iBAD/F;AAET,gCAAgBM,SAAS,CAACL,YAFjB;AAE+B,wBAAQK,SAAS,CAACJ,SAFjD;AAE4D,yBAASI,SAAS,CAACH,UAF/E;AAGT,0BAAUG,SAAS,CAAC/B;AAHX,eAAX;AAKA,mBAAK6B,YAAL,CAAkBG,IAAlB,CAAuBnC,IAAvB;AACD;;AACD,gBAAMoC,SAAS,GAAG,2CAAWC,aAAX,CAAyB,KAAKL,YAA9B,CAAlB;AACA,gBAAMM,QAAQ,GAAkB,2CAAWC,QAAX,EAAhC;AAEA,uDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,sCAAlD;AACA,2DAAeE,QAAf,EAAyB,2CAAzB;AACD;;;sCAEW;AAAA;;AACV,gBAAIG,GAAG,GAAG,IAAI,2CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAGA,iBAAKT,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,UAAL,CAAgB6C,YAAhB,CAA6BhC,MAAjD,EAAyDC,CAAC,EAA1D,EAA8D;AAC5D,kBAAIgC,SAAS,GAAG,KAAK9C,UAAL,CAAgB6C,YAAhB,CAA6B/B,CAA7B,CAAhB;AAEA,kBAAIF,IAAI,GAAG,CAACkC,SAAS,CAAC9B,SAAX,EAAsB8B,SAAS,CAACP,YAAhC,EAA8CO,SAAS,CAACN,iBAAxD,EAA2EM,SAAS,CAACL,YAArF,EAAmGK,SAAS,CAACJ,SAA7G,EACXI,SAAS,CAACH,UADC,EACWG,SAAS,CAAC/B,YADrB,CAAX;AAGA,mBAAK6B,YAAL,CAAkBG,IAAlB,CAAuBnC,IAAvB;AACD;;AACD,gBAAI0C,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAJ,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AAECT,eAAW,CAACW,SAAZ,CAAsB;AACrBpF,kBAAI,EAAE,KAAKA,IADU;AAErBqF,kBAAI,EAAE,KAAKrB,YAFU;AAGrBsB,mBAAK,EAAE,MAHc;AAIrBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJS;AAKrBC,oBAAM,EAAE;AACNC,2BAAW,EAAE,CADP;AAENC,wBAAQ,EAAE;AAFJ,eALa;AAWrBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXa;AAYrBC,yBAAW,EAAE,qBAAA/D,IAAI,EAAI,CACpB,CAboB;AAcrBgE,yBAAW,EAAE,qBAAAhE,IAAI,EAAI;AACnByC,mBAAG,CAACwB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAD,mBAAG,CAACwB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAH,mBAAG,CAACyB,IAAJ,CAAS,6CAAT,EAAwDzB,GAAG,CAAC0B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAA3F,EAA8F,EAA9F,EAAkG;AAAEC,uBAAK,EAAE;AAAT,iBAAlG;AAEA7B,mBAAG,CAACU,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAV,mBAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACyB,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACAzB,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,mBAAG,CAACS,WAAJ,CAAgB,CAAhB;AACAT,mBAAG,CAACyB,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAN,mBAAG,CAACyB,IAAJ,CAAS,kBAAkB,MAAI,CAAC1F,YAAL,CAAkBkG,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA7B,mBAAG,GAAG,MAAI,CAACkC,YAAL,CAAkBlC,GAAlB,CAAN;AACD;AA/BoB,aAAtB,EAxBS,CA0DV;;AACAA,eAAG,CAACmC,MAAJ,CAAW,kBAAX,EA3DU,CA4DV;;AACAnC,eAAG,CAACoC,IAAJ,CAAS,iDAAT;AAED;;;uCACYpC,G,EAAK;AAChB,gBAAIqC,OAAO,GAAGrC,GAAG,CAACsC,gBAAJ,EAAd;AACA,gBAAM7E,CAAC,GAAGuC,GAAG,CAAC0B,QAAJ,CAAaY,gBAAb,EAAV;AACAtC,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB,EAJgB,CAKhB;;AAEAT,eAAG,CAACyB,IAAJ,CAAS,UAAUc,MAAM,CAAC9E,CAAD,CAAhB,GAAsB,MAAtB,GAA+B8E,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOrC,GAAP;AACD;;;;;;;yBAxSUhF,qB,EAAqB,wM,EAAA,oI,EAAA,4H,EAAA,yI,EAAA,gI;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;4EASrB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;AC1EtB;;AACI;;AAAqC;AAAA,qBAAS,IAAAwH,WAAA,EAAT;AAAsB,aAAtB;;AACjC;;AAAU;;AAAiB;;AAC/B;;AAAS;;AACT;;AAAqC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACjC;;AAAU;;AAAc;;AAC5B;;AAEJ;;AAEA;;AACI;;AAEI;;AACI;;AAGI;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AAEJ;;AAEA;;AACI;;AAGA;;AAOJ;;AACA;;AACA;;AACJ;;AAEA;;AACJ;;AACJ;;AACJ;;;;AA1H4C;;AAAA,mGAAyB,eAAzB,EAAyB,gBAAzB,EAAyB,YAAzB,EAAyB,cAAzB;;AAmHR;;AAAA;;AACa;;AAAA;;AAGtB;;AAAA;;;;;;;qBDxEb;;;;;;wEAGDzH,qB,EAAqB;gBARjC,uDAQiC;iBARvB;AACT0H,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAQuB,U;;;;;;;;;;;;;AASWhG,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBa,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AE1E9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMoF,MAAM,GAAY,CACpB;AACIC,YAAI,EAAG,MADX;AACkBC,iBAAS,EAAG,0IAD9B;AACkEC,mBAAW,EAAE,CAAC,4EAAD,CAD/E;AAC4FC,gBAAQ,EAAG;AADvG,OADoB,CAAxB;;UAWaC,mC;;;;;cAAAA;;;;2BAAAA,mC;AAAmC,S;AAAA,kBAJlC,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAIkC,EAHjC,4DAGiC;;;;4HAAnCK,mC,EAAmC;AAAA;AAAA,oBAHjC,4DAGiC;AAAA,S;AAHrB,O;;;;;wEAGdA,mC,EAAmC;gBAL/C,sDAK+C;iBALtC;AACNE,mBAAO,EAAG,CAAC,6DAAaD,QAAb,CAAsBN,MAAtB,CAAD,CADJ;AAENQ,mBAAO,EAAG,CAAC,4DAAD;AAFJ,W;AAKsC,U;;;;;;;;;;;;;;;;;;ACfhD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBI;;AAKE;;AACF;;;;;;;;AAJG,kGAA2B,QAA3B,EAA2B,YAA3B;;AAGD;;AAAA;;;;;;;;;;;;;;;;ADtBN;;;;;UAUaC,mC;AAaX,qDAAoBC,MAApB,EAA4CrI,GAA5C,EAA4EsI,eAA5E,EAA6G;AAAA;;AAAzF,eAAAD,MAAA,GAAAA,MAAA;AAAwB,eAAArI,GAAA,GAAAA,GAAA;AAAgC,eAAAsI,eAAA,GAAAA,eAAA;AAX5E,eAAAC,QAAA,GAAW,CACT;AACA;AACA;AAHS,WAAX;AASA,eAAAC,SAAA,GAAY,EAAZ;AAIC;;;;4CACiB;AAAA;;AAChB,iBAAKF,eAAL,CAAqBG,gBAArB,CAAsC3G,SAAtC,CAAgD,UAAA4G,eAAe,EAAI;AACjE,oBAAI,CAACC,SAAL,GAAiBD,eAAjB;;AACA,kBAAI,MAAI,CAACC,SAAL,IAAkB,IAAlB,IAA0B,MAAI,CAACA,SAAL,IAAkBC,SAA5C,IAAyD,MAAI,CAACD,SAAL,CAAeE,KAAf,IAAwB,IAAjF,IAAyF,MAAI,CAACF,SAAL,CAAeE,KAAf,IAAwBD,SAArH,EAAgI;AAC9H,sBAAI,CAACD,SAAL,GAAiBhI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACD;;AACD,oBAAI,CAACb,GAAL,CAASwC,aAAT;AACD,aAND;AAQD;;;qCAEU;AAAA;;AACT,iBAAK9B,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,gBAAIiI,QAAQ,GAAG,KAAKpI,YAAL,CAAkBqI,iBAAjC;AACAD,oBAAQ,CAACvH,MAAT,CAAgB,UAACyH,CAAD,EAAO;AACrB,kBAAIA,CAAC,CAACC,EAAF,KAAS,oBAAb,EAAmC;AACjC,sBAAI,CAACC,UAAL,GAAkBF,CAAlB;;AACA,oBAAI,MAAI,CAACE,UAAL,CAAgBnB,QAAhB,IAA4B,IAA5B,IAAoC,MAAI,CAACmB,UAAL,CAAgBnB,QAAhB,IAA4Ba,SAApE,EAA+E;AAC7E,wBAAI,CAACM,UAAL,CAAgBnB,QAAhB,CAAyBxG,MAAzB,CAAgC,UAAC4H,CAAD,EAAO;AACrC,wBAAIA,CAAC,CAACF,EAAF,KAAS,wBAAb,EAAuC;AACrC,4BAAI,CAACG,eAAL,GAAuBD,CAAvB;;AACA,0BAAI,MAAI,CAACC,eAAL,CAAqBrB,QAArB,IAAiC,IAAjC,IAAyC,MAAI,CAACqB,eAAL,CAAqBrB,QAArB,IAAiCa,SAA9E,EAAyF;AACvF,8BAAI,CAACQ,eAAL,CAAqBrB,QAArB,CAA8BxG,MAA9B,CAAqC,UAAC8H,CAAD,EAAO;AAC1C,8BAAIC,sBAAsB,GAAG,KAA7B;;AACA,8BAAID,CAAC,CAACJ,EAAF,KAAS,mBAAb,EAAkC;AAChCK,kDAAsB,GAAG,IAAzB;;AACA,kCAAI,CAACd,SAAL,CAAenE,IAAf,CAAoB;AAAEkF,mCAAK,EAAE,kBAAT;AAA6BC,kCAAI,EAAE;AAAnC,6BAApB;AACD;;AACD,8BAAIH,CAAC,CAACJ,EAAF,KAAS,0BAAb,EAAyC;AACvC,kCAAI,CAACT,SAAL,CAAenE,IAAf,CAAoB;AAAEkF,mCAAK,EAAE,yBAAT;AAAoCC,kCAAI,EAAE;AAA1C,6BAApB;AACD;;AACD,8BAAIH,CAAC,CAACJ,EAAF,KAAS,sBAAb,EAAqC;AACnC,kCAAI,CAACT,SAAL,CAAenE,IAAf,CAAoB;AAAEkF,mCAAK,EAAE,SAAT;AAAoBC,kCAAI,EAAE;AAA1B,6BAApB;AACD;;AAED,gCAAI,CAACjB,QAAL,GAAgB,MAAI,CAACC,SAArB;;AACA,8BAAI,CAACc,sBAAL,EAA6B;AAC3B,kCAAI,CAACjB,MAAL,CAAYoB,QAAZ,CAAqB,CAAC,qDAAqD,MAAI,CAACjB,SAAL,CAAe,CAAf,EAAkBgB,IAAxE,CAArB;AACD;AAEF,yBAlBD;AAmBD;AAEF;AAEF,mBA3BD;AA4BD;AAEF;AACF,aAnCD;AAoCD;;;;;;;yBAlEUpB,mC,EAAmC,uH,EAAA,gI,EAAA,2J;AAAA,O;;;cAAnCA,mC;AAAmC,0D;AAAA,iB;AAAA,e;AAAA,+pB;AAAA;AAAA;ACjBhD;;AACE;;AAGE;;AAGI;;AAEI;;AAEI;;AACiD;;AACjD;;AAMJ;;AACF;;AACJ;;AACJ;;AACF;;AACI;;AAOF;;AACA;;AACF;;;;AArBsB;;AAAA;;AAA2C;;AAAA;;AAatC;;AAAA;;;;;;;qBDVb;;;;;;wEAEDA,mC,EAAmC;gBAP/C,uDAO+C;iBAPrC;AACTf,oBAAQ,EAAE,mCADD;AAETC,uBAAW,EAAE,gDAFJ;AAGTC,qBAAS,EAAE,CAAC,gDAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAOqC,U;;;;;;;;;;;UA+EnCgC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTrC,oBAAQ,EAAE,sBADD;AAETsC,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTvC,oBAAQ,EAAE,sBADD;AAETsC,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBE,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTxC,oBAAQ,EAAE,sBADD;AAETsC,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;;;;;;;;;;;;;;;;AE5GrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAeO,UAAMG,gBAAgB,GAAW,CACtC;AACGlC,YAAI,EAAG,QADV;AACoBC,iBAAS,EAAG,wEADhC;AACgDC,mBAAW,EAAC,CAAC,4EAAD;AAD5D,OADsC,EAItC;AACEF,YAAI,EAAG,uBADT;AACkCC,iBAAS,EAAG,kEAD9C;AAC8DC,mBAAW,EAAC,CAAC,4EAAD;AAD1E,OAJsC,EAOtC;AACEF,YAAI,EAAG,8BADT;AACyCC,iBAAS,EAAG,4FADrD;AAC6EC,mBAAW,EAAC,CAAC,4EAAD;AADzF,OAPsC,EAUtC;AACEF,YAAI,EAAE,EADR;AACYmC,kBAAU,EAAE,uBADxB;AACiDC,iBAAS,EAAE;AAD5D,OAVsC,CAAjC;;;;;;;;;;;;;;;;ACdmBwB;;AAA8E;;AAAK;;AACjE;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAAY;;;;;;;;AACxF;;AACI;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH2C;;AAAA;;;;;;AAJ/C;;AACI;;AAEA;;AAKJ;;;;;;AAPW;;AAAA;;AAEU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAMhC;;AAA8E;;AAC1E;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAClF;;;;;;;;AACA;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH+C;;AAAA;;;;;;AALnD;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AAC3D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAC7B;;AAAM;;AACd;;;;;;;;AACA;;AACI;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAhD;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHoD;;AAAA;;;;;;AANxD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA6E;;AAC5D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AACpF;;AACJ;;;;;;;;AACA;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AACvE;;AACJ;;;;;;AAHgD;;AAAA;;;;;;AANpD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAKhC;;AAA0E;;AACzD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACjF;;AAAY;;;;;;;;AAChB;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAnC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACpE;;AACJ;;;;;;AAHuC;;AAAA;;;;;;AAL3C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AAAY;;;;;;;;AAChB;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAL5C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AACI;;AAAqB;;;;;;AADU;;AAC/B;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AAKI;;AAAyD;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,QAApB,EAA4B,WAA5B,EAAqC,cAArC;AAAmD,WAAnD;;AACe;;AAAsB;;;;;;;;AAK9F;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AAC4B;;AAAI;;;;;;;;AAE5E;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC6B;;AAAM;;;;;;;;AAdlF;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAEhD;;AACyG;;AAKzG;;AACuF;;AAEvF;;AAEJ;;;;;;AAVgC;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;;;;;AAGpC;;;;;;AACA;;;;;;;;UDzHHC,c;;;;UAyCAC,a;AA0BX,+BAAoBtK,iBAApB,EAA6EC,MAA7E,EAAwGE,QAAxG,EACUC,GADV,EACkC;AAAA;;AADd,eAAAJ,iBAAA,GAAAA,iBAAA;AAAyD,eAAAC,MAAA,GAAAA,MAAA;AAA2B,eAAAE,QAAA,GAAAA,QAAA;AAC9F,eAAAC,GAAA,GAAAA,GAAA;AAvBV,eAAAC,gBAAA,GAA6B,CAAC,WAAD,EAAc,cAAd,EAA8B,mBAA9B,EAAmD,cAAnD,EAAmE,WAAnE,EAAgF,YAAhF,EAA8F,QAA9F,EAAwG,QAAxG,CAA7B;AACA,eAAAC,IAAA,GAAO,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,mBAA7B,EAAkD,cAAlD,EAAkE,MAAlE,EAA0E,OAA1E,EAAmF,QAAnF,CAAD,CAAP;AAUA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,YAAA,GAAe,KAAf;AAQC;;;;qCAEU;AACT,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,YAAL,GAAoB,IAAImJ,cAAJ,EAApB;AACA,iBAAKlJ,UAAL,GAAkB,gEAAeC,QAAjC;AACA,iBAAKmJ,oBAAL;AACD;;;sCAEWjJ,K,EAAc;AACxB,gBAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,iBAAKC,UAAL,CAAgBC,MAAhB,GAAyBJ,WAAW,CAACK,IAAZ,GAAmBC,WAAnB,EAAzB;;AACA,gBAAI,KAAKH,UAAL,CAAgBI,SAApB,EAA+B;AAC7B,mBAAKJ,UAAL,CAAgBI,SAAhB,CAA0BC,SAA1B;AACD;AACF;;;iDAEsB;AAAA;;AACrB,gBAAI,KAAKjB,YAAL,CAAkBkB,SAAlB,IAA+B,UAAnC,EAA+C;AAC7C,mBAAKhC,iBAAL,CAAuBwK,4BAAvB,GAAsDtI,SAAtD,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,wBAAI,CAACqI,UAAL,GAAkBtI,IAAI,CAACG,IAAvB;;AACA,sBAAIH,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,yBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACiI,UAAL,CAAgBlI,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC/C,0BAAI,MAAI,CAACiI,UAAL,CAAgBjI,CAAhB,EAAmBJ,MAAnB,IAA6B,GAAjC,EAAsC;AACpC,8BAAI,CAACqI,UAAL,CAAgBjI,CAAhB,EAAmBC,YAAnB,GAAkC,UAAlC;AACD,uBAFD,MAEO;AACL,8BAAI,CAACgI,UAAL,CAAgBjI,CAAhB,EAAmBC,YAAnB,GAAkC,UAAlC;AACD;AACF;;AACD,0BAAI,CAACf,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,MAAI,CAAC+I,UAA5B,CAAlB;AACA,0BAAI,CAAC/I,UAAL,CAAgBI,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACA,0BAAI,CAACJ,UAAL,CAAgBiB,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,0BAAI,CAACvC,GAAL,CAASwC,aAAT;AACD,mBAZD,MAYK;AACH,0BAAI,CAACzC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,8BAAQ,EAAE;AAAZ,qBAA5C;AACD;AAEF,iBAlBD,MAkBO;AACL,wBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBG,oBAAnC,EAAyD,SAAzD,EAAoE;AAAED,4BAAQ,EAAE;AAAZ,mBAApE;;AACA;AACD;AAEF,eAzBH,EAyBK,UAACE,GAAD,EAAS,CACX,CA1BH;AA4BD,aA7BD,MA6BO;AACL,mBAAKjD,iBAAL,CAAuB0K,iCAAvB,CAAyD,KAAK5J,YAAL,CAAkBqC,MAA3E,EAAmFjB,SAAnF,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,wBAAI,CAACqI,UAAL,GAAkBtI,IAAI,CAACG,IAAvB;;AACA,sBAAIH,IAAI,CAACG,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,yBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACiI,UAAL,CAAgBlI,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC/C,0BAAI,MAAI,CAACiI,UAAL,CAAgBjI,CAAhB,EAAmBJ,MAAnB,IAA6B,GAAjC,EAAsC;AACpC,8BAAI,CAACqI,UAAL,CAAgBjI,CAAhB,EAAmBC,YAAnB,GAAkC,UAAlC;AACD,uBAFD,MAEO;AACL,8BAAI,CAACgI,UAAL,CAAgBjI,CAAhB,EAAmBC,YAAnB,GAAkC,UAAlC;AACD;;AACD,0BAAG,MAAI,CAACgI,UAAL,CAAgBjI,CAAhB,EAAmBE,SAAnB,IAAgC,IAAnC,EAAyC;AACvC,8BAAI,CAAC+H,UAAL,CAAgBjI,CAAhB,EAAmBE,SAAnB,GAA+B,EAA/B;AACD;AACF;;AACD,0BAAI,CAAChB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,MAAI,CAAC+I,UAA5B,CAAlB;AACA,0BAAI,CAAC/I,UAAL,CAAgBI,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACA,0BAAI,CAACJ,UAAL,CAAgBiB,IAAhB,GAAuB,MAAI,CAACA,IAA5B;;AACA,0BAAI,CAACvC,GAAL,CAASwC,aAAT;AACD,mBAfD,MAeO;AACL,0BAAI,CAACzC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,8BAAQ,EAAE;AAAZ,qBAA5C;AACD;AAEF,iBArBD,MAqBO;AACL,wBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBG,oBAAnC,EAAyD,SAAzD,EAAoE;AAAED,4BAAQ,EAAE;AAAZ,mBAApE;;AACA;AACD;AAEF,eA5BH,EA4BK,UAACE,GAAD,EAAS,CACX,CA7BH;AA+BD;AAEF;;;kCAEMoG,E,EAAI;AAAA;;AACT,iBAAKsB,gBAAL,GAAwB,KAAK1K,MAAL,CAAY4C,IAAZ,CAAiB,mHAAjB,EAA6C;AACnEc,0BAAY,EAAE;AADqD,aAA7C,CAAxB;AAGA,iBAAKgH,gBAAL,CAAsB/G,WAAtB,GAAoC1B,SAApC,CAA8C,UAAA2B,MAAM,EAAI;AACtD,kBAAIA,MAAJ,EAAY;AACV,sBAAI,CAAC7D,iBAAL,CAAuB4K,oBAAvB,CAA4CvB,EAA5C,EAAgD,MAAI,CAACvI,YAAL,CAAkBqC,MAAlE,EAA0EjB,SAA1E,CACE,UAACC,IAAD,EAAe;AACb,sBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,0BAAI,CAACmI,oBAAL;;AACA,0BAAI,CAACnK,GAAL,CAASwC,aAAT;;AACA,0BAAI,CAACzC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBgI,aAAnC,EAAkD,SAAlD,EAA6D;AAAE9H,8BAAQ,EAAE;AAAZ,qBAA7D;AACD,mBAJD,MAIO;AACL,0BAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,8BAAQ,EAAE;AAAZ,qBAA5D;AACD;AAEF,iBAVH,EAUK,UAACE,GAAD,EAAS;AACV,wBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBAZH;AAcD;;AACD,oBAAI,CAAC4H,gBAAL,GAAwB,IAAxB;AACD,aAlBD;AAoBD;;;qCAEUvH,M,EAAQd,I,EAAMe,Y,EAAY;AAAA;;AACnC,gBAAIC,MAAM,GAAG;AACXF,oBAAM,EAAEA,MADG;AAEXd,kBAAI,EAAEA,IAFK;AAGXe,0BAAY,EAAEA;AAHH,aAAb;AAKA,gBAAME,SAAS,GAAG,KAAKtD,MAAL,CAAY4C,IAAZ,CAAiB,sFAAjB,EAAsC;AACtDW,mBAAK,EAAE,QAD+C;AAEtDlB,kBAAI,EAAEgB,MAFgD;AAGtDG,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDC,0BAAY,EAAE;AALwC,aAAtC,CAAlB;AAQAJ,qBAAS,CAACK,WAAV,GAAwB1B,SAAxB,CAAkC,UAAA2B,MAAM,EAAI;AAC1C,oBAAI,CAAC0G,oBAAL;AACD,aAFD;AAGD;;;qCAEUnH,M,EAAQd,I,EAAI;AAAA;;AACrB,gBAAIgB,MAAM,GAAG;AACXF,oBAAM,EAAEA,MADG;AAEXd,kBAAI,EAAEA;AAFK,aAAb;AAIA,gBAAMiB,SAAS,GAAG,KAAKtD,MAAL,CAAY4C,IAAZ,CAAiB,4FAAjB,EAAwC;AACxDW,mBAAK,EAAE,QADiD;AAExDlB,kBAAI,EAAEgB,MAFkD;AAGxDI,uBAAS,EAAE,KAH6C;AAIxDC,0BAAY,EAAE,IAJ0C;AAKxDF,wBAAU,EAAE;AAL4C,aAAxC,CAAlB;AAOAF,qBAAS,CAACK,WAAV,GAAwB1B,SAAxB,CAAkC,UAAA2B,MAAM,EAAI;AAC1C,oBAAI,CAAC0G,oBAAL;;AACA,oBAAI,CAACnK,GAAL,CAASwC,aAAT;AACD,aAHD;AAID;;;2CAEgBkB,a,EAAeC,E,EAAI;AAClCA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKvD,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKW,YAAL,CAAkBwB,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIoB,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKtD,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKU,YAAL,CAAkB+C,YAAlB,GAAiC,EAAjC;AACD;;AACD,gBAAIH,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAKrD,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKS,YAAL,CAAkBgD,iBAAlB,GAAsC,EAAtC;AACD;;AACD,gBAAIJ,aAAa,IAAI,eAArB,EAAsC;AACpC,mBAAKpD,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,mBAAKQ,YAAL,CAAkBiD,YAAlB,GAAiC,EAAjC;AACD;;AACD,gBAAIL,aAAa,IAAI,YAArB,EAAmC;AACjC,mBAAKnD,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKO,YAAL,CAAkBkD,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIN,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAKlD,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKM,YAAL,CAAkBmD,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIP,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAKjD,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKK,YAAL,CAAkBuB,YAAlB,GAAiC,EAAjC;AACD;AACF;;;wCACa;AACZ,iBAAK6B,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,UAAL,CAAgB6C,YAAhB,CAA6BhC,MAAjD,EAAyDC,CAAC,EAA1D,EAA8D;AAC5D,kBAAIuI,OAAO,GAAG,KAAKrJ,UAAL,CAAgB6C,YAAhB,CAA6B/B,CAA7B,CAAd;AACA,kBAAIF,IAAI,GAAG;AACT,4BAAYyI,OAAO,CAACrI,SADX;AACsB,gCAAgBqI,OAAO,CAAC9G,YAD9C;AAC4D,qCAAqB8G,OAAO,CAAC7G,iBADzF;AAET,gCAAgB6G,OAAO,CAAC5G,YAFf;AAE6B,wBAAQ4G,OAAO,CAAC3G,SAF7C;AAEwD,yBAAS2G,OAAO,CAAC1G,UAFzE;AAGT,0BAAU0G,OAAO,CAACtI;AAHT,eAAX;AAKA,mBAAK6B,YAAL,CAAkBG,IAAlB,CAAuBnC,IAAvB;AACD;;AACD,gBAAMoC,SAAS,GAAG,4CAAWC,aAAX,CAAyB,KAAKL,YAA9B,CAAlB;AACA,gBAAMM,QAAQ,GAAkB,4CAAWC,QAAX,EAAhC;AACA,wDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,sBAAlD;AACA,4DAAeE,QAAf,EAAyB,2BAAzB,EAdY,CAeZ;AACA;AACD;;;sCAEW;AAAA;;AACV,gBAAIG,GAAG,GAAG,IAAI,4CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAEA,iBAAKT,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKd,UAAL,CAAgB6C,YAAhB,CAA6BhC,MAAjD,EAAyDC,CAAC,EAA1D,EAA8D;AAC5D,kBAAIuI,OAAO,GAAG,KAAKrJ,UAAL,CAAgB6C,YAAhB,CAA6B/B,CAA7B,CAAd;AAEA,kBAAIF,IAAI,GAAG,CAACyI,OAAO,CAACrI,SAAT,EAAoBqI,OAAO,CAAC9G,YAA5B,EAA0C8G,OAAO,CAAC7G,iBAAlD,EAAqE6G,OAAO,CAAC5G,YAA7E,EAA2F4G,OAAO,CAAC3G,SAAnG,EACX2G,OAAO,CAAC1G,UADG,EACS0G,OAAO,CAACtI,YADjB,CAAX;AAGA,mBAAK6B,YAAL,CAAkBG,IAAlB,CAAuBnC,IAAvB;AACD;;AACD,gBAAI0C,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAJ,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AAECT,eAAW,CAACW,SAAZ,CAAsB;AACrBpF,kBAAI,EAAE,KAAKA,IADU;AAErBqF,kBAAI,EAAE,KAAKrB,YAFU;AAGrBsB,mBAAK,EAAE,MAHc;AAIrBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJS;AAKrBC,oBAAM,EAAE;AACNC,2BAAW,EAAE,CADP;AAENC,wBAAQ,EAAE;AAFJ,eALa;AAWrBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXa;AAYrBC,yBAAW,EAAE,qBAAA/D,IAAI,EAAI,CACpB,CAboB;AAcrBgE,yBAAW,EAAE,qBAAAhE,IAAI,EAAI;AACnByC,mBAAG,CAACwB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAD,mBAAG,CAACwB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAH,mBAAG,CAACyB,IAAJ,CAAS,6BAAT,EAAwCzB,GAAG,CAAC0B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAA3E,EAA8E,EAA9E,EAAkF;AAAEC,uBAAK,EAAE;AAAT,iBAAlF;AAEA7B,mBAAG,CAACU,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAV,mBAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACyB,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACAzB,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,mBAAG,CAACS,WAAJ,CAAgB,CAAhB;AACAT,mBAAG,CAACyB,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAN,mBAAG,CAACyB,IAAJ,CAAS,kBAAkB,OAAI,CAAC1F,YAAL,CAAkBkG,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA7B,mBAAG,GAAG,OAAI,CAACkC,YAAL,CAAkBlC,GAAlB,CAAN;AACD;AA/BoB,aAAtB,EAvBS,CAwDV;;AACAA,eAAG,CAACmC,MAAJ,CAAW,kBAAX,EAzDU,CA0DV;;AACAnC,eAAG,CAACoC,IAAJ,CAAS,0BAAT;AAED;;;uCACYpC,G,EAAK;AAChB,gBAAIqC,OAAO,GAAGrC,GAAG,CAACsC,gBAAJ,EAAd;AACA,gBAAM7E,CAAC,GAAGuC,GAAG,CAAC0B,QAAJ,CAAaY,gBAAb,EAAV;AACAtC,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB,EAJgB,CAKhB;;AACAT,eAAG,CAACyB,IAAJ,CAAS,UAAUc,MAAM,CAAC9E,CAAD,CAAhB,GAAsB,MAAtB,GAA+B8E,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOrC,GAAP;AAED;;;;;;;yBAxSUuF,a,EAAa,wM,EAAA,oI,EAAA,yI,EAAA,gI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;4EAUb,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACxEtB;;AAGI;;AAAqC;AAAA,qBAAS,IAAA/C,WAAA,EAAT;AAAsB,aAAtB;;AACjC;;AAAU;;AAAiB;;AAC/B;;AAAS;;AACT;;AAAqC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACjC;;AAAU;;AAAc;;AAC5B;;AACJ;;AAEA;;AACI;;AAEI;;AACI;;AAGI;;AACI;;AASA;;AACJ;;AAGA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AAEJ;;AAEA;;AACI;;AAGA;;AAgBJ;;AACA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;;;AAnI4C;;AAAA,mGAAyB,eAAzB,EAAyB,gBAAzB,EAAyB,YAAzB,EAAyB,cAAzB;;AA6HR;;AAAA;;AACa;;AAAA;;AAEtB;;AAAA;;;;;;;qBDtFb;;;;;;wEAID8C,a,EAAa;gBATzB,uDASyB;iBATf;AACT7C,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AASe,U;;;;;;;;;;;AAUmBhG,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBa,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AExE9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,UAAMqI,UAAU,GAAG,CAAC,0IAAD,EAAsC,wEAAtC,EAAuD,kEAAvD,EAAsE,4FAAtE,CAAnB;AACA,UAAMC,kBAAkB,GAAG,CAAC,4FAAD,EAAwB,sFAAxB,CAA3B;;UAYaC,4B;;;;;cAAAA;;;;2BAAAA,4B;AAA4B,S;AAAA,kBAT5B,CACL,qEADK,EAEL,4GAFK,EAGL,oEAHK,CAS4B;;;;4HAA5BA,4B,EAA4B;AAAA,yBAbrB,0IAaqB,EAbgB,wEAahB,EAbiC,kEAajC,EAbgD,4FAahD,EAZb,4FAYa,EAZU,sFAYV;AAZ6B,oBAI9D,qEAJ8D,EAK9D,4GAL8D,EAM9D,oEAN8D;AAY7B,S;AANjB,O;;;;;wEAMXA,4B,EAA4B;gBAVxC,sDAUwC;iBAV/B;AACN5C,mBAAO,EAAE,CACL,qEADK,EAEL,4GAFK,EAGL,oEAHK,CADH;AAMN6C,wBAAY,EAAE,CAACH,UAAD,EAAaC,kBAAb,CANR;AAONG,2BAAe,EAAE,CAACH,kBAAD;AAPX,W;AAU+B,U;;;;;;;;;;;;;;;;;;ACxBzoBU;;AAAoD;;AAA0B;;;;;;AAQ9E;;AAAoD;;AACpD;;;;;;AAQA;;AAA6D;;AAAqB;;;;;;AAQhF;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;AAOF;;AAA6C;;AAAmB;;;;;;AAUlE;;AAA2C;;AAAqB;;;;;;AAMhE;;AAA2C;;AAAsB;;;;;;AAcjE;;AAAoD;;AACpD;;;;;;AAUA;;AAAoD;;AACpD;;;;;;AAQA;;AAA4D;;AAC5D;;;;;;AACA;;AAA2D;;AAC3D;;;;;;AASE;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAOH;;AAA4C;;AAC7C;;;;;;AAQE;;AACE;;AACF;;;;;;AAF+D;;AAC7D;;AAAA;;;;;;AAOF;;AAA6C;;AAC/C;;;;;;AAYE;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOF;;AAA+C;;AACjD;;;;ADhJV,eAASI,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAAC7J,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAE6J,OAAO,CAAC7J;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAaY8J,qB;AAsCX,uCAAoBrL,EAApB,EAA6CF,iBAA7C,EAAsGwL,aAAtG,EACUrL,QADV,EACwCsL,cADxC,EACgFxL,MADhF,EAC2GwI,MAD3G,EAESlF,SAFT,EAEyFjB,IAFzF,EAE8G;AAAA;;AAF1F,eAAApC,EAAA,GAAAA,EAAA;AAAyB,eAAAF,iBAAA,GAAAA,iBAAA;AAAyD,eAAAwL,aAAA,GAAAA,aAAA;AAC5F,eAAArL,QAAA,GAAAA,QAAA;AAA8B,eAAAsL,cAAA,GAAAA,cAAA;AAAwC,eAAAxL,MAAA,GAAAA,MAAA;AAA2B,eAAAwI,MAAA,GAAAA,MAAA;AAClG,eAAAlF,SAAA,GAAAA,SAAA;AAAgF,eAAAjB,IAAA,GAAAA,IAAA;AApCzF,eAAAoJ,UAAA,GAAa,KAAb;AAGA,eAAAtJ,MAAA,GAAS,KAAT;AAKA,eAAAuJ,WAAA,GAAc,KAAd;AAgBA,eAAAC,OAAA,GAAmB,KAAnB;AACA,eAAAC,cAAA,GAAiB,KAAjB;AAOA,eAAAC,IAAA,GAAgB,IAAhB;AAIiH;;;;qCAEtG;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AAEX,iBAAKjL,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAK8H,SAAL,GAAiBhI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACA,iBAAKqC,MAAL,GAAc,KAAKhB,IAAnB;AACA,iBAAKoJ,UAAL,GAAkB,KAAKpI,MAAL,CAAYF,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AACA,iBAAK4I,IAAL,GAAY,KAAK9L,EAAL,CAAQ+L,KAAR,CAAc;AACxB9H,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW+H,QAAZ,CAAL,CADU;AAExBC,wBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAqB,0DAAWE,OAAX,CAAmB,UAAnB,CAArB,CAAL,CAFY;AAGxBC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CAHc;AAIxBI,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL,CAJiB;AAKxBK,iBAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CALmB;AAMxBM,iBAAG,EAAC,CAAC,EAAD,EAAI,0DAAWN,QAAf,CANoB;AAOxBO,0BAAY,EAAC,CAAC,EAAD,EAAI,0DAAWP,QAAf,CAPW;AAQxBQ,0BAAY,EAAE,CAAC,EAAD,CARU;AASxBC,0BAAY,EAAE,CAAC,EAAD,CATU;AAUxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWE,OAAX,CAAmB,oCAAnB,CAAtB,CAAL,CAVe;AAWxBS,kBAAI,EAAE,CAAC,EAAD,EAAK,CAACxB,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAXkB;AAYxBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACzB,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAZiB;AAaxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC1B,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAbe;AAcxBc,sBAAQ,EAAE,CAAC,EAAD,CAdc;AAexBC,qBAAO,EAAC,CAAC,EAAD,CAfgB;AAgBxBC,mBAAK,EAAC,CAAC,EAAD,CAhBkB;AAiBxB9K,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAjBZ,aAAd,CAAZ;;AAoBA,gBAAI,KAAKsJ,UAAT,EAAqB;AACnB,mBAAKyB,YAAL,CAAkB,KAAK7J,MAAvB;AACD;;AAED,iBAAK8J,iBAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,WAAL,CAAiB,KAAKhK,MAAL,CAAYhB,IAAZ,CAAiBiL,UAAlC;AACA,iBAAKC,UAAL,CAAgB,KAAKlK,MAAL,CAAYhB,IAAZ,CAAiBmL,QAAjC;AACD;;;0CACe;AAAA;;AACd,iBAAKhC,cAAL,CAAoB4B,aAApB,GAAoCnL,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACuL,SAAL,GAAiBvL,IAAjB;;AACA,kBAAI,OAAI,CAACuJ,UAAT,EAAqB;AACnB,oBAAMiC,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiBiL,UAA7B;AAAA,iBAArB,CAAjB;;AACA,uBAAI,CAACvB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;AACD;;AACD,qBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aAbH,EAaK,UAACzK,GAAD,EAAS,CAEX,CAfH;AAiBD;;;yCACcqL,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAK6L,SAAL,CAAe/L,MAAf,CAAsB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;sCAEWkN,S,EAAW;AAAA;;AACrB,iBAAKhD,cAAL,CAAoBiD,iBAApB,CAAsCD,SAAtC,EAAiDvM,SAAjD,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACwM,MAAL,GAAcxM,IAAd;;AACA,kBAAI,OAAI,CAACuJ,UAAT,EAAqB;AACnB,oBAAMiC,QAAQ,GAAG,OAAI,CAACgB,MAAL,CAAYf,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiBmL,QAA7B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAACzB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;AACD;;AACD,qBAAI,CAACiB,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;AAiBD;;;uCACYqL,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAK8M,MAAL,CAAYhN,MAAZ,CAAmB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;qCAEUuN,O,EAAS;AAAA;;AAClB,iBAAKrD,cAAL,CAAoBsD,cAApB,CAAmCD,OAAnC,EAA4C5M,SAA5C,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAAC6M,MAAL,GAAc7M,IAAd;;AACA,kBAAG,OAAI,CAACuJ,UAAR,EAAmB;AACjB,oBAAMiC,QAAQ,GAAG,OAAI,CAACqB,MAAL,CAAYpB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAGA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiB2M,OAA5B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAACjD,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BJ,QAA/B;AACD;;AACD,qBAAI,CAACuB,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aAbH,EAaK,UAAC/L,GAAD,EAAS,CAEX,CAfH;AAiBD;;;sCACWqL,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAKmN,MAAL,CAAYrN,MAAZ,CAAmB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;kCAEO;AACN,iBAAKgC,SAAL,CAAe6L,KAAf;AACD;;;6CACkB;AACjB,iBAAK7L,SAAL,CAAe6L,KAAf;AACD;;;uCAEY;AAAA;;AACX,gBAAI,KAAKpD,IAAL,CAAUqD,KAAd,EAAqB;AACnB,kBAAIC,UAAU,GAAG,KAAKtD,IAAL,CAAUvK,KAA3B;AAEA,kBAAM6B,MAAM,GAAQ;AAClB6I,0BAAU,EAAEmD,UAAU,CAACnD,UADL;AAElBoD,uBAAO,EAAE,KAAKzO,YAAL,CAAkBqC,MAFT;AAGlBgB,4BAAY,EAAEmL,UAAU,CAACnL,YAHP;AAIlBkI,wBAAQ,EAAEiD,UAAU,CAACjD,QAJH;AAKlBC,qBAAK,EAAEgD,UAAU,CAAChD,KAAX,CAAiBjD,EALN;AAMlBkD,mBAAG,EAAE+C,UAAU,CAAC/C,GANE;AAOlBC,mBAAG,EAAE8C,UAAU,CAAC9C,GAPE;AAQlBtI,iCAAiB,EAAEoL,UAAU,CAAC7C,YARZ;AASlB+C,wBAAQ,EAAEF,UAAU,CAAC5C,YATH;AAUlB+C,wBAAQ,EAAEH,UAAU,CAAC3C,YAVH;AAWlB+C,mBAAG,EAAEJ,UAAU,CAAC1C,OAXE;AAYlBI,wBAAQ,EAAEsC,UAAU,CAACtC,QAZH;AAalBiC,uBAAO,EAAEK,UAAU,CAACzC,IAAX,CAAgBxD,EAbP;AAclBoE,wBAAQ,EAAE6B,UAAU,CAACxC,KAAX,CAAiBzD,EAdT;AAelBkE,0BAAU,EAAE+B,UAAU,CAACvC,OAAX,CAAmB1D,EAfb;AAgBlB4D,uBAAO,EAACqC,UAAU,CAACrC,OAhBD;AAiBlB0C,yBAAS,EAAEL,UAAU,CAACpC,KAjBJ;AAkBlB9K,sBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAlBlB,eAApB;;AAoBA,kBAAI,KAAKsJ,UAAT,EAAqB;AACjBpI,sBAAM,CAAC+F,EAAP,GAAY,KAAK/F,MAAL,CAAYhB,IAAZ,CAAiB+G,EAA7B,EACA/F,MAAM,CAACsM,SAAP,GAAmB,KAAK9O,YAAL,CAAkBqC,MADrC;AAEH,eAHD,MAGO;AACHG,sBAAM,CAACuM,UAAP,GAAoB,KAAK/O,YAAL,CAAkBqC,MAAtC;AACH;;AACD,kBAAI,KAAKuI,UAAT,EAAqB;AACnB,qBAAK1L,iBAAL,CAAuB8P,oBAAvB,CAA4CxM,MAA5C,EAAoDpB,SAApD,CACE,UAACC,IAAD,EAAe;AACb,sBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,2BAAI,CAACjC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBkN,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhN,8BAAQ,EAAE;AAAZ,qBAAnE;;AACA,2BAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,mBAHD,MAGM;AACJ,2BAAI,CAACjP,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,8BAAQ,EAAE;AAAZ,qBAA5D;AACD;AACF,iBARH,EASE,UAACE,GAAD,EAAS;AACP,yBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBAXH;AAaD,eAdD,MAcO;AACL,qBAAK/C,iBAAL,CAAuBgQ,oBAAvB,CAA4C1M,MAA5C,EAAoDpB,SAApD,CACE,UAACC,IAAD,EAAe;AACb,sBAAGA,IAAI,CAACC,MAAL,IAAe,IAAlB,EAAuB;AACrB,2BAAI,CAACjC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBoN,cAAnC,EAAmD,SAAnD,EAA8D;AAAElN,8BAAQ,EAAE;AAAZ,qBAA9D;;AACA,2BAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD;AACF,iBANH,EAOE,UAACnM,GAAD,EAAS;AACP,yBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBATH;AAWD;AACF,aAxDD,MAwDK;AACH,qBADG,CAEH;AACD;AAEF;;;0CAEeiJ,I,EAAiB;AAC/B,mBAAOA,IAAI,CAAC8B,GAAL,CAAS,OAAT,EAAkBoC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHlE,IAAI,CAAC8B,GAAL,CAAS,OAAT,EAAkBoC,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEY5M,M,EAAQ;AACnB,iBAAK0I,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAY6B,YAAnD;AACA,iBAAK6H,IAAL,CAAU8B,GAAV,CAAc,YAAd,EAA4BC,QAA5B,CAAqCzK,MAAM,CAAChB,IAAP,CAAY6J,UAAjD;AACA,iBAAKH,IAAL,CAAU8B,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCzK,MAAM,CAAChB,IAAP,CAAY+J,QAA/C;AACA,iBAAKL,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BzK,MAAM,CAAChB,IAAP,CAAYiK,GAA1C;AACA,iBAAKP,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BzK,MAAM,CAAChB,IAAP,CAAYkK,GAA1C;AACA,iBAAKR,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAY4B,iBAAnD;AACA,iBAAK8H,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAYkN,QAAnD;AACA,iBAAKxD,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAYmN,QAAnD;AACA,iBAAKzD,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCzK,MAAM,CAAChB,IAAP,CAAYoN,GAA9C;AACA,iBAAK1D,IAAL,CAAU8B,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCzK,MAAM,CAAChB,IAAP,CAAY0K,QAA/C;AACA,iBAAKhB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCzK,MAAM,CAAChB,IAAP,CAAY2K,OAA9C;AACA,iBAAKjB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCzK,MAAM,CAAChB,IAAP,CAAYqN,SAA5C;AACA,iBAAKvN,MAAL,GAAckB,MAAM,CAAChB,IAAP,CAAYF,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAAjD;AACD;;;uCAEYd,K,EAAO;AAClB,iBAAKc,MAAL,GAAcd,KAAK,CAAC6O,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAK/N,MAAxB;AACD;;;4CAGiB;AAAA;;AAChB,iBAAKiO,WAAL,GAAmB,KAAKrE,IAAL,CAAUvK,KAAV,CAAgBmL,OAAnC;AACA,iBAAKnB,cAAL,CAAoB6E,oBAApB,CAAyC,KAAKD,WAA9C,EAA2DnO,SAA3D,CACE,UAACI,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAI0G,SAAR,IAAqB1G,IAAI,IAAI,IAA7B,IAAqCA,IAAI,CAACC,MAAL,GAAc,CAAvD,EAA0D;AACxD,uBAAI,CAACkL,QAAL,GAAgBnL,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAAxB;;AACA,uBAAI,CAAChC,cAAL,CAAoB8E,iBAApB,CAAsC,OAAI,CAAC9C,QAA3C,EAAqDvL,SAArD,CACE,UAACsO,WAAD,EAAsB;AACpB,yBAAI,CAAC9C,SAAL,GAAiB8C,WAAjB;;AACA,sBAAM7C,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACxE,EAAF,IAAQ/G,IAAI,CAAC,CAAD,CAAJ,CAAQiL,UAApB;AAAA,mBAArB,CAAjB;;AACA,yBAAI,CAACvB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;;AAEA,yBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,2BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,mBAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,2BAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,mBAAR,CAJyB,CAA7B;AAMA,yBAAI,CAACH,UAAL,GAAkBjL,IAAI,CAAC,CAAD,CAAJ,CAAQiL,UAA1B;;AACA,yBAAI,CAAC9B,cAAL,CAAoBiD,iBAApB,CAAsC,OAAI,CAACnB,UAA3C,EAAuDrL,SAAvD,CACE,UAACuO,SAAD,EAAoB;AAClB,2BAAI,CAAC9B,MAAL,GAAc8B,SAAd;;AACA,wBAAM9C,QAAQ,GAAG,OAAI,CAACgB,MAAL,CAAYf,IAAZ,CAAiB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACxE,EAAF,IAAQ/G,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAApB;AAAA,qBAAlB,CAAjB;;AACA,2BAAI,CAACzB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;;AAEA,2BAAI,CAACiB,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,qBAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,qBAAR,CAJuB,CAA3B;AAOD,mBAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;;AAiBA,yBAAI,CAACwK,QAAL,GAAgBnL,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAAxB;;AACA,yBAAI,CAAChC,cAAL,CAAoBsD,cAApB,CAAmC,OAAI,CAACtB,QAAxC,EAAkDvL,SAAlD,CACE,UAACwO,QAAD,EAAmB;AACjB,2BAAI,CAAC1B,MAAL,GAAc0B,QAAd,CADiB,CAEjB;AACA;;AACA,2BAAI,CAACxB,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,qBAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,qBAAR,CAJsB,CAA1B;AAOD,mBAZH,EAYK,UAAC/L,GAAD,EAAS,CAEX,CAdH;AAgBD,iBA/CH,EA+CK,UAACA,GAAD,EAAS,CAEX,CAjDH;AAmDD,eArDD,MAqDO,CAEN;AACF,aA1DH,EA0DK,UAACA,GAAD,EAAS,CAEX,CA5DH;AA8DD;;;0CACe3B,K,EAAO;AACrB,iBAAKoM,SAAL,GAAiB,EAAjB;AACA,iBAAKL,aAAL;AACA,iBAAKsD,kBAAL,CAAwBrP,KAAxB,EAHqB,CAIrB;;AACA,iBAAK0K,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK/B,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CAEkBjB,K,EAAO;AAAA;;AACxB,iBAAKW,QAAL,GAAgBX,KAAK,CAACzD,EAAtB;AACA,iBAAKoC,cAAL,CAAoBiD,iBAApB,CAAsC,KAAKjB,QAA3C,EAAqDvL,SAArD,CACE,UAACuO,SAAD,EAAoB;AAClB;AACA,qBAAI,CAAC9B,MAAL,GAAc8B,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAAC7B,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;AAiBD;;;4CAEiB2N,O,EAAS;AAAA;;AACzB,iBAAKnD,QAAL,GAAgBmD,OAAO,CAACvH,EAAxB;AACA,iBAAKoC,cAAL,CAAoBsD,cAApB,CAAmC,KAAKtB,QAAxC,EAAkDvL,SAAlD,CACE,UAAC2O,UAAD,EAAqB;AACnB;AACA,qBAAI,CAAC7B,MAAL,GAAc6B,UAAd;AACA,qBAAI,CAAC3B,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAXH,EAWK,UAAC/L,GAAD,EAAS,CAEX,CAbH;AAeD;;;4CAEiB2N,O,EAAS;AAAA;;AACzB,iBAAKnD,QAAL,GAAgBmD,OAAO,CAACvH,EAAxB;AACA,iBAAKoC,cAAL,CAAoB8E,iBAApB,CAAsC,KAAK9C,QAA3C,EAAqDvL,SAArD,CACE,UAACsO,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC9C,SAAL,GAAiB8C,WAAjB;;AACA,kBAAM7C,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACxE,EAAF,IAAQmH,WAAW,CAAC,CAAD,CAAX,CAAenH,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAAC2C,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;;AAEA,qBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACzK,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACa3B,K,EAAO;AACnB,iBAAKwP,iBAAL,CAAuBxP,KAAvB;AACA,iBAAKiP,iBAAL,CAAuBjP,KAAvB;AACA,iBAAK0K,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;uCACYzM,K,EAAO,CAClB;AACD;;;uCAES;AAAA;;AACR,gBAAIgC,MAAM,GAAG,EAAb;AAGA,gBAAMC,SAAS,GAAG,KAAKtD,MAAL,CAAY4C,IAAZ,CAAiB,wGAAjB,EAAqC;AACrDW,mBAAK,EAAE,OAD8C;AAErDuN,oBAAM,EAAC,OAF8C;AAGrDzO,kBAAI,EAAEgB;AAH+C,aAArC,CAAlB;AAKAC,qBAAS,CAACK,WAAV,GAAwB1B,SAAxB,CAAkC,UAAA2B,MAAM,EAAI;AAC1C,kBAAGA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAImF,SAA/B,EAAyC;AACvC,uBAAI,CAACgD,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BlK,MAAM,CAAC,CAAD,CAAN,CAAU0I,GAAxC;;AACA,uBAAI,CAACP,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BlK,MAAM,CAAC,CAAD,CAAN,CAAU2I,GAAxC;AACD,eAHD,MAGK;AACH,uBAAI,CAACR,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACiD,IAAnC;;AACA,uBAAI,CAAChF,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACkD,KAAnC;;AACA,uBAAI,CAAC9Q,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBqO,qBAAnC,EAA0D,SAA1D,EAAqE;AAAEnO,0BAAQ,EAAE;AAAZ,iBAArE;AACD;AAEF,aAVD;AAWD;;;8CAEgB;AAAA;;AACf,iBAAKyI,aAAL,CAAmB4B,iBAAnB,GAAuClL,SAAvC,CACE,UAACI,IAAD,EAAY;AACV,qBAAI,CAAC6O,cAAL,GAAsB7O,IAAtB;;AACA,kBAAG,OAAI,CAACoJ,UAAR,EAAmB;AACjB,oBAAMiC,QAAQ,GAAG,OAAI,CAACwD,cAAL,CAAoBvD,IAApB,CAAyB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiBgK,KAA7B;AAAA,iBAA1B,CAAjB;;AACA,uBAAI,CAACN,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;AACD;;AACD,qBAAI,CAACyD,4BAAL,GAAoC,OAAI,CAACpF,IAAL,CAAUiC,QAAV,CAAmB3B,KAAnB,CAAyB4B,YAAzB,CACnCC,IADmC,CAElC,iEAAU,EAAV,CAFkC,EAGlC,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHkC,EAIlC,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACiD,oBAAL,CAA0BjD,IAA1B,CAAH,GAAqC,OAAI,CAAC+C,cAAlD;AAAA,eAAR,CAJkC,CAApC;AAMD,aAbH,EAaI,UAAClO,GAAD,EAAO,CACR,CAdH;AAgBD;;;+CAC4BmL,I,EAAY;AACvC,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAKsP,cAAL,CAAoBxP,MAApB,CAA2B,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAjC,CAAP;AACD;;;+CACoB+M,I,EAAS;AAC5B,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;uDAE4B;AAAA;;AAC3B,gBAAIkD,SAAS,GAAG,KAAKtF,IAAL,CAAUvK,KAAV,CAAgBgL,YAAhC;AACA,iBAAKzM,iBAAL,CAAuBuR,2BAAvB,CAAmDD,SAAnD,EAA8DpP,SAA9D,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAACC,MAAL,IAAe,KAAnB,EAA0B;AACxB,uBAAI,CAAC0J,IAAL,GAAY,IAAZ;;AACA,oBAAI3J,IAAI,CAACG,IAAL,IAAa,IAAb,IAAqBH,IAAI,CAACG,IAAL,IAAa0G,SAAtC,EAAiD;AAC/C,yBAAI,CAACwI,WAAL,GAAmBrP,IAAI,CAACG,IAAL,CAAU,CAAV,CAAnB;;AACA,yBAAI,CAACnC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C,EAF+C,CAG/C;;AACD,iBAJD,MAIO;AACL,yBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AACF,eATD,MASO;AACL,uBAAI,CAACyO,WAAL,GAAmBrP,IAAI,CAACG,IAAL,CAAU,CAAV,CAAnB;AACA,uBAAI,CAACwJ,IAAL,GAAY,KAAZ;;AACA,uBAAI,CAACE,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuC,EAAvC;;AACA,uBAAI,CAAC5N,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,0BAAQ,EAAE;AAAZ,iBAA5C,EAJK,CAKL;;AACD;AACF,aAlBH,EAkBK,UAACE,GAAD,EAAS,CAEX,CApBH;AAsBD;;;;;;;yBAheUsI,qB,EAAqB,2H,EAAA,uM,EAAA,wJ,EAAA,yI,EAAA,wJ,EAAA,mI,EAAA,wH,EAAA,sI,EAAA,gEAwCiC,wEAxCjC,C;AAwCgD,O;;;cAxCrEA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;oFAJrB,CAAC,wDAAD,C;AAAU,kB;AAAA,gB;AAAA,q1H;AAAA;AAAA;ACjCvB;;AAA6D;AAAA,qBAAS,IAAAkG,gBAAA,EAAT;AAA2B,aAA3B;;AACQ;;AAAK;;AAE1E;;AAAoC;;AAAoB;;AAExD;;AACE;;AAEE;;AAGE;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AACE;;AAAkF;;AAAc;;AAClG;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;AAAA,qBAAU,IAAAC,0BAAA,EAAV;AAAsC,aAAtC;;AADA;;AAEA;;AAAuF;;AAAW;;AAClG;;AAEF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAC9E;;AACA;;AAEF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AACE;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAc;;AAC9F;;AACE;;AACJ;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;AAAA,qBAAS,IAAAA,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAA2E;;AAAK;;AAGlF;;AACA;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAkF;;AAAI;;AACtF;;AAEF;;AAEF;;AAEA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAkF;;AAAI;;AACtF;;AAEF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;AAAA,qBAAU,IAAAC,eAAA,EAAV;AAA2B,aAA3B;;AADF;;AAEA;;AAA8E;;AAAS;;AACvF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AAEA;;AACA;AAAA,qBAAkB,IAAAC,YAAA,qBAAlB;AAAmD,aAAnD;;AACE;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACvD;;AAA2E;;AAAa;;AACzF;;AACC;;AAEH;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAa;;AAC3F;;AACE;;AAEJ;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAO;;AAClB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAa;;AAC7F;;AACE;;AAEJ;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAAW;;AAG3F;;AACA;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAA8E;;AAAW;;AAG3F;;AACA;;AACE;;AAA4E;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAE1E;;AAAoC;;AACxC;;AAEF;;AAGA;;AACE;;AAAqE;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AACzE;;AACnB;;AAAkE;AAAA,qBAAS,IAAA7C,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC5F;;AAEF;;AAEF;;AACF;;;;;;;;;;;;AAjMoC;;AAAA;;AAK1B;;AAAA;;AAWY;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;AAMqE;;AAAA;;AACjC;;AAAA;;AACf;;AAAA;;AAQnB;;AAAA;;AAUF;;AAAA;;AAMA;;AAAA;;AAcA;;AAAA;;AAWA;;AAAA;;AASA;;AAAA;;AAEA;;AAAA;;AAMuC;;AAAA;;AAEL;;AAAA;;AAEb;;AAAA;;AAQpB;;AAAA;;AAKuC;;AAAA;;AAEL;;AAAA;;AAEd;;AAAA;;AAQnB;;AAAA;;AAUZ;;AAAA;;AAC+C;;AAAA;;AAEhB;;AAAA;;AAQnB;;AAAA;;AAmB2C;;AAAA;;AAEvD;;AAAA;;AAOwF;;AAAA;;;;;;;;qBD5JtF;;;;;;wEAKD7D,qB,EAAqB;gBAVjC,uDAUiC;iBAVvB;AACT9D,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE,+DALH;AAMToK,qBAAS,EAAE,CAAC,wDAAD;AANF,W;AAUuB,U;;;;;;;;;;;;;;;;;;;;oBAwC0B,oD;qBAAO,wE;;;;AAzBrC9B,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE,C;AACH+B,yBAAe,EAAE,CAAF;kBAA5C,uDAA4C;mBAAlC,iB;AAAkC,WAAE;;;;;;;;;;;;;;;;;;;AEtDjoBU;;AAAoD;;AAA0B;;;;;;AAQ9E;;AAAoD;;AACpD;;;;;;AAQA;;AAA6D;;AAAqB;;;;;;AAQhF;;AACE;;AACF;;;;;;AAFwE;;AACtE;;AAAA;;;;;;AAOF;;AAA6C;;AAAmB;;;;;;AAUlE;;AAA2C;;AAAqB;;;;;;AAMhE;;AAA2C;;AAAsB;;;;;;AAcjE;;AAAoD;;AACpD;;;;;;AAWA;;AAAoD;;AACpD;;;;;;AAQA;;AAA4D;;AAC5D;;;;;;AACA;;AAA2D;;AAC3D;;;;;;AASE;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAOH;;AAA4C;;AAC7C;;;;;;AAQE;;AACE;;AACF;;;;;;AAF+D;;AAC7D;;AAAA;;;;;;AAOJ;;AAA6C;;AAC7C;;;;;;AAWE;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOJ;;AAA+C;;AAC/C;;;;;;;;AA2BF;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;;;;;;;AACxH;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAQ;;;;;;;;AACxH;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAQ;;;;AD9KpI,eAAS9G,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAAC7J,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAE6J,OAAO,CAAC7J;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAWY2Q,mB;AA4BX,qCAAoBlS,EAApB,EAA6CF,iBAA7C,EAAsGwL,aAAtG,EACUrL,QADV,EACwCsL,cADxC,EACgFxL,MADhF,EAC2GwI,MAD3G,EAESlF,SAFT,EAEuFjB,IAFvF,EAE4G;AAAA;;AAFxF,eAAApC,EAAA,GAAAA,EAAA;AAAyB,eAAAF,iBAAA,GAAAA,iBAAA;AAAyD,eAAAwL,aAAA,GAAAA,aAAA;AAC5F,eAAArL,QAAA,GAAAA,QAAA;AAA8B,eAAAsL,cAAA,GAAAA,cAAA;AAAwC,eAAAxL,MAAA,GAAAA,MAAA;AAA2B,eAAAwI,MAAA,GAAAA,MAAA;AAClG,eAAAlF,SAAA,GAAAA,SAAA;AAA8E,eAAAjB,IAAA,GAAAA,IAAA;AA3BvF,eAAAoJ,UAAA,GAAa,KAAb;AAGA,eAAAtJ,MAAA,GAAS,KAAT;AAYA,eAAAiQ,cAAA,GAA0B,KAA1B;AACA,eAAAC,UAAA,GAAsB,KAAtB;AAOA,eAAAxG,IAAA,GAAgB,IAAhB;AAI+G;;;;qCAEpG;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKjL,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAK8H,SAAL,GAAiBhI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACA,iBAAKqC,MAAL,GAAc,KAAKhB,IAAnB;AAEA,iBAAKoJ,UAAL,GAAkB,KAAKpI,MAAL,CAAYF,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AACA,iBAAKiP,cAAL,GAAsB,KAAK/O,MAAL,CAAYD,YAAZ,IAA4B,cAA5B,GAA6C,IAA7C,GAAoD,KAA1E,CANW,CAMsE;;AACjF,iBAAKiP,UAAL,GAAkB,KAAKhP,MAAL,CAAYD,YAAZ,IAA4B,gBAA5B,GAA+C,IAA/C,GAAsD,KAAxE,CAPW,CAOoE;;AAC/E,iBAAK2I,IAAL,GAAY,KAAK9L,EAAL,CAAQ+L,KAAR,CAAc;AACxB9H,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW+H,QAAZ,CAAL,CADU;AAExBC,wBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,EAAqB,0DAAWE,OAAX,CAAmB,UAAnB,CAArB,CAAL,CAFY;AAGxBC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CAHc;AAIxBI,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL,CAJiB;AAKxBK,iBAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CALmB;AAMxBM,iBAAG,EAAC,CAAC,EAAD,EAAI,0DAAWN,QAAf,CANoB;AAOxBO,0BAAY,EAAC,CAAC,EAAD,EAAI,0DAAWP,QAAf,CAPW;AAQxBQ,0BAAY,EAAE,CAAC,EAAD,CARU;AASxBC,0BAAY,EAAE,CAAC,EAAD,CATU;AAUxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWE,OAAX,CAAmB,oCAAnB,CAAtB,CAAL,CAVe;AAWxBS,kBAAI,EAAE,CAAC,EAAD,EAAK,CAACxB,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAXkB;AAYxBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACzB,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAZiB;AAaxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC1B,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAbe;AAcxBc,sBAAQ,EAAE,CAAC,EAAD,CAdc;AAexBC,qBAAO,EAAC,CAAC,EAAD,CAfgB;AAgBxBC,mBAAK,EAAC,CAAC,EAAD,CAhBkB;AAiBxB9K,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAjBZ,aAAd,CAAZ;;AAoBA,gBAAI,KAAKsJ,UAAT,EAAqB;AACnB,mBAAKyB,YAAL,CAAkB,KAAK7J,MAAvB;AACD;;AACD,iBAAK8J,iBAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,WAAL,CAAiB,KAAKhK,MAAL,CAAYhB,IAAZ,CAAiBiL,UAAlC;AACA,iBAAKC,UAAL,CAAgB,KAAKlK,MAAL,CAAYhB,IAAZ,CAAiBmL,QAAjC;AACD;;;0CACe;AAAA;;AACd,iBAAKhC,cAAL,CAAoB4B,aAApB,GAAoCnL,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACuL,SAAL,GAAiBvL,IAAjB;;AACA,kBAAI,OAAI,CAACuJ,UAAT,EAAqB;AACnB,oBAAMiC,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiBiL,UAA7B;AAAA,iBAArB,CAAjB;;AACA,uBAAI,CAACvB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;AACD;;AACD,qBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aAbH,EAaK,UAACzK,GAAD,EAAS,CAEX,CAfH;AAiBD;;;yCACcqL,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAK6L,SAAL,CAAe/L,MAAf,CAAsB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;sCAEWkN,S,EAAW;AAAA;;AACrB,iBAAKhD,cAAL,CAAoBiD,iBAApB,CAAsCD,SAAtC,EAAiDvM,SAAjD,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACwM,MAAL,GAAcxM,IAAd;;AACA,kBAAI,OAAI,CAACuJ,UAAT,EAAqB;AACnB,oBAAMiC,QAAQ,GAAG,OAAI,CAACgB,MAAL,CAAYf,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiBmL,QAA7B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAACzB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;AACD;;AACD,qBAAI,CAACiB,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;AAiBD;;;uCACYqL,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAK8M,MAAL,CAAYhN,MAAZ,CAAmB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;qCAEUuN,O,EAAS;AAAA;;AAClB,iBAAKrD,cAAL,CAAoBsD,cAApB,CAAmCD,OAAnC,EAA4C5M,SAA5C,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAAC6M,MAAL,GAAc7M,IAAd;;AACA,kBAAI,OAAI,CAACuJ,UAAT,EAAqB;AACnB,oBAAMiC,QAAQ,GAAG,OAAI,CAACqB,MAAL,CAAYpB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiB2M,OAA7B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAACjD,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BJ,QAA/B;AACD;;AACD,qBAAI,CAACuB,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAdH,EAcK,UAAC/L,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;sCACWqL,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAKmN,MAAL,CAAYrN,MAAZ,CAAmB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;kCAEO;AACN,iBAAKgC,SAAL,CAAe6L,KAAf;AACD;;;6CACkB;AACjB,iBAAK7L,SAAL,CAAe6L,KAAf;AACD;;;0CACepD,I,EAAiB;AAC/B,mBAAOA,IAAI,CAAC8B,GAAL,CAAS,OAAT,EAAkBoC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHlE,IAAI,CAAC8B,GAAL,CAAS,OAAT,EAAkBoC,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEY5M,M,EAAQ;AACnB,iBAAK0I,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAY6B,YAAnD;AACA,iBAAK6H,IAAL,CAAU8B,GAAV,CAAc,YAAd,EAA4BC,QAA5B,CAAqCzK,MAAM,CAAChB,IAAP,CAAY6J,UAAjD;AACA,iBAAKH,IAAL,CAAU8B,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCzK,MAAM,CAAChB,IAAP,CAAY+J,QAA/C;AACA,iBAAKL,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BzK,MAAM,CAAChB,IAAP,CAAYiK,GAA1C;AACA,iBAAKP,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BzK,MAAM,CAAChB,IAAP,CAAYkK,GAA1C;AACA,iBAAKR,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAY4B,iBAAnD;AACA,iBAAK8H,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAYkN,QAAnD;AACA,iBAAKxD,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCzK,MAAM,CAAChB,IAAP,CAAYmN,QAAnD;AACA,iBAAKzD,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCzK,MAAM,CAAChB,IAAP,CAAYoN,GAA9C;AACA,iBAAK1D,IAAL,CAAU8B,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCzK,MAAM,CAAChB,IAAP,CAAY0K,QAA/C;AACA,iBAAKhB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCzK,MAAM,CAAChB,IAAP,CAAY2K,OAA9C;AACA,iBAAKjB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCzK,MAAM,CAAChB,IAAP,CAAYqN,SAA5C;AACA,iBAAKvN,MAAL,GAAckB,MAAM,CAAChB,IAAP,CAAYF,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAAjD;;AACA,gBAAG,KAAKkQ,UAAR,EAAmB;AACjB,mBAAKlQ,MAAL,GAAckB,MAAM,CAAChB,IAAP,CAAYF,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAoCkB,MAAM,CAAChB,IAAP,CAAYF,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAArF;AACD;AAEF;;;uCAEYd,K,EAAO;AAClB,iBAAKc,MAAL,GAAcd,KAAK,CAAC6O,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAK/N,MAAxB;AACD;;;4CAEiB;AAAA;;AAChB,iBAAKiO,WAAL,GAAmB,KAAKrE,IAAL,CAAUvK,KAAV,CAAgBmL,OAAnC;AACA,iBAAKnB,cAAL,CAAoB6E,oBAApB,CAAyC,KAAKD,WAA9C,EAA2DnO,SAA3D,CACE,UAACI,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAI0G,SAAR,IAAqB1G,IAAI,IAAI,IAA7B,IAAqCA,IAAI,CAACC,MAAL,GAAc,CAAvD,EAA0D;AACxD,uBAAI,CAACkL,QAAL,GAAgBnL,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAAxB;;AACA,uBAAI,CAAChC,cAAL,CAAoB8E,iBAApB,CAAsC,OAAI,CAAC9C,QAA3C,EAAqDvL,SAArD,CACE,UAACsO,WAAD,EAAsB;AACpB,yBAAI,CAAC9C,SAAL,GAAiB8C,WAAjB;;AACA,sBAAM7C,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACxE,EAAF,IAAQ/G,IAAI,CAAC,CAAD,CAAJ,CAAQiL,UAApB;AAAA,mBAArB,CAAjB;;AACA,yBAAI,CAACvB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;;AAEA,yBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,2BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,mBAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,2BAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,mBAAR,CAJyB,CAA7B;AAMA,yBAAI,CAACH,UAAL,GAAkBjL,IAAI,CAAC,CAAD,CAAJ,CAAQiL,UAA1B;;AACA,yBAAI,CAAC9B,cAAL,CAAoBiD,iBAApB,CAAsC,OAAI,CAACnB,UAA3C,EAAuDrL,SAAvD,CACE,UAACuO,SAAD,EAAoB;AAClB,2BAAI,CAAC9B,MAAL,GAAc8B,SAAd;;AACA,wBAAM9C,QAAQ,GAAG,OAAI,CAACgB,MAAL,CAAYf,IAAZ,CAAiB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACxE,EAAF,IAAQ/G,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAApB;AAAA,qBAAlB,CAAjB;;AACA,2BAAI,CAACzB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;;AAEA,2BAAI,CAACiB,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,qBAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,qBAAR,CAJuB,CAA3B;AAOD,mBAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;;AAiBA,yBAAI,CAACwK,QAAL,GAAgBnL,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAAxB;;AACA,yBAAI,CAAChC,cAAL,CAAoBsD,cAApB,CAAmC,OAAI,CAACtB,QAAxC,EAAkDvL,SAAlD,CACE,UAACwO,QAAD,EAAmB;AACjB,2BAAI,CAAC1B,MAAL,GAAc0B,QAAd,CADiB,CAEjB;AACA;;AACA,2BAAI,CAACxB,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,qBAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,qBAAR,CAJsB,CAA1B;AAOD,mBAZH,EAYK,UAAC/L,GAAD,EAAS,CAEX,CAdH;AAgBD,iBA/CH,EA+CK,UAACA,GAAD,EAAS,CAEX,CAjDH;AAmDD,eArDD,MAqDO,CAEN;AACF,aA1DH,EA0DK,UAACA,GAAD,EAAS,CAEX,CA5DH;AA8DD;;;0CACe3B,K,EAAO;AACrB,iBAAKoM,SAAL,GAAiB,EAAjB;AACA,iBAAKL,aAAL;AACA,iBAAKsD,kBAAL,CAAwBrP,KAAxB,EAHqB,CAIrB;;AACA,iBAAK0K,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK/B,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CACkBjB,K,EAAO;AAAA;;AACxB,iBAAKW,QAAL,GAAgBX,KAAK,CAACzD,EAAtB;AACA,iBAAKoC,cAAL,CAAoBiD,iBAApB,CAAsC,KAAKjB,QAA3C,EAAqDvL,SAArD,CACE,UAACuO,SAAD,EAAoB;AAClB;AACA,qBAAI,CAAC9B,MAAL,GAAc8B,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAAC7B,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;AAiBD;;;wCACa3B,K,EAAO;AACnB,iBAAKwP,iBAAL,CAAuBxP,KAAvB;AACA,iBAAKiP,iBAAL,CAAuBjP,KAAvB;AACA,iBAAK0K,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;4CACiB6C,O,EAAS;AAAA;;AACzB,iBAAKnD,QAAL,GAAgBmD,OAAO,CAACvH,EAAxB;AACA,iBAAKoC,cAAL,CAAoBsD,cAApB,CAAmC,KAAKtB,QAAxC,EAAkDvL,SAAlD,CACE,UAAC2O,UAAD,EAAqB;AACnB;AACA,qBAAI,CAAC7B,MAAL,GAAc6B,UAAd;AACA,qBAAI,CAAC3B,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAXH,EAWK,UAAC/L,GAAD,EAAS,CAEX,CAbH;AAeD;;;4CAEiB2N,O,EAAS;AAAA;;AACzB,iBAAKnD,QAAL,GAAgBmD,OAAO,CAACvH,EAAxB;AACA,iBAAKoC,cAAL,CAAoB8E,iBAApB,CAAsC,KAAK9C,QAA3C,EAAqDvL,SAArD,CACE,UAACsO,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC9C,SAAL,GAAiB8C,WAAjB;;AACA,kBAAM7C,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACxE,EAAF,IAAQmH,WAAW,CAAC,CAAD,CAAX,CAAenH,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAAC2C,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;;AAEA,qBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACzK,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;uCAEY3B,K,EAAO,CAClB;AACD;;;uCACS;AAAA;;AACR,gBAAMgC,MAAM,GAAQ;AAClB+F,gBAAE,EAAG,KAAK/F,MAAL,CAAYhB,IAAZ,CAAiB+G,EADJ;AAElBjH,oBAAM,EAAE,GAFU;AAGlBwN,uBAAS,EAAE,KAAK9O,YAAL,CAAkBqC;AAHX,aAApB;AAKA,iBAAKnD,iBAAL,CAAuBuS,2BAAvB,CAAmDjP,MAAnD,EAA2DpB,SAA3D,CACE,UAACC,IAAD,EAAe;AACb,kBAAGA,IAAI,CAACC,MAAL,IAAe,IAAlB,EAAuB;AACrB,uBAAI,CAACjC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBkN,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhN,0BAAQ,EAAE;AAAZ,iBAAnE;;AACA,uBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,eAHD,MAGK;AACH,uBAAI,CAACjP,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,0BAAQ,EAAE;AAAZ,iBAA5C;;AACA,uBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD;AACF,aATH,EAUE,UAACnM,GAAD,EAAS;AACP,qBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,wBAAQ,EAAE;AAAZ,eAA5D;;AACA,qBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,aAbH;AAeD;;;qCACO;AAAA;;AACN,gBAAM9L,MAAM,GAAQ;AAClB+F,gBAAE,EAAG,KAAK/F,MAAL,CAAYhB,IAAZ,CAAiB+G,EADJ;AAElBjH,oBAAM,EAAE,GAFU;AAGlBwN,uBAAS,EAAE,KAAK9O,YAAL,CAAkBqC;AAHX,aAApB;AAKA,iBAAKnD,iBAAL,CAAuBuS,2BAAvB,CAAmDjP,MAAnD,EAA2DpB,SAA3D,CACE,UAACC,IAAD,EAAe;AACb,kBAAGA,IAAI,CAACC,MAAL,IAAe,IAAlB,EAAuB;AACrB,uBAAI,CAACjC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBkN,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhN,0BAAQ,EAAE;AAAZ,iBAAnE;;AACA,uBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,eAHD,MAGK;AACH,uBAAI,CAACjP,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,0BAAQ,EAAE;AAAZ,iBAA5C;;AACA,uBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD;AACF,aATH,EAUE,UAACnM,GAAD,EAAS;AACP,qBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,wBAAQ,EAAE;AAAZ,eAA5D;;AACA,qBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,aAbH;AAeD;;;uCACS;AAAA;;AACR,gBAAG,KAAKkD,UAAR,EAAmB;AACjB,kBAAMhP,MAAM,GAAO;AACjB+F,kBAAE,EAAE,KAAK/F,MAAL,CAAYhB,IAAZ,CAAiB+G,EADJ;AAEjBjH,sBAAM,EAAE,GAFS;AAGjBwN,yBAAS,EAAC,KAAK9O,YAAL,CAAkBqC;AAHX,eAAnB;AAKA,mBAAKnD,iBAAL,CAAuBuS,2BAAvB,CAAmDjP,MAAnD,EAA2DpB,SAA3D,CACE,UAACC,IAAD,EAAc;AACZ,oBAAGA,IAAI,CAACC,MAAL,IAAe,IAAlB,EAAuB;AACrB,yBAAI,CAACjC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBkN,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhN,4BAAQ,EAAE;AAAZ,mBAAnE;;AACA,yBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,iBAHD,MAGK;AACH,yBAAI,CAACjP,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAgC,SAAhC,EAA0C;AAAEC,4BAAQ,EAAC;AAAX,mBAA1C;;AACA,yBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD;AAEF,eAVH,EAUI,UAACnM,GAAD,EAAS;AACT,uBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAgD,SAAhD,EAA0D;AAAE/H,0BAAQ,EAAC;AAAX,iBAA1D;;AACA,uBAAI,CAACQ,SAAL,CAAe6L,KAAf;AACD,eAbH;AAeD;AAEF;;;uCAES;AAAA;;AACR,gBAAI9L,MAAM,GAAG,EAAb;AAGA,gBAAMC,SAAS,GAAG,KAAKtD,MAAL,CAAY4C,IAAZ,CAAiB,wGAAjB,EAAqC;AACrDW,mBAAK,EAAE,OAD8C;AAErDuN,oBAAM,EAAC,OAF8C;AAGrDzO,kBAAI,EAAEgB;AAH+C,aAArC,CAAlB;AAKAC,qBAAS,CAACK,WAAV,GAAwB1B,SAAxB,CAAkC,UAAA2B,MAAM,EAAI;AAC1C,kBAAGA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAImF,SAA/B,EAAyC;AACvC,uBAAI,CAACgD,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BlK,MAAM,CAAC,CAAD,CAAN,CAAU0I,GAAxC;;AACA,uBAAI,CAACP,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BlK,MAAM,CAAC,CAAD,CAAN,CAAU2I,GAAxC;AACD,eAHD,MAGK;AACH,uBAAI,CAACR,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACiD,IAAnC;;AACA,uBAAI,CAAChF,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACkD,KAAnC;;AACA,uBAAI,CAAC9Q,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBqO,qBAAnC,EAA0D,SAA1D,EAAqE;AAAEnO,0BAAQ,EAAE;AAAZ,iBAArE;AACD;AAEF,aAVD;AAWD;;;8CACgB;AAAA;;AACf,iBAAKyI,aAAL,CAAmB4B,iBAAnB,GAAuClL,SAAvC,CACE,UAACI,IAAD,EAAY;AACV,qBAAI,CAAC6O,cAAL,GAAsB7O,IAAtB;;AACA,kBAAG,OAAI,CAACoJ,UAAR,EAAmB;AACjB,oBAAMiC,QAAQ,GAAG,OAAI,CAACwD,cAAL,CAAoBvD,IAApB,CAAyB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACxE,EAAF,IAAQ,OAAI,CAAC/F,MAAL,CAAYhB,IAAZ,CAAiBgK,KAA7B;AAAA,iBAA1B,CAAjB;;AACA,uBAAI,CAACN,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;AACD;;AACD,qBAAI,CAACyD,4BAAL,GAAoC,OAAI,CAACpF,IAAL,CAAUiC,QAAV,CAAmB3B,KAAnB,CAAyB4B,YAAzB,CACnCC,IADmC,CAElC,iEAAU,EAAV,CAFkC,EAGlC,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHkC,EAIlC,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACiD,oBAAL,CAA0BjD,IAA1B,CAAH,GAAqC,OAAI,CAAC+C,cAAlD;AAAA,eAAR,CAJkC,CAApC;AAMD,aAbH,EAaI,UAAClO,GAAD,EAAO,CACR,CAdH;AAgBD;;;+CAC4BmL,I,EAAY;AACvC,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAKsP,cAAL,CAAoBxP,MAApB,CAA2B,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAjC,CAAP;AACD;;;+CACoB+M,I,EAAS;AAC5B,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;uDAC4B;AAAA;;AAC3B,gBAAIkD,SAAS,GAAG,KAAKtF,IAAL,CAAUvK,KAAV,CAAgBgL,YAAhC;AACA,iBAAKzM,iBAAL,CAAuBuR,2BAAvB,CAAmDD,SAAnD,EAA8DpP,SAA9D,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAACC,MAAL,IAAe,KAAnB,EAA0B;AACxB,uBAAI,CAAC0J,IAAL,GAAY,IAAZ;;AACA,oBAAI3J,IAAI,CAACG,IAAL,IAAa,IAAb,IAAqBH,IAAI,CAACG,IAAL,IAAa0G,SAAtC,EAAiD;AAC/C,yBAAI,CAACwI,WAAL,GAAmBrP,IAAI,CAACG,IAAL,CAAU,CAAV,CAAnB;;AACA,yBAAI,CAACnC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C,EAF+C,CAG/C;;AACD,iBAJD,MAIO;AACL,yBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AACF,eATD,MASO;AACL,uBAAI,CAACyO,WAAL,GAAmBrP,IAAI,CAACG,IAAL,CAAU,CAAV,CAAnB;AACA,uBAAI,CAACwJ,IAAL,GAAY,KAAZ;;AACA,uBAAI,CAACE,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuC,EAAvC;;AACA,uBAAI,CAAC5N,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,0BAAQ,EAAE;AAAZ,iBAA5C,EAJK,CAKL;;AACD;AACF,aAlBH,EAkBK,UAACE,GAAD,EAAS,CAEX,CApBH;AAsBD;;;;;;;yBA5dUmP,mB,EAAmB,2H,EAAA,uM,EAAA,wJ,EAAA,yI,EAAA,wJ,EAAA,mI,EAAA,wH,EAAA,sI,EAAA,gEA8BiC,wEA9BjC,C;AA8BgD,O;;;cA9BnEA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;oFAHnB,CAAC,wDAAD,C;AAAU,kB;AAAA,gB;AAAA,0+H;AAAA;AAAA;AC/BvB;;AAA6D;AAAA,qBAAS,IAAAX,gBAAA,EAAT;AAA2B,aAA3B;;AACQ;;AAAK;;AAE1E;;AAAoC;;AAAoB;;AAExD;;AACE;;AAEE;;AAGE;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AACE;;AAAkF;;AAAc;;AAClG;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;AAAA,qBAAU,IAAAC,0BAAA,EAAV;AAAsC,aAAtC;;AADA;;AAEA;;AAAuF;;AAAW;;AAClG;;AAEF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAC9E;;AACA;;AAEF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AACE;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAc;;AAC9F;;AACE;;AACJ;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;AAAA,qBAAS,IAAAA,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAA2E;;AAAK;;AAGlF;;AACA;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAkF;;AAAI;;AACtF;;AAEF;;AAEF;;AAEA;;AAEE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAkF;;AAAI;;AACtF;;AAEF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;AAAA,qBAAU,IAAAC,eAAA,EAAV;AAA2B,aAA3B;;AADF;;AAEA;;AAA8E;;AAAS;;AACvF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AAEA;;AACA;AAAA,qBAAkB,IAAAC,YAAA,qBAAlB;AAAmD,aAAnD;;AACE;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACvD;;AAA2E;;AAAa;;AACzF;;AACC;;AAEH;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAa;;AAC3F;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAa;;AAC7F;;AACA;;AAEF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAAW;;AAG3F;;AAEA;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAA8E;;AAAW;;AAG3F;;AACA;;AACE;;AACE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AACA;;AAAoC;;AACxC;;AAEF;;AAGA;;AACE;;AACA;;AACA;;AACA;;AAAkE;AAAA,qBAAS,IAAA5C,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAE5F;;AAEF;;AAEF;;AACF;;;;;;;;;;;;AAnMoC;;AAAA;;AAK1B;;AAAA;;AAWY;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;AAMqE;;AAAA;;AACjC;;AAAA;;AACf;;AAAA;;AAQnB;;AAAA;;AAUF;;AAAA;;AAMA;;AAAA;;AAcA;;AAAA;;AAYA;;AAAA;;AASA;;AAAA;;AAEA;;AAAA;;AAMuC;;AAAA;;AAEL;;AAAA;;AAEb;;AAAA;;AAQpB;;AAAA;;AAKuC;;AAAA;;AAEL;;AAAA;;AAEd;;AAAA;;AAQrB;;AAAA;;AASV;;AAAA;;AAC+C;;AAAA;;AAEhB;;AAAA;;AAQrB;;AAAA;;AAmBsD;;AAAA;;AAEhE;;AAAA;;AAOmE;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;qBDhKjE;;;;;;wEAIDgD,mB,EAAmB;gBAT/B,uDAS+B;iBATrB;AACT3K,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE,+DALH;AAMToK,qBAAS,EAAE,CAAC,wDAAD;AANF,W;AASqB,U;;;;;;;;;;;;;;;;;;;;oBA8B0B,oD;qBAAO,wE;;;;AAvBnC9B,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AE1CnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQeoC,6B;AAGX,+CAAoBC,IAApB,EAAuC;AAAA;;AAAnB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAAC,OAAA,aAAa,sEAAYC,QAAzB;AAE0C;;;;+CAErBrP,M,EAAM;AACvB,mBAAO,KAAKmP,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,4BAAsDpP,MAAtD,CAAP;AACH;;;+CAEoBA,M,EAAM;AACvB,mBAAO,KAAKmP,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,4BAAsDpP,MAAtD,CAAP;AACH,W,CACD;;;;yDAC4B;AACxB,mBAAO,KAAKmP,IAAL,CAAU3E,GAAV,WAAiB,KAAK4E,OAAtB,mCAAP;AACH,W,CACD;;;;4DACkCrJ,E,EAAE;AAChC,mBAAO,KAAKoJ,IAAL,CAAU3E,GAAV,WAAiB,KAAK4E,OAAtB,gDAAmErJ,EAAnE,EAAP;AACH,W,CACD;;;;sDAC4B/F,M,EAAM;AAC9B,mBAAO,KAAKmP,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,mCAA6DpP,MAA7D,CAAP;AACH,W,CACD;;;;8DACiC;AAC7B,mBAAO,KAAKmP,IAAL,CAAU3E,GAAV,WAAiB,KAAK4E,OAAtB,wCAAP;AACH,W,CACD;;;;iEACuCrJ,E,EAAE;AACrC,mBAAO,KAAKoJ,IAAL,CAAU3E,GAAV,WAAiB,KAAK4E,OAAtB,qDAAwErJ,EAAxE,EAAP;AACH;;;+CACoBA,E,EAAGkG,O,EAAO;AAC3B,mBAAO,KAAKkD,IAAL,qBAAoB,KAAKC,OAAzB,mCAAyDrJ,EAAzD,cAA+DkG,OAA/D,EAAP;AACH;;;sDAE2BsD,Y,EAAY;AACpC,mBAAO,KAAKJ,IAAL,CAAU3E,GAAV,WAAiB,KAAK4E,OAAtB,gDAAmEG,YAAnE,EAAP;AACH;;;;;;;yBAtCUL,6B,EAA6B,uH;AAAA,O;;;eAA7BA,6B;AAA6B,iBAA7BA,6BAA6B,K;AAAA,oBAH5B;;;;;wEAGDA,6B,EAA6B;gBAJ3C,wDAI2C;iBAJhC;AACRM,sBAAU,EAAE;AADJ,W;AAIgC,U;;;;;;;;;;;;;;;;;;;;;;ACR5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaQ;;AAAiE;;AAAyB;;;;;;AAU1F;;AAAiE;;AAA8B;;;;;;AAU/F;;AAA6D;;AAAqB;;;;;;AASrF;;AACC;;AACD;;;;;;AAFwE;;AACvE;;AAAA;;;;;;AAOD;;AAA6C;;AAAmB;;;;;;AAU7D;;AAAwD;;AAAqB;;;;;;AAO7E;;AAAwD;;AAAsB;;;;;;AAqC9E;;AAA4D;;AAC5D;;;;;;AACA;;AAA2D;;AAC3D;;;;;;AAUE;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAOF;;AAAyD;;AAAiB;;;;;;AAS1E;;AACE;;AACF;;;;;;AAF+D;;AAC7D;;AAAA;;;;;;AAOF;;AAA0D;;AAAkB;;;;;;AAa5E;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOF;;AAA4D;;AAAoB;;;;ADjJ1F,eAASzH,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAAC7J,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAE6J,OAAO,CAAC7J;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAaYsR,e;AAuBX,iCAAoB7S,EAApB,EAA4CuL,cAA5C,EAAsFzL,iBAAtF,EACUG,QADV,EACyCsI,MADzC,EACiEuK,QADjE,EAC4F/S,MAD5F,EAEUuL,aAFV,EAEsC;AAAA;;AAFlB,eAAAtL,EAAA,GAAAA,EAAA;AAAwB,eAAAuL,cAAA,GAAAA,cAAA;AAA0C,eAAAzL,iBAAA,GAAAA,iBAAA;AAC5E,eAAAG,QAAA,GAAAA,QAAA;AAA+B,eAAAsI,MAAA,GAAAA,MAAA;AAAwB,eAAAuK,QAAA,GAAAA,QAAA;AAA2B,eAAA/S,MAAA,GAAAA,MAAA;AAClF,eAAAuL,aAAA,GAAAA,aAAA;AAVV,eAAApJ,MAAA,GAAS,IAAT;AAMA,eAAA0J,IAAA,GAAgB,IAAhB;AAMC;;;;qCAEU;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKjL,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAK+K,IAAL,GAAY,KAAK9L,EAAL,CAAQ+L,KAAR,CAAc;AACxB9H,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW+H,QAAZ,CAAL,CADU;AAExBG,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CAFc;AAGxBI,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL,CAHiB;AAIxBK,iBAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CAJmB;AAKxBM,iBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWN,QAAhB,CALmB;AAMxBO,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CANU;AAOxBQ,0BAAY,EAAE,CAAC,EAAD,CAPU;AAQxBC,0BAAY,EAAE,CAAC,EAAD,CARU;AASxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWE,OAAX,CAAmB,oCAAnB,CAAtB,CAAL,CATe;AAUxBS,kBAAI,EAAE,CAAC,EAAD,EAAK,CAACxB,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAVkB;AAWxBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACzB,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAXiB;AAYxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC1B,2BAA2B,EAA5B,EAAgC,0DAAWa,QAA3C,CAAL,CAZe;AAaxBc,sBAAQ,EAAE,CAAC,EAAD,CAbc;AAcxBC,qBAAO,EAAE,CAAC,EAAD,CAde;AAexBC,mBAAK,EAAE,CAAC,EAAD,CAfiB;AAgBxB9K,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAhBZ,aAAd,CAAZ;AAmBA,iBAAKiL,aAAL;AACA,iBAAKC,WAAL;AACA,iBAAKF,iBAAL,GAvBW,CAwBX;AACD;;;0CAEe;AAAA;;AACd,iBAAK3B,cAAL,CAAoB4B,aAApB,GAAoCnL,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACuL,SAAL,GAAiBvL,IAAjB;AACA,qBAAI,CAAC6L,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aATH,EASK,UAACzK,GAAD,EAAS,CAEX,CAXH;AAaD;;;yCACcqL,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAK6L,SAAL,CAAe/L,MAAf,CAAsB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;wCACa;AAAA;;AACZ,iBAAKkK,cAAL,CAAoB6B,WAApB,GAAkCpL,SAAlC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACwM,MAAL,GAAcxM,IAAd;AACA,qBAAI,CAACyM,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aATH,EASK,UAAC1L,GAAD,EAAS,CAEX,CAXH;AAaD;;;uCACYqL,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAK8M,MAAL,CAAYhN,MAAZ,CAAmB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;uCAEY;AAAA;;AACX,iBAAKkK,cAAL,CAAoBwH,YAApB,GAAmC/Q,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAAC6M,MAAL,GAAc7M,IAAd;AACA,qBAAI,CAAC+M,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aATH,EASK,UAAC/L,GAAD,EAAS,CAEX,CAXH;AAaD;;;sCACWqL,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAKmN,MAAL,CAAYrN,MAAZ,CAAmB,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;4CAEiB;AAAA;;AAChB,iBAAK8O,WAAL,GAAmB,KAAKrE,IAAL,CAAUvK,KAAV,CAAgBmL,OAAnC;AACA,iBAAKnB,cAAL,CAAoB6E,oBAApB,CAAyC,KAAKD,WAA9C,EAA2DnO,SAA3D,CACE,UAACI,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAI0G,SAAR,IAAqB1G,IAAI,IAAI,IAA7B,IAAqCA,IAAI,CAACC,MAAL,GAAc,CAAvD,EAA0D;AACxD,uBAAI,CAACkL,QAAL,GAAgBnL,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAAxB;;AACA,uBAAI,CAAChC,cAAL,CAAoB8E,iBAApB,CAAsC,OAAI,CAAC9C,QAA3C,EAAqDvL,SAArD,CACE,UAACsO,WAAD,EAAsB;AACpB,yBAAI,CAAC9C,SAAL,GAAiB8C,WAAjB;;AACA,sBAAM7C,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACxE,EAAF,IAAQ/G,IAAI,CAAC,CAAD,CAAJ,CAAQiL,UAApB;AAAA,mBAArB,CAAjB;;AACA,yBAAI,CAACvB,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;;AAEA,yBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,2BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,mBAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,2BAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,mBAAR,CAJyB,CAA7B;AAMA,yBAAI,CAACH,UAAL,GAAkBjL,IAAI,CAAC,CAAD,CAAJ,CAAQiL,UAA1B;;AACA,yBAAI,CAAC9B,cAAL,CAAoBiD,iBAApB,CAAsC,OAAI,CAACnB,UAA3C,EAAuDrL,SAAvD,CACE,UAACuO,SAAD,EAAoB;AAClB,2BAAI,CAAC9B,MAAL,GAAc8B,SAAd;;AACA,wBAAM9C,QAAQ,GAAG,OAAI,CAACgB,MAAL,CAAYf,IAAZ,CAAiB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACxE,EAAF,IAAQ/G,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAApB;AAAA,qBAAlB,CAAjB;;AACA,2BAAI,CAACzB,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCJ,QAAhC;;AAEA,2BAAI,CAACiB,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,qBAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,qBAAR,CAJuB,CAA3B;AAOD,mBAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;;AAiBA,yBAAI,CAACwK,QAAL,GAAgBnL,IAAI,CAAC,CAAD,CAAJ,CAAQmL,QAAxB;;AACA,yBAAI,CAAChC,cAAL,CAAoBsD,cAApB,CAAmC,OAAI,CAACtB,QAAxC,EAAkDvL,SAAlD,CACE,UAACwO,QAAD,EAAmB;AACjB,2BAAI,CAAC1B,MAAL,GAAc0B,QAAd,CADiB,CAEjB;AACA;;AACA,2BAAI,CAACxB,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,qBAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,qBAAR,CAJsB,CAA1B;AAOD,mBAZH,EAYK,UAAC/L,GAAD,EAAS,CAEX,CAdH;AAgBD,iBA/CH,EA+CK,UAACA,GAAD,EAAS,CAEX,CAjDH;AAmDD,eArDD,MAqDO,CAEN;AACF,aA1DH,EA0DK,UAACA,GAAD,EAAS,CAEX,CA5DH;AA8DD;;;0CACe3B,K,EAAO;AACrB,iBAAKoM,SAAL,GAAiB,EAAjB;AACA,iBAAKL,aAAL;AACA,iBAAKsD,kBAAL,CAAwBrP,KAAxB,EAHqB,CAIrB;;AACA,iBAAK0K,IAAL,CAAU8B,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK/B,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CAEkBjB,K,EAAO;AAAA;;AACxB,iBAAKW,QAAL,GAAgBX,KAAK,CAACzD,EAAtB;AACA,iBAAKoC,cAAL,CAAoBiD,iBAApB,CAAsC,KAAKjB,QAA3C,EAAqDvL,SAArD,CACE,UAACuO,SAAD,EAAoB;AAClB;AACA,qBAAI,CAAC9B,MAAL,GAAc8B,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAAC7B,mBAAL,GAA2B,OAAI,CAAC5C,IAAL,CAAUiC,QAAV,CAAmBnB,KAAnB,CAAyBoB,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACS,YAAL,CAAkBT,IAAlB,CAAH,GAA6B,OAAI,CAACO,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAAC1L,GAAD,EAAS,CAEX,CAfH;AAiBD;;;qCAEU;AAAA;;AACT,gBAAI,KAAK+I,IAAL,CAAUqD,KAAd,EAAqB;AACnB,kBAAIC,UAAU,GAAG,KAAKtD,IAAL,CAAUvK,KAA3B;AAEA,kBAAI6B,MAAM,GAAG;AACX6I,0BAAU,EAAE,KAAKqF,WAAL,IAAoBxI,SAApB,GAAgC,CAAhC,GAAoC,KAAKwI,WAAL,CAAiBrF,UADtD;AAEXoD,uBAAO,EAAE,KAAKzO,YAAL,CAAkBqC,MAFhB;AAGXgB,4BAAY,EAAEmL,UAAU,CAACnL,YAHd;AAIXkI,wBAAQ,EAAEiD,UAAU,CAACjD,QAJV;AAKXC,qBAAK,EAAEgD,UAAU,CAAChD,KAAX,CAAiBjD,EALb;AAMXkD,mBAAG,EAAE+C,UAAU,CAAC/C,GANL;AAOXC,mBAAG,EAAE8C,UAAU,CAAC9C,GAPL;AAQXtI,iCAAiB,EAAEoL,UAAU,CAAC7C,YARnB;AASX+C,wBAAQ,EAAEF,UAAU,CAAC5C,YATV;AAUX+C,wBAAQ,EAAEH,UAAU,CAAC3C,YAVV;AAWX+C,mBAAG,EAAEJ,UAAU,CAAC1C,OAXL;AAYXI,wBAAQ,EAAEsC,UAAU,CAACtC,QAZV;AAaXiC,uBAAO,EAAEK,UAAU,CAACzC,IAAX,CAAgBxD,EAbd;AAcXoE,wBAAQ,EAAE6B,UAAU,CAACxC,KAAX,CAAiBzD,EAdhB;AAeXkE,0BAAU,EAAE+B,UAAU,CAACvC,OAAX,CAAmB1D,EAfpB;AAgBX4D,uBAAO,EAAEqC,UAAU,CAACrC,OAhBT;AAiBX0C,yBAAS,EAAEL,UAAU,CAACpC,KAjBX;AAkBX9K,sBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B,GAlBzB;AAmBXyN,0BAAU,EAAE,KAAK/O,YAAL,CAAkBqC;AAnBnB,eAAb;AAqBA,mBAAKnD,iBAAL,CAAuBgQ,oBAAvB,CAA4C1M,MAA5C,EAAoDpB,SAApD,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAACC,MAAL,IAAe,IAAnB,EAAyB;AACvB,yBAAI,CAACjC,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBqQ,cAAnC,EAAmD,SAAnD,EAA8D;AAAEnQ,4BAAQ,EAAE;AAAZ,mBAA9D;;AACA,yBAAI,CAAC0F,MAAL,CAAYoB,QAAZ,CAAqB,CAAC,uEAAD,CAArB;AACD,iBAHD,MAGO;AACL,yBAAI,CAAC1J,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AACF,eARH,EASE,UAACE,GAAD,EAAS;AACP,uBAAI,CAAC9C,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBiI,YAAnC,EAAiD,SAAjD,EAA4D;AAAE/H,0BAAQ,EAAE;AAAZ,iBAA5D;AACD,eAXH;AAaD,aArCD,MAsCK;AACH,qBADG,CAEH;AACD;AAGF;;;0CAEeiJ,I,EAAiB;AAC/B,mBAAOA,IAAI,CAAC8B,GAAL,CAAS,OAAT,EAAkBoC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHlE,IAAI,CAAC8B,GAAL,CAAS,OAAT,EAAkBoC,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;4CAEiBU,O,EAAS;AAAA;;AACzB,iBAAKnD,QAAL,GAAgBmD,OAAO,CAACvH,EAAxB;AACA,iBAAKoC,cAAL,CAAoBsD,cAApB,CAAmC,KAAKtB,QAAxC,EAAkDvL,SAAlD,CACE,UAAC2O,UAAD,EAAqB;AACnB;AACA,qBAAI,CAAC7B,MAAL,GAAc6B,UAAd,CAFmB,CAGnB;AACA;;AAEA,qBAAI,CAAC3B,kBAAL,GAA0B,OAAI,CAAClD,IAAL,CAAUiC,QAAV,CAAmBpB,IAAnB,CAAwBqB,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACY,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAdH,EAcK,UAAC/L,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;4CACiB2N,O,EAAS;AAAA;;AACzB,iBAAKnD,QAAL,GAAgBmD,OAAO,CAACvH,EAAxB;AACA,iBAAKoC,cAAL,CAAoB8E,iBAApB,CAAsC,KAAK9C,QAA3C,EAAqDvL,SAArD,CACE,UAACsO,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC9C,SAAL,GAAiB8C,WAAjB;;AACA,kBAAM7C,QAAQ,GAAG,OAAI,CAACD,SAAL,CAAeE,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACxE,EAAF,IAAQmH,WAAW,CAAC,CAAD,CAAX,CAAenH,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAAC2C,IAAL,CAAU8B,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCJ,QAAlC;;AAEA,qBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAChC,IAAL,CAAUiC,QAAV,CAAmBlB,OAAnB,CAA2BmB,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACV,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACzK,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACa3B,K,EAAO;AACnB,iBAAKwP,iBAAL,CAAuBxP,KAAvB;AACA,iBAAKiP,iBAAL,CAAuBjP,KAAvB;AACA,iBAAK0K,IAAL,CAAU8B,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;uCACYzM,K,EAAO,CAClB;AACD;;;uCAEYA,K,EAAO;AAClB,iBAAKc,MAAL,GAAcd,KAAK,CAAC6O,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAK/N,MAAxB;AACD;;;uCAEY;AAAA;;AACX,gBAAIkB,MAAM,GAAG,EAAb;AAGA,gBAAMC,SAAS,GAAG,KAAKtD,MAAL,CAAY4C,IAAZ,CAAiB,wGAAjB,EAAqC;AACrDW,mBAAK,EAAE,OAD8C;AAErDuN,oBAAM,EAAE,OAF6C;AAGrDzO,kBAAI,EAAEgB;AAH+C,aAArC,CAAlB;AAMAC,qBAAS,CAACK,WAAV,GAAwB1B,SAAxB,CAAkC,UAAA2B,MAAM,EAAI;AAC1C,kBAAIA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAImF,SAAhC,EAA2C;AACzC,uBAAI,CAACgD,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BlK,MAAM,CAAC,CAAD,CAAN,CAAU0I,GAAxC;;AACA,uBAAI,CAACP,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BlK,MAAM,CAAC,CAAD,CAAN,CAAU2I,GAAxC;AACD,eAHD,MAGO;AACL,uBAAI,CAACR,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACiD,IAAnC;;AACA,uBAAI,CAAChF,IAAL,CAAU8B,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACkD,KAAnC;;AACA,uBAAI,CAAC9Q,QAAL,CAAc0C,IAAd,CAAmB,kFAAgBqO,qBAAnC,EAA0D,SAA1D,EAAqE;AAAEnO,0BAAQ,EAAE;AAAZ,iBAArE;AACD;AAEF,aAVD;AAWD;;;8CAEmB;AAAA;;AAClB,iBAAKyI,aAAL,CAAmB4B,iBAAnB,GAAuClL,SAAvC,CACE,UAACI,IAAD,EAAe;AACb,qBAAI,CAAC6O,cAAL,GAAsB7O,IAAtB;AACA,qBAAI,CAAC8O,4BAAL,GAAoC,OAAI,CAACpF,IAAL,CAAUiC,QAAV,CAAmB3B,KAAnB,CAAyB4B,YAAzB,CACjCC,IADiC,CAEhC,iEAAU,EAAV,CAFgC,EAGhC,2DAAI,UAAA1M,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC2M,IAA9C;AAAA,eAAT,CAHgC,EAIhC,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACiD,oBAAL,CAA0BjD,IAA1B,CAAH,GAAqC,OAAI,CAAC+C,cAAlD;AAAA,eAAR,CAJgC,CAApC;AAMD,aATH,EASK,UAAClO,GAAD,EAAS,CACX,CAVH;AAYD;;;+CAC4BmL,I,EAAY;AACvC,gBAAM7M,WAAW,GAAG6M,IAAI,CAACvM,WAAL,EAApB;AACA,mBAAO,KAAKsP,cAAL,CAAoBxP,MAApB,CAA2B,UAAA4M,MAAM;AAAA,qBAAIA,MAAM,CAACH,IAAP,CAAYvM,WAAZ,GAA0B2M,QAA1B,CAAmCjN,WAAnC,CAAJ;AAAA,aAAjC,CAAP;AACD;;;+CACoB+M,I,EAAS;AAC5B,mBAAOA,IAAI,IAAIA,IAAI,CAACF,IAAb,GAAoBE,IAAI,CAACF,IAAzB,GAAgC,EAAvC;AACD;;;uDAE4B;AAAA;;AAC3B,gBAAIkD,SAAS,GAAG,KAAKtF,IAAL,CAAUvK,KAAV,CAAgBgL,YAAhC;AACA,iBAAKzM,iBAAL,CAAuBuR,2BAAvB,CAAmDD,SAAnD,EAA8DpP,SAA9D,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAACC,MAAL,IAAe,KAAnB,EAA0B;AACxB,uBAAI,CAAC0J,IAAL,GAAY,IAAZ;;AACA,oBAAI3J,IAAI,CAACG,IAAL,IAAa,IAAb,IAAqBH,IAAI,CAACG,IAAL,IAAa0G,SAAtC,EAAiD;AAC/C,yBAAI,CAACwI,WAAL,GAAmBrP,IAAI,CAACG,IAAL,CAAU,CAAV,CAAnB;;AACA,yBAAI,CAACnC,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C,EAF+C,CAG/C;;AACD,iBAJD,MAIO;AACL,yBAAI,CAAC5C,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AACF,eATD,MASO;AACL,uBAAI,CAACyO,WAAL,GAAmBrP,IAAI,CAACG,IAAL,CAAU,CAAV,CAAnB;AACA,uBAAI,CAACwJ,IAAL,GAAY,KAAZ;;AACA,uBAAI,CAACE,IAAL,CAAU8B,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuC,EAAvC;;AACA,uBAAI,CAAC5N,QAAL,CAAc0C,IAAd,CAAmBV,IAAI,CAACW,OAAxB,EAAiC,SAAjC,EAA4C;AAAEC,0BAAQ,EAAE;AAAZ,iBAA5C,EAJK,CAKL;;AACD;AACF,aAlBH,EAkBK,UAACE,GAAD,EAAS,CAEX,CApBH;AAuBD;;;;;;;yBArZU8P,e,EAAe,2H,EAAA,uJ,EAAA,uM,EAAA,wI,EAAA,wH,EAAA,yH,EAAA,oI,EAAA,yJ;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;;;;;;;;;;oFAJf,CAAC,wDAAD,C;AAAU,kB;AAAA,gB;AAAA,uuH;AAAA;AAAA;AClCvB;;AAEE;;AACgC;AAAA,qBAAU,IAAAI,QAAA,EAAV;AAAoB,aAApB,EAAqB,eAArB,EAAqB;AAAA,qBAAkBC,MAAM,CAACC,cAAP,EAAlB;AAAyC,aAA9D;;AAE9B;;AAEE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AACE;;AAAkF;;AAAc;;AAClG;;AACA;;AAEF;;AAEA;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;AAAA,qBAAU,IAAA3B,0BAAA,EAAV;AAAsC,aAAtC;;AADA;;AAEA;;AAC+C;;AAAW;;AAC1D;;AAGF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAC9E;;AACA;;AAGF;;AAEA;;AACF;;AAAW;;AAAK;;AAChB;;AACA;;AACC;;;;AAGD;;AACA;;AACC;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAc;;AAC7F;;AACC;;AACF;;AACC;;AAEA;;AAEE;;AACF;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AAClD;;AAEL;;AACA;;AACC;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;AAAA,qBAAS,IAAAA,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AAClD;;AAEL;;AAEG;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAA2E;;AAAK;;AAGlF;;AAEA;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAkF;;AAAI;;AAGxF;;AAEF;;AAEA;;AAEE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAkF;;AAAI;;AAGxF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACE;AAAA,qBAAU,IAAAC,eAAA,EAAV;AAA2B,aAA3B;;AADF;;AAEA;;AAA8E;;AAAS;;AACvF;;AAEA;;AAGF;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AAEA;;AACA;AAAA,qBAAkB,IAAAC,YAAA,qBAAlB;AAAmD,aAAnD;;AACE;;;;AAGF;;AACA;;AACH;;AAA2C;;AAAW;;AAClD;;AAA2E;;AAAa;;AACzF;;AACE;;AAEJ;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGF;;AACA;;AACH;;AAA2C;;AAAW;;AACjD;;AAA4E;;AAAa;;AAC3F;;AACE;;AAEJ;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAO;;AAClB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGF;;AACA;;AACH;;AAA2C;;AAAW;;AACjD;;AAA8E;;AAAa;;AAC7F;;AACE;;AAEJ;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAAW;;AAG3F;;AACA;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAA8E;;AAAW;;AAG3F;;AACA;;AACE;;AAA4E;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAE1E;;AAAoC;;AACxC;;AAEF;;AAEA;;AACE;;AAAuD;;AAAI;;AAC3D;;AACqF;;AAAM;;AAC7F;;AACF;;AACF;;;;;;;;;;;;AAjMQ;;AAAA;;AAWY;;AAAA;;AASZ;;AAAA;;AACY;;AAAA;;AAUA;;AAAA;;AAOiE;;AAAA;;AACjC;;AAAA;;AAChB;;AAAA;;AAQnB;;AAAA;;AAUG;;AAAA;;AAOA;;AAAA;;AAqCA;;AAAA;;AAEA;;AAAA;;AAOuC;;AAAA;;AAEL;;AAAA;;AAEb;;AAAA;;AAQnB;;AAAA;;AAKsC;;AAAA;;AAEL;;AAAA;;AAEd;;AAAA;;AAQnB;;AAAA;;AAUZ;;AAAA;;AAC+C;;AAAA;;AAEhB;;AAAA;;AAQnB;;AAAA;;AAmB2C;;AAAA;;AAEvD;;AAAA;;;;;;;;qBDvJI;;;;;;wEAKDe,e,EAAe;gBAV3B,uDAU2B;iBAVjB;AACTtL,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE,+DALH;AAMToK,qBAAS,EAAE,CAAC,wDAAD;AANF,W;AAUiB,U;;;;;;;;;;;;;;;;;;;AAcE9B,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE","file":"register-charger-request-register-charger-request-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\n\r\nexport class ApprovedChargerRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  charger_id: string;\r\n  charger_name: string;\r\n  charger_serial_no: string;\r\n  station_name: string;\r\n  provider: string;\r\n  model: string;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  image_url: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-approved-list',\r\n  templateUrl: './approved-list.component.html',\r\n  styleUrls: ['./approved-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class ApprovedListComponent implements OnInit {\r\n\r\n  filterEntity: ApprovedChargerRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'charger_name', 'charger_serial_no', 'station_name', 'city_name', 'state_name', 'status','action'];\r\n  head = [['UserName', 'Charger Name', 'Charger Serial No', 'Station Name', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<ApprovedChargerRequest>;\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  charNameSearch = false;\r\n  serialSearch = false;\r\n  stationSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  approvedCharReq: any;\r\n\r\n  constructor(private regCharReqService: RegisterChargerRequestService, public dialog: MatDialog, private fb: FormBuilder,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new ApprovedChargerRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getApprovedRejectCharReq();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getApprovedRejectCharReq() {\r\n    if (this.localStorage.role_name != \"END USER\") {\r\n      this.regCharReqService.getAllApproveRejectChargerRequest().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.approvedCharReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.approvedCharReq.length; i++) {\r\n                if (this.approvedCharReq[i].status == 'A') {\r\n                  this.approvedCharReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.approvedCharReq[i].statusString = 'Rejected';\r\n                }\r\n                if(this.approvedCharReq[i].user_name == null ){\r\n                  this.approvedCharReq[i].user_name = '';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.approvedCharReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    } else {\r\n      this.regCharReqService.getApproveRejectChargerRequestByUserId(this.localStorage.userId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.approvedCharReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.approvedCharReq.length; i++) {\r\n                if (this.approvedCharReq[i].status == 'A') {\r\n                  this.approvedCharReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.approvedCharReq[i].statusString = 'Rejected';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.approvedCharReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.regCharReqService.deleteChargerRequest(id, this.localStorage.userId).subscribe(\r\n  //         (resp: any) => {\r\n  //           if (resp.status == true) {\r\n  //             this.getApprovedRejectCharReq();\r\n  //             this.cdr.detectChanges();\r\n  //             this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n  //           } else {\r\n  //             this.snackBar.open(resp.message, 'Dismiss', { duration: 2000 });\r\n  //           }\r\n\r\n  //         }, (err) => {\r\n  //           this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getApprovedRejectCharReq();\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getApprovedRejectCharReq();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = '';\r\n    }\r\n    if (visibleOption == 'charNameSearch') {\r\n      this.charNameSearch = !this.charNameSearch;\r\n      this.filterEntity.charger_name = '';\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.charger_serial_no = '';\r\n    }\r\n    if (visibleOption == 'stationSearch') {\r\n      this.stationSearch = !this.stationSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = '';\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'UserName': evDealers.user_name, 'Charger Name': evDealers.charger_name, 'Charger Serial No': evDealers.charger_serial_no,\r\n        'Station Name': evDealers.station_name, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Approved/Reject Charger Request List');\r\n    XLSX.writeFile(workBook, 'Approved/Reject Charger Request List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.user_name, evDealers.charger_name, evDealers.charger_serial_no, evDealers.station_name, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Approved/Reject Charger Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Approved/Reject Charger Request List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">UserName<mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"UserName\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charger_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"charNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Name\" [(ngModel)]=\"filterEntity.charger_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charger_serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Serial No\" [(ngModel)]=\"filterEntity.charger_serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_serial_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"stationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Name \" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'moderateAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>  \r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterChargerRequestCrudComponent } from './register-charger-request-crud/register-charger-request-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './register-charger-request-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RegisterChargerRequestCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RegisterChargerRequestRoutingModule{}","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-register-charger-request-crud',\r\n  templateUrl: './register-charger-request-crud.component.html',\r\n  styleUrls: ['./register-charger-request-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class RegisterChargerRequestCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Charger Requests', link: 'listMyChargerRequests' },\r\n    // { label: 'Approve/Reject Requests', link: 'listMyPendingChargerRequests' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"customerManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"registerChargerRequest\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"myChargerRequests\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Charger Requests', link: 'listMyChargerRequests' });\r\n                  }\r\n                  if (z.id === \"myPendingChargerRequests\") {\r\n                    this.tempLinks.push({ label: 'Approve/Reject Requests', link: 'listMyPendingChargerRequests' });\r\n                  }\r\n                  if (z.id === \"addChargerToRegister\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/customerManagement/registerChargerRequest/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ApprovedListComponent } from '../approved-list/approved-list.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n     path : 'create', component : CreateComponent,canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listMyChargerRequests', component : ListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listMyPendingChargerRequests', component : ApprovedListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path: '', redirectTo: 'listMyChargerRequests', pathMatch: 'full' \r\n  },\r\n];\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\n\r\n\r\nexport class ChargerRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  charger_id: string;\r\n  charger_name: string;\r\n  charger_serial_no: string;\r\n  station_name: string;\r\n  provider: string;\r\n  model: string;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  image_url: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: ChargerRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'charger_name', 'charger_serial_no', 'station_name', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['UserName', 'Charger Name', 'Charger Serial No', 'Station Name', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<ChargerRequest>;\r\n\r\n  chargerReq: ChargerRequest[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  charNameSearch = false;\r\n  serialSearch = false;\r\n  stationSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n\r\n\r\n  constructor(private regCharReqService: RegisterChargerRequestService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new ChargerRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllModCharRequest();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllModCharRequest() {\r\n    if (this.localStorage.role_name != \"END USER\") {\r\n      this.regCharReqService.getAllModerateChargerRequest().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.chargerReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.chargerReq.length; i++) {\r\n                if (this.chargerReq[i].status == 'A') {\r\n                  this.chargerReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.chargerReq[i].statusString = 'Moderate';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.chargerReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 });\r\n            }\r\n            \r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    } else {\r\n      this.regCharReqService.getModerateChargerRequestByUserId(this.localStorage.userId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.chargerReq = resp.data;\r\n            if (resp.data.length > 0) {\r\n              for (var i = 0; i < this.chargerReq.length; i++) {\r\n                if (this.chargerReq[i].status == 'A') {\r\n                  this.chargerReq[i].statusString = 'Approved';\r\n                } else {\r\n                  this.chargerReq[i].statusString = 'Moderate';\r\n                }\r\n                if(this.chargerReq[i].user_name == null ){\r\n                  this.chargerReq[i].user_name = '';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.chargerReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 })\r\n            }\r\n\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.regCharReqService.deleteChargerRequest(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.getAllModCharRequest();\r\n              this.cdr.detectChanges();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModCharRequest();\r\n    });\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModCharRequest();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = '';\r\n    }\r\n    if (visibleOption == 'charNameSearch') {\r\n      this.charNameSearch = !this.charNameSearch;\r\n      this.filterEntity.charger_name = '';\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.charger_serial_no = '';\r\n    }\r\n    if (visibleOption == 'stationSearch') {\r\n      this.stationSearch = !this.stationSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = '';\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var charReq = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Username': charReq.user_name, 'Charger Name': charReq.charger_name, 'Charger Serial No': charReq.charger_serial_no,\r\n        'Station Name': charReq.station_name, 'City': charReq.city_name, 'State': charReq.state_name,\r\n        'Status': charReq.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Charger Request List');\r\n    XLSX.writeFile(workBook, 'Charger Request List.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var charReq = this.dataSource.filteredData[i];\r\n\r\n      var data = [charReq.user_name, charReq.charger_name, charReq.charger_serial_no, charReq.station_name, charReq.city_name,\r\n      charReq.state_name, charReq.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Charger Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('Charger Request List.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"UserName\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"charger_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"charNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Name\" [(ngModel)]=\"filterEntity.charger_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charger_serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Serial No\" [(ngModel)]=\"filterEntity.charger_serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_serial_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"stationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Name \" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Approved / Reject\" (click)=\"viewDialog('Action',element,'buttonAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Reject\" (click)=\"viewDialog('Reject',element,'rejectAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='End User' \">remove_moderator</mat-icon>&nbsp;&nbsp; -->\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" \r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RegisterChargerRequestRoutingModule } from './register-charger-request-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { RegisterChargerRequestCrudComponent } from './register-charger-request-crud/register-charger-request-crud.component';\r\nimport { ApprovedListComponent } from './approved-list/approved-list.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\n\r\nconst COMPONENTS = [RegisterChargerRequestCrudComponent, CreateComponent, ListComponent, ApprovedListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        RegisterChargerRequestRoutingModule,\r\n        FuseSharedModule,\r\n    ],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RegisterChargerRequestModule { }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog,MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  menuArray: any;\r\n  mLat: any;\r\n  mLong:any;\r\n  connectorTypes: any;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerData: any;\r\n  flag: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder, private regCharReqService :RegisterChargerRequestService,private masterService: MasterService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,public dialog : MatDialog,private router: Router,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      station_name: ['', [Validators.required, ]],\r\n      charger_id: ['', [Validators.required,Validators.pattern(/^[0-9]*$/) ]],\r\n      provider: ['', [Validators.required, ]],\r\n      model: ['', [Validators.required,]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      char_seri_no:['',Validators.required],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks:[''],\r\n      image:[''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n    this.getConnectorTypes();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id); \r\n    this.getAllCity(this.params.data.state_id); \r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c =>c.id == this.params.data.city_id );\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        charger_id: formValues.charger_id,\r\n        user_id: this.localStorage.userId, \r\n        station_name: formValues.station_name,\r\n        provider: formValues.provider,\r\n        model: formValues.model.id,\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        charger_serial_no: formValues.char_seri_no,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks:formValues.remarks,\r\n        image_url: formValues.image,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.regCharReqService.updateChargerRequest(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            } \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      } else {\r\n        this.regCharReqService.createChargerRequest(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }\r\n    }else{\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('station_name').setValue(params.data.station_name);\r\n    this.form.get('charger_id').setValue(params.data.charger_id);\r\n    this.form.get('provider').setValue(params.data.provider);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('char_seri_no').setValue(params.data.charger_serial_no);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.form.get('image').setValue(params.data.image_url);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        this.connectorTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.connectorTypes.find(c => c.id == this.params.data.model);\r\n          this.form.get('model').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsConnectorType = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  } \r\n  \r\n  checkMappedChargerSerialNo() {\r\n    let charSerNo = this.form.value.char_seri_no;\r\n    this.regCharReqService.checkChargerSeriolNoMapping(charSerNo).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == false) {\r\n          this.flag = true;\r\n          if (resp.data != null || resp.data != undefined) {\r\n            this.chargerData = resp.data[0];\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            //this.snackBar.open('', 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        } else {\r\n          this.chargerData = resp.data[0];\r\n          this.flag = false;\r\n          this.form.get('char_seri_no').setValue('');\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          //this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Station Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"station_name\" type=\"text\"  autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station name\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('station_name').invalid\">Please enter station name </mat-error>\r\n        </mat-form-field>\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Charger Seriol No</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"char_seri_no\"  autocomplete=\"off\" type=\"text\"\r\n          (change)=\"checkMappedChargerSerialNo()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger seriol no\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('char_seri_no').invalid\">Please enter charger seriol no\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Provider</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"provider\" type=\"text\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter provider\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('provider').hasError('required')\">Please enter provider</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('provider').hasError('pattern')\">Special character are not allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Model</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required  [matAutocomplete]=\"modelAuto\">\r\n          <mat-autocomplete #modelAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select model\">model_training</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('model').invalid\">Please select model</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Latitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lat\" required type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Longitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lng\" required type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Image</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"image\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter image\">image</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('image').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n           <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" type=\"text\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement disabled=\"true\">\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n  \r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isButtonAction: boolean = false;\r\n  isModerate: boolean = false;\r\n  menuArray: any;\r\n  mLat: any;\r\n  mLong:any;\r\n  connectorTypes: any;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerData: any;\r\n  flag: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder, private regCharReqService :RegisterChargerRequestService,private masterService: MasterService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,public dialog : MatDialog,private router: Router,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isButtonAction = this.params.buttonAction == 'buttonAction' ? true : false; //convert moderate to reject\r\n    this.isModerate = this.params.buttonAction == 'moderateAction' ? true : false; //convert publish to approved\r\n    this.form = this.fb.group({\r\n      station_name: ['', [Validators.required, ]],\r\n      charger_id: ['', [Validators.required,Validators.pattern(/^[0-9]*$/) ]],\r\n      provider: ['', [Validators.required, ]],\r\n      model: ['', [Validators.required,]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      char_seri_no:['',Validators.required],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks:[''],\r\n      image:[''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getConnectorTypes();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('station_name').setValue(params.data.station_name);\r\n    this.form.get('charger_id').setValue(params.data.charger_id);\r\n    this.form.get('provider').setValue(params.data.provider);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('char_seri_no').setValue(params.data.charger_serial_no);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.form.get('image').setValue(params.data.image_url);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n    if(this.isModerate){\r\n      this.status = params.data.status == 'A' ? true : (params.data.status == 'R' ? true : false);\r\n    }\r\n\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onApproved(){\r\n    const params: any = {\r\n      id : this.params.data.id,\r\n      status: \"A\",//this.params.data.status === \"Y\" ? \"M\" : \"N\",\r\n      modify_by :this.localStorage.userId\r\n    }\r\n    this.regCharReqService.approveRejectChargerRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if(resp.status == true){\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } \r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onReject(){\r\n    const params: any = {\r\n      id : this.params.data.id,\r\n      status: \"R\",//this.params.data.status === \"M\" ? \"R\" : \"N\",\r\n      modify_by :this.localStorage.userId\r\n    }\r\n    this.regCharReqService.approveRejectChargerRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if(resp.status == true){\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } \r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onModerate(){\r\n    if(this.isModerate){\r\n      const params:any = {\r\n        id: this.params.data.id,\r\n        status: \"M\",\r\n        modify_by:this.localStorage.userId\r\n      }\r\n      this.regCharReqService.approveRejectChargerRequest(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(resp.message,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n          \r\n        },(err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        this.connectorTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.connectorTypes.find(c => c.id == this.params.data.model);\r\n          this.form.get('model').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsConnectorType = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  checkMappedChargerSerialNo() {\r\n    let charSerNo = this.form.value.char_seri_no;\r\n    this.regCharReqService.checkChargerSeriolNoMapping(charSerNo).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == false) {\r\n          this.flag = true;\r\n          if (resp.data != null || resp.data != undefined) {\r\n            this.chargerData = resp.data[0];\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            //this.snackBar.open('', 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        } else {\r\n          this.chargerData = resp.data[0];\r\n          this.flag = false;\r\n          this.form.get('char_seri_no').setValue('');\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          //this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    );\r\n  }  \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Station Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"station_name\" type=\"text\"  autocomplete=\"off\" readonly>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station name\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('station_name').invalid\">Please enter station name </mat-error>\r\n        </mat-form-field>\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Charger Seriol No</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"char_seri_no\"  autocomplete=\"off\" type=\"text\"\r\n          (change)=\"checkMappedChargerSerialNo()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger seriol no\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('char_seri_no').invalid\">Please enter charger seriol no\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Provider</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"provider\" type=\"text\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter provider\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('provider').hasError('required')\">Please enter provider</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('provider').hasError('pattern')\">Special character are not allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Model</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required  [matAutocomplete]=\"modelAuto\">\r\n          <mat-autocomplete #modelAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select model\">model_training</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('model').invalid\">Please select model</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Latitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lat\" readonly type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Longitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lng\" readonly type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Image</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"image\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter image\">image</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('image').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n           <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" readonly>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" type=\"text\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      \r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isButtonAction\" (click)=\"onReject()\">Reject</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModerate\" (click)=\"onModerate()\">Moderate</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isButtonAction\" (click)=\"onApproved()\">Approved</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n        \r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\n  export class RegisterChargerRequestService {\r\n    apiUrl2 = `${environment.API_URL2}/charger` ;\r\n  \r\n    constructor(private http : HttpClient) { }\r\n\r\n    createChargerRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/createChargerRequest`,params);\r\n    }\r\n    \r\n    updateChargerRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/updateChargerRequest`,params);\r\n    }\r\n    //for admin get all moderate list\r\n    getAllModerateChargerRequest(){\r\n        return this.http.get(`${this.apiUrl2}/getAllModerateChargerRequest`);\r\n    }\r\n    // for end user get moderate list\r\n    getModerateChargerRequestByUserId(id){\r\n        return this.http.get(`${this.apiUrl2}/getModerateChargerRequestByUserId/${id}`);\r\n    }\r\n    //\r\n    approveRejectChargerRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/approveRejectChargerRequest`,params);\r\n    }\r\n    // for admin\r\n    getAllApproveRejectChargerRequest(){\r\n        return this.http.get(`${this.apiUrl2}/getAllApproveRejectChargerRequest`);\r\n    }\r\n    //for end user\r\n    getApproveRejectChargerRequestByUserId(id){\r\n        return this.http.get(`${this.apiUrl2}/getApproveRejectChargerRequestByUserId/${id}`);\r\n    }\r\n    deleteChargerRequest(id,user_id){\r\n        return this.http.delete(`${this.apiUrl2}/deleteChargerRequest/${id}/${user_id}`);\r\n    }\r\n\r\n    checkChargerSeriolNoMapping(charSeriolNo){\r\n        return this.http.get(`${this.apiUrl2}/checkChargerMappedToStationBySrNo/${charSeriolNo}`);\r\n    }\r\n\r\n\r\n  }","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  mLat: any;\r\n  mLong: any;\r\n  connectorTypes: any;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerData: any;\r\n  flag: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder, public countryService: CountriesService, private regCharReqService: RegisterChargerRequestService,\r\n    private snackBar: MatSnackBar, private router: Router, private datePipe: DatePipe, public dialog: MatDialog,\r\n    private masterService: MasterService,) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      station_name: ['', [Validators.required,]],\r\n      provider: ['', [Validators.required,]],\r\n      model: ['', [Validators.required,]],\r\n      lat: ['', [Validators.required,]],\r\n      lng: ['', Validators.required],\r\n      char_seri_no: ['', Validators.required],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      image: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    this.getConnectorTypes();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        charger_id: this.chargerData == undefined ? 0 : this.chargerData.charger_id,\r\n        user_id: this.localStorage.userId,\r\n        station_name: formValues.station_name,\r\n        provider: formValues.provider,\r\n        model: formValues.model.id,\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        charger_serial_no: formValues.char_seri_no,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks: formValues.remarks,\r\n        image_url: formValues.image,\r\n        status: this.status == true ? 'M' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n      this.regCharReqService.createChargerRequest(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.chargerRequest, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getLatLong() {\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height: '410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null || result != undefined) {\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      } else {\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getConnectorTypes() {\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data: any) => {\r\n        this.connectorTypes = data;\r\n        this.filteredOptionsConnectorType = this.form.controls.model.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  checkMappedChargerSerialNo() {\r\n    let charSerNo = this.form.value.char_seri_no;\r\n    this.regCharReqService.checkChargerSeriolNoMapping(charSerNo).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == false) {\r\n          this.flag = true;\r\n          if (resp.data != null || resp.data != undefined) {\r\n            this.chargerData = resp.data[0];\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            //this.snackBar.open('', 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        } else {\r\n          this.chargerData = resp.data[0];\r\n          this.flag = false;\r\n          this.form.get('char_seri_no').setValue('');\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          //this.router.navigate(['/customerManagement/registerChargerRequest/crud/listMyChargerRequests']);\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    );\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Station Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"station_name\" type=\"text\"  autocomplete=\"off\" required>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station name\">model_training</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('station_name').hasError('required')\">Please enter station name</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('station_name').invalid\">Please enter station name </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Charger Seriol No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"char_seri_no\"  autocomplete=\"off\" type=\"text\"\r\n        (change)=\"checkMappedChargerSerialNo()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger seriol no\" \r\n        [color]=\"flag  === true ? 'primary' : 'warn' \">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('char_seri_no').hasError('required')\">Please enter charger seriol no</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('char_seri_no').invalid\">Please enter charger seriol no\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Provider</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"provider\" type=\"text\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter provider\">account_circle\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('provider').hasError('required')\">Please enter provider</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('provider').invalid\">Please enter provider</mat-error> -->\r\n        <!-- <mat-error *ngIf=\"form.get('provider').hasError('pattern')\">Special character are not allowed</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Model</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required  [matAutocomplete]=\"modelAuto\">\r\n\t\t\t\t<mat-autocomplete #modelAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select model\">model_training</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('model').invalid\">Please select model</mat-error>\r\n\t\t\t</mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      \r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" required type=\"text\">\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter latitude</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required type=\"text\">\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter longitude</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Image</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"image\"  autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter image\">image</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('image').invalid\">Please enter remarks\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" >\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n          (change)=\"getStateCountry()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n        (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n         <!-- <mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error> -->\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"countryAuto\" required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Remarks</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" type=\"text\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n      <div fxFlex=\"25\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement disabled=\"true\" disabled=\"true\">\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n\r\n    </div>\r\n  \r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/customerManagement/registerChargerRequest/crud/listMyChargerRequests\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>"]}