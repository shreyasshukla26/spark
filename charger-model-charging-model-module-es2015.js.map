{"version":3,"sources":["./src/app/main/asset/charger-model/charging-model-routing.module.ts","./src/app/main/asset/charger-model/view-dialog/view-dialog.component.ts","./src/app/main/asset/charger-model/view-dialog/view-dialog.component.html","./src/app/main/asset/charger-model/create/create.component.ts","./src/app/main/asset/charger-model/create/create.component.html","./src/app/main/asset/charger-model/charging-model-crud/routes.ts","./src/app/main/asset/charger-model/charging-model.module.ts","./src/app/main/asset/charger-model/action-dialog/action-dialog.component.ts","./src/app/main/asset/charger-model/action-dialog/action-dialog.component.html","./src/app/main/asset/charger-model/charging-model-crud/charging-model-crud.component.ts","./src/app/main/asset/charger-model/charging-model-crud/charging-model-crud.component.html","./src/app/main/asset/charger-model/list/list.component.ts","./src/app/main/asset/charger-model/list/list.component.html"],"names":[],"mappings":"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","file":"charger-model-charging-model-module-es2015.js","sourcesContent":["// import {NgModule} from '@angular/core';\r\n// import { Routes, RouterModule } from '@angular/router';\r\n// import { CreateComponent } from './create/create.component';\r\n// import { EditComponent } from './edit/edit.component';\r\n// import { ListComponent } from './list/list.component';\r\n\r\n// const routes : Routes = [\r\n//     { path : 'create', component : CreateComponent},\r\n//     { path : 'edit/:id', component : EditComponent},\r\n//     { path : 'list', component : ListComponent},\r\n//     { path : '', redirectTo : 'list',pathMatch:'full'}\r\n// ]\r\n\r\n// @NgModule({\r\n//     imports : [RouterModule.forChild(routes)],\r\n//     exports : [RouterModule]\r\n// })\r\n\r\n// export class ChargingModelRoutingModule{}\r\n\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargingModelCrudComponent } from './charging-model-crud/charging-model-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './charging-model-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ChargingModelCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ChargingModelRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {  FormControl, FormArray } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface ChargingModel {\r\n  id ?: number;\r\n  client_id ?: number;\r\n  charger_type_id : number;\r\n  client_name ?: string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name ?: string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name ?: string;\r\n  battery_backup : string;\r\n  isDual:number;\r\n  code : string;\r\n  name : string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name ?: string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  connector_data : ChargingModelConnectorMap[];\r\n  status : string ;\r\n  created_date ?: string ;\r\n  created_by ?: number;\r\n  modify_date ?: string ;\r\n  modify_by ?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap{\r\n  id : number;\r\n  model_id : number;\r\n  connector_type_id : number;\r\n  io_type_id : number;\r\n  current_type_id : number;\r\n  voltage : number;\r\n  phase : number;\r\n  max_amp : number;\r\n  power : number;\r\n  frequency : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  \r\n  chargerTypes :any;\r\n  manufacturers:any;\r\n  chargerModelTypes:any;\r\n  communicationProtocols:any;\r\n  connectorTypes:any;\r\n  ioTypes:any;\r\n  currentTypes:any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  isDualCardReader:boolean = false;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"isDualToggleElement\") isDual: any;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  filteredOptionsCharType: Observable<any[]>;\r\n  filteredOptionsManufacturer: Observable<any[]>;\r\n  filteredOptionsCharModelType : Observable<any[]>;\r\n  filteredOptionsCommunicationProto: Observable<any[]>;\r\n  communicationModeData: string[] = ['LAN', 'SIM', 'WIFI'];\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerTypeService: ChargerTypeService, \r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<ViewDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private chargingModelService : ChargingModelService, \r\n     private masterService: MasterService,\r\n    private router : Router) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      chargerType: [{value: '', disabled: true}, [autocompleteObjectValidator(),Validators.required]],\r\n      manufacturer: [{value: '', disabled: true}, [autocompleteObjectValidator(),Validators.required]],\r\n      chargerModelType: [{value: '', disabled: true}, [autocompleteObjectValidator(),Validators.required]],\r\n      batteryBackup: [{value:false,disabled:true},  [Validators.required]],\r\n      isDualCardReader : this.isDualCardReader == true ? 1 : 0,\r\n      code: [{value: '', disabled: true}, [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      name: [{value: '', disabled: true}, [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [{value: '', disabled: true},[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      communicationProtocol: [{value: '', disabled: true}, [autocompleteObjectValidator(),Validators.required]],\r\n      communicationMode: [{value: '', disabled: true}, [Validators.required]],\r\n      cardReaderType: [{value: '', disabled: true}, [Validators.required]],\r\n      noOfConnectors: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n      connectorForm : this.fb.array([this.createConnectorFG()]) ,\r\n    });\r\n\r\n    this.getChargetTypes();\r\n    this.getManufacturers();\r\n    this.getChargerModelTypes();\r\n    this.getCommunicationProtocols();\r\n    this.getConnectorTypes();\r\n    this.getIOTypes();\r\n    this.getCurrentTypes();   \r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n   this.filteredOptions();\r\n  }\r\n\r\n  private createConnectorFG(): FormGroup {\r\n    return new FormGroup({\r\n      connectorType: new FormControl(''),\r\n      ioType: new FormControl(''),\r\n      currentType: new FormControl('',),\r\n      voltage: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      phase: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      maxAmp: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      power: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      frequency: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)])\r\n    });\r\n  }\r\n\r\n  public addConnectorFG() {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    connectorForm.push(this.createConnectorFG());\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  public removeConnectorFG(i: number) {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    if (connectorForm.length > 1) {\r\n      connectorForm.removeAt(i)\r\n    } else {\r\n      connectorForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  getChargetTypes(){\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerTypes = data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerTypes.find(c => c.id == this.params.data.charger_type_id);\r\n          this.form.get('chargerType').setValue(toSelect);\r\n         this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n            //tap(() => this.form.controls.chargerType.setValue(toSelect)),\r\n           //tap(() => this.form.get('chargerType').setValue({name:toSelect.name, id:toSelect.id})),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n         \r\n         );\r\n        }\r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getManufacturers(){\r\n    this.masterService.getManufacturers().subscribe(\r\n      (data:any)=>{\r\n        this.manufacturers = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n          this.form.get('manufacturer').setValue(toSelect);\r\n          this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n           // tap(() => this.form.controls.manufacturer.setValue(toSelect)),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n          );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getChargerModelTypes(){\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerModelTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerModelTypes.find(c => c.id == this.params.data.charger_model_type_id);\r\n         this.form.get('chargerModelType').setValue(toSelect);\r\n         this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n           //tap(() => this.form.controls.chargerModelType.setValue(toSelect)),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n         );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCommunicationProtocols(){\r\n    this.masterService.getCommunicationProtocols().subscribe(\r\n      (data:any)=>{\r\n        this.communicationProtocols = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.communicationProtocols.find(c => c.id == this.params.data.communication_protocol_id);\r\n          this.form.get('communicationProtocol').setValue(toSelect);\r\n          this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.communicationProtocol.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n        );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getIOTypes(){\r\n    this.masterService.getIOTypes().subscribe(\r\n      (data:any)=>{\r\n        this.ioTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCurrentTypes(){\r\n    this.masterService.getCurrentTypes().subscribe(\r\n      (data:any)=>{\r\n        this.currentTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let connectors=[] ;\r\n  \r\n      formValues.connectorForm.forEach(item => {\r\n        connectors.push({\r\n          connector_type_id : item.connectorType ,\r\n          io_type_id : item.ioType,\r\n          current_type_id : item.currentType,\r\n          voltage : item.voltage ,\r\n          phase : item.phase,\r\n          max_amp : item.maxAmp,\r\n          power : item.power,\r\n          frequency : item.frequency,\r\n          status : 'Y',\r\n          created_by : this.localStorage.userId \r\n        })\r\n      });\r\n  \r\n      \r\n      let params : ChargingModel = {\r\n        charger_type_id : formValues.chargerType.id,\r\n        manufacturer_id : formValues.manufacturer.id ,\r\n        charger_model_type_id : formValues.chargerModelType.id ,\r\n        battery_backup  : this.batteryBackup == true ? 'Y' : 'N',\r\n        isDual : this.isDualCardReader == true ? 1 : 0,\r\n        code : formValues.code ,\r\n        name : formValues.name ,\r\n        description : formValues.description ,\r\n        communication_protocol_id : formValues.communicationProtocol.id ,\r\n        communication_mode : formValues.communicationMode ,\r\n        card_reader_type : formValues.cardReaderType ,\r\n        no_of_connectors : formValues.connectorForm.length ,\r\n        connector_data : connectors,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n  \r\n      if (this.isEditMode){\r\n        params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n      } else{\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      \r\n  \r\n      if (this.isEditMode){\r\n        this.chargingModelService.update(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }else{\r\n        this.chargingModelService.create(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n        this.dialogRef.close(params);\r\n    }\r\n   \r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    var temp = new Array();\r\n    temp = this.params.data.communication_mode.split(\",\");\r\n\r\n    this.form.get('communicationMode').setValue(temp);\r\n    this.form.get('cardReaderType').setValue(params.data.card_reader_type);\r\n    this.form.get('noOfConnectors').setValue(params.data.no_of_connectors);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.batteryBackup = params.data.battery_backup == 'Y' ? true : false;\r\n    this.isDualCardReader = params.data.isDual == 1 ? true : false;\r\n\r\n    this.assignValuesFG(params.data.connector_data);\r\n  }\r\n\r\n  assignValuesFG(data){\r\n\r\n    let connector_data = [];\r\n\r\n    data.forEach(connector => {\r\n      this.addConnectorFG();\r\n      connector_data.push({ id : connector.id ,\r\n        model_id : connector.model_id ,\r\n        connectorType : connector.connector_type_id ,\r\n        ioType : connector.io_type_id ,\r\n        currentType : connector.current_type_id ,\r\n        voltage : connector.voltage ,\r\n        phase : connector.phase ,\r\n        maxAmp : connector.max_amp ,\r\n        power : connector.power ,\r\n        frequency : connector.frequency ,\r\n        status : connector.status ,\r\n        created_date : connector.created_date ,\r\n        created_by : connector.created_by ,\r\n        modify_date : connector.modify_date ,\r\n        modify_by : connector.modify_by })\r\n    });\r\n    \r\n   this.removeConnectorFG(data.length);\r\n\r\n   const connectorForm = this.form.get('connectorForm') as FormArray;\r\n\r\n   connectorForm.patchValue(connector_data);\r\n\r\n\r\n  }\r\n\r\n  clkBatteryBackup(event){\r\n    this.batteryBackup = event.checked;\r\n    this.ref.checked = this.batteryBackup;\r\n  }\r\n  clkRfidCardReader(event){\r\n    this.rfidCardReader = event.checked;\r\n    this.rfid.checked = this.rfidCardReader;\r\n  }\r\n  clkIsDualCardReader(event){\r\n    this.isDualCardReader = event.checked;\r\n    this.isDual.checked = this.isDualCardReader;\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  \r\n  filteredOptions(){\r\n    this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n    );\r\n    this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n     \r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n    );\r\n    this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n    );\r\n    this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n      );\r\n  }\r\n  displayCharType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayManfacturer(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharModelType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCommunicationProto(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }  \r\n  private _filterCharType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterManfacturer(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.manufacturers.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModelType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCommunicationProtocol(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.communicationProtocols.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Variants</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"chargerType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"manufacturer\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\" [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" readonly matInput formControlName=\"chargerModelType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"code\" maxlength=\"20\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"50\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"description\" maxlength=\"200\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"communicationProtocol\" required\r\n\t\t\t\t\t\tautocomplete=\"off\" [matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"\r\n\t\t\t\t\t\t[displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t\t<mat-select formControlName=\"communicationMode\" multiple>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">\r\n\t\t\t\t\t\t\t{{communication}}</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"cardReaderType\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cardReaderType').invalid\">Please enter card reader type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>No Of Connectors</mat-label>\r\n\t\t\t\t\t<input matInput numbersOnly readonly placeholder=\"\" formControlName=\"noOfConnectors\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter numbers of connectors\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"13\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle \r\n\t\t\t\t\t\tclass=\"example-margin sm-txt mt-10\" \r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t[checked]=\"batteryBackup\" \r\n\t\t\t\t\t\t[disabled]=\"'true'\" \r\n\t\t\t\t\t\t(change)=\"clkBatteryBackup($event)\" \r\n\t\t\t\t\t\t#toggleElement>\r\n\t\t\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">RFID Card Reader</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle \r\n\t\t\t\t\t\tclass=\"example-margin sm-txt mt-10\" \r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t[checked]=\"rfidCardReader\" \r\n\t\t\t\t\t\t[disabled]=\"'true'\"\r\n\t\t\t\t\t\t(change)=\"clkRfidCardReader($event)\" \r\n\t\t\t\t\t\t#rfidToggleElement>\r\n\t\t\t\t\t\t{{rfidCardReader ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Is Dual</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle \r\n\t\t\t\t\t\tclass=\"example-margin sm-txt mt-10\" \r\n\t\t\t\t\t\tcolor=\"primary\" \r\n\t\t\t\t\t\t[checked]=\"isDualCardReader\"\r\n\t\t\t\t\t\t[disabled]=\"'true'\"\r\n\t\t\t\t\t\t(change)=\"clkIsDualCardReader($event)\" \r\n\t\t\t\t\t\t#isDualToggleElement>\r\n\t\t\t\t\t\t<!-- {{isDualCardReader ? 1 : 0}} -->\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"13\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle \r\n\t\t\t\t\t\tclass=\"example-margin\" \r\n\t\t\t\t\t\tcolor=\"primary\" \r\n\t\t\t\t\t\t[checked]=\"status\"\r\n\t\t\t\t\t\t[disabled]=\"'true'\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" \r\n\t\t\t\t\t\t#activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<mat-card style=\"box-shadow: none!important;padding: 0;\">\r\n\t\t\t\t<div formArrayName=\"connectorForm\">\r\n\t\t\t\t\t<div fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\"\r\n\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"connectorType\" [disabled]=\"'true'\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"ioType\" [disabled]=\"'true'\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"currentType\" disabled >\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly formControlName=\"voltage\" autocomplete=\"off\" disabled >\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Phase</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"phase\" autocomplete=\"off\" disabled >\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Max Amp(A)</mat-label>\r\n\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\treadonly \r\n\t\t\t\t\t\t\t\t\tmatInput \r\n\t\t\t\t\t\t\t\t\tplaceholder=\"\" \r\n\t\t\t\t\t\t\t\t\tformControlName=\"maxAmp\" \r\n\t\t\t\t\t\t\t\t\tautocomplete=\"off\" \r\n\t\t\t\t\t\t\t\t\t[disabled]=\"'true'\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"power\" autocomplete=\"off\" [disabled]=\"'true'\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"frequency\" autocomplete=\"off\" [disabled]=\"'true'\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<!-- <div class=\"add-row\">\r\n              <mat-label class=\"sm-txt\">Add Row</mat-label>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n                (click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n              <mat-icon>add_circle</mat-icon>\r\n              </button>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n                (click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n              <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div> -->\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</mat-card>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport {\r\n    Validators,\r\n    FormBuilder,\r\n    FormGroup,\r\n    FormControl,\r\n    FormArray,\r\n    ValidatorFn,\r\n    AbstractControl,\r\n} from \"@angular/forms\";\r\nimport { MasterService } from \"app/shared/services/master/master.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ChargingModelService } from \"app/shared/services/charging-model/charging-model.service\";\r\nimport { PATTERNS } from \"app/shared/utils/validation-patterns\";\r\nimport { ChargerTypeService } from \"app/shared/services/charger-type/charger-type.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nexport interface ChargingModel {\r\n    id?: number;\r\n    client_id?: number;\r\n    charger_type_id: number;\r\n    client_name?: string;\r\n    manufacturer_id: number;\r\n    manufacturer_name?: string;\r\n    charger_model_type_id: number;\r\n    charger_model_type_name?: string;\r\n    battery_backup: string;\r\n    isDual: number;\r\n    code: string;\r\n    name: string;\r\n    description: string;\r\n    communication_protocol_id: number;\r\n    communication_protocol_name?: string;\r\n    communication_mode: string;\r\n    card_reader_type: string;\r\n    no_of_connectors: number;\r\n    connector_data: ChargingModelConnectorMap[];\r\n    status: string;\r\n    created_date?: string;\r\n    created_by?: number;\r\n    modify_date?: string;\r\n    modify_by?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap {\r\n    id: number;\r\n    model_id: number;\r\n    connector_type_id: number;\r\n    io_type_id: number;\r\n    current_type_id: number;\r\n    voltage: number;\r\n    phase: number;\r\n    max_amp: number;\r\n    power: number;\r\n    frequency: number;\r\n    status: string;\r\n    created_date: string;\r\n    created_by: number;\r\n    modify_date: string;\r\n    modify_by: number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === \"string\") {\r\n            return { invalidAutocompleteObject: { value: control.value } };\r\n        }\r\n        return null; /* valid option selected */\r\n    };\r\n}\r\n@Component({\r\n    selector: \"app-create\",\r\n    templateUrl: \"./create.component.html\",\r\n    styleUrls: [\"./create.component.scss\"],\r\n})\r\nexport class CreateComponent implements OnInit {\r\n    form: FormGroup;\r\n\r\n    chargerTypes: any;\r\n    manufacturers: any;\r\n    chargerModelTypes: any;\r\n    communicationProtocols: any;\r\n    connectorTypes: any;\r\n    ioTypes: any;\r\n    currentTypes: any;\r\n    localStorage: any;\r\n    batteryBackup = false;\r\n    rfidCardReader = false;\r\n    isDualCardReader: boolean = false;\r\n    status = false;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    @ViewChild(\"rfidToggleElement\") rfid: any;\r\n    @ViewChild(\"isDualToggleElement\") isDual: any;\r\n    @ViewChild(\"activeElement\") active: any;\r\n    filteredOptionsCharType: Observable<any[]>;\r\n    filteredOptionsManufacturer: Observable<any[]>;\r\n    filteredOptionsCharModelType: Observable<any[]>;\r\n    filteredOptionsCommunicationProto: Observable<any[]>;\r\n    filteredOptionsConnectorType: Observable<any[]>;\r\n    filteredOptionsIoType: Observable<any[]>;\r\n    filteredOptionsCurrentType: Observable<any[]>;\r\n    communicationModeData: string[] = [\"LAN\", \"SIM\", \"WIFI\"];\r\n    //messageConstant = MessageConstant;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private chargingModelService: ChargingModelService,\r\n        private chargerTypeService: ChargerTypeService,\r\n        private masterService: MasterService,\r\n        private snackBar: MatSnackBar,\r\n        private router: Router\r\n    ) {\r\n        this.batteryBackup = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        const fgroup = this.createConnectorFG();\r\n\r\n        this.form = this.fb.group({\r\n            chargerType: [\r\n                \"\",\r\n                [autocompleteObjectValidator(), Validators.required],\r\n            ],\r\n            manufacturer: [\r\n                \"\",\r\n                [autocompleteObjectValidator(), Validators.required],\r\n            ],\r\n            chargerModelType: [\r\n                \"\",\r\n                [autocompleteObjectValidator(), Validators.required],\r\n            ],\r\n            batteryBackup: [{ value: false }, [Validators.required]],\r\n            isDualCardReader: this.isDualCardReader == true ? 1 : 0,\r\n            code: [\"\", [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n            name: [\r\n                \"\",\r\n                [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)],\r\n            ],\r\n            description: [\"\", [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n            communicationProtocol: [\r\n                \"\",\r\n                [autocompleteObjectValidator(), Validators.required],\r\n            ],\r\n            communicationMode: [\r\n                \"\",\r\n                [autocompleteObjectValidator(), Validators.required],\r\n            ],\r\n            cardReaderType: [\"\"],\r\n            noOfConnectors: [\r\n                { value: \"\", disabled: true },\r\n                [\r\n                    Validators.required,\r\n                    Validators.pattern(PATTERNS.ONLY_NUMBERS),\r\n                ],\r\n            ],\r\n            connectorForm: this.fb.array([fgroup]),\r\n            status: this.status == true ? \"Y\" : \"N\",\r\n        });\r\n\r\n        this.getChargerTypes();\r\n        this.getManufacturers();\r\n        this.getChargerModelTypes();\r\n        this.getCommunicationProtocols();\r\n        this.getConnectorTypes(fgroup);\r\n        this.getIOTypes(fgroup);\r\n        this.getCurrentTypes(fgroup);\r\n        this.form\r\n            .get(\"noOfConnectors\")\r\n            .setValue(this.form.value.connectorForm.length);\r\n        this.filteredOptions();\r\n    }\r\n\r\n    private createConnectorFG(): FormGroup {\r\n        return new FormGroup({\r\n            connectorType: new FormControl(\"\"),\r\n            ioType: new FormControl(\"\"),\r\n            currentType: new FormControl(\"\"),\r\n            voltage: new FormControl(\"\", [\r\n                Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL),\r\n            ]),\r\n            phase: new FormControl(\"\", [\r\n                Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL),\r\n            ]),\r\n            maxAmp: new FormControl(\"\", [\r\n                Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL),\r\n            ]),\r\n            power: new FormControl(\"\", [\r\n                Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL),\r\n            ]),\r\n            frequency: new FormControl(\"\", [\r\n                Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL),\r\n            ]),\r\n        });\r\n    }\r\n\r\n    public addConnectorFG() {\r\n        const connectorForm = this.form.get(\"connectorForm\") as FormArray;\r\n        const fgroup = this.createConnectorFG();\r\n        connectorForm.push(fgroup);\r\n        this.filteredOptionsConnectorType =\r\n            fgroup.controls.connectorType.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.name\r\n                ),\r\n                map((name) =>\r\n                    name\r\n                        ? this._filterConnectorType(name)\r\n                        : this.connectorTypes.slice()\r\n                )\r\n            );\r\n        this.filteredOptionsIoType = fgroup.controls.ioType.valueChanges.pipe(\r\n            startWith(\"\"),\r\n            map((value) => (typeof value === \"string\" ? value : value.name)),\r\n            map((name) => (name ? this._filterIoType(name) : this.ioTypes))\r\n        );\r\n        this.filteredOptionsCurrentType =\r\n            fgroup.controls.currentType.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.name\r\n                ),\r\n                map((name) =>\r\n                    name ? this._filterCurrentType(name) : this.currentTypes\r\n                )\r\n            );\r\n\r\n        this.form\r\n            .get(\"noOfConnectors\")\r\n            .setValue(this.form.value.connectorForm.length);\r\n    }\r\n\r\n    public removeConnectorFG(i: number) {\r\n        const connectorForm = this.form.get(\"connectorForm\") as FormArray;\r\n        if (connectorForm.length > 1) {\r\n            connectorForm.removeAt(i);\r\n        } else {\r\n            connectorForm.reset();\r\n        }\r\n\r\n        this.form\r\n            .get(\"noOfConnectors\")\r\n            .setValue(this.form.value.connectorForm.length);\r\n    }\r\n\r\n    getChargerTypes() {\r\n        //;\r\n        this.chargerTypeService.getActiveChargerTypes().subscribe(\r\n            (resp: any) => {\r\n                //;\r\n                if (resp.status == true) {\r\n                    if (resp.data.length > 0) {\r\n                        this.chargerTypes = resp.data;\r\n                        this.filteredOptionsCharType =\r\n                            this.form.controls.chargerType.valueChanges.pipe(\r\n                                startWith(\"\"),\r\n                                map((value) =>\r\n                                    typeof value === \"string\"\r\n                                        ? value\r\n                                        : value.name\r\n                                ),\r\n                                map((name) =>\r\n                                    name\r\n                                        ? this._filterCharType(name)\r\n                                        : this.chargerTypes\r\n                                )\r\n                            );\r\n                    } else {\r\n                        this.snackBar.open(\r\n                            MessageConstant.NoRecordFoundMessage,\r\n                            \"Dismiss\",\r\n                            { duration: 2000 }\r\n                        );\r\n                    }\r\n                }\r\n            },\r\n            (err) => {\r\n                //;\r\n            }\r\n        );\r\n    }\r\n\r\n    getManufacturers() {\r\n        this.masterService.getManufacturers().subscribe(\r\n            (data: any) => {\r\n                this.manufacturers = data;\r\n                this.filteredOptionsManufacturer =\r\n                    this.form.controls.manufacturer.valueChanges.pipe(\r\n                        startWith(\"\"),\r\n                        map((value) =>\r\n                            typeof value === \"string\" ? value : value.name\r\n                        ),\r\n                        map((name) =>\r\n                            name\r\n                                ? this._filterManfacturer(name)\r\n                                : this.manufacturers\r\n                        )\r\n                    );\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    getChargerModelTypes() {\r\n        this.masterService.getChargerModelTypes().subscribe(\r\n            (data: any) => {\r\n                this.chargerModelTypes = data;\r\n                this.filteredOptionsCharModelType =\r\n                    this.form.controls.chargerModelType.valueChanges.pipe(\r\n                        startWith(\"\"),\r\n                        map((value) =>\r\n                            typeof value === \"string\" ? value : value.name\r\n                        ),\r\n                        map((name) =>\r\n                            name\r\n                                ? this._filterCharModelType(name)\r\n                                : this.chargerModelTypes\r\n                        )\r\n                    );\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    getCommunicationProtocols() {\r\n        this.masterService.getCommunicationProtocols().subscribe(\r\n            (data: any) => {\r\n                this.communicationProtocols = data;\r\n                this.filteredOptionsCommunicationProto =\r\n                    this.form.controls.communicationProtocol.valueChanges.pipe(\r\n                        startWith(\"\"),\r\n                        map((value) =>\r\n                            typeof value === \"string\" ? value : value.name\r\n                        ),\r\n                        map((name) =>\r\n                            name\r\n                                ? this._filterCommunicationProtocol(name)\r\n                                : this.communicationProtocols\r\n                        )\r\n                    );\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    getConnectorTypes(fgroup: FormGroup) {\r\n        this.masterService.getConnectorTypes().subscribe(\r\n            (data: any) => {\r\n                this.connectorTypes = data;\r\n                this.filteredOptionsConnectorType =\r\n                    fgroup.controls.connectorType.valueChanges.pipe(\r\n                        startWith(\"\"),\r\n                        map((value) =>\r\n                            typeof value === \"string\" ? value : value.name\r\n                        ),\r\n                        map((name) =>\r\n                            name\r\n                                ? this._filterConnectorType(name)\r\n                                : this.connectorTypes\r\n                        )\r\n                    );\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    getIOTypes(fgroup: FormGroup) {\r\n        this.masterService.getIOTypes().subscribe(\r\n            (data: any) => {\r\n                this.ioTypes = data;\r\n                this.filteredOptionsIoType =\r\n                    fgroup.controls.ioType.valueChanges.pipe(\r\n                        startWith(\"\"),\r\n                        map((value) =>\r\n                            typeof value === \"string\" ? value : value.name\r\n                        ),\r\n                        map((name) =>\r\n                            name ? this._filterIoType(name) : this.ioTypes\r\n                        )\r\n                    );\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    getCurrentTypes(fgroup: FormGroup) {\r\n        this.masterService.getCurrentTypes().subscribe(\r\n            (data: any) => {\r\n                this.currentTypes = data;\r\n                this.filteredOptionsCurrentType =\r\n                    fgroup.controls.currentType.valueChanges.pipe(\r\n                        startWith(\"\"),\r\n                        map((value) =>\r\n                            typeof value === \"string\" ? value : value.name\r\n                        ),\r\n                        map((name) =>\r\n                            name\r\n                                ? this._filterCurrentType(name)\r\n                                : this.currentTypes\r\n                        )\r\n                    );\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n            let connectors = [];\r\n\r\n            formValues.connectorForm.forEach((item) => {\r\n                connectors.push({\r\n                    connector_type_id: item.connectorType,\r\n                    io_type_id: item.ioType,\r\n                    current_type_id: item.currentType,\r\n                    voltage: item.voltage,\r\n                    phase: item.phase,\r\n                    max_amp: item.maxAmp,\r\n                    power: item.power,\r\n                    frequency: item.frequency,\r\n                    status: this.status == true ? \"Y\" : \"N\",\r\n                    created_by: this.localStorage.userId,\r\n                });\r\n            });\r\n\r\n            let params: ChargingModel = {\r\n                charger_type_id: formValues.chargerType.id,\r\n                manufacturer_id: formValues.manufacturer.id,\r\n                charger_model_type_id: formValues.chargerModelType.id,\r\n                battery_backup: this.batteryBackup == true ? \"Y\" : \"N\",\r\n                isDual: this.isDualCardReader == true ? 1 : 0,\r\n                code: formValues.code,\r\n                name: formValues.name,\r\n                description: formValues.description,\r\n                communication_protocol_id: formValues.communicationProtocol.id,\r\n                communication_mode: formValues.communicationMode,\r\n                card_reader_type: formValues.cardReaderType,\r\n                no_of_connectors: formValues.connectorForm.length,\r\n                connector_data: connectors,\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n                created_by: this.localStorage.userId,\r\n            };\r\n\r\n            this.chargingModelService.create(params).subscribe(\r\n                (resp: any) => {\r\n                    if (resp != null) {\r\n                        this.snackBar.open(\r\n                            MessageConstant.chargerCreateMessage,\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                        this.router.navigate([\r\n                            \"/assetManagement/chargingModel/crud/list\",\r\n                        ]);\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.snackBar.open(\r\n                        MessageConstant.errorMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 5000 }\r\n                    );\r\n                }\r\n            );\r\n        } else {\r\n            this.snackBar.open(MessageConstant.formInvalid, \"Dismiss\", {\r\n                duration: 5000,\r\n            });\r\n        }\r\n    }\r\n\r\n    abc() {\r\n        this.form;\r\n    }\r\n\r\n    clkBatteryBackup(event) {\r\n        this.batteryBackup = event.checked;\r\n        this.ref.checked = this.batteryBackup;\r\n    }\r\n\r\n    clkRfidCardReader(event) {\r\n        this.rfidCardReader = event.checked;\r\n        this.rfid.checked = this.rfidCardReader;\r\n    }\r\n\r\n    clkIsDualCardReader(event) {\r\n        this.isDualCardReader = event.checked;\r\n        this.isDual.checked = this.isDualCardReader;\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get(\"email\").hasError(\"required\")\r\n            ? \"You must enter a value\"\r\n            : form.get(\"email\").hasError(\"email\")\r\n            ? \"Not a valid email\"\r\n            : \"\";\r\n    }\r\n\r\n    filteredOptions() {\r\n        this.filteredOptionsCharType =\r\n            this.form.controls.chargerType.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.name\r\n                ),\r\n                map((name) =>\r\n                    name ? this._filterCharType(name) : this.chargerTypes\r\n                )\r\n            );\r\n        this.filteredOptionsManufacturer =\r\n            this.form.controls.manufacturer.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.name\r\n                ),\r\n                map((name) =>\r\n                    name ? this._filterManfacturer(name) : this.manufacturers\r\n                )\r\n            );\r\n        this.filteredOptionsCharModelType =\r\n            this.form.controls.chargerModelType.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.name\r\n                ),\r\n                map((name) =>\r\n                    name\r\n                        ? this._filterCharModelType(name)\r\n                        : this.chargerModelTypes\r\n                )\r\n            );\r\n        this.filteredOptionsCommunicationProto =\r\n            this.form.controls.communicationProtocol.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.name\r\n                ),\r\n                map((name) =>\r\n                    name\r\n                        ? this._filterCommunicationProtocol(name)\r\n                        : this.communicationProtocols\r\n                )\r\n            );\r\n    }\r\n\r\n    displayCharType(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    displayManfacturer(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    displayCharModelType(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    displayCommunicationProto(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    displayConnectorType(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    displayIoTypeAuto(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    displaycurrentType(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCharType(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.chargerTypes.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    private _filterManfacturer(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.manufacturers.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    private _filterCharModelType(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.chargerModelTypes.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    private _filterCommunicationProtocol(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.communicationProtocols.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    private _filterConnectorType(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.connectorTypes.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    private _filterIoType(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.ioTypes.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    private _filterCurrentType(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.currentTypes.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.active.checked = this.status;\r\n    }\r\n}\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" >\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"fxFlex=\"1 0 auto\" name=\"form\" \r\n\t(submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerType\" autocomplete=\"off\" required  [matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select charger model\">model_training</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"manufacturer\"  autocomplete=\"off\" required [matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t\r\n\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\"  [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please select manufacturer\">precision_manufacturing</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerModelType\" autocomplete=\"off\"  required  [matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t\r\n\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please select charger model type\">format_list_bulleted</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"200\"\r\n\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\"\r\n\t\t\t\t\trequired autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter name\">badge</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter description\">description</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"communicationProtocol\"  required autocomplete=\"off\"  [matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\r\n\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"  [displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select communication protocol\">import_contacts</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t\r\n\t\t\t\t<mat-select formControlName=\"communicationMode\" multiple required=\"true\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">{{communication}}</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t\t<mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter communication mode\">burst_mode</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cardReaderType\" maxlength=\"20\"\r\n\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>No Of Connectors</mat-label>\r\n\t\t\t\t<input matInput numbersOnly placeholder=\"\" formControlName=\"noOfConnectors\"\r\n\t\t\t\t\trequired (change)=\"abc()\" autocomplete=\"off\" >\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter no. of connectors\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter numbers of connectors\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div  fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"batteryBackup\" (change)=\"clkBatteryBackup($event)\" #toggleElement>\r\n\t\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n        \t\t<mat-label class=\"sm-txt mr-20\">RFID Card Reader</mat-label>\r\n        \t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"rfidCardReader\" (change)=\"clkRfidCardReader($event)\" #rfidToggleElement>\r\n          \t\t\t{{rfidCardReader ? 'Yes' : 'No'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n        \t\t<mat-label class=\"sm-txt mr-20\">Is Dual</mat-label>\r\n        \t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"isDualCardReader\" (change)=\"clkIsDualCardReader($event)\" #isDualToggleElement>\r\n          \t\t\t<!-- {{isDualCardReader ? 1 : 0}} -->\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n      \t\t<div fxFlex=\"12\" >\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n        \t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #activeElement>\r\n          \t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t\t<!-- <div  fxFlex=\"50\" class=\"pr-4\" style=\"margin-left: 8px;\">\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</div> -->\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<mat-card style=\"box-shadow: none!important;\">\r\n      <div formArrayName=\"connectorForm\">\r\n\t\t\t\t<div   fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\" [formGroupName]=\"i\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t</div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<mat-select  formControlName=\"connectorType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please enter connector type\">help</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select  formControlName=\"ioType\" >\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t<mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter I/O type\">help</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select  formControlName=\"currentType\" >\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter current type\">help</mat-icon>\r\n              </mat-form-field >\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput  formControlName=\"voltage\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter voltage \">help</mat-icon>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g. 00.000)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Phase</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"phase\"\r\n\t\t\t\t\t\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t\t\t <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter phase\">help</mat-icon>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.000)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Max Amp(A)</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"maxAmp\"\r\n\t\t\t\t\t\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t\t\t <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter max Amp.\">help</mat-icon>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g. 00.000)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t  <input matInput placeholder=\"\" formControlName=\"power\"\t autocomplete=\"off\">\r\n\t\t\t\t\t\t  <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter power\">help</mat-icon>\r\n\t\t\t\t\t  \t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.000)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t    \t<input matInput placeholder=\"\" formControlName=\"frequency\"  autocomplete=\"off\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter frequency\">help</mat-icon>\r\n\t\t\t\t\t\t    <mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g. 00.000)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"add-row\">\r\n\t\t\t\t\t\t<mat-label class=\"sm-txt\">Add Row</mat-label>\r\n\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n\t\t\t\t\t\t\t(click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n\t\t\t\t\t\t<mat-icon>add_circle</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n\t\t\t\t\t\t\t(click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n        </div>\r\n      </div>\r\n\t\t</mat-card>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\"routerLink=\"/assetManagement/chargingModel/crud/list\" >Cancel</button>\r\n\t\t</div>\r\n   </form>\r\n</div>\r\n\r\n                   \r\n\t\t\t\t\t","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard]},\r\n  { path : 'list', component : ListComponent, canActivate:[AuthGuard]},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","// import { NgModule } from '@angular/core'; \r\n// import { SharedModule } from '@shared/shared.module';\r\n// import { CreateComponent } from './create/create.component';\r\n// import { ListComponent } from './list/list.component';\r\n\r\n// const COMPONENTS =[CreateComponent,ListComponent];\r\n// const COMPONENTS_DYNAMIC =[];\r\n\r\n// @NgModule({\r\n//     imports:[SharedModule, ChargingModelRoutingModule],\r\n//     declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n//     entryComponents : [COMPONENTS_DYNAMIC]\r\n// })\r\n\r\n// export class ChargingModelModule{}\r\n\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ChargingModelRoutingModule } from './charging-model-routing.module';\r\nimport { ChargingModelCrudComponent } from './charging-model-crud/charging-model-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ ChargingModelCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ChargingModelRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargingModelModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { FormControl, FormArray } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface ChargingModel {\r\n  id?: number;\r\n  client_id?: number;\r\n  charger_type_id: number;\r\n  client_name?: string;\r\n  manufacturer_id: number;\r\n  manufacturer_name?: string;\r\n  charger_model_type_id: number;\r\n  charger_model_type_name?: string;\r\n  battery_backup: string;\r\n  isDual: number;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  communication_protocol_id: number;\r\n  communication_protocol_name?: string;\r\n  communication_mode: string;\r\n  card_reader_type: string;\r\n  no_of_connectors: number;\r\n  connector_data: ChargingModelConnectorMap[];\r\n  status: string;\r\n  created_date?: string;\r\n  created_by?: number;\r\n  modify_date?: string;\r\n  modify_by?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap {\r\n  id: number;\r\n  model_id: number;\r\n  connector_type_id: number;\r\n  io_type_id: number;\r\n  current_type_id: number;\r\n  voltage: number;\r\n  phase: number;\r\n  max_amp: number;\r\n  power: number;\r\n  frequency: number;\r\n  status: string;\r\n  created_date: string;\r\n  created_by: number;\r\n  modify_date: string;\r\n  modify_by: number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n\r\n  chargerTypes: any;\r\n  manufacturers: any;\r\n  chargerModelTypes: any;\r\n  communicationProtocols: any;\r\n  connectorTypes: any;\r\n  ioTypes: any;\r\n  currentTypes: any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  isDualCardReader: boolean = false;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"isDualToggleElement\") isDual: any;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  filteredOptionsCharType: Observable<any[]>;\r\n  filteredOptionsManufacturer: Observable<any[]>;\r\n  filteredOptionsCharModelType: Observable<any[]>;\r\n  filteredOptionsCommunicationProto: Observable<any[]>;\r\n  communicationModeData: string[] = ['LAN', 'SIM', 'WIFI'];\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerTypeService: ChargerTypeService,\r\n    private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    private chargingModelService: ChargingModelService,\r\n    private masterService: MasterService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      chargerType: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      manufacturer: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      chargerModelType: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      batteryBackup: [{ value: false }, [Validators.required]],\r\n      isDualCardReader: this.isDualCardReader == true ? 1 : 0,\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      communicationProtocol: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      communicationMode: ['', [Validators.required]],\r\n      cardReaderType: [''],\r\n      noOfConnectors: [{ value: '', disabled: true }, [Validators.required, Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n      connectorForm: this.fb.array([this.createConnectorFG()]),\r\n    });\r\n\r\n    this.getChargetTypes();\r\n    this.getManufacturers();\r\n    this.getChargerModelTypes();\r\n    this.getCommunicationProtocols();\r\n    this.getConnectorTypes();\r\n    this.getIOTypes();\r\n    this.getCurrentTypes();\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.filteredOptions();\r\n  }\r\n\r\n  private createConnectorFG(): FormGroup {\r\n    return new FormGroup({\r\n      connectorType: new FormControl(''),\r\n      ioType: new FormControl(''),\r\n      currentType: new FormControl('',),\r\n      voltage: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      phase: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      maxAmp: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      power: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      frequency: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)])\r\n    });\r\n  }\r\n\r\n  public addConnectorFG() {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    connectorForm.push(this.createConnectorFG());\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  public removeConnectorFG(i: number) {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    if (connectorForm.length > 1) {\r\n      connectorForm.removeAt(i)\r\n    } else {\r\n      connectorForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  getChargetTypes() {\r\n    this.chargerTypeService.getActiveChargerTypes().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          if (resp.data.length > 0) {\r\n            this.chargerTypes = resp.data;\r\n\r\n            if (this.isEditMode) {\r\n              const toSelect = this.chargerTypes.find(c => c.id == this.params.data.charger_type_id);\r\n              this.form.get('chargerType').setValue(toSelect);\r\n              this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  //tap(() => this.form.controls.chargerType.setValue(toSelect)),\r\n                  //tap(() => this.form.get('chargerType').setValue({name:toSelect.name, id:toSelect.id})),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n\r\n                );\r\n            }\r\n          } else {\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  getManufacturers() {\r\n    this.masterService.getManufacturers().subscribe(\r\n      (data: any) => {\r\n        this.manufacturers = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n          this.form.get('manufacturer').setValue(toSelect);\r\n          this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.manufacturer.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n            );\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getChargerModelTypes() {\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data: any) => {\r\n        this.chargerModelTypes = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargerModelTypes.find(c => c.id == this.params.data.charger_model_type_id);\r\n          this.form.get('chargerModelType').setValue(toSelect);\r\n          this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargerModelType.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n            );\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getCommunicationProtocols() {\r\n    this.masterService.getCommunicationProtocols().subscribe(\r\n      (data: any) => {\r\n        this.communicationProtocols = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.communicationProtocols.find(c => c.id == this.params.data.communication_protocol_id);\r\n          this.form.get('communicationProtocol').setValue(toSelect);\r\n          this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.communicationProtocol.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n            );\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  getConnectorTypes() {\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data: any) => {\r\n\r\n        this.connectorTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getIOTypes() {\r\n    this.masterService.getIOTypes().subscribe(\r\n      (data: any) => {\r\n        this.ioTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getCurrentTypes() {\r\n    this.masterService.getCurrentTypes().subscribe(\r\n      (data: any) => {\r\n        this.currentTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      let connectors = [];\r\n\r\n      formValues.connectorForm.forEach(item => {\r\n        connectors.push({\r\n          connector_type_id: item.connectorType,\r\n          io_type_id: item.ioType,\r\n          current_type_id: item.currentType,\r\n          voltage: item.voltage,\r\n          phase: item.phase,\r\n          max_amp: item.maxAmp,\r\n          power: item.power,\r\n          frequency: item.frequency,\r\n          status: 'Y',\r\n          created_by: this.localStorage.userId\r\n        })\r\n      });\r\n\r\n      let params: ChargingModel = {\r\n        charger_type_id: formValues.chargerType.id,\r\n        manufacturer_id: formValues.manufacturer.id,\r\n        charger_model_type_id: formValues.chargerModelType.id,\r\n        battery_backup: this.batteryBackup == true ? 'Y' : 'N',\r\n        isDual: this.isDualCardReader == true ? 1 : 0,\r\n        code: formValues.code,\r\n        name: formValues.name,\r\n        description: formValues.description,\r\n        communication_protocol_id: formValues.communicationProtocol.id,\r\n        communication_mode: formValues.communicationMode,\r\n        card_reader_type: formValues.cardReaderType,\r\n        no_of_connectors: formValues.connectorForm.length,\r\n        connector_data: connectors,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.chargingModelService.update(params).subscribe(\r\n          (data: any) => {\r\n\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.chargingModelService.create(params).subscribe(\r\n          (data: any) => {\r\n\r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    var temp = new Array();\r\n    temp = this.params.data.communication_mode.split(\",\");\r\n\r\n    this.form.get('communicationMode').setValue(temp);\r\n    this.form.get('cardReaderType').setValue(params.data.card_reader_type);\r\n    this.form.get('noOfConnectors').setValue(params.data.no_of_connectors);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.batteryBackup = params.data.battery_backup == 'Y' ? true : false;\r\n    this.isDualCardReader = params.data.isDual == 1 ? true : false;\r\n    this.assignValuesFG(params.data.connector_data);\r\n  }\r\n\r\n  assignValuesFG(data) {\r\n\r\n    let connector_data = [];\r\n\r\n    data.forEach(connector => {\r\n      this.addConnectorFG();\r\n      connector_data.push({\r\n        id: connector.id,\r\n        model_id: connector.model_id,\r\n        connectorType: connector.connector_type_id,\r\n        ioType: connector.io_type_id,\r\n        currentType: connector.current_type_id,\r\n        voltage: connector.voltage,\r\n        phase: connector.phase,\r\n        maxAmp: connector.max_amp,\r\n        power: connector.power,\r\n        frequency: connector.frequency,\r\n        status: connector.status,\r\n        created_date: connector.created_date,\r\n        created_by: connector.created_by,\r\n        modify_date: connector.modify_date,\r\n        modify_by: connector.modify_by\r\n      })\r\n    });\r\n\r\n    this.removeConnectorFG(data.length);\r\n\r\n    const connectorForm = this.form.get('connectorForm') as FormArray;\r\n\r\n    connectorForm.patchValue(connector_data);\r\n\r\n\r\n  }\r\n\r\n  clkBatteryBackup(event) {\r\n    this.batteryBackup = event.checked;\r\n    this.ref.checked = this.batteryBackup;\r\n  }\r\n  clkRfidCardReader(event) {\r\n    this.rfidCardReader = event.checked;\r\n    this.rfid.checked = this.rfidCardReader;\r\n  }\r\n  clkIsDualCardReader(event) {\r\n    this.isDualCardReader = event.checked;\r\n    this.isDual.checked = this.isDualCardReader;\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n  filteredOptions() {\r\n    this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n      );\r\n    this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n      );\r\n    this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n      );\r\n    this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n      );\r\n  }\r\n  displayCharType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayManfacturer(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharModelType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCommunicationProto(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterManfacturer(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.manufacturers.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModelType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCommunicationProtocol(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.communicationProtocols.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\"> Variants</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"center\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please select charger model\">model_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"manufacturer\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\" [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select manufacturer\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerModelType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger model type\">\r\n\t\t\t\t\t\t\tformat_list_bulleted</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">badge</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"communicationProtocol\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"\r\n\t\t\t\t\t\t[displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select communication protocol\">\r\n\t\t\t\t\t\t\timport_contacts</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t\t<mat-select formControlName=\"communicationMode\" multiple>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">\r\n\t\t\t\t\t\t\t{{communication}}</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter communication mode\">burst_mode\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cardReaderType\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter card reader type\">\r\n\t\t\t\t\t\tchrome_reader_mode</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cardReaderType').invalid\">Please enter card reader type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>No Of Connectors</mat-label>\r\n\t\t\t\t\t<input matInput numbersOnly placeholder=\"\" formControlName=\"noOfConnectors\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter no. of connectors\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter numbers of connectors\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"13\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"batteryBackup\"\r\n\t\t\t\t\t\t(change)=\"clkBatteryBackup($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">RFID Card Reader</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"rfidCardReader\"\r\n\t\t\t\t\t\t(change)=\"clkRfidCardReader($event)\" #rfidToggleElement>\r\n\t\t\t\t\t\t{{rfidCardReader ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Is Dual</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"isDualCardReader\"\r\n\t\t\t\t\t\t(change)=\"clkIsDualCardReader($event)\" #isDualToggleElement>\r\n\t\t\t\t\t\t<!-- {{isDualCardReader ? 1 : 0}} -->\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"13\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<mat-card style=\"box-shadow: none!important;padding: 0;\">\r\n\t\t\t\t<div formArrayName=\"connectorForm\">\r\n\t\t\t\t\t<div fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\"\r\n\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"connectorType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter connector type\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"ioType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter I/O type\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"currentType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter current type\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput formControlName=\"voltage\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter voltage \">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Phase</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"phase\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter phase\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Max Amp(A)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"maxAmp\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter max Amp.\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"power\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter power\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"frequency\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter frequency\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<div class=\"add-row\">\r\n\t\t\t\t\t\t\t\t<mat-label class=\"sm-txt\">Add Row</mat-label>\r\n\t\t\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\"\r\n\t\t\t\t\t\t\t\t\taria-label=\"Add\" (click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>add_circle</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\"\r\n\t\t\t\t\t\t\t\t\taria-label=\"Remove/clear\" (click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</mat-card>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charging-model-crud',\r\n  templateUrl: './charging-model-crud.component.html',\r\n  styleUrls: ['./charging-model-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargingModelCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Charger Variants', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"chargingModel\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"crud\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if (this.childData.children != undefined && this.childData.children != null) {\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"chargerVariants\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'Charger Variants', link: 'list' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/chargingModel/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport {Component, OnInit, ViewChild,ChangeDetectorRef} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport{ViewDialogComponent} from'../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nexport class ChargingModel {\r\n  id : number;\r\n  client_id : number;\r\n  client_name : string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name : string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name : string;\r\n  battery_backup : string;\r\n  code : string;\r\n  name : string;\r\n  charger_type_name:string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name : string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n  connector_data : string;\r\n  statusString:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: ChargingModel;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['code','name', 'charger_type_name','manufacturer_name','status','action'];\r\n  head = [['Code','Name','Charger Type', 'Manufacturer','Status']]\r\n  dataSource: MatTableDataSource<ChargingModel>;\r\n\r\n  charginModels : ChargingModel[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  dialogRef: any;\r\n  codeSearch = false;\r\n  nameSearch = false;\r\n  chargerTypeSearch = false;\r\n  manfactureSearch = false;\r\n  cModelTypeSearch = false;\r\n  batteryBackupSearch = false;\r\n  communicationSearch = false;\r\n  communicationModeSearch = false;\r\n  cardReaderSearch = false;\r\n  noConnectorSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private chargingModelService : ChargingModelService ,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getChargingModels();\r\n    this.filterEntity = new ChargingModel();\r\n    \r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getChargingModels(){\r\n    this.chargingModelService.getChargingModelsAll().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        if(data != null){\r\n          this.charginModels = data;\r\n          \r\n          for(var i=0; i < this.charginModels.length;i++){\r\n            if(this.charginModels[i].status == 'N'){\r\n              this.charginModels[i].statusString = 'Inactive';\r\n            }else{\r\n              this.charginModels[i].statusString = 'Active';\r\n            }\r\n            \r\n           \r\n          }\r\n          this.dataSource = new MatTableDataSource(this.charginModels);\r\n  \r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        }else{\r\n          return;\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n          this.chargingModelService.delete(id).subscribe(\r\n      (data:any)=>{\r\n        ;\r\n        this.getChargingModels();\r\n        this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n        this.cdr.detectChanges();\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n   \r\n  }\r\n\r\n  viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getChargingModels();\r\n    });\r\n  }\r\n  \r\n  openDialog(action,data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getChargingModels();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n      if(visibleOption == 'codeSearch'){\r\n        this.codeSearch = !this.codeSearch;\r\n        this.filterEntity.code = \"\";\r\n      }\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if(visibleOption == 'chargerTypeSearch'){\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.charger_type_name = \"\";\r\n    }\r\n    if(visibleOption == 'manfactureSearch'){\r\n      this.manfactureSearch = !this.manfactureSearch;\r\n      this.filterEntity.manufacturer_name = \"\";\r\n    }\r\n    if(visibleOption == 'cModelTypeSearch'){\r\n      this.cModelTypeSearch = !this.cModelTypeSearch;\r\n      this.filterEntity.charger_type_name = \"\";\r\n    }\r\n    if(visibleOption == 'batteryBackupSearch'){\r\n      this.batteryBackupSearch = !this.batteryBackupSearch;\r\n      this.filterEntity.battery_backup = \"\";\r\n    }\r\n    if(visibleOption == 'communicationSearch'){\r\n      this.communicationSearch = !this.communicationSearch;\r\n      this.filterEntity.communication_protocol_name = \"\";\r\n    }\r\n    if(visibleOption == 'communicationModeSearch'){\r\n      this.communicationModeSearch = !this.communicationModeSearch;\r\n      this.filterEntity.communication_mode = \"\";\r\n    }\r\n    if(visibleOption == 'cardReaderSearch'){\r\n      this.cardReaderSearch = !this.cardReaderSearch;\r\n      this.filterEntity.card_reader_type = \"\";\r\n    }\r\n    if(visibleOption == 'noConnectorSearch'){\r\n      this.noConnectorSearch = !this.noConnectorSearch;\r\n      this.filterEntity.no_of_connectors= null;\r\n    } \r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n   }\r\n   tableExport()\r\n   {\r\n     // const tab = document.getElementById('mapTable');\r\n     // const ws: XLSX.WorkSheet=XLSX.utils.table_to_sheet(tab);//converts a DOM TABLE element to a worksheet\r\n     // const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n     // XLSX.utils.book_append_sheet(wb, ws, 'Mapped Charger');\r\n   \r\n     // /* save to file */\r\n     // XLSX.writeFile(wb, 'Mapped Charger.xlsx');\r\n     //this.preloader.open();\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Code':chargerModel.code,'Variant Name':chargerModel.name,'Charger Type':chargerModel.charger_type_name,\r\n                  'Manufacturer': chargerModel.manufacturer_name,'Charger Model Type ':chargerModel.charger_model_type_name,\r\n                  'Battery Backup':chargerModel.battery_backup,'Communication Protocol':chargerModel.communication_protocol_name,\r\n                  'Communication Mode':chargerModel.communication_mode,'Card Reader Type':chargerModel.card_reader_type,\r\n                  'No Of Connectors':chargerModel.no_of_connectors,'Status':chargerModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n       XLSX.writeFile(workBook, 'Varients.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n     \r\n   \r\n   }\r\n   pdfExport(){\r\n    \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.code,chrger.code,chrger.name,chrger.charger_type_name,chrger.manufacturer_name,chrger.statusString,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Variants Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('Variants report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    \r\n    \r\n  \r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\"\r\n>\r\n<button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n    <mat-icon>sim_card_download</mat-icon> \r\n  </button>&nbsp;&nbsp;\r\n  <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n    <mat-icon>picture_as_pdf</mat-icon> \r\n  </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\"  class=\"page-layout simple fullwidth\"  style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\" >\r\n       \r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\"  [exampleEntity]=\"filterEntity\"\r\n            [filterType]=\"filterType\"  matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!codeSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Code &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"codeSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Code\" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!nameSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Variant Name &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Variant Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"charger_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!chargerTypeSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Charger Type &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('chargerTypeSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Type\" [(ngModel)]=\"filterEntity.charger_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('chargerTypeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"manufacturer_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!manfactureSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Manufacturer &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('manfactureSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field  *ngIf=\"manfactureSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Manufacturer\" [(ngModel)]=\"filterEntity.manufacturer_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('manfactureSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.manufacturer_name}} </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!statusSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"\r\n                        [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef  >\r\n                        <span class=\"custom_font_size\">Action</span> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"View\"\r\n                        (click)=\"viewDialog('VIEW',element)\"\r\n                        style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" \r\n                        (click)=\"openDialog('EDIT',element)\" \r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon  color=\"warn\"  matTooltip=\"Remove\"  \r\n                        (click)=\"delete(element.id)\" \r\n                        style=\"cursor:pointer\">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                \r\n                <!-- <tr mat-header-row  *matHeaderRowDef=\"['lable_code','lable_name', 'lable_charger_type','lable_manufacturer','lable_status','lable_Active']\"></tr> -->\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n               \r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"],"sourceRoot":"webpack:///"}