{"version":3,"sources":["webpack:///src/app/main/EV-space/EV-fleet/create/create.component.ts","webpack:///src/app/main/EV-space/EV-fleet/create/create.component.html","webpack:///src/app/main/EV-space/EV-fleet/action-dialog/action-dialog.component.ts","webpack:///src/app/main/EV-space/EV-fleet/action-dialog/action-dialog.component.html","webpack:///src/app/main/EV-space/EV-fleet/EV-fleet.module.ts","webpack:///src/app/main/EV-space/EV-fleet/list2Wheeler/list2Wheelers.component.ts","webpack:///src/app/main/EV-space/EV-fleet/list2Wheeler/list2Wheelers.component.html","webpack:///src/app/main/EV-space/EV-fleet/list/list.component.ts","webpack:///src/app/main/EV-space/EV-fleet/list/list.component.html","webpack:///src/app/main/EV-space/EV-fleet/view-dialog/view-dialog.component.ts","webpack:///src/app/main/EV-space/EV-fleet/view-dialog/view-dialog.component.html","webpack:///src/app/main/EV-space/EV-fleet/electric-cycle-manufactures/electric-cycle-manufactures.component.ts","webpack:///src/app/main/EV-space/EV-fleet/electric-cycle-manufactures/electric-cycle-manufactures.component.html","webpack:///src/app/main/EV-space/EV-fleet/EV-fleet-crud/routes.ts","webpack:///src/app/main/EV-space/EV-fleet/EV-fleet-crud/EV-fleet-crud.component.ts","webpack:///src/app/main/EV-space/EV-fleet/EV-fleet-crud/EV-fleet-crud.component.html","webpack:///src/app/main/EV-space/EV-fleet/electric-truck-manufactures/electric-truck-manufactures.component.ts","webpack:///src/app/main/EV-space/EV-fleet/electric-truck-manufactures/electric-truck-manufactures.component.html","webpack:///src/app/main/EV-space/EV-fleet/list4Wheelers/list4Wheelers.component.ts","webpack:///src/app/main/EV-space/EV-fleet/list4Wheelers/list4Wheelers.component.html","webpack:///src/app/main/EV-space/EV-fleet/electric-bus-manufactures/electric-bus-manufactures.component.ts","webpack:///src/app/main/EV-space/EV-fleet/electric-bus-manufactures/electric-bus-manufactures.component.html","webpack:///src/app/main/EV-space/EV-fleet/list3Wheeler/list3Wheelers.component.ts","webpack:///src/app/main/EV-space/EV-fleet/list3Wheeler/list3Wheelers.component.html","webpack:///src/app/shared/services/ev-space/ev-fleet.service.ts","webpack:///src/app/main/EV-space/EV-fleet/EV-fleet-routing.module.ts"],"names":["autocompleteObjectValidator","control","value","CreateComponent","fb","snackBar","evFleetService","masterService","router","govtSubsidyService","countryService","chargerTypeService","status","initialize","localStorage","JSON","parse","getItem","form","group","brand","required","vehicle","connector_type","charger_type","name","driver_range","image","getVehicle","getBrands","getConnectorTypes","getChargerTypes","getVehicleTypes","subscribe","resp","vehicles","filteredOptionsVehicle","controls","valueChanges","pipe","_filtervehiclesModels","err","item","filterValue","toLowerCase","filter","option","includes","data","brands","filteredOptionsBrand","_filterBrands","connectorTypes","filteredConnecterType","_filterConnectorType","chargersType","filteredChargerType","_filterChargerType","valid","formValues","params","brand_id","id","vehicle_type_id","connector_type_id","charger_type_id","image_url","created_by","userId","createEvFleet","open","evFleetCreate","duration","navigate","message","errorMessage","get","hasError","event","checked","ref","onSubmit","$event","preventDefault","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","ActionDialogComponent","dialogRef","isEditMode","menuArray","action","assignValues","toSelect","find","c","setValue","_filterVehicleModels","close","modify_by","updateEvFleet","recordUpdateMessage","closeActionPanel","onYesClick","COMPONENTS","COMPONENTS_DYNAMIC","EVFleetModule","imports","declarations","entryComponents","TwoWheelersManufactures","List2WheelersComponent","dialog","datepipe","displayedColumns","head","brandSearch","modelSearch","typeSearch","descSearch","roadSearch","statusSearch","dateConvertSearch","get2WheelerManufacture","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","getTwoWheelerVehicle","twoWheeler","i","length","dateConvert","transform","created_date","statusString","sort","NoRecordFoundMessage","width","autoFocus","panelClass","disableClose","afterClosed","result","buttonAction","visibleOption","ev","stopPropagation","vehicle_brand_name","vehicle_model_name","vehicle_type_name","description","exportedData","filteredData","fleet2Wheeler","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","providers","ModerateList","ListComponent","vehicleSearch","nameSearch","capcitySearch","getModrateList","getAllModerateVehicle","moderateList","confirmDialogRef","deleteEvFleet","deleteMessage","brand_name","vehicleType_name","moderateModel","ViewDialogComponent","isPublish","isModrate","publishEvFleet","moderateEvFleet","ElectricCycleManufactures","ElectricCycleManufacturesComponent","getEvCycleManufacture","getEvCycleVehicle","electricCycle","TABS_DEMO_ROUTES","path","canActivate","component","redirectTo","pathMatch","EVFleetCrudComponent","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","undefined","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","children","y","objectChildData","isDefaultRoutePermeted","z","label","link","ElectricTruckManufactures","ElectricTruckManufacturesComponent","getEvTruckManufacture","getEvTruckVehicle","electricTruck","FourWheelersManufactures","List4WheelersComponent","get4WheelerManufacture","getFourLMVWheelerVehicle","fourWheeler","fleet4Wheeler","ElectricBusManufactures","ElectricBusManufacturesComponent","getEvBusManufacture","getEvBusVehicle","electricBus","ThreeWheelersManufactures","List3WheelersComponent","getThreeWheelerVehicle","threeWheeler","EVFleetService","http","apiUrl2","API_URL2","login_id","post","providedIn","routes","EVFleetRoutingModule","forChild","exports"],"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","file":"EV-fleet-EV-fleet-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { GovtSubsidyService } from 'app/shared/services/ev-space/govt-subsidy/govt-subsidy.service';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionsVehicle: Observable<any[]>;\r\n  vehicles: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  brands: any;\r\n  filteredOptionsBrand: Observable<any[]>;\r\n  connectorTypes: any;\r\n  filteredConnecterType: Observable<any[]>;\r\n  chargersType: any;\r\n  filteredChargerType: Observable<any[]>;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private evFleetService: EVFleetService,private masterService: MasterService,\r\n    private router: Router, private govtSubsidyService: GovtSubsidyService, public countryService: CountriesService,\r\n    private chargerTypeService : ChargerTypeService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      brand: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      vehicle: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      connector_type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      charger_type: ['', [Validators.required,]],\r\n      name: [''],\r\n      driver_range: [''],\r\n      image: ['',],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n    this.getVehicle();\r\n    this.getBrands();\r\n    this. getConnectorTypes();\r\n    this.getChargerTypes();\r\n  }\r\n\r\n  getVehicle() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.govtSubsidyService.getVehicleTypes().subscribe(\r\n      (resp: any) => {\r\n        this.vehicles = resp;\r\n        //console.log(this.vehicles)\r\n        this.filteredOptionsVehicle = this.form.controls.vehicle.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filtervehiclesModels(name) : this.vehicles)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayVehicle(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filtervehiclesModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.vehicles.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getBrands() {\r\n    this.masterService.getBrands().subscribe(\r\n      (data: any) => {\r\n        this.brands = data;\r\n        //console.log(this.brands)\r\n        this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterBrands(name) : this.brands)\r\n          );\r\n      },\r\n      (err) => {\r\n      })\r\n  }\r\n  private _filterBrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayBrand(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n }\r\n\r\n getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (resp:any)=>{\r\n        this.connectorTypes = resp;\r\n        //console.log(this.connectorTypes)\r\n        this.filteredConnecterType = this.form.controls.connector_type.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n          );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getChargerTypes(){\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (resp:any)=>{\r\n        if(resp != null){\r\n          this.chargersType = resp;\r\n          //console.log(this.chargersType)\r\n          this.filteredChargerType = this.form.controls.charger_type.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterChargerType(name) : this.chargersType)\r\n          );\r\n        } \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  displayChargerType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterChargerType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargersType.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        brand_id: formValues.brand.id,\r\n        vehicle_type_id: formValues.vehicle.id,\r\n        connector_type_id: formValues.connector_type.id,\r\n        charger_type_id: formValues.charger_type.id,\r\n        name:formValues.name,\r\n        driver_range: formValues.driver_range == '' ? 0 : formValues.driver_range,\r\n        image_url: formValues.image,\r\n        status: this.status == true ? 'M' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      this.evFleetService.createEvFleet(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.evFleetCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/evSpace/evFleet/crud/listModerate']);\r\n          }\r\n          else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Brand</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"brand\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"brandAuto\" required>\r\n        <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrand\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsBrand | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Vehicle Type</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"vehicle\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"vehicleAuto\" required>\r\n        <mat-autocomplete #vehicleAuto=\"matAutocomplete\" [displayWith]=\"displayVehicle\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsVehicle | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('vehicle').invalid\">Please select vehicle type </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Connector Type</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"connector_type\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayConnectorType\">\r\n          <mat-option *ngFor=\"let option of filteredConnecterType | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector type\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('connector_type').invalid\">Please select connector type\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Charger Type</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"charger_type\" [matAutocomplete]=\"chargerAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #chargerAuto=\"matAutocomplete\" [displayWith]=\"displayChargerType\">\r\n          <mat-option *ngFor=\"let option of filteredChargerType | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger type\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('charger_type').invalid\">Please select charger type\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" type=\"text\" autocomplete=\"off\" >\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">help</mat-icon>\r\n      \r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Driver Range</mat-label>\r\n        <input matInput formControlName=\"driver_range\" type=\"number\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter driver range\">help</mat-icon>\r\n     \r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Image Url</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"image\" type=\"text\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"select image\">help</mat-icon>\r\n      </mat-form-field>\r\n\r\n      <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n        <mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/evSpace/evFleet/crud/listModerate\">Cancel</button>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { GovtSubsidyService } from 'app/shared/services/ev-space/govt-subsidy/govt-subsidy.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  filteredOptionsVehicle: Observable<any[]>;\r\n  vehicles: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  localStorage: any;\r\n  brands: any;\r\n  filteredOptionsBrand: Observable<any[]>;\r\n  connectorTypes: any;\r\n  filteredConnecterType: Observable<any[]>;\r\n  chargersType: any;\r\n  filteredChargerType: Observable<any[]>;\r\n  menuArray: any;\r\n  constructor(private fb: FormBuilder, private govtSubsidyService: GovtSubsidyService, private snackBar: MatSnackBar, private masterService: MasterService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    private chargerTypeService: ChargerTypeService,private evFleetService: EVFleetService,) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    //console.log( this.params)\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      brand: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      vehicle: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      connector_type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      charger_type: ['', [Validators.required,]],\r\n      name: [''],\r\n      driver_range: [''],\r\n      image: ['',],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getVehicle();\r\n    this.getBrands();\r\n    this.getConnectorTypes();\r\n    this.getChargerTypes();\r\n    \r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n  }\r\n\r\n  getVehicle() {\r\n    this.govtSubsidyService.getVehicleTypes().subscribe(\r\n      (resp: any) => {\r\n        this.vehicles = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.vehicles.find(c => c.id == this.params.data.vehicle_type_id);\r\n          this.form.get('vehicle').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsVehicle = this.form.controls.vehicle.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterVehicleModels(name) : this.vehicles)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayVehicle(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterVehicleModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.vehicles.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getBrands() {\r\n    this.masterService.getBrands().subscribe(\r\n      (data: any) => {\r\n        this.brands = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.brands.find(c => c.id == this.params.data.brand_id);\r\n          this.form.get('brand').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterBrands(name) : this.brands)\r\n          );\r\n      },\r\n      (err) => {\r\n      })\r\n  }\r\n  private _filterBrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayBrand(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  getConnectorTypes() {\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (resp: any) => {\r\n        this.connectorTypes = resp;\r\n       if(this.isEditMode){\r\n        const toSelect = this.connectorTypes.find(c => c.id == this.params.data.connector_type_id);\r\n        this.form.get('connector_type').setValue(toSelect);\r\n       }\r\n        this.filteredConnecterType = this.form.controls.connector_type.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getChargerTypes() {\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.chargersType = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.chargersType.find(c => c.id == this.params.data.charger_type_id);\r\n            this.form.get('charger_type').setValue(toSelect);\r\n          }\r\n          this.filteredChargerType = this.form.controls.charger_type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterChargerType(name) : this.chargersType)\r\n            );\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayChargerType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterChargerType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargersType.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      \r\n      const params: any = {\r\n        brand_id: formValues.brand.id,\r\n        vehicle_type_id: formValues.vehicle.id,\r\n        connector_type_id: formValues.connector_type.id,\r\n        charger_type_id: formValues.charger_type.id,\r\n        name:formValues.name,\r\n        driver_range: formValues.driver_range == '' ? 0 : formValues.driver_range,\r\n        image_url: formValues.image_url,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.evFleetService.updateEvFleet(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.evFleetService.createEvFleet(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.evFleetCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    } else {\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('driver_range').setValue(params.data.driver_range);\r\n    this.form.get('image').setValue(params.data.image_url);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\"> {{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Brand</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"brand\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"brandAuto\" required>\r\n          <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrand\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsBrand | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Vehicle Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"vehicle\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"vehicleAuto\" required>\r\n          <mat-autocomplete #vehicleAuto=\"matAutocomplete\" [displayWith]=\"displayVehicle\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsVehicle | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('vehicle').invalid\">Please select vehicle type </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Connector Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"connector_type\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayConnectorType\">\r\n            <mat-option *ngFor=\"let option of filteredConnecterType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('connector_type').invalid\">Please select connector type\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Charger Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"charger_type\" [matAutocomplete]=\"chargerAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #chargerAuto=\"matAutocomplete\" [displayWith]=\"displayChargerType\">\r\n            <mat-option *ngFor=\"let option of filteredChargerType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('charger_type').invalid\">Please select charger type\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" type=\"text\" autocomplete=\"off\" >\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">help</mat-icon>\r\n        \r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Driver Range</mat-label>\r\n          <input matInput formControlName=\"driver_range\" type=\"number\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter driver range\">help</mat-icon>\r\n         \r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Image Url</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"image\" type=\"text\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"select image\">help</mat-icon>\r\n        </mat-form-field>\r\n        \r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { EVFleetCrudComponent } from './EV-fleet-crud/EV-fleet-crud.component';\r\nimport { EVFleetRoutingModule } from './EV-fleet-routing.module';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { List4WheelersComponent } from './list4Wheelers/list4Wheelers.component';\r\nimport { List2WheelersComponent } from './list2Wheeler/list2Wheelers.component';\r\nimport { List3WheelersComponent } from './list3Wheeler/list3Wheelers.component';\r\nimport {ElectricTruckManufacturesComponent } from './electric-truck-manufactures/electric-truck-manufactures.component';\r\nimport {ElectricBusManufacturesComponent } from './electric-bus-manufactures/electric-bus-manufactures.component';\r\nimport { ElectricCycleManufacturesComponent } from './electric-cycle-manufactures/electric-cycle-manufactures.component';\r\nconst COMPONENTS = [\r\n    EVFleetCrudComponent, CreateComponent, List2WheelersComponent,ElectricCycleManufacturesComponent,\r\n    List4WheelersComponent, ListComponent, List3WheelersComponent,ElectricTruckManufacturesComponent,ElectricBusManufacturesComponent\r\n];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, EVFleetRoutingModule, FuseSharedModule],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EVFleetModule { }","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class TwoWheelersManufactures {\r\n  id: string;\r\n  vehicle_brand_name: string;\r\n  description: string;\r\n  vehicle_type_name: string;\r\n  vehicle_model_name: string;\r\n  status: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  statusString:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list2Wheelers',\r\n  templateUrl: './list2Wheelers.component.html',\r\n  styleUrls: ['./list2Wheelers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\n\r\nexport class List2WheelersComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'vehicle_brand_name','vehicle_type_name','vehicle_model_name','description','dateConvert','status','action'];\r\n  head = [['Vehicle Brand', 'Vehicle Type','Vehicle Model','Description','Created Date','Status']];\r\n  dataSource: MatTableDataSource<TwoWheelersManufactures>;\r\n  filterEntity: TwoWheelersManufactures;\r\n  filterType: MatTableFilter;\r\n  localStorage : any;\r\n  twoWheeler : TwoWheelersManufactures[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  modelSearch = false;\r\n  typeSearch = false;\r\n  descSearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  dateConvertSearch= false;\r\n  exportedData: any[];\r\n  \r\n  constructor(private evFleetService:EVFleetService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,public datepipe: DatePipe,) {\r\n   \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.get2WheelerManufacture();\r\n    this.filterEntity = new TwoWheelersManufactures();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get2WheelerManufacture(){\r\n    this.evFleetService.getTwoWheelerVehicle().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true ){\r\n          this.twoWheeler = resp.data;\r\n          for(var i=0; i < this.twoWheeler.length;i++){\r\n            this.twoWheeler[i].dateConvert = this.datepipe.transform(this.twoWheeler[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if(this.twoWheeler[i].status == 'N'){\r\n              this.twoWheeler[i].statusString = 'Inactive';\r\n            }else{\r\n              this.twoWheeler[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.twoWheeler);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id){\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  // });\r\n  // }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog', \r\n      disableClose: true   \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     this.get2WheelerManufacture();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.get2WheelerManufacture();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    ev.stopPropagation();\r\n    \r\n    if(visibleOption == 'brandSearch'){\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.vehicle_brand_name = '';\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.vehicle_model_name = '';\r\n    }\r\n    if(visibleOption == 'typeSearch'){\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.vehicle_type_name = '';\r\n    }\r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n   }\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var fleet2Wheeler = this.dataSource.filteredData[i];\r\n      var data = {'Vehicle Brand':fleet2Wheeler.vehicle_brand_name,'Vechicle Type':fleet2Wheeler.vehicle_type_name,\r\n      'Vehicle Model':fleet2Wheeler.vehicle_model_name,'Description':fleet2Wheeler.description,'Created Date':fleet2Wheeler.created_date,\r\n      'Status':fleet2Wheeler.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Fleet 2Wheelers List');\r\n       XLSX.writeFile(workBook, 'Ev Fleet 2Wheelers.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    var doc = new jsPDF({ \r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var fleet2Wheeler = this.dataSource.filteredData[i];\r\n     \r\n     var data =[fleet2Wheeler.vehicle_brand_name,fleet2Wheeler.vehicle_type_name,fleet2Wheeler.vehicle_model_name,fleet2Wheeler.description,\r\n      fleet2Wheeler.created_date,fleet2Wheeler.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8, \r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        doc.text('Ev Fleet 2Wheelers List Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('Ev Fleet 2Wheelers.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"vehicle_brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Brand\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Brand\" [(ngModel)]=\"filterEntity.vehicle_brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Type\" [(ngModel)]=\"filterEntity.vehicle_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"vehicle_model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Model\"\r\n                                [(ngModel)]=\"filterEntity.vehicle_model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\"\r\n                            (click)=\"viewDialog('Publish',element,'modrateAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GovtSubsidyService } from 'app/shared/services/ev-space/govt-subsidy/govt-subsidy.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ModerateList {\r\n  id: number;\r\n  brand_id: number;\r\n  brand_name: string;\r\n  vehicle_type_id: string;\r\n  vehicleType_name: string;\r\n  connector_type_id: string;\r\n  charger_type_id: string;\r\n  name: string;\r\n  driver_range: string;\r\n  image_url: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['brand_name', 'vehicleType_name', 'name','dateConvert', 'status', 'action'];\r\n  head = [['Brand Name', 'Vehicle Type', 'Name','Created Date', 'Status']];\r\n  dataSource: MatTableDataSource<ModerateList>;\r\n  filterEntity: ModerateList;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  moderateList: ModerateList[];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  vehicleSearch = false;\r\n  nameSearch = false;\r\n  capcitySearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  dateConvertSearch= false;\r\n  exportedData: any[];\r\n\r\n  constructor(private evFleetService:EVFleetService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,public datepipe: DatePipe) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getModrateList();\r\n    this.filterEntity = new ModerateList();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getModrateList() {\r\n    this.evFleetService.getAllModerateVehicle().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.moderateList = resp.data;\r\n          for (var i = 0; i < this.moderateList.length; i++) {\r\n            this.moderateList[i].dateConvert = this.datepipe.transform(this.moderateList[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if (this.moderateList[i].status == 'N') {\r\n              this.moderateList[i].statusString = 'Inactive';\r\n            } else {\r\n              this.moderateList[i].statusString = 'Moderate';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.moderateList);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.evFleetService.deleteEvFleet(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.getModrateList();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n            }\r\n            \r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getModrateList();\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getModrateList();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'brandSearch') {\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.brand_name = '';\r\n    }\r\n    if (visibleOption == 'vehicleSearch') {\r\n      this.vehicleSearch = !this.vehicleSearch;\r\n      this.filterEntity.vehicleType_name = '';\r\n    }\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var moderateModel = this.dataSource.filteredData[i];\r\n\r\n      var data = {\r\n        'Brand Name': moderateModel.brand_name, 'Vechicle Type': moderateModel.vehicleType_name, 'Name': moderateModel.name,\r\n        'Created Date':moderateModel.dateConvert,'Status': moderateModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Fleet Modrate List');\r\n    XLSX.writeFile(workBook, 'Ev Fleet Modrate.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var moderateModel = this.dataSource.filteredData[i];\r\n\r\n      var data = [moderateModel.brand_name, moderateModel.vehicleType_name, moderateModel.name,moderateModel.dateConvert, moderateModel.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Ev Fleet Modrate List', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Ev Fleet Modrate.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Brand Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Brand Name\" [(ngModel)]=\"filterEntity.brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicleType_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!vehicleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('vehicleSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"vehicleSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Vehicle Type \" [(ngModel)]=\"filterEntity.vehicleType_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('vehicleSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicleType_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element,'viewAction')\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Publish\"\r\n                            (click)=\"viewDialog('Publish',element,'publishAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { GovtSubsidyService } from 'app/shared/services/ev-space/govt-subsidy/govt-subsidy.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  filteredOptionsVehicle: Observable<any[]>;\r\n  vehicles: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  localStorage: any;\r\n  isPublish: boolean = false;\r\n  isModrate: boolean = false;\r\n  brands: any;\r\n  filteredOptionsBrand: Observable<any[]>;\r\n  connectorTypes: any;\r\n  filteredConnecterType: Observable<any[]>;\r\n  chargersType: any;\r\n  filteredChargerType: Observable<any[]>;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder, private govtSubsidyService: GovtSubsidyService, private snackBar: MatSnackBar, private masterService: MasterService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    private chargerTypeService: ChargerTypeService, private evFleetService: EVFleetService,) { }\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isPublish = this.params.buttonAction == 'publishAction' ? true : false;\r\n    this.isModrate = this.params.buttonAction == 'modrateAction' ? true : false;\r\n\r\n    this.form = this.fb.group({\r\n      brand: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      vehicle: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      connector_type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      charger_type: ['', [Validators.required,]],\r\n      name: [''],\r\n      driver_range: [''],\r\n      image: ['',],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getVehicle();\r\n    this.getBrands();\r\n    this.getConnectorTypes();\r\n    this.getChargerTypes();\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n  }\r\n\r\n  getVehicle() {\r\n    this.govtSubsidyService.getVehicleTypes().subscribe(\r\n      (resp: any) => {\r\n        this.vehicles = resp;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.vehicles.find(c => c.id == this.params.data.vehicle_type_id);\r\n          this.form.get('vehicle').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsVehicle = this.form.controls.vehicle.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterVehicleModels(name) : this.vehicles)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayVehicle(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterVehicleModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.vehicles.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  getBrands() {\r\n    this.masterService.getBrands().subscribe(\r\n      (data: any) => {\r\n        this.brands = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.brands.find(c => c.id == this.params.data.brand_id);\r\n          this.form.get('brand').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterBrands(name) : this.brands)\r\n          );\r\n      },\r\n      (err) => {\r\n      })\r\n  }\r\n  private _filterBrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayBrand(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  getConnectorTypes() {\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (resp: any) => {\r\n        this.connectorTypes = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.connectorTypes.find(c => c.id == this.params.data.connector_type_id);\r\n          this.form.get('connector_type').setValue(toSelect);\r\n        }\r\n        this.filteredConnecterType = this.form.controls.connector_type.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterConnectorType(name) : this.connectorTypes)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connectorTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getChargerTypes() {\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.chargersType = resp;\r\n          if (this.isEditMode) {\r\n            const toSelect = this.chargersType.find(c => c.id == this.params.data.charger_type_id);\r\n            this.form.get('charger_type').setValue(toSelect);\r\n          }\r\n          this.filteredChargerType = this.form.controls.charger_type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterChargerType(name) : this.chargersType)\r\n            );\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayChargerType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterChargerType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargersType.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n  assignValues(params) {\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('driver_range').setValue(params.data.driver_range);\r\n    this.form.get('image').setValue(params.data.image_url);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  onPublish() {\r\n    const params: any = {\r\n      id: this.params.data.id,\r\n      status: \"Y\",\r\n      modify_by: this.localStorage.userId\r\n    }\r\n    this.evFleetService.publishEvFleet(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }\r\n\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onModrate() {\r\n    const params: any = {\r\n      id: this.params.data.id,\r\n      status: \"M\",\r\n      modify_by: this.localStorage.userId\r\n    }\r\n    this.evFleetService.moderateEvFleet(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }\r\n\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\"> {{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Brand</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"brand\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"brandAuto\" readonly>\r\n          <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrand\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsBrand | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Vehicle Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"vehicle\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"vehicleAuto\" readonly>\r\n          <mat-autocomplete #vehicleAuto=\"matAutocomplete\" [displayWith]=\"displayVehicle\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsVehicle | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('vehicle').invalid\">Please select vehicle type </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n     <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Connector Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"connector_type\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayConnectorType\">\r\n            <mat-option *ngFor=\"let option of filteredConnecterType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('connector_type').invalid\">Please select connector type\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Charger Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"charger_type\" [matAutocomplete]=\"chargerAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #chargerAuto=\"matAutocomplete\" [displayWith]=\"displayChargerType\">\r\n            <mat-option *ngFor=\"let option of filteredChargerType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('charger_type').invalid\">Please select charger type\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n       <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" type=\"text\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">help</mat-icon>\r\n         \r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Driver Range</mat-label>\r\n          <input matInput formControlName=\"driver_range\" type=\"number\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter driver range\">help</mat-icon>\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n      \r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Image Url</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"image\" type=\"text\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"select image\">help</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isPublish\" (click)=\"onPublish()\">Publish</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModrate\" (click)=\"onModrate()\">Moderate</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ElectricCycleManufactures {\r\n  id: string;\r\n  vehicle_brand_name: string;\r\n  description: string;\r\n  vehicle_type_name: string;\r\n  vehicle_model_name: string;\r\n  status: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  statusString:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-electric-cycle-manufactures',\r\n  templateUrl: './electric-cycle-manufactures.component.html',\r\n  styleUrls: ['./electric-cycle-manufactures.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\n\r\nexport class ElectricCycleManufacturesComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'vehicle_brand_name','vehicle_type_name','vehicle_model_name','description','dateConvert','status','action'];\r\n  head = [['Vehicle Brand', 'Vehicle Type','Vehicle Model','Description','Created Date','Status']];\r\n  dataSource: MatTableDataSource<ElectricCycleManufactures>;\r\n  filterEntity: ElectricCycleManufactures;\r\n  filterType: MatTableFilter;\r\n  localStorage : any;\r\n  electricCycle : ElectricCycleManufactures[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  modelSearch = false;\r\n  typeSearch = false;\r\n  descSearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  dateConvertSearch= false;\r\n  exportedData: any[];\r\n  \r\n  constructor(private evFleetService:EVFleetService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,public datepipe: DatePipe,) {\r\n   \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getEvCycleManufacture();\r\n    this.filterEntity = new ElectricCycleManufactures();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getEvCycleManufacture(){\r\n    this.evFleetService.getEvCycleVehicle().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true ){\r\n          this.electricCycle = resp.data;\r\n          for(var i=0; i < this.electricCycle.length;i++){\r\n            this.electricCycle[i].dateConvert = this.datepipe.transform(this.electricCycle[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if(this.electricCycle[i].status == 'N'){\r\n              this.electricCycle[i].statusString = 'Inactive';\r\n            }else{\r\n              this.electricCycle[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.electricCycle);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id){\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  // });\r\n  // }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog', \r\n      disableClose: true   \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     this.getEvCycleManufacture();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEvCycleManufacture();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    ev.stopPropagation();\r\n    \r\n    if(visibleOption == 'brandSearch'){\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.vehicle_brand_name = '';\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.vehicle_model_name = '';\r\n    }\r\n    if(visibleOption == 'typeSearch'){\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.vehicle_type_name = '';\r\n    }\r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n   }\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var fleet2Wheeler = this.dataSource.filteredData[i];\r\n      var data = {'Vehicle Brand':fleet2Wheeler.vehicle_brand_name,'Vechicle Type':fleet2Wheeler.vehicle_type_name,\r\n      'Vehicle Model':fleet2Wheeler.vehicle_model_name,'Description':fleet2Wheeler.description,'Created Date':fleet2Wheeler.created_date,\r\n      'Status':fleet2Wheeler.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Electric Cycle Manufactures List');\r\n       XLSX.writeFile(workBook, 'ElectricCycleManufactures.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    var doc = new jsPDF({ \r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var fleet2Wheeler = this.dataSource.filteredData[i];\r\n     \r\n     var data =[fleet2Wheeler.vehicle_brand_name,fleet2Wheeler.vehicle_type_name,fleet2Wheeler.vehicle_model_name,fleet2Wheeler.description,\r\n      fleet2Wheeler.created_date,fleet2Wheeler.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8, \r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        doc.text('Electric Cycle Manufactures List' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('ElectricCycleManufactures.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"vehicle_brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Brand\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Brand\" [(ngModel)]=\"filterEntity.vehicle_brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Type\" [(ngModel)]=\"filterEntity.vehicle_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"vehicle_model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Model\"\r\n                                [(ngModel)]=\"filterEntity.vehicle_model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\"\r\n                            (click)=\"viewDialog('Publish',element,'modrateAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { ListComponent } from '../list/list.component';\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nimport { List2WheelersComponent } from '../list2Wheeler/list2Wheelers.component';\r\nimport { List4WheelersComponent } from '../list4Wheelers/list4Wheelers.component';\r\nimport { List3WheelersComponent } from '../list3Wheeler/list3Wheelers.component';\r\nimport { ElectricBusManufacturesComponent } from '../electric-bus-manufactures/electric-bus-manufactures.component';\r\nimport { ElectricTruckManufacturesComponent } from '../electric-truck-manufactures/electric-truck-manufactures.component';\r\nimport { ElectricCycleManufacturesComponent } from '../electric-cycle-manufactures/electric-cycle-manufactures.component';\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { \r\n    path: 'create', canActivate: [AuthGuard], component: CreateComponent \r\n  },\r\n  { \r\n    path: 'listModerate', canActivate: [AuthGuard], component: ListComponent\r\n  },\r\n  { \r\n    path: 'list2WheelersManufactures', canActivate: [AuthGuard], component: List2WheelersComponent\r\n  },\r\n  { \r\n    path: 'list4WheelersManufactures', canActivate: [AuthGuard], component: List4WheelersComponent\r\n  },\r\n  { \r\n    path: 'list3WheelersManufactures', canActivate: [AuthGuard], component: List3WheelersComponent\r\n  },\r\n  { \r\n    path: 'listElectricBusManufactures', canActivate: [AuthGuard], component: ElectricBusManufacturesComponent\r\n  },\r\n  { \r\n    path: 'listElectricTruckManufactures', canActivate: [AuthGuard], component: ElectricTruckManufacturesComponent\r\n  },\r\n  { \r\n    path: 'listEvCycleManufactures', canActivate: [AuthGuard], component: ElectricCycleManufacturesComponent\r\n  },\r\n  { \r\n    path: '', redirectTo: 'listModerate', pathMatch: 'full' \r\n  },\r\n];\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-EV-fleet-crud',\r\n  templateUrl: './EV-fleet-crud.component.html',\r\n  styleUrls: ['./EV-fleet-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class EVFleetCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: '4 Wheelers', link: 'list4WheelersManufactures' },\r\n    // { label: '3 Wheelers', link: 'list3WheelersManufactures' },\r\n    // { label: '2 Wheelers', link: 'list2WheelersManufactures' },\r\n    // { label: 'Electric Bus', link: 'listElectricBusManufactures' },\r\n    // { label: 'Electric Truck', link: 'listElectricTruckManufactures' },\r\n    // { label: 'Electric Cycle', link: 'listEvCycleManufactures' },\r\n    // { label: 'Moderate', link: 'listModerate' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    var nav_list = this.localStorage.nav_list_with_tab;\r\n\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"evSpace\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"evFleet\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"2wheelers manufactures\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: '2 Wheelers', link: 'list2WheelersManufactures' });\r\n                  }\r\n                  if (z.id === \"3wheelers manufactures\") {\r\n                    this.tempLinks.push({ label: '3 Wheelers', link: 'list3WheelersManufactures' });\r\n                  }\r\n                  if (z.id === \"4wheelers manufactures\") {\r\n                    this.tempLinks.push({ label: '4 Wheelers', link: 'list4WheelersManufactures' });\r\n                  }\r\n                  if (z.id === \"evCyclesManufactures\") {\r\n                    this.tempLinks.push({ label: 'Electric Cycle', link: 'listEvCycleManufactures' });\r\n                  }\r\n                  if (z.id === \"electricBusManufactures\") {\r\n                    this.tempLinks.push({ label: 'Electric Bus', link: 'listElectricBusManufactures' });\r\n                  }\r\n                  if (z.id === \"electricTruckManufactures\") {\r\n                    this.tempLinks.push({ label: 'Electric Truck', link: 'listElectricTruckManufactures' });\r\n                  }\r\n                  if (z.id === \"moderate\") {\r\n                    this.tempLinks.push({ label: 'Moderate', link: 'listModerate' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/evSpace/evFleet/crud' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">\r\n                      {{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ElectricTruckManufactures {\r\n  id: string;\r\n  vehicle_brand_name: string;\r\n  description: string;\r\n  vehicle_type_name: string;\r\n  vehicle_model_name: string;\r\n  status: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  statusString:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-electric-truck-manufactures',\r\n  templateUrl: './electric-truck-manufactures.component.html',\r\n  styleUrls: ['./electric-truck-manufactures.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\n\r\nexport class ElectricTruckManufacturesComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'vehicle_brand_name','vehicle_type_name','vehicle_model_name','description','dateConvert','status','action'];\r\n  head = [['Vehicle Brand', 'Vehicle Type','Vehicle Model','Description','Created Date','Status']];\r\n  dataSource: MatTableDataSource<ElectricTruckManufactures>;\r\n  filterEntity: ElectricTruckManufactures;\r\n  filterType: MatTableFilter;\r\n  localStorage : any;\r\n  electricTruck : ElectricTruckManufactures[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  modelSearch = false;\r\n  typeSearch = false;\r\n  descSearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  dateConvertSearch= false;\r\n  exportedData: any[];\r\n  \r\n  constructor(private evFleetService:EVFleetService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,public datepipe: DatePipe,) {\r\n   \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getEvTruckManufacture();\r\n    this.filterEntity = new ElectricTruckManufactures();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getEvTruckManufacture(){\r\n    this.evFleetService.getEvTruckVehicle().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true ){\r\n          this.electricTruck = resp.data;\r\n          for(var i=0; i < this.electricTruck.length;i++){\r\n            this.electricTruck[i].dateConvert = this.datepipe.transform(this.electricTruck[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if(this.electricTruck[i].status == 'N'){\r\n              this.electricTruck[i].statusString = 'Inactive';\r\n            }else{\r\n              this.electricTruck[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.electricTruck);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id){\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  // });\r\n  // }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog', \r\n      disableClose: true   \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     this.getEvTruckManufacture();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEvTruckManufacture();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    ev.stopPropagation();\r\n    \r\n    if(visibleOption == 'brandSearch'){\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.vehicle_brand_name = '';\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.vehicle_model_name = '';\r\n    }\r\n    if(visibleOption == 'typeSearch'){\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.vehicle_type_name = '';\r\n    }\r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n   }\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var fleet2Wheeler = this.dataSource.filteredData[i];\r\n      var data = {'Vehicle Brand':fleet2Wheeler.vehicle_brand_name,'Vechicle Type':fleet2Wheeler.vehicle_type_name,\r\n      'Vehicle Model':fleet2Wheeler.vehicle_model_name,'Description':fleet2Wheeler.description,'Created Date':fleet2Wheeler.created_date,\r\n      'Status':fleet2Wheeler.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Electric Truck Manufactures List');\r\n       XLSX.writeFile(workBook, 'ElectricTruckManufactures.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    var doc = new jsPDF({ \r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var fleet2Wheeler = this.dataSource.filteredData[i];\r\n     \r\n     var data =[fleet2Wheeler.vehicle_brand_name,fleet2Wheeler.vehicle_type_name,fleet2Wheeler.vehicle_model_name,fleet2Wheeler.description,\r\n      fleet2Wheeler.created_date,fleet2Wheeler.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8, \r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        doc.text('Electric Truck Manufactures List Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('ElectricTruckManufactures.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"vehicle_brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Brand\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Brand\" [(ngModel)]=\"filterEntity.vehicle_brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Type\" [(ngModel)]=\"filterEntity.vehicle_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"vehicle_model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Model\"\r\n                                [(ngModel)]=\"filterEntity.vehicle_model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\"\r\n                            (click)=\"viewDialog('Publish',element,'modrateAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class FourWheelersManufactures {\r\n  id: string;\r\n  vehicle_brand_name: string;\r\n  description: string;\r\n  vehicle_type_name: string;\r\n  vehicle_model_name: string;\r\n  status: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  statusString:string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list4Wheelers',\r\n  templateUrl: './list4Wheelers.component.html',\r\n  styleUrls: ['./list4Wheelers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class List4WheelersComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'vehicle_brand_name','vehicle_type_name','vehicle_model_name','description','dateConvert','status','action'];\r\n  head = [['Vehicle Brand', 'Vehicle Type','Vehicle Model','Description','Created Date','Status']];\r\n  dataSource: MatTableDataSource<FourWheelersManufactures>;\r\n  filterEntity: FourWheelersManufactures;\r\n  filterType: MatTableFilter;\r\n  localStorage : any;\r\n  fourWheeler : FourWheelersManufactures[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  modelSearch = false;\r\n  typeSearch = false;\r\n  descSearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  dateConvertSearch= false;\r\n  exportedData: any[];\r\n  \r\n  constructor(private evFleetService:EVFleetService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,public datepipe: DatePipe) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.get4WheelerManufacture();\r\n    this.filterEntity = new FourWheelersManufactures();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get4WheelerManufacture(){\r\n    this.evFleetService.getFourLMVWheelerVehicle().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true){\r\n          this.fourWheeler = resp.data;\r\n          for(var i=0; i < this.fourWheeler.length;i++){\r\n            this.fourWheeler[i].dateConvert = this.datepipe.transform(this.fourWheeler[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if(this.fourWheeler[i].status == 'N'){\r\n              this.fourWheeler[i].statusString = 'Inactive';\r\n            }else{\r\n              this.fourWheeler[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.fourWheeler);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      \r\n      }\r\n    )\r\n  }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog', \r\n      disableClose: true   \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.get4WheelerManufacture();\r\n    });\r\n  }\r\n  viewDialog(action,data,buttonAction) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.get4WheelerManufacture();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    ev.stopPropagation();\r\n    if(visibleOption == 'brandSearch'){\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.vehicle_brand_name = '';\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.vehicle_model_name = '';\r\n    }\r\n    if(visibleOption == 'typeSearch'){\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.vehicle_type_name = '';\r\n    }\r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n   }\r\n   tableExport() {\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var fleet4Wheeler = this.dataSource.filteredData[i];\r\n      var data = {'Vehicle Brand':fleet4Wheeler.vehicle_brand_name,'Vechicle Type':fleet4Wheeler.vehicle_type_name,\r\n      'Vehicle Model':fleet4Wheeler.vehicle_model_name,'Description':fleet4Wheeler.description,'Created Date':fleet4Wheeler.dateConvert,\r\n      'Status':fleet4Wheeler.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Fleet 4Wheelers List');\r\n       XLSX.writeFile(workBook, 'Ev Fleet 4Wheelers.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    var doc = new jsPDF({ \r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var fleet4Wheeler = this.dataSource.filteredData[i];\r\n     var data =[fleet4Wheeler.vehicle_brand_name,fleet4Wheeler.vehicle_type_name,fleet4Wheeler.vehicle_model_name,fleet4Wheeler.description,\r\n      fleet4Wheeler.dateConvert,fleet4Wheeler.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Ev Fleet 4Wheelers List Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('Ev Fleet 4Wheelers.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"vehicle_brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Brand\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Brand\" [(ngModel)]=\"filterEntity.vehicle_brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Type\" [(ngModel)]=\"filterEntity.vehicle_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_type_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Model\"\r\n                                [(ngModel)]=\"filterEntity.vehicle_model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\"\r\n                            (click)=\"viewDialog('Moderate',element,'modrateAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ElectricBusManufactures {\r\n  id: string;\r\n  vehicle_brand_name: string;\r\n  description: string;\r\n  vehicle_type_name: string;\r\n  vehicle_model_name: string;\r\n  status: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  statusString:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-electric-bus-manufactures',\r\n  templateUrl: './electric-bus-manufactures.component.html',\r\n  styleUrls: ['./electric-bus-manufactures.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\n\r\nexport class ElectricBusManufacturesComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'vehicle_brand_name','vehicle_type_name','vehicle_model_name','description','dateConvert','status','action'];\r\n  head = [['Vehicle Brand', 'Vehicle Type','Vehicle Model','Description','Created Date','Status']];\r\n  dataSource: MatTableDataSource<ElectricBusManufactures>;\r\n  filterEntity: ElectricBusManufactures;\r\n  filterType: MatTableFilter;\r\n  localStorage : any;\r\n  electricBus : ElectricBusManufactures[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  modelSearch = false;\r\n  typeSearch = false;\r\n  descSearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  dateConvertSearch= false;\r\n  exportedData: any[];\r\n  \r\n  constructor(private evFleetService:EVFleetService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,public datepipe: DatePipe,) {\r\n   \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getEvBusManufacture();\r\n    this.filterEntity = new ElectricBusManufactures();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getEvBusManufacture(){\r\n    this.evFleetService.getEvBusVehicle().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true ){\r\n          this.electricBus = resp.data;\r\n          for(var i=0; i < this.electricBus.length;i++){\r\n            this.electricBus[i].dateConvert = this.datepipe.transform(this.electricBus[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if(this.electricBus[i].status == 'N'){\r\n              this.electricBus[i].statusString = 'Inactive';\r\n            }else{\r\n              this.electricBus[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.electricBus);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id){\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  // });\r\n  // }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog', \r\n      disableClose: true   \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     this.getEvBusManufacture();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEvBusManufacture();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    ev.stopPropagation();\r\n    \r\n    if(visibleOption == 'brandSearch'){\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.vehicle_brand_name = '';\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.vehicle_model_name = '';\r\n    }\r\n    if(visibleOption == 'typeSearch'){\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.vehicle_type_name = '';\r\n    }\r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n   }\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var fleet2Wheeler = this.dataSource.filteredData[i];\r\n      var data = {'Vehicle Brand':fleet2Wheeler.vehicle_brand_name,'Vechicle Type':fleet2Wheeler.vehicle_type_name,\r\n      'Vehicle Model':fleet2Wheeler.vehicle_model_name,'Description':fleet2Wheeler.description,'Created Date':fleet2Wheeler.created_date,\r\n      'Status':fleet2Wheeler.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Electric Bus Manufactures List');\r\n       XLSX.writeFile(workBook, 'ElectricBusManufactures.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    var doc = new jsPDF({ \r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var fleet2Wheeler = this.dataSource.filteredData[i];\r\n     \r\n     var data =[fleet2Wheeler.vehicle_brand_name,fleet2Wheeler.vehicle_type_name,fleet2Wheeler.vehicle_model_name,fleet2Wheeler.description,\r\n      fleet2Wheeler.created_date,fleet2Wheeler.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8, \r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        doc.text('Electric Bus Manufactures List' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('ElectricBusManufacturesList.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"vehicle_brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Brand\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Brand\" [(ngModel)]=\"filterEntity.vehicle_brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Type\" [(ngModel)]=\"filterEntity.vehicle_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"vehicle_model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Model\"\r\n                                [(ngModel)]=\"filterEntity.vehicle_model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\"\r\n                            (click)=\"viewDialog('Publish',element,'modrateAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVFleetService } from 'app/shared/services/ev-space/ev-fleet.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ThreeWheelersManufactures {\r\n  id: string;\r\n  vehicle_brand_name: string;\r\n  description: string;\r\n  vehicle_type_name: string;\r\n  vehicle_model_name: string;\r\n  status: string;\r\n  created_date: string;\r\n  dateConvert:string;\r\n  created_by: number;\r\n  statusString:string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list3Wheelers',\r\n  templateUrl: './list3Wheelers.component.html',\r\n  styleUrls: ['./list3Wheelers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\n\r\nexport class List3WheelersComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'vehicle_brand_name','vehicle_type_name','vehicle_model_name','description','dateConvert','status','action'];\r\n  head = [['Vehicle Brand', 'Vehicle Type','Vehicle Model','Description','Created Date','Status']];\r\n  dataSource: MatTableDataSource<ThreeWheelersManufactures>;\r\n  filterEntity: ThreeWheelersManufactures;\r\n  filterType: MatTableFilter;\r\n  localStorage : any;\r\n  threeWheeler : ThreeWheelersManufactures[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  brandSearch = false;\r\n  modelSearch = false;\r\n  typeSearch = false;\r\n  descSearch = false;\r\n  roadSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  dateConvertSearch= false;\r\n  \r\n  constructor(private evFleetService:EVFleetService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,public datepipe: DatePipe,) {\r\n   \r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.get2WheelerManufacture();\r\n    this.filterEntity = new ThreeWheelersManufactures();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  get2WheelerManufacture(){\r\n    this.evFleetService.getThreeWheelerVehicle().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true ){\r\n          this.threeWheeler = resp.data;\r\n          for(var i=0; i < this.threeWheeler.length;i++){\r\n            this.threeWheeler[i].dateConvert = this.datepipe.transform(this.threeWheeler[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n            if(this.threeWheeler[i].status == 'N'){\r\n              this.threeWheeler[i].statusString = 'Inactive';\r\n            }else{\r\n              this.threeWheeler[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.threeWheeler);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id){\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  // });\r\n  // }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog', \r\n      disableClose: true   \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n     this.get2WheelerManufacture();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.get2WheelerManufacture();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    ev.stopPropagation();\r\n    \r\n    if(visibleOption == 'brandSearch'){\r\n      this.brandSearch = !this.brandSearch;\r\n      this.filterEntity.vehicle_brand_name = '';\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.vehicle_model_name = '';\r\n    }\r\n    if(visibleOption == 'typeSearch'){\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.vehicle_type_name = '';\r\n    }\r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if(visibleOption == 'dateConvertSearch'){\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert  = '';\r\n    }\r\n   }\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var fleet2Wheeler = this.dataSource.filteredData[i];\r\n      var data = {'Vehicle Brand':fleet2Wheeler.vehicle_brand_name,'Vechicle Type':fleet2Wheeler.vehicle_type_name,\r\n      'Vehicle Model':fleet2Wheeler.vehicle_model_name,'Description':fleet2Wheeler.description,'Created Date':fleet2Wheeler.dateConvert,\r\n      'Status':fleet2Wheeler.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Fleet 3Wheelers List');\r\n       XLSX.writeFile(workBook, 'Ev Fleet 3Wheelers.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    var doc = new jsPDF({ \r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var fleet2Wheeler = this.dataSource.filteredData[i];\r\n     \r\n     var data =[fleet2Wheeler.vehicle_brand_name,fleet2Wheeler.vehicle_type_name,fleet2Wheeler.vehicle_model_name,fleet2Wheeler.description,\r\n      fleet2Wheeler.dateConvert,fleet2Wheeler.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8, \r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        doc.text('Ev Fleet 2Wheelers List Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('Ev Fleet 3Wheelers.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"vehicle_brand_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!brandSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Brand\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"brandSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Brand\" [(ngModel)]=\"filterEntity.vehicle_brand_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('brandSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_brand_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"vehicle_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Type\" [(ngModel)]=\"filterEntity.vehicle_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"vehicle_model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Vehicle Model\"\r\n                                [(ngModel)]=\"filterEntity.vehicle_model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.vehicle_model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dateConvert\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Created Date\"\r\n                                [(ngModel)]=\"filterEntity.dateConvert\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateConvertSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\"\r\n                            (click)=\"viewDialog('Publish',element,'modrateAction')\" style=\"cursor:pointer\">\r\n                            published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\nexport class EVFleetService {\r\n    apiUrl2 = `${environment.API_URL2}/vehicleModel` ;\r\n\r\nconstructor(private http : HttpClient) { }\r\n\r\n// getVehicleManufacturesById(id){\r\n//     return this.http.get(`${this.apiUrl2}/getVehicleManufacturesById/${id}`);\r\n// }\r\ngetTwoWheelerVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getVehicleManufacturesByVehicleType/Two Wheeler`);\r\n}\r\ngetThreeWheelerVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getVehicleManufacturesByVehicleType/Three Wheeler`);\r\n}\r\ngetFourLMVWheelerVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getVehicleManufacturesByVehicleType/Four Wheeler`);\r\n}\r\ngetEvCycleVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getVehicleManufacturesByVehicleType/Electric Cycle`);\r\n}\r\ngetEvBusVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getVehicleManufacturesByVehicleType/Electric Bus`);\r\n}\r\ngetEvTruckVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getVehicleManufacturesByVehicleType/Electric Truck`);\r\n}\r\ngetAllModerateVehicle(){\r\n    return this.http.get(`${this.apiUrl2}/getAllModerateVehicle`)\r\n}\r\ndeleteEvFleet(id,login_id){\r\n    return this.http.delete(`${this.apiUrl2}/delete/${id}/${login_id}`)\r\n}\r\npublishEvFleet(params){\r\n    return this.http.post(`${this.apiUrl2}/publish`,params)\r\n}\r\nmoderateEvFleet(params){\r\n    return this.http.post(`${this.apiUrl2}/moderate`,params)\r\n}\r\ncreateEvFleet(params){\r\n    return this.http.post(`${this.apiUrl2}/create`,params)\r\n}\r\nupdateEvFleet(params){\r\n    return this.http.post(`${this.apiUrl2}/update`,params)\r\n}\r\n\r\n\r\n}","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TABS_DEMO_ROUTES } from './EV-fleet-crud/routes';\r\nimport { EVFleetCrudComponent } from './EV-fleet-crud/EV-fleet-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : EVFleetCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n     \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class EVFleetRoutingModule{}"]}