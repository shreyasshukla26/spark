{"version":3,"sources":["./src/app/main/dashboard/project/payment-reports/pending-payment-report/pending-payment-report.component.ts","./src/app/main/dashboard/project/payment-reports/pending-payment-report/pending-payment-report.component.html","./src/app/main/dashboard/project/payment-reports/refund-payment-report/refund-payment-report.component.ts","./src/app/main/dashboard/project/payment-reports/refund-payment-report/refund-payment-report.component.html","./src/app/main/dashboard/project/payment-reports/cancle-payment-report/cancle-payment-report.component.ts","./src/app/main/dashboard/project/payment-reports/cancle-payment-report/cancle-payment-report.component.html","./src/app/main/dashboard/project/payment-reports/payment-reports-routing.module.ts","./src/app/main/dashboard/project/payment-reports/successful-payment-report/successful-payment-report.component.ts","./src/app/main/dashboard/project/payment-reports/successful-payment-report/successful-payment-report.component.html","./src/app/main/dashboard/project/payment-reports/payment-reports.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AAGnB;AAIX;AACA;AACA;AAErB;AAGc;AACb;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;ICsDO,2EAA6E;IAAA,uFAC5D;IAAA,+EAC8C;IAAvD,uWAA8B,eAAe,aAAS;IAAC,kEAC3D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,gZAAwC;IAD5C,4DAEA;IAAA,+EACI;IADgB,iXAA8B,eAAe,aAAS;IACtE,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAwC;IAAxC,uGAAwC;;;IARpD,sFACI;IAAA,+IAGuB;IACvB,mKAOiB;IACrB,4DAAkB;;;IAZP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IASxC,+EAA0C;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;;IAI5D,2EAC2B;IAAA,qFACV;IAAA,+EACkD;IAA3D,uWAA8B,mBAAmB,aAAS;IAAC,kEAC/D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,8YAAsC;IAD1C,4DAEA;IAAA,+EACI;IADgB,iXAA8B,mBAAmB,aAAS;IAC1E,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAsC;IAAtC,qGAAsC;;;IATlD,sFACI;IAAA,+IAIuB;IACvB,mKAOiB;IACrB,4DAAkB;;;IAbP,0DAAwB;IAAxB,2FAAwB;IAKd,0DAAuB;IAAvB,0FAAuB;;;IAS5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;;IAI1D,2EAA6E;IAAA,qFACzE;IAAA,+EAA2E;IAAvD,uWAA8B,eAAe,aAAS;IAAC,kEAC3E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADyC,+YAAuC;IAAhF,4DACA;IAAA,+EACI;IADgB,iXAA8B,eAAe,aAAS;IACtE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH4B,0DAAuC;IAAvC,sGAAuC;;;IAPxF,sFACI;IAAA,+IAGO;IACP,mKAKiB;IACrB,4DAAkB;;;IAVP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IAOxC,+EAA0C;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;;IAI3D,2EAAiF;IAAA,wFAC7E;IAAA,+EAA+E;IAA3D,uWAA8B,mBAAmB,aAAS;IAAC,kEAC/E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADuC,yZAAiD;IAAxF,4DACA;IAAA,+EAA+E;IAA3D,iXAA8B,mBAAmB,aAAS;IAAC,yEAC/E;IAAA,4DAAW;IACf,4DAAiB;;;IAH0B,0DAAiD;IAAjD,gHAAiD;;;IAPhG,sFACI;IAAA,+IAGO;IACP,mKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAA+B;IAAA,4DAAW;;;IAA1C,0DAA+B;IAA/B,0GAA+B;;;;IAIrE,2EAA4E;IAAA,+EAExE;IAAA,+EAA0E;IAAtD,uWAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADsC,yYAAiC;IAAvE,4DACA;IAAA,+EAA0E;IAAtD,iXAA8B,cAAc,aAAS;IAAC,yEAC1E;IAAA,4DAAW;IACf,4DAAiB;;;IAHyB,0DAAiC;IAAjC,gGAAiC;;;IAR/E,sFACI;IAAA,+IAIO;IACP,mKAKiB;IACrB,4DAAkB;;;IAXP,0DAAmB;IAAnB,uFAAmB;IAKT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAIrD,2EAA4E;IAAA,8EACxE;IAAA,+EAA0E;IAAtD,uWAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD0C,yYAAiC;IAA3E,4DACA;IAAA,+EACI;IADgB,iXAA8B,cAAc,aAAS;IACrE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH6B,0DAAiC;IAAjC,gGAAiC;;;IAPnF,sFACI;IAAA,+IAGO;IACP,mKAKiB;IACrB,4DAAkB;;;IAVP,0DAAmB;IAAnB,uFAAmB;IAIT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAKrD,2EAAiF;IAAA,4EAC7E;IAAA,+EACI;IADgB,uWAA8B,mBAAmB,aAAS;IAC1E,kEAAM;IAAA,4DAAW;IACzB,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD4C,8YAAsC;IAAlF,4DACA;IAAA,+EACI;IADgB,iXAA8B,mBAAmB,aAAS;IAC1E,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH+B,0DAAsC;IAAtC,qGAAsC;;;IAP1F,sFACI;IAAA,+IAGO;IACP,mKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAIlE,gFAAwF;;;IACxF,gFAA8F;;;;;ADnK/G,MAAM,oBAAoB;CAahC;AACD;;GAEG;AAWI,MAAM,6BAA6B;IA2BxC,YAAoB,QAAqB,EAAU,aAA4B,EAAU,EAAe,EAAS,QAAkB,EACzH,GAAsB,EAAS,eAA8B;QADnD,aAAQ,GAAR,QAAQ,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAU;QACzH,QAAG,GAAH,GAAG,CAAmB;QAAS,oBAAe,GAAf,eAAe,CAAe;QAnBvE,yBAAoB,GAAa,CAAC,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,EAAC,aAAa,CAAC,CAAC;QAC9I,SAAI,GAAG,CAAC,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAG1G,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,aAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAKtB,aAAQ,GAAQ,IAAI,IAAI,EAAE,CAAC;IAK3B,CAAC;IACD,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,GAAE;YAC/D,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,EAAC;gBAC5H,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,YAAY,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE;YACX,MAAM,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACpB,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAEjE,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;YACpC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SAC9C;IACH,CAAC;IAED,qBAAqB;QACnB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACxC,IAAI,MAAM,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,MAAM,EAAC,GAAG;YACV,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC;YAClE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,YAAY,CAAC;SACjE;QACD,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CACpF,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;gBAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnD,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;iBAClH;gBACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACrE,2EAA2E;gBAC3E,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;gBACtD,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBAChE,OAAO;aACR;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAChB;IACH,CAAC;IAGD,oBAAoB,CAAC,aAAa,EAAE,EAAE;QACpC,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;SACtC;QAED,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SAEpC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAE/B;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SACpC;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,EAAE,CAAC;SAC/C;QACD,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnE,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACxD,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG;gBACT,eAAe,EAAE,UAAU,CAAC,aAAa,EAAE,cAAc,EAAE,UAAU,CAAC,WAAW,EAAE,cAAc,EAAE,UAAU,CAAC,YAAY;gBAC1H,kBAAkB,EAAE,UAAU,CAAC,sBAAsB,EAAE,QAAQ,EAAE,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,MAAM;aAChH,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QAGD,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAkB,0CAAU,CAAC,QAAQ,EAAE,CAAC;QAEtD,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,4BAA4B,CAAC,CAAC;QAChF,8CAAc,CAAC,QAAQ,EAAE,iCAAiC,CAAC,CAAC;IAE9D,CAAC;IAED,oBAAoB;IACpB,+BAA+B;IAC/B,IAAI;IAEJ,SAAS;QACP,IAAI,GAAG,GAAG,IAAI,2CAAK,CAAC,EAAE,uCAAuC;SAE5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnE,IAAI,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACxD,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,sBAAsB,EAAE,UAAU,CAAC,MAAM;gBACxI,UAAU,CAAC,MAAM,CAAC,CAAC;YAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC9D,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAE,IAAI,CAAC,EAAE;gBAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,4BAA4B,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAEtG,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBAChE,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAExC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QAEF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/B,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAE9C,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,+BAA+B;QAE/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAClG,OAAO,GAAG,CAAC;IAEb,CAAC;;0GAnOU,6BAA6B;6GAA7B,6BAA6B;;;;;;;;;;;qFAJ7B,CAAC,wDAAQ,CAAC;QC5CvB,yEAEI;QACA,yEAEI;QACA,yEAEI;QAAA,yEAEI;QAAA,0EAC+C;QAAA,uDAC/C;QAAA,4DAAO;QAMX,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EACI;QADiC,qJAAS,iBAAa,IAAC;QACxD,2EAAU;QAAA,6EAAiB;QAAA,4DAAW;QAC1C,4DAAS;QAAA,yEACT;QAAA,6EACI;QADiC,sJAAS,eAAW,IAAC;QACtD,4EAAU;QAAA,0EAAc;QAAA,4DAAW;QACvC,4DAAS;QACb,4DAAM;QACN,+EACI;QAAA,oFACI;QAAA,4EAEI;QAAA,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,iFAEJ;QAFoB,2JAAS,uBAAmB,IAAC;QAA7C,4DAEJ;QAAA,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EAEA;QAAA,wFAA+E;QAC/E,qFAAiE;QACrE,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEAGA;QAAA,wFAA6E;QAC7E,qFAA+D;QACnE,4DAAiB;QACjB,2EACI;QAAA,gFAC6B;QADiB,wJAAS,2BAAuB,IAAC;QAClD,sEAAU;QAAA,4DAAW;QAAA,yEAClD;QAAA,gFAC4B;QADmB,wJAAS,2BAAuB,IAAC;QACpD,mEAAO;QAAA,4DAAW;QAClD,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;QACX,2EACI;QAAA,2EACI;QAAA,qFAGI;QAAA,6EACI;QAAA,oJAakB;QAClB,sIAA2E;QAC/E,qEAAe;QACf,6EACI;QAAA,oJAckB;QAClB,sIAAyE;QAC7E,qEAAe;QACf,6EACI;QAAA,oJAWkB;QAClB,sIAA0E;QAC9E,qEAAe;QACf,6EACI;QAAA,oJAWkB;QAClB,sIAAoF;QACxF,qEAAe;QACf,6EACI;QAAA,oJAYkB;QAClB,sIAAoE;QACxE,qEAAe;QACf,6EACI;QAAA,oJAWkB;QAClB,sIAAoE;QACxE,qEAAe;QAEf,6EACI;QAAA,oJAWkB;QAClB,sIAAyE;QAC7E,qEAAe;QAGf,kJAAwF;QACxF,kJAA8F;QAClG,4DAAY;QAEZ,oFAAiF;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;QArLc,0DAA0C;QAA1C,oNAA0C;QAAC,0DAC/C;QAD+C,6HAC/C;QAmBU,2DAAyB;QAAzB,sFAAyB;QAUH,2DAA+B;QAA/B,8EAA+B;QAEd,0DAAqB;QAArB,oEAAqB;QAKtC,0DAA6B;QAA7B,8EAA6B;QAGZ,0DAAmB;QAAnB,oEAAmB;QAe5B,2DAAgC;QAAhC,6FAAgC;QAqHhC,2DAAqC;QAArC,qGAAqC;QACxB,0DAA8B;QAA9B,sGAA8B;QAGjD,0DAAkC;QAAlC,mJAAkC;o5IDhJtE,+DAAc;6FAKf,6BAA6B;cAVzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;gBACtD,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;uhBAO+B,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;YACH,UAAU;kBAAlC,uDAAS;mBAAC,YAAY;YAMK,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACH,QAAQ;kBAA9B,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AE3DvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AAGnB;AAIX;AACA;AACA;AAErB;AAGc;AACb;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;ICsDO,2EAA6E;IAAA,uFAC5D;IAAA,+EAC8C;IAAvD,sWAA8B,eAAe,aAAS;IAAC,kEAC3D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,+YAAwC;IAD5C,4DAEA;IAAA,+EACI;IADgB,gXAA8B,eAAe,aAAS;IACtE,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAwC;IAAxC,uGAAwC;;;IARpD,sFACI;IAAA,8IAGuB;IACvB,kKAOiB;IACrB,4DAAkB;;;IAZP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IASxC,+EAA0C;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;;IAI5D,2EAC2B;IAAA,qFACV;IAAA,+EACkD;IAA3D,sWAA8B,mBAAmB,aAAS;IAAC,kEAC/D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,6YAAsC;IAD1C,4DAEA;IAAA,+EACI;IADgB,gXAA8B,mBAAmB,aAAS;IAC1E,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAsC;IAAtC,qGAAsC;;;IATlD,sFACI;IAAA,8IAIuB;IACvB,kKAOiB;IACrB,4DAAkB;;;IAbP,0DAAwB;IAAxB,2FAAwB;IAKd,0DAAuB;IAAvB,0FAAuB;;;IAS5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;;IAI1D,2EAA6E;IAAA,qFACzE;IAAA,+EAA2E;IAAvD,sWAA8B,eAAe,aAAS;IAAC,kEAC3E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADyC,8YAAuC;IAAhF,4DACA;IAAA,+EACI;IADgB,gXAA8B,eAAe,aAAS;IACtE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH4B,0DAAuC;IAAvC,sGAAuC;;;IAPxF,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IAOxC,+EAA0C;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;;IAI3D,2EAAiF;IAAA,wFAC7E;IAAA,+EAA+E;IAA3D,sWAA8B,mBAAmB,aAAS;IAAC,kEAC/E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADuC,wZAAiD;IAAxF,4DACA;IAAA,+EAA+E;IAA3D,gXAA8B,mBAAmB,aAAS;IAAC,yEAC/E;IAAA,4DAAW;IACf,4DAAiB;;;IAH0B,0DAAiD;IAAjD,gHAAiD;;;IAPhG,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAA+B;IAAA,4DAAW;;;IAA1C,0DAA+B;IAA/B,0GAA+B;;;;IAIrE,2EAA4E;IAAA,+EAExE;IAAA,+EAA0E;IAAtD,sWAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADsC,wYAAiC;IAAvE,4DACA;IAAA,+EAA0E;IAAtD,gXAA8B,cAAc,aAAS;IAAC,yEAC1E;IAAA,4DAAW;IACf,4DAAiB;;;IAHyB,0DAAiC;IAAjC,gGAAiC;;;IAR/E,sFACI;IAAA,8IAIO;IACP,kKAKiB;IACrB,4DAAkB;;;IAXP,0DAAmB;IAAnB,uFAAmB;IAKT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAIrD,2EAA4E;IAAA,8EACxE;IAAA,+EAA0E;IAAtD,sWAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD0C,wYAAiC;IAA3E,4DACA;IAAA,+EACI;IADgB,gXAA8B,cAAc,aAAS;IACrE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH6B,0DAAiC;IAAjC,gGAAiC;;;IAPnF,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAmB;IAAnB,uFAAmB;IAIT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAKrD,2EAAiF;IAAA,4EAC7E;IAAA,+EACI;IADgB,sWAA8B,mBAAmB,aAAS;IAC1E,kEAAM;IAAA,4DAAW;IACzB,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD4C,6YAAsC;IAAlF,4DACA;IAAA,+EACI;IADgB,gXAA8B,mBAAmB,aAAS;IAC1E,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH+B,0DAAsC;IAAtC,qGAAsC;;;IAP1F,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAIlE,gFAAwF;;;IACxF,gFAA8F;;;;;ADnK/G,MAAM,mBAAmB;CAW/B;AACD;;GAEG;AAWI,MAAM,4BAA4B;IA0BvC,YAAoB,QAAqB,EAAU,aAA4B,EAAU,EAAe,EAAS,QAAkB,EACzH,GAAsB,EAAS,eAA8B;QADnD,aAAQ,GAAR,QAAQ,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAU;QACzH,QAAG,GAAH,GAAG,CAAmB;QAAS,oBAAe,GAAf,eAAe,CAAe;QAnBvE,yBAAoB,GAAa,CAAC,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,EAAC,aAAa,CAAC,CAAC;QAC9I,SAAI,GAAG,CAAC,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAG1G,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,aAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAKtB,aAAQ,GAAQ,IAAI,IAAI,EAAE,CAAC;IAK3B,CAAC;IACD,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,GAAE;YAC/D,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,EAAC;gBAC5H,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,YAAY,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE;YACX,MAAM,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACpB,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,MAAM,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC;YAClE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,YAAY,CAAC;YAChE,MAAM,EAAC,GAAG;SACX;QACD,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CACpF,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;iBAChH;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7D,2EAA2E;gBAC3E,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC/C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBAChE,OAAO;aACR;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAChB;IACH,CAAC;IAGD,oBAAoB,CAAC,aAAa,EAAE,EAAE;QACpC,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;SACtC;QAED,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SAEpC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAE/B;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SACpC;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,EAAE,CAAC;SAC/C;QACD,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChD,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG;gBACT,eAAe,EAAE,SAAS,CAAC,aAAa,EAAE,cAAc,EAAE,SAAS,CAAC,WAAW,EAAE,cAAc,EAAE,SAAS,CAAC,YAAY;gBACvH,kBAAkB,EAAE,SAAS,CAAC,sBAAsB,EAAE,QAAQ,EAAE,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,MAAM;aAC7G,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAkB,0CAAU,CAAC,QAAQ,EAAE,CAAC;QAEtD,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,2BAA2B,CAAC,CAAC;QAC/E,8CAAc,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;IAE7D,CAAC;IAED,SAAS;QACP,IAAI,GAAG,GAAG,IAAI,2CAAK,CAAC,EAAE,uCAAuC;SAE5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChD,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,sBAAsB;gBAC9G,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;YAE1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC9D,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAE,IAAI,CAAC,EAAE;gBAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAErG,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBAChE,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAExC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QAEF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/B,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;IAE5C,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,+BAA+B;QAE/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAClG,OAAO,GAAG,CAAC;IAEb,CAAC;;wGA5NU,4BAA4B;4GAA5B,4BAA4B;;;;;;;;;;;qFAJ5B,CAAC,wDAAQ,CAAC;QC1CvB,yEAEI;QACA,yEAEI;QACA,yEAEI;QAAA,yEAEI;QAAA,0EAC+C;QAAA,uDAC/C;QAAA,4DAAO;QAMX,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EACI;QADiC,oJAAS,iBAAa,IAAC;QACxD,2EAAU;QAAA,6EAAiB;QAAA,4DAAW;QAC1C,4DAAS;QAAA,yEACT;QAAA,6EACI;QADiC,qJAAS,eAAW,IAAC;QACtD,4EAAU;QAAA,0EAAc;QAAA,4DAAW;QACvC,4DAAS;QACb,4DAAM;QACN,+EACI;QAAA,oFACI;QAAA,4EAEI;QAAA,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,iFAEJ;QAFoB,0JAAS,uBAAmB,IAAC;QAA7C,4DAEJ;QAAA,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EAEA;QAAA,wFAA+E;QAC/E,qFAAiE;QACrE,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEAGA;QAAA,wFAA6E;QAC7E,qFAA+D;QACnE,4DAAiB;QACjB,2EACI;QAAA,gFAC6B;QADiB,uJAAS,0BAAsB,IAAC;QACjD,sEAAU;QAAA,4DAAW;QAAA,yEAClD;QAAA,gFAC4B;QADmB,uJAAS,0BAAsB,IAAC;QACnD,mEAAO;QAAA,4DAAW;QAClD,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;QACX,2EACI;QAAA,2EACI;QAAA,qFAGI;QAAA,6EACI;QAAA,mJAakB;QAClB,qIAA2E;QAC/E,qEAAe;QACf,6EACI;QAAA,mJAckB;QAClB,qIAAyE;QAC7E,qEAAe;QACf,6EACI;QAAA,mJAWkB;QAClB,qIAA0E;QAC9E,qEAAe;QACf,6EACI;QAAA,mJAWkB;QAClB,qIAAoF;QACxF,qEAAe;QACf,6EACI;QAAA,mJAYkB;QAClB,qIAAoE;QACxE,qEAAe;QACf,6EACI;QAAA,mJAWkB;QAClB,qIAAoE;QACxE,qEAAe;QAEf,6EACI;QAAA,mJAWkB;QAClB,qIAAyE;QAC7E,qEAAe;QAGf,iJAAwF;QACxF,iJAA8F;QAClG,4DAAY;QAEZ,oFAAiF;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;QArLc,0DAA0C;QAA1C,oNAA0C;QAAC,0DAC/C;QAD+C,6HAC/C;QAmBU,2DAAkB;QAAlB,+EAAkB;QAUI,2DAA+B;QAA/B,8EAA+B;QAEd,0DAAqB;QAArB,oEAAqB;QAKtC,0DAA6B;QAA7B,8EAA6B;QAGZ,0DAAmB;QAAnB,oEAAmB;QAe5B,2DAAyB;QAAzB,sFAAyB;QAqHzB,2DAAqC;QAArC,qGAAqC;QACxB,0DAA8B;QAA9B,sGAA8B;QAGjD,0DAAkC;QAAlC,mJAAkC;g5IDlJtE,+DAAc;6FAKf,4BAA4B;cAVxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;gBACrD,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;uhBAM+B,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;YACH,UAAU;kBAAlC,uDAAS;mBAAC,YAAY;YAMK,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACH,QAAQ;kBAA9B,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AExDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AAGnB;AAIX;AACA;AACA;AAErB;AAGc;AACb;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;ICsDO,2EAA6E;IAAA,uFAC5D;IAAA,+EAC8C;IAAvD,sWAA8B,eAAe,aAAS;IAAC,kEAC3D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,+YAAwC;IAD5C,4DAEA;IAAA,+EACI;IADgB,gXAA8B,eAAe,aAAS;IACtE,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAwC;IAAxC,uGAAwC;;;IARpD,sFACI;IAAA,8IAGuB;IACvB,kKAOiB;IACrB,4DAAkB;;;IAZP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IASxC,+EAA0C;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;;IAI5D,2EAC2B;IAAA,qFACV;IAAA,+EACkD;IAA3D,sWAA8B,mBAAmB,aAAS;IAAC,kEAC/D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,6YAAsC;IAD1C,4DAEA;IAAA,+EACI;IADgB,gXAA8B,mBAAmB,aAAS;IAC1E,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAsC;IAAtC,qGAAsC;;;IATlD,sFACI;IAAA,8IAIuB;IACvB,kKAOiB;IACrB,4DAAkB;;;IAbP,0DAAwB;IAAxB,2FAAwB;IAKd,0DAAuB;IAAvB,0FAAuB;;;IAS5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;;IAI1D,2EAA6E;IAAA,qFACzE;IAAA,+EAA2E;IAAvD,sWAA8B,eAAe,aAAS;IAAC,kEAC3E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADyC,8YAAuC;IAAhF,4DACA;IAAA,+EACI;IADgB,gXAA8B,eAAe,aAAS;IACtE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH4B,0DAAuC;IAAvC,sGAAuC;;;IAPxF,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IAOxC,+EAA0C;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;;IAI3D,2EAAiF;IAAA,wFAC7E;IAAA,+EAA+E;IAA3D,sWAA8B,mBAAmB,aAAS;IAAC,kEAC/E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADuC,wZAAiD;IAAxF,4DACA;IAAA,+EAA+E;IAA3D,gXAA8B,mBAAmB,aAAS;IAAC,yEAC/E;IAAA,4DAAW;IACf,4DAAiB;;;IAH0B,0DAAiD;IAAjD,gHAAiD;;;IAPhG,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAA+B;IAAA,4DAAW;;;IAA1C,0DAA+B;IAA/B,0GAA+B;;;;IAIrE,2EAA4E;IAAA,+EAExE;IAAA,+EAA0E;IAAtD,sWAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADsC,wYAAiC;IAAvE,4DACA;IAAA,+EAA0E;IAAtD,gXAA8B,cAAc,aAAS;IAAC,yEAC1E;IAAA,4DAAW;IACf,4DAAiB;;;IAHyB,0DAAiC;IAAjC,gGAAiC;;;IAR/E,sFACI;IAAA,8IAIO;IACP,kKAKiB;IACrB,4DAAkB;;;IAXP,0DAAmB;IAAnB,uFAAmB;IAKT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAIrD,2EAA4E;IAAA,8EACxE;IAAA,+EAA0E;IAAtD,sWAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD0C,wYAAiC;IAA3E,4DACA;IAAA,+EACI;IADgB,gXAA8B,cAAc,aAAS;IACrE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH6B,0DAAiC;IAAjC,gGAAiC;;;IAPnF,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAmB;IAAnB,uFAAmB;IAIT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAKrD,2EAAiF;IAAA,4EAC7E;IAAA,+EACI;IADgB,sWAA8B,mBAAmB,aAAS;IAC1E,kEAAM;IAAA,4DAAW;IACzB,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD4C,6YAAsC;IAAlF,4DACA;IAAA,+EACI;IADgB,gXAA8B,mBAAmB,aAAS;IAC1E,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH+B,0DAAsC;IAAtC,qGAAsC;;;IAP1F,sFACI;IAAA,8IAGO;IACP,kKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAIlE,gFAAwF;;;IACxF,gFAA8F;;;;;ADnK/G,MAAM,mBAAmB;CAa/B;AACD;;GAEG;AAWI,MAAM,4BAA4B;IA2BvC,YAAoB,QAAqB,EAAU,aAA4B,EAAU,EAAe,EAAS,QAAkB,EACzH,GAAsB,EAAS,eAA8B;QADnD,aAAQ,GAAR,QAAQ,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAU;QACzH,QAAG,GAAH,GAAG,CAAmB;QAAS,oBAAe,GAAf,eAAe,CAAe;QAnBvE,yBAAoB,GAAa,CAAC,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,EAAC,aAAa,CAAC,CAAC;QAC9I,SAAI,GAAG,CAAC,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAG1G,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,aAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAKtB,aAAQ,GAAQ,IAAI,IAAI,EAAE,CAAC;IAK3B,CAAC;IACD,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,GAAE;YAC/D,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,EAAC;gBAC5H,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,YAAY,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,EAAE,EAAE;YACX,MAAM,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACpB,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAEjE,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE;YACpC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SAC9C;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,MAAM,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,MAAM,EAAC,GAAG;YACV,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC;YAClE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,YAAY,CAAC;SACjE;QACD,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CACpF,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;iBAChH;gBACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACpE,2EAA2E;gBAC3E,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;gBACtD,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBAChE,OAAO;aACR;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAChB;IACH,CAAC;IAGD,oBAAoB,CAAC,aAAa,EAAE,EAAE;QACpC,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;SACtC;QAED,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SAEpC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAE/B;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SACpC;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,EAAE,CAAC;SAC/C;QACD,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnE,IAAI,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACvD,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG;gBACT,eAAe,EAAE,SAAS,CAAC,aAAa,EAAE,cAAc,EAAE,SAAS,CAAC,WAAW,EAAE,cAAc,EAAE,SAAS,CAAC,YAAY;gBACvH,kBAAkB,EAAE,SAAS,CAAC,sBAAsB,EAAE,QAAQ,EAAE,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,MAAM;aAC7G,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QAGD,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAkB,0CAAU,CAAC,QAAQ,EAAE,CAAC;QAEtD,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,+BAA+B,CAAC,CAAC;QACnF,8CAAc,CAAC,QAAQ,EAAE,oCAAoC,CAAC,CAAC;IAEjE,CAAC;IAED,oBAAoB;IACpB,+BAA+B;IAC/B,IAAI;IAEJ,SAAS;QACP,IAAI,GAAG,GAAG,IAAI,2CAAK,CAAC,EAAE,uCAAuC;SAE5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnE,IAAI,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACvD,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,sBAAsB,EAAE,SAAS,CAAC,MAAM;gBACpI,SAAS,CAAC,MAAM,CAAC,CAAC;YAEpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC9D,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAE,IAAI,CAAC,EAAE;gBAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,+BAA+B,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAEzG,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBAChE,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAExC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QAEF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/B,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAEhD,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,+BAA+B;QAE/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAClG,OAAO,GAAG,CAAC;IAEb,CAAC;;wGAnOU,4BAA4B;4GAA5B,4BAA4B;;;;;;;;;;;qFAJ5B,CAAC,wDAAQ,CAAC;QC5CvB,yEAEI;QACA,yEAEI;QACA,yEAEI;QAAA,yEAEI;QAAA,0EAC+C;QAAA,uDAC/C;QAAA,4DAAO;QAMX,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EACI;QADiC,oJAAS,iBAAa,IAAC;QACxD,2EAAU;QAAA,6EAAiB;QAAA,4DAAW;QAC1C,4DAAS;QAAA,yEACT;QAAA,6EACI;QADiC,qJAAS,eAAW,IAAC;QACtD,4EAAU;QAAA,0EAAc;QAAA,4DAAW;QACvC,4DAAS;QACb,4DAAM;QACN,+EACI;QAAA,oFACI;QAAA,4EAEI;QAAA,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,iFAEJ;QAFoB,0JAAS,uBAAmB,IAAC;QAA7C,4DAEJ;QAAA,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EAEA;QAAA,wFAA+E;QAC/E,qFAAiE;QACrE,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEAGA;QAAA,wFAA6E;QAC7E,qFAA+D;QACnE,4DAAiB;QACjB,2EACI;QAAA,gFAC6B;QADiB,uJAAS,0BAAsB,IAAC;QACjD,sEAAU;QAAA,4DAAW;QAAA,yEAClD;QAAA,gFAC4B;QADmB,uJAAS,0BAAsB,IAAC;QACnD,mEAAO;QAAA,4DAAW;QAClD,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;QACX,2EACI;QAAA,2EACI;QAAA,qFAGI;QAAA,6EACI;QAAA,mJAakB;QAClB,qIAA2E;QAC/E,qEAAe;QACf,6EACI;QAAA,mJAckB;QAClB,qIAAyE;QAC7E,qEAAe;QACf,6EACI;QAAA,mJAWkB;QAClB,qIAA0E;QAC9E,qEAAe;QACf,6EACI;QAAA,mJAWkB;QAClB,qIAAoF;QACxF,qEAAe;QACf,6EACI;QAAA,mJAYkB;QAClB,qIAAoE;QACxE,qEAAe;QACf,6EACI;QAAA,mJAWkB;QAClB,qIAAoE;QACxE,qEAAe;QAEf,6EACI;QAAA,mJAWkB;QAClB,qIAAyE;QAC7E,qEAAe;QAGf,iJAAwF;QACxF,iJAA8F;QAClG,4DAAY;QAEZ,oFAAiF;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;QArLc,0DAA0C;QAA1C,oNAA0C;QAAC,0DAC/C;QAD+C,6HAC/C;QAmBU,2DAAkB;QAAlB,+EAAkB;QAUI,2DAA+B;QAA/B,8EAA+B;QAEd,0DAAqB;QAArB,oEAAqB;QAKtC,0DAA6B;QAA7B,8EAA6B;QAGZ,0DAAmB;QAAnB,oEAAmB;QAe5B,2DAAgC;QAAhC,6FAAgC;QAqHhC,2DAAqC;QAArC,qGAAqC;QACxB,0DAA8B;QAA9B,sGAA8B;QAGjD,0DAAkC;QAAlC,mJAAkC;g5IDhJtE,+DAAc;6FAKf,4BAA4B;cAVxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;gBACrD,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;uhBAO+B,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;YACH,UAAU;kBAAlC,uDAAS;mBAAC,YAAY;YAMK,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACH,QAAQ;kBAA9B,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AE3DvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACe;AAC4D;AACZ;AACG;AACJ;AACvC;;;AAC/D,MAAM,MAAM,GAAY;IACpB;QACI,IAAI,EAAG,0BAA0B,EAAC,SAAS,EAAG,+HAAgC,EAAC,WAAW,EAAE,CAAC,4EAAS,CAAC;KAC1G;IACD;QACI,IAAI,EAAG,sBAAsB,EAAC,SAAS,EAAG,mHAA4B,EAAC,WAAW,EAAE,CAAC,4EAAS,CAAC;KAClG;IACD;QACI,IAAI,EAAG,uBAAuB,EAAC,SAAS,EAAG,sHAA6B,EAAC,WAAW,EAAE,CAAC,4EAAS,CAAC;KACpG;IACD;QACI,IAAI,EAAG,sBAAsB,EAAC,SAAS,EAAG,mHAA4B,EAAC,WAAW,EAAE,CAAC,4EAAS,CAAC;KAClG;CAGJ;AAOM,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,kBAJ1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGd,2BAA2B,uFAHzB,4DAAY;6FAGd,2BAA2B;cALvC,sDAAQ;eAAC;gBACN,OAAO,EAAG,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACzC,OAAO,EAAG,CAAC,4DAAY,CAAC;aAC3B;;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AAGnB;AAIX;AACA;AACA;AAErB;AAGc;AACb;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;ICsDO,2EAA6E;IAAA,uFAC5D;IAAA,+EAC8C;IAAvD,0WAA8B,eAAe,aAAS;IAAC,kEAC3D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,mZAAwC;IAD5C,4DAEA;IAAA,+EACI;IADgB,oXAA8B,eAAe,aAAS;IACtE,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAwC;IAAxC,uGAAwC;;;IARpD,sFACI;IAAA,kJAGuB;IACvB,sKAOiB;IACrB,4DAAkB;;;IAZP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IASxC,+EAA0C;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;;IAI5D,2EAC2B;IAAA,qFACV;IAAA,+EACkD;IAA3D,0WAA8B,mBAAmB,aAAS;IAAC,kEAC/D;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EAEA;IADI,iZAAsC;IAD1C,4DAEA;IAAA,+EACI;IADgB,oXAA8B,mBAAmB,aAAS;IAC1E,0EACJ;IAAA,4DAAW;IACf,4DAAiB;;;IAJT,0DAAsC;IAAtC,qGAAsC;;;IATlD,sFACI;IAAA,kJAIuB;IACvB,sKAOiB;IACrB,4DAAkB;;;IAbP,0DAAwB;IAAxB,2FAAwB;IAKd,0DAAuB;IAAvB,0FAAuB;;;IAS5C,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;;IAI1D,2EAA6E;IAAA,qFACzE;IAAA,+EAA2E;IAAvD,0WAA8B,eAAe,aAAS;IAAC,kEAC3E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADyC,kZAAuC;IAAhF,4DACA;IAAA,+EACI;IADgB,oXAA8B,eAAe,aAAS;IACtE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH4B,0DAAuC;IAAvC,sGAAuC;;;IAPxF,sFACI;IAAA,kJAGO;IACP,sKAKiB;IACrB,4DAAkB;;;IAVP,0DAAoB;IAApB,uFAAoB;IAIV,0DAAmB;IAAnB,sFAAmB;;;IAOxC,+EAA0C;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;;IAI3D,2EAAiF;IAAA,wFAC7E;IAAA,+EAA+E;IAA3D,0WAA8B,mBAAmB,aAAS;IAAC,kEAC/E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADuC,4ZAAiD;IAAxF,4DACA;IAAA,+EAA+E;IAA3D,oXAA8B,mBAAmB,aAAS;IAAC,yEAC/E;IAAA,4DAAW;IACf,4DAAiB;;;IAH0B,0DAAiD;IAAjD,gHAAiD;;;IAPhG,sFACI;IAAA,kJAGO;IACP,sKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAuB;IAAvB,2FAAuB;;;IAO5C,+EAA0C;IAAA,uDAA+B;IAAA,4DAAW;;;IAA1C,0DAA+B;IAA/B,0GAA+B;;;;IAIrE,2EAA4E;IAAA,+EAExE;IAAA,+EAA0E;IAAtD,0WAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADsC,4YAAiC;IAAvE,4DACA;IAAA,+EAA0E;IAAtD,oXAA8B,cAAc,aAAS;IAAC,yEAC1E;IAAA,4DAAW;IACf,4DAAiB;;;IAHyB,0DAAiC;IAAjC,gGAAiC;;;IAR/E,sFACI;IAAA,kJAIO;IACP,sKAKiB;IACrB,4DAAkB;;;IAXP,0DAAmB;IAAnB,uFAAmB;IAKT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;;IAIrD,2EAA4E;IAAA,8EACxE;IAAA,+EAA0E;IAAtD,0WAA8B,cAAc,aAAS;IAAC,kEAC1E;IAAA,4DAAW;IACf,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD0C,4YAAiC;IAA3E,4DACA;IAAA,+EACI;IADgB,oXAA8B,cAAc,aAAS;IACrE,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH6B,0DAAiC;IAAjC,gGAAiC;;;IAPnF,sFACI;IAAA,kJAGO;IACP,sKAKiB;IACrB,4DAAkB;;;IAVP,0DAAmB;IAAnB,uFAAmB;IAIT,0DAAkB;IAAlB,sFAAkB;;;IAOvC,+EAA0C;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,kGAAuB;;;;IAK7D,2EAAiF;IAAA,4EAC7E;IAAA,+EACI;IADgB,0WAA8B,mBAAmB,aAAS;IAC1E,kEAAM;IAAA,4DAAW;IACzB,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IAD4C,iZAAsC;IAAlF,4DACA;IAAA,+EACI;IADgB,oXAA8B,mBAAmB,aAAS;IAC1E,yEAAa;IAAA,4DAAW;IAChC,4DAAiB;;;IAH+B,0DAAsC;IAAtC,qGAAsC;;;IAP1F,sFACI;IAAA,kJAGO;IACP,sKAKiB;IACrB,4DAAkB;;;IAVP,0DAAwB;IAAxB,4FAAwB;IAId,0DAAgB;IAAhB,oFAAgB;;;IAOrC,+EAA0C;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAIlE,gFAAwF;;;IACxF,gFAA8F;;;;;ADnK/G,MAAM,uBAAuB;CAanC;AACD;;GAEG;AAWI,MAAM,gCAAgC;IA2B3C,YAAoB,QAAqB,EAAU,aAA4B,EAAU,EAAe,EAAS,QAAkB,EACzH,GAAsB,EAAS,eAA8B;QADnD,aAAQ,GAAR,QAAQ,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAU;QACzH,QAAG,GAAH,GAAG,CAAmB;QAAS,oBAAe,GAAf,eAAe,CAAe;QAnBvE,yBAAoB,GAAa,CAAC,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,EAAC,aAAa,CAAC,CAAC;QAC9I,SAAI,GAAG,CAAC,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAG1G,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,iBAAY,GAAG,KAAK,CAAC;QACrB,aAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAKtB,aAAQ,GAAQ,IAAI,IAAI,EAAE,CAAC;IAK3B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,GAAE;YAC/D,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,EAAC;gBAC5H,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,YAAY,GAAG,IAAI,uBAAuB,EAAE,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE;YACX,MAAM,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACpB,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,qBAAqB;QACnB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACxC,IAAI,MAAM,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC;YAClE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,YAAY,CAAC;SACjE;QACD,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CACpF,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;iBAC5G;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC3D,2EAA2E;gBAC3E,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC/C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBAChE,OAAO;aACR;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAChB;IACH,CAAC;IAGD,oBAAoB,CAAC,aAAa,EAAE,EAAE;QACpC,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;SACtC;QAED,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SAEpC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAE/B;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;SACpC;QACD,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,EAAE,CAAC;SAC/C;QACD,IAAI,aAAa,IAAI,eAAe,EAAE;YACpC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;QACD,IAAI,aAAa,IAAI,cAAc,EAAE;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG;gBACT,eAAe,EAAE,OAAO,CAAC,aAAa,EAAE,cAAc,EAAE,OAAO,CAAC,WAAW,EAAE,cAAc,EAAE,OAAO,CAAC,YAAY;gBACjH,kBAAkB,EAAE,OAAO,CAAC,sBAAsB,EAAE,QAAQ,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,MAAM;aACvG,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QAGD,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAkB,0CAAU,CAAC,QAAQ,EAAE,CAAC;QAEtD,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,+BAA+B,CAAC,CAAC;QACnF,8CAAc,CAAC,QAAQ,EAAE,oCAAoC,CAAC,CAAC;IAEjE,CAAC;IAED,oBAAoB;IACpB,+BAA+B;IAC/B,IAAI;IAEJ,SAAS;QACP,IAAI,GAAG,GAAG,IAAI,2CAAK,CAAC,EAAE,uCAAuC;SAE5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,sBAAsB,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YAE9I,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC9D,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC1B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAEnB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE;YAC9D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAE,IAAI,CAAC,EAAE;gBAClB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,+BAA+B,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAEzG,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAChC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAE,CAAC;gBAChE,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAExC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClF,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QAEF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/B,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAEhD,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,+BAA+B;QAE/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAClG,OAAO,GAAG,CAAC;IAEb,CAAC;;gHAlOU,gCAAgC;gHAAhC,gCAAgC;;;;;;;;;;;qFAJhC,CAAC,wDAAQ,CAAC;QC5CvB,yEAEI;QACA,yEAEI;QACA,yEAEI;QAAA,yEAEI;QAAA,0EAC+C;QAAA,uDAC/C;QAAA,4DAAO;QAMX,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,4EACI;QADiC,wJAAS,iBAAa,IAAC;QACxD,2EAAU;QAAA,6EAAiB;QAAA,4DAAW;QAC1C,4DAAS;QAAA,yEACT;QAAA,6EACI;QADiC,yJAAS,eAAW,IAAC;QACtD,4EAAU;QAAA,0EAAc;QAAA,4DAAW;QACvC,4DAAS;QACb,4DAAM;QACN,+EACI;QAAA,oFACI;QAAA,4EAEI;QAAA,2EACI;QAAA,sFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,iFAEJ;QAFoB,8JAAS,uBAAmB,IAAC;QAA7C,4DAEJ;QAAA,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EAEA;QAAA,wFAA+E;QAC/E,qFAAiE;QACrE,4DAAiB;QACjB,sFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEAGA;QAAA,wFAA6E;QAC7E,qFAA+D;QACnE,4DAAiB;QACjB,2EACI;QAAA,gFAC6B;QADiB,2JAAS,2BAAuB,IAAC;QAClD,sEAAU;QAAA,4DAAW;QAAA,yEAClD;QAAA,gFAC4B;QADmB,2JAAS,2BAAuB,IAAC;QACpD,mEAAO;QAAA,4DAAW;QAClD,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;QACX,2EACI;QAAA,2EACI;QAAA,qFAGI;QAAA,6EACI;QAAA,uJAakB;QAClB,yIAA2E;QAC/E,qEAAe;QACf,6EACI;QAAA,uJAckB;QAClB,yIAAyE;QAC7E,qEAAe;QACf,6EACI;QAAA,uJAWkB;QAClB,yIAA0E;QAC9E,qEAAe;QACf,6EACI;QAAA,uJAWkB;QAClB,yIAAoF;QACxF,qEAAe;QACf,6EACI;QAAA,uJAYkB;QAClB,yIAAoE;QACxE,qEAAe;QACf,6EACI;QAAA,uJAWkB;QAClB,yIAA4E;QAChF,qEAAe;QAEf,6EACI;QAAA,uJAWkB;QAClB,yIAAyE;QAC7E,qEAAe;QAGf,qJAAwF;QACxF,qJAA8F;QAClG,4DAAY;QAEZ,oFAAiF;QACrF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;QArLc,0DAA0C;QAA1C,oNAA0C;QAAC,0DAC/C;QAD+C,6HAC/C;QAmBU,2DAAyB;QAAzB,sFAAyB;QAUH,2DAA+B;QAA/B,8EAA+B;QAEd,0DAAqB;QAArB,oEAAqB;QAKtC,0DAA6B;QAA7B,8EAA6B;QAGZ,0DAAmB;QAAnB,oEAAmB;QAe5B,2DAAyB;QAAzB,sFAAyB;QAqHzB,2DAAqC;QAArC,qGAAqC;QACxB,0DAA8B;QAA9B,sGAA8B;QAGjD,0DAAkC;QAAlC,mJAAkC;45IDhJtE,+DAAc;6FAKf,gCAAgC;cAV5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,4CAA4C;gBACzD,SAAS,EAAE,CAAC,4CAA4C,CAAC;gBACzD,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;uhBAO+B,eAAe;kBAA5C,uDAAS;mBAAC,iBAAiB;YACH,UAAU;kBAAlC,uDAAS;mBAAC,YAAY;YAMK,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACH,QAAQ;kBAA9B,uDAAS;mBAAC,UAAU;;;;;;;;;;;;;;AE5DvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACe;AACA;AAC2D;AACZ;AACG;AACJ;AAClD;AAC0B;;AAI9E,MAAM,UAAU,GAAE,CAAE,+HAAgC,EAAC,mHAA4B,EAAC,sHAA6B,EAAC,mHAA4B,CAAC,CAAC;AAC9I,MAAM,kBAAkB,GAAE,EAAE,CAAC;AAOtB,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAJrB,CAAC,qEAAY,EAAE,2FAA2B,EAAC,oEAAgB,EAAC,iEAAc,CAAC;mIAI1E,oBAAoB,mBARb,+HAAgC,EAAC,mHAA4B,EAAC,sHAA6B,EAAC,mHAA4B,aAI/H,qEAAY,EAAE,2FAA2B,EAAC,oEAAgB,EAAC,iEAAc;6FAIzE,oBAAoB;cALhC,sDAAQ;eAAC;gBACN,OAAO,EAAC,CAAC,qEAAY,EAAE,2FAA2B,EAAC,oEAAgB,EAAC,iEAAc,CAAC;gBACnF,YAAY,EAAG,CAAC,UAAU,EAAC,kBAAkB,CAAC;gBAC9C,eAAe,EAAG,CAAC,kBAAkB,CAAC;aACzC","file":"app-main-dashboard-project-payment-reports-payment-reports-module-es2015.js","sourcesContent":["\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class PendingPaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Gateway_transactionid: string;\r\n  bank_transactionid: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'pending-payment-report',\r\n  templateUrl: './pending-payment-report.component.html',\r\n  styleUrls: ['./pending-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class PendingPaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: PendingPaymentReport;\r\n  dataSource: MatTableDataSource<PendingPaymentReport>;\r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  chargerForm: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  pendingPayment: PendingPaymentReport[];\r\n  dataChargerSource: MatTableDataSource<PendingPaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new PendingPaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.chargerForm = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getPendingTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataChargerSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataChargerSource.paginator) {\r\n      this.dataChargerSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getPendingTransaction() {\r\n    let formValues = this.chargerForm.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      status:\"P\",\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n    }\r\n    this.reportservice.getPendingTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.pendingPayment = resp.data;\r\n          for (var i = 0; i < this.pendingPayment.length; i++) {\r\n            this.pendingPayment[i].dateConvert = this.datepipe.transform(this.pendingPayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataChargerSource = new MatTableDataSource(this.pendingPayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataChargerSource.paginator = this.rfidPaginator;\r\n          this.dataChargerSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var pendingpay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': pendingpay.TransactionId, 'Charger Type': pendingpay.ChargerType, 'Payment Mode': pendingpay.payment_mode,\r\n        'Charger Trans Id': pendingpay.charger_transaction_id, 'Status': pendingpay.Status, 'Amount': pendingpay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Pending Transaction Report');\r\n    XLSX.writeFile(workBook, 'Pending Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  // getChargerLogs(){\r\n  //   this.getChargerReportCW();\r\n  // }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var pendingpay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [pendingpay.TransactionId, pendingpay.ChargerType, pendingpay.payment_mode, pendingpay.charger_transaction_id, pendingpay.Status,\r\n         pendingpay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Pending Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Pendiing Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"chargerForm\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!chargerForm.value.fromDate ? chargerForm.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getPendingTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getPendingTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataChargerSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class RefundPaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'refund-payment-report',\r\n  templateUrl: './refund-payment-report.component.html',\r\n  styleUrls: ['./refund-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class RefundPaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: RefundPaymentReport;\r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  refundPayment: RefundPaymentReport[];\r\n  dataSource: MatTableDataSource<RefundPaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new RefundPaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.form = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getRefundTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getRefundTransaction() {\r\n    let formValues = this.form.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n      status:\"R\"\r\n    }\r\n    this.reportservice.getPendingTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.refundPayment = resp.data;\r\n          for (var i = 0; i < this.refundPayment.length; i++) {\r\n            this.refundPayment[i].dateConvert = this.datepipe.transform(this.refundPayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.refundPayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataSource.paginator = this.rfidPaginator;\r\n          this.dataSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var refundpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': refundpay.TransactionId, 'Charger Type': refundpay.ChargerType, 'Payment Mode': refundpay.payment_mode,\r\n        'Charger Trans Id': refundpay.charger_transaction_id, 'Status': refundpay.Status, 'Amount': refundpay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Refund Transaction Report');\r\n    XLSX.writeFile(workBook, 'Refund Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var refundpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [refundpay.TransactionId, refundpay.ChargerType, refundpay.payment_mode, refundpay.charger_transaction_id, \r\n            refundpay.Status, refundpay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Refund Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Refund Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!form.value.fromDate ? form.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getRefundTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getRefundTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class CanclePaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Gateway_transactionid: string;\r\n  bank_transactionid: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'cancle-payment-report',\r\n  templateUrl: './cancle-payment-report.component.html',\r\n  styleUrls: ['./cancle-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CanclePaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: CanclePaymentReport;\r\n  dataSource: MatTableDataSource<CanclePaymentReport>;\r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  canclePayment: CanclePaymentReport[];\r\n  dataChargerSource: MatTableDataSource<CanclePaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new CanclePaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.form = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getCancleTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataChargerSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataChargerSource.paginator) {\r\n      this.dataChargerSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getCancleTransaction() {\r\n    let formValues = this.form.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      status:\"C\",\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n    }\r\n    this.reportservice.getPendingTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.canclePayment = resp.data;\r\n          for (var i = 0; i < this.canclePayment.length; i++) {\r\n            this.canclePayment[i].dateConvert = this.datepipe.transform(this.canclePayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataChargerSource = new MatTableDataSource(this.canclePayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataChargerSource.paginator = this.rfidPaginator;\r\n          this.dataChargerSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var canclepay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': canclepay.TransactionId, 'Charger Type': canclepay.ChargerType, 'Payment Mode': canclepay.payment_mode,\r\n        'Charger Trans Id': canclepay.charger_transaction_id, 'Status': canclepay.Status, 'Amount': canclepay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Cancelled  Transaction Report');\r\n    XLSX.writeFile(workBook, 'Cancelled  Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  // getChargerLogs(){\r\n  //   this.getChargerReportCW();\r\n  // }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataChargerSource.filteredData.length; i++) {\r\n      var canclepay = this.dataChargerSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [canclepay.TransactionId, canclepay.ChargerType, canclepay.payment_mode, canclepay.charger_transaction_id, canclepay.Status, \r\n        canclepay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Cancelled  Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Cancelled  Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!form.value.fromDate ? form.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getCancleTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getCancleTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataChargerSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"dateConvertSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SuccessfulPaymentReportComponent } from './successful-payment-report/successful-payment-report.component';\r\nimport { CanclePaymentReportComponent } from './cancle-payment-report/cancle-payment-report.component';\r\nimport { PendingPaymentReportComponent } from './pending-payment-report/pending-payment-report.component';\r\nimport { RefundPaymentReportComponent } from './refund-payment-report/refund-payment-report.component'\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'successfulPaymentReports',component : SuccessfulPaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path : 'cancelPaymentReports',component : CanclePaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path : 'pendingPaymentReports',component : PendingPaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path : 'refundPaymentReports',component : RefundPaymentReportComponent,canActivate: [AuthGuard]\r\n    },\r\n    \r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class PaymentReportsRoutingModule{}","\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ReportService } from 'app/shared/services/report/report.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n\r\nexport class SuccessfulPaymentReport {\r\n  TransactionId: string;\r\n  Amount: string;\r\n  ChargerType: string;\r\n  payment_mode: string;\r\n  charger_transaction_id: string;\r\n  Date: string;\r\n  dateConvert: string;\r\n  price_per_unit: string;\r\n  energy_consumped: string;\r\n  Gateway_transactionid: string;\r\n  bank_transactionid: string;\r\n  Status: string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'successful-payment-report',\r\n  templateUrl: './successful-payment-report.component.html',\r\n  styleUrls: ['./successful-payment-report.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class SuccessfulPaymentReportComponent implements OnInit {\r\n\r\n  filterEntity: SuccessfulPaymentReport;\r\n  \r\n  @ViewChild('energyPaginator') energyPaginator: MatPaginator;\r\n  @ViewChild('energySort') energySort: MatSort;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  chargerForm: FormGroup;\r\n  displayedRfidColumns: string[] = ['TransactionId', 'ChargerType', 'payment_mode', 'charger_transaction_id', 'Status', 'Amount','dateConvert'];\r\n  head = [['Transaction Id', 'Charger Type', 'Payment Mode', 'Charger Transaction Id', 'Status', 'Amount']];\r\n  @ViewChild('rfidPaginator') rfidPaginator: MatPaginator;\r\n  @ViewChild('rfidSort') rfidSort: MatSort;\r\n  transIdSearch = false;\r\n  payModeSearch = false;\r\n  charTransIdSearch = false;\r\n  chargerTypeSearch = false;\r\n  amountSearch = false;\r\n  dateConvertSearch = false;\r\n  statusSearch = false;\r\n  tempDate = new Date();\r\n  exportedData: any[];\r\n  energyCounsumedData: any;\r\n  succPayment: SuccessfulPaymentReport[];\r\n  dataSource: MatTableDataSource<SuccessfulPaymentReport>;\r\n  currDate: any = new Date();\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private reportservice: ReportService, private fb: FormBuilder, public datepipe: DatePipe,\r\n    private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.filterEntity = new SuccessfulPaymentReport();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.chargerForm = this.fb.group({\r\n      name: ['',],\r\n      toDate: [new Date()],\r\n      fromDate: [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n    this.getSuccessTransaction();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getSuccessTransaction() {\r\n    let formValues = this.chargerForm.value;\r\n    let params = {\r\n      station_id: 2918,\r\n      f_date: this.datepipe.transform(formValues.fromDate, \"yyyy-MM-dd\"),//this.dateService.convertToDDMMYYYY(formValues.fromDate),//!!formValues.fromDate ? this.dateService.convertToYYYYMMDD(formValues.fromDate._d) : '',\r\n      t_date: this.datepipe.transform(formValues.toDate, \"yyyy-MM-dd\"), //this.dateService.convertToDDMMYYYY(formValues.toDate)\r\n    }\r\n    this.reportservice.getSuccessTransactionCW(this.localStorage.userId, params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.succPayment = resp.data;\r\n          for (var i = 0; i < this.succPayment.length; i++) {\r\n            this.succPayment[i].dateConvert = this.datepipe.transform(this.succPayment[i].Date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.succPayment);\r\n          //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n          this.dataSource.paginator = this.rfidPaginator;\r\n          this.dataSource.sort = this.rfidSort;\r\n        } else {\r\n          this.snackBar.open(resp.err_code, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n  changeRfidVisibility(visibleOption, ev) {\r\n    if (visibleOption == 'transIdSearch') {\r\n      this.transIdSearch = !this.transIdSearch;\r\n      this.filterEntity.TransactionId = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'chargerTypeSearch') {\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.ChargerType = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'amountSearch') {\r\n      this.amountSearch = !this.amountSearch;\r\n      this.filterEntity.Amount = \"\";\r\n\r\n    }\r\n    if (visibleOption == 'dateConvertSearch') {\r\n      this.dateConvertSearch = !this.dateConvertSearch;\r\n      this.filterEntity.dateConvert = '';\r\n    }\r\n    if (visibleOption == 'charTransIdSearch') {\r\n      this.charTransIdSearch = !this.charTransIdSearch;\r\n      this.filterEntity.charger_transaction_id = '';\r\n    }\r\n    if (visibleOption == 'payModeSearch') {\r\n      this.payModeSearch = !this.payModeSearch;\r\n      this.filterEntity.payment_mode = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.Status = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var succpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'TransactionId': succpay.TransactionId, 'Charger Type': succpay.ChargerType, 'Payment Mode': succpay.payment_mode,\r\n        'Charger Trans Id': succpay.charger_transaction_id, 'Status': succpay.Status, 'Amount': succpay.Amount\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Successful Transaction Report');\r\n    XLSX.writeFile(workBook, 'Successful Transaction Report.xlsx');\r\n\r\n  }\r\n\r\n  // getChargerLogs(){\r\n  //   this.getChargerReportCW();\r\n  // }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var succpay = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [succpay.TransactionId, succpay.ChargerType, succpay.payment_mode, succpay.charger_transaction_id, succpay.Status, succpay.Amount];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Successful Transaction Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Successful Transaction report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                    [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!-- <button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button> -->\r\n            </div>\r\n        </div>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth  \" fxLayout=\"column\">\r\n            <div style=\"text-align: left ; margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n                <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                    <mat-icon>sim_card_download</mat-icon>\r\n                </button>&nbsp;&nbsp;\r\n                <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                    <mat-icon>picture_as_pdf</mat-icon>\r\n                </button>\r\n            </div>\r\n            <mat-card style=\"padding:16px  !important;\">\r\n                <mat-card-content>\r\n                    <form [formGroup]=\"chargerForm\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                                <mat-label>Search</mat-label>\r\n                                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\"\r\n                                    #input autocomplete=\"password\">\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>From Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidStratDate\" formControlName=\"fromDate\" #fromDate\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidStratDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidStratDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                                <mat-label>To Date</mat-label>\r\n                                <input matInput [matDatepicker]=\"rfidEndDate\" formControlName=\"toDate\"\r\n                                    [min]=\"!!chargerForm.value.fromDate ? chargerForm.value.fromDate._d : '2020-01-01'\"\r\n                                    [max]=\"currDate\" disabled>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"rfidEndDate\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #rfidEndDate disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                            <div fxFlex=\"10\">\r\n                                <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getSuccessTransaction()\"\r\n                                    style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                                <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getSuccessTransaction()\"\r\n                                    style=\"cursor:pointer;\">refresh</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n            <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n                <div class=\"content\" style=\"min-width: auto;\">\r\n                    <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                        [filterType]=\"filterType\" matSort #rfidSort=\"matSort\" class=\"mat-elevation-z8\">\r\n\r\n                        <ng-container matColumnDef=\"TransactionId\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!transIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Transaction Id\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('transIdSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"transIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Name \"\r\n                                        [(ngModel)]=\"filterEntity.TransactionId\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('transIdSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.TransactionId}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"ChargerType\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\"\r\n                                    style=\"display: flex;\">Charger Type\r\n                                    &nbsp;&nbsp; <mat-icon matSuffix\r\n                                        (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">search\r\n                                    </mat-icon> </span>\r\n                                <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Charger Serial No \"\r\n                                        [(ngModel)]=\"filterEntity.ChargerType\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('chargerTypeSearch',$event)\">\r\n                                        highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.ChargerType}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"payment_mode\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!payModeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Payment Mode &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"payModeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.payment_mode\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('payModeSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payment_mode}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"charger_transaction_id\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!charTransIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Trans Id&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"charTransIdSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\"CPO Name\" [(ngModel)]=\"filterEntity.charger_transaction_id\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('charTransIdSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.charger_transaction_id}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Status\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                    &nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Log Id\" [(ngModel)]=\"filterEntity.Status\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('statusSearch',$event)\">highlight_off\r\n                                    </mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.Status}} </mat-cell>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Amount\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!amountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Amount&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">search\r\n                                    </mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"amountSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Alarm Name\" [(ngModel)]=\"filterEntity.Amount\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('amountSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.payable_amount}} </mat-cell>\r\n                        </ng-container>\r\n\r\n                        <ng-container matColumnDef=\"dateConvert\">\r\n                            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                                <span *ngIf=\"!dateConvertSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date&nbsp;&nbsp;\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        search</mat-icon>\r\n                                </span>\r\n                                <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                                    class=\"list_input\">\r\n                                    <input matInput placeholder=\" Created Date\" [(ngModel)]=\"filterEntity.dateConvert\">\r\n                                    <mat-icon matSuffix (click)=\"changeRfidVisibility('dateConvertSearch',$event)\">\r\n                                        highlight_off</mat-icon>\r\n                                </mat-form-field>\r\n                            </mat-header-cell>\r\n                            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateConvert}} </mat-cell>\r\n                        </ng-container>\r\n\r\n\r\n                        <mat-header-row mat-header-row *matHeaderRowDef=\"displayedRfidColumns\"></mat-header-row>\r\n                        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedRfidColumns;\"></mat-header-row>\r\n                    </mat-table>\r\n\r\n                    <mat-paginator #rfidPaginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { SuccessfulPaymentReportComponent } from './successful-payment-report/successful-payment-report.component';\r\nimport { CanclePaymentReportComponent } from './cancle-payment-report/cancle-payment-report.component';\r\nimport { PendingPaymentReportComponent } from './pending-payment-report/pending-payment-report.component';\r\nimport { RefundPaymentReportComponent } from './refund-payment-report/refund-payment-report.component'\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { PaymentReportsRoutingModule } from './payment-reports-routing.module'\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\n\r\nconst COMPONENTS =[ SuccessfulPaymentReportComponent,CanclePaymentReportComponent,PendingPaymentReportComponent,RefundPaymentReportComponent];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, PaymentReportsRoutingModule,FuseSharedModule,CdkTableModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\nexport class PaymentReportsModule\r\n{\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}