{"version":3,"sources":["./src/app/main/user-management/manage-user-station/manage-user-station.module.ts","./src/app/main/user-management/manage-user-station/action-dialog/action-dialog.component.ts","./src/app/main/user-management/manage-user-station/action-dialog/action-dialog.component.html","./src/app/main/user-management/manage-user-station/manage-user-station-routing.module.ts","./src/app/main/user-management/manage-user-station/list/list.component.ts","./src/app/main/user-management/manage-user-station/list/list.component.html","./src/app/main/user-management/manage-user-station/manage-user-station-crud/routes.ts","./src/app/main/user-management/manage-user-station/manage-user-station-crud/manage-user-station-crud.component.ts","./src/app/main/user-management/manage-user-station/manage-user-station-crud/manage-user-station-crud.component.html","./src/app/main/user-management/manage-user-station/view-dialog/view-dialog.component.ts","./src/app/main/user-management/manage-user-station/view-dialog/view-dialog.component.html","./src/app/main/user-management/manage-user-station/create/create.component.ts","./src/app/main/user-management/manage-user-station/create/create.component.html"],"names":[],"mappings":"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","file":"manage-user-station-manage-user-station-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ManageUserStationCrudComponent } from './manage-user-station-crud/manage-user-station-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ManageUserStationRoutingModule } from './manage-user-station-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ManageUserStationCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ManageUserStationRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ManageUserStationModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  users: any;\r\n  cposName: any;\r\n  stations: any;\r\n  radiobuttonList: any;\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsUser: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n\r\n  constructor(private fb: FormBuilder, private datePipe: DatePipe, private router: Router, private cpoService: CpoService, private snackBar: MatSnackBar,\r\n    private clientService: ClientService, private userService: UserService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.getClients();\r\n    this.getCPOS(this.params.data.client_id);\r\n    this.getUserList(this.params.data.client_id)\r\n    this.getDefaultStation();\r\n   \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpos: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      stationList: ['', [Validators.required]],\r\n      defaultStation: ['', [Validators.required]],\r\n      status: [{ value: false }, [Validators.required]]\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    //this.pins.push(formValues.pins);\r\n    const params: any = {\r\n      user_id: formValues.userList.id,\r\n      station_data: this.radiobuttonList.map(v => ({ station_id: v.station_id, created_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_station: v.default_station })),\r\n      status: this.status == true ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n\r\n    }\r\n    if (this.isEditMode) {\r\n      params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n    } else {\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n\r\n    if (this.isEditMode) {\r\n      this.userService.UserStationMappingV1(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open('User Station Update successfully!', 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/userManagement/manageUserStation/crud']);\r\n\r\n          }\r\n          else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              this.snackBar.open(MessageConstant.nameDuplicateCity, 'Dismiss', { duration: 5000 });\r\n            }\r\n            else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else { }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    // this.form.get('client').setValue(params.data.name);\r\n    // this.form.get('cpos').setValue(params.data.name);\r\n    // this.form.get('userList').setValue(params.data.state_name);\r\n    // this.form.get('stationList').setValue(params.data.PIN);\r\n    // this.form.get('defaultStation').setValue(params.data.defaultStation);\r\n    //this.setDefaultPin(sta_id);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  onCPOChange(cpo){\r\n    this.form.get('userList').setValue(\"\");\r\n    this.form.get('stationList').setValue(\"\");\r\n    this.radiobuttonList = [];\r\n    this.cdr.detectChanges();\r\n  \r\n}\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCPOS(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cposName = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpos').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpos.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n          );\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getUserList(id) {\r\n    this.userService.getActiveUsersByClient(id).subscribe(\r\n      (resp: any) => {\r\n        this.users = resp.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.users.find(c => c.id == this.params.data.user_id);\r\n          this.form.get('userList').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.username),\r\n            map(username => username ? this._filterUserModels(username) : this.users)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayUser(item: any): string {\r\n    return item && item.username ? item.username : '';\r\n  }\r\n  private _filterUserModels(username: string): any[] {\r\n    const filterValue = username.toLowerCase();\r\n    return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onClientChange(client) {\r\n    this.getCPOS(client.id);\r\n    this.getUserList(client.id);\r\n    this.form.get('userList').setValue(\"\");\r\n    this.form.get('stationList').setValue(\"\");\r\n    this.radiobuttonList = [];\r\n  }\r\n\r\n  onUserChange(user) {\r\n    // this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n    this.userService.getStationListWithStationAssignedToUser(this.form.controls.client.value.id, user.id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            var userStation = this.stations[i];\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  onStationChange(event) {\r\n    this.radiobuttonList = event.value;\r\n  }\r\n  radioChange(e) {\r\n    for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n      if (e.value == this.radiobuttonList[i].station_id) {\r\n        this.radiobuttonList[i].default_station = 'Y'\r\n\r\n      } else {\r\n        this.radiobuttonList[i].default_station = 'N'\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultStation() {\r\n    this.userService.getStationListWithStationAssignedToUser(this.params.data.client_id, this.params.data.user_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            var userStation = this.stations[i];\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n          for (var k = 0; k < this.radiobuttonList; k++) {\r\n            if (this.radiobuttonList[k].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue((this.radiobuttonList[k]));\r\n            }\r\n          }\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage User Station</mat-toolbar>\r\n\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            required>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n            (optionSelected)='onClientChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>CPO</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpos\"  (optionSelected)='onCPOChange($event.option.value)' autocomplete=\"off\" [matAutocomplete]=\"cpoAuto\" required>\r\n          <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\"\r\n           (optionSelected)='onCPOChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo\">account_circle\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpos').invalid\">Please select cpo </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>User</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\" [matAutocomplete]=\"userListAuto\"\r\n            required style=\"text-transform: none;\">\r\n          <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n            (optionSelected)='onUserChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n              {{option.username}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Station</mat-label>\r\n          <mat-select formControlName=\"stationList\" multiple (selectionChange)=\"onStationChange($event)\">\r\n            <mat-option *ngFor=\"let option of stations\" [value]=\"option\">\r\n              {{option.station_name}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Station\">help</mat-icon>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <div fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-radio-group aria-label=\"defaultStation\" formControlName=\"defaultStation\">\r\n            <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.station_id\" name=\"stationRadio\"\r\n              (change)=\"radioChange($event)\" [checked]=\"'Y' == radioButton.default_station ? true : false\">\r\n              {{radioButton.station_name}}&nbsp;&nbsp;\r\n            </mat-radio-button>\r\n            <mat-error *ngIf=\"form.get('defaultStation').hasError('required')\">Please select default station\r\n            </mat-error>\r\n          </mat-radio-group>\r\n        </div>\r\n\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?'Save'\r\n          : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageUserStationCrudComponent } from './manage-user-station-crud/manage-user-station-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './manage-user-station-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ManageUserStationCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ManageUserStationRoutingModule{}","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CityService } from 'app/shared/services/geographics/city.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { StateService } from 'app/shared/services/geographics/state.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\n\r\n\r\n\r\nexport class ManageUserStation {\r\n  f_name: string;\r\n  l_name: string;\r\n  station_id: number;\r\n  cpo_id:number;\r\n  client_id:number;\r\n  station_name: string;\r\n  default_station: string;\r\n  created_date: string;\r\n  status: string;\r\n  statusString: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['station_name', 'f_name', 'default_station', 'status', 'action'];\r\n  head = [['Station Name', 'First Name', 'Default Station', 'Status ']];\r\n  dataSource: MatTableDataSource<ManageUserStation>;\r\n\r\n  manageUserStation: ManageUserStation[];\r\n  filterEntity: ManageUserStation;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  defStationSearch = false;\r\n  nameSearch = false;\r\n  stationSearch=false;\r\n  statusSearch = false;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  userStanList: any[];\r\n  constructor(private stateService: StateService, public dialog: MatDialog, private userService: UserService,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getAllUserStationMapping();\r\n    this.filterEntity = new ManageUserStation();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllUserStationMapping() {\r\n    this.userService.getAllUserStationMapping(this.localStorage.userId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.data != null) {\r\n          this.userStanList = resp.data;\r\n          \r\n          for (var i = 0; i < this.userStanList.length; i++) {\r\n            if (this.userStanList[i].status == 'N') {\r\n              this.userStanList[i].statusString = 'Inactive';\r\n            } else {\r\n              this.userStanList[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.userStanList);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.userService.deleteUserStationMapping(id, this.localStorage.userId).subscribe(\r\n          (data: any) => {\r\n            if (data.status == true) {\r\n              this.getAllUserStationMapping();\r\n              this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n            } else {\r\n              this.getAllUserStationMapping();\r\n              this.snackBar.open(data.message, 'Dismiss', { duration: 2000 });\r\n            }\r\n\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllUserStationMapping();\r\n    });\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllUserStationMapping();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n\r\n    if (visibleOption == 'defStationSearch') {\r\n      this.defStationSearch = !this.defStationSearch;\r\n      this.filterEntity.default_station = '';\r\n    }\r\n    if (visibleOption == 'stationSearch') {\r\n      this.stationSearch = !this.stationSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.f_name = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var userstation = this.dataSource.filteredData[i];\r\n      var data = { 'Station name': userstation.station_name, 'Name': userstation.f_name, 'Default Station': userstation.default_station, 'Status ': userstation.statusString };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Manage User Station');\r\n    XLSX.writeFile(workBook, 'Manage User Station.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen  \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var userstation = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [userstation.station_name, userstation.f_name, userstation.default_station, userstation.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Manage User Station Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Manage User Station report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n     <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Name\" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"f_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.f_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.f_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"default_station\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!defStationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Default Station &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('defStationSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"defStationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Default Station\" [(ngModel)]=\"filterEntity.default_station\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('defStationSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.default_station}} </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.map_id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent, canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-user-station-crud',\r\n  templateUrl: './manage-user-station-crud.component.html',\r\n  styleUrls: ['./manage-user-station-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ManageUserStationCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Station-User List', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"manageUserStation\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"stationUserList\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Station-User List', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/manageUserStation/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  users: any;\r\n  stations: any;\r\n  cposName:any;\r\n  radiobuttonList: any;\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsUser: Observable<any[]>;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private datePipe: DatePipe, private clientService: ClientService, private userService: UserService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cpoService: CpoService,) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClients();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.getCPOS(this.params.data.client_id);\r\n    this.getUserList(this.params.data.client_id);\r\n    this.getDefaultStation();\r\n  \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpos: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      stationList: ['', [Validators.required]],\r\n      defaultStation: ['', [Validators.required]],\r\n      status: [{ value: false }, [Validators.required]]\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n\r\n    const params: any = {\r\n      user_id: formValues.userList.id,\r\n      station_data: this.radiobuttonList.map(v => ({ station_id: v.id, create_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_role: v.default_role })),\r\n      status: this.status == true ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n    if (this.isEditMode) {\r\n      params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n    } else {\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n\r\n    // if (this.isEditMode) {\r\n    //   this.cityService.update(params).subscribe(\r\n    //     (cityData: any) => {\r\n    //       if (cityData.status == true) {\r\n    //         this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n    //         this.dialogRef.close();\r\n    //       } else {\r\n    //         this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    //         this.dialogRef.close();\r\n    //       }\r\n\r\n    //     },\r\n    //     (err) => {\r\n    //       this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n    //     }\r\n    //   )\r\n    // } else {\r\n    //   this.cityService.create(params).subscribe(\r\n    //     (data: any) => {\r\n    //       this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n    //       this.dialogRef.close();\r\n    //     },\r\n    //     (err) => {\r\n    //       this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n    //     }\r\n    //   )\r\n\r\n    // }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  assignValues(params) {\r\n\r\n    // this.form.get('client').setValue(params.data.name);\r\n    // this.form.get('cpos').setValue(params.data.name);\r\n    // this.form.get('userList').setValue(params.data.state_name);\r\n    // this.form.get('stationList').setValue(params.data.PIN);\r\n    // this.form.get('defaultStation').setValue(params.data.defaultStation);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCPOS(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cposName = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpos').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpos.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n          );\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getUserList(id) {\r\n    this.userService.getActiveUsersByClient(id).subscribe(\r\n      (resp: any) => {\r\n        this.users = resp.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.users.find(c => c.id == this.params.data.user_id);\r\n          this.form.get('userList').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.username),\r\n            map(username => username ? this._filterUserModels(username) : this.users)\r\n          );\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  displayUser(item: any): string {\r\n    return item && item.username ? item.username : '';\r\n  }\r\n  private _filterUserModels(username: string): any[] {\r\n    const filterValue = username.toLowerCase();\r\n    return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onClientChange(client) {\r\n    this.getCPOS(client.id);\r\n    this.getUserList(client.id);\r\n    this.form.get('userList').setValue('');\r\n    this.form.get('stationList').setValue('');\r\n    this.form.get('defaultStation').setValue('')\r\n  }\r\n\r\n  onUserChange(user) {\r\n    // this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n    this.userService.getStationListWithStationAssignedToUser(this.form.controls.client.value.id, user.id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            var userStation = this.stations[i];\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  onStationChange(event) {\r\n    this.radiobuttonList = event.value;\r\n  }\r\n  radioChange(e) {\r\n    for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n      if (e.value == this.radiobuttonList[i].station_id) {\r\n        this.radiobuttonList[i].default_station = 'Y'\r\n\r\n      } else {\r\n        this.radiobuttonList[i].default_station = 'N'\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  getDefaultStation() {\r\n    this.userService.getStationListWithStationAssignedToUser(this.params.data.client_id, this.params.data.user_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status != 'false') {\r\n          this.stations = resp.data;\r\n          var selectedList = [];\r\n          for (let i = 0; i < this.stations.length; i++) {\r\n            var userStation = this.stations[i];\r\n            if (this.stations[i].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue(this.stations[i]);\r\n            }\r\n            if (userStation.map_id != null && userStation.map_id != undefined) {\r\n              selectedList.push(userStation);\r\n            }\r\n          }\r\n          this.form.get('stationList').setValue(selectedList);\r\n          this.radiobuttonList = selectedList;\r\n          for (var k = 0; k < this.radiobuttonList; k++) {\r\n            if (this.radiobuttonList[k].default_station == 'Y') {\r\n              this.form.get('defaultStation').setValue((this.radiobuttonList[k]));\r\n            }\r\n          }\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage User Station</mat-toolbar>\r\n\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" readonly>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n          (optionSelected)='onClientChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n          </mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>CPO</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"cpos\" autocomplete=\"off\" [matAutocomplete]=\"cpoAuto\" required>\r\n        <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo\">account_circle\r\n          </mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('cpos').invalid\">Please select cpo </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>User</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\" [matAutocomplete]=\"userListAuto\"\r\n          readonly style=\"text-transform: none;\">\r\n        <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n          (optionSelected)='onUserChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n            {{option.username}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Station</mat-label>\r\n        <mat-select formControlName=\"stationList\" multiple (selectionChange)=\"onStationChange($event)\"disabled=\"true\" >\r\n          <mat-option *ngFor=\"let option of stations\" [value]=\"option\">\r\n            {{option.station_name}}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Station\">help</mat-icon>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-radio-group aria-label=\"defaultStation\" formControlName=\"defaultStation\" >\r\n          <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.id\" name=\"roleRadio\"\r\n            (change)=\"radioChange($event)\" [checked]=\"'Y' == radioButton.default_station ? true : false\" disabled=\"true\">\r\n            {{radioButton.station_name}}&nbsp;&nbsp;\r\n          </mat-radio-button>\r\n          <mat-error *ngIf=\"form.get('defaultStation').hasError('required')\">Please select default station\r\n          </mat-error>\r\n        </mat-radio-group>\r\n      </div>\r\n\r\n      <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\" #toggleElemen\r\n        disabled=\"true\">\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n        routerLink=\"/userManagement/manageUserStation/crud\">Cancel</button>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserRoleService } from 'app/shared/services/user/user-role.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === 'string') {\r\n            return { 'invalidAutocompleteObject': { value: control.value } }\r\n        }\r\n        return null  /* valid option selected */\r\n    }\r\n}\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html',\r\n    styleUrls: ['./create.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n    form: FormGroup;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsCpo: Observable<any[]>;\r\n    filteredOptionsUser: Observable<any[]>;\r\n    filteredOptionsRole: Observable<any[]>;\r\n    clients: any;\r\n    cposName: any;\r\n    users: any;\r\n    stations: any;\r\n    station_id: any;\r\n    default_station: any;\r\n    localStorage: any;\r\n    radiobuttonList: any;\r\n    currentCheckedValue = null;\r\n    messageConstant: MessageConstant;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    status = true;\r\n    selectedStation: any;\r\n    defaultSelectedStation: any;\r\n    default_checkedStation: any;\r\n    constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router, private cpoService: CpoService,\r\n        private clientService: ClientService, private userService: UserService, private roleService: RoleService,private cdr:ChangeDetectorRef) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n        this.getClients();\r\n        // this.getUserList();\r\n        //this.getRoleList();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n        this.form = this.fb.group({\r\n            client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            cpos: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            stationList: ['', [Validators.required]],\r\n            defaultStation: ['', [Validators.required]],\r\n            status: [{ value: false }, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            let params = {\r\n                user_id: formValues.userList.id,\r\n                station_data: this.radiobuttonList.map(v => ({ station_id: v.station_id, created_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_station: v.default_station })),\r\n                status: this.status == true ? 'Y' : 'N',\r\n                created_by: this.localStorage.userId,\r\n                modify_by: this.localStorage.userId\r\n            }\r\n\r\n            this.userService.UserStationMappingV1(params).subscribe(\r\n                (resp: any) => {\r\n                    if (resp.status == true) {\r\n                        this.snackBar.open(MessageConstant.userStationAssign, 'Dismiss', { duration: 5000 });\r\n                        this.router.navigate(['userManagement/manageUserStation/crud']);\r\n                    } else {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n\r\n                },\r\n                (err) => {\r\n                    this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                }\r\n            )\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get('email').hasError('required')\r\n            ? 'You must enter a value'\r\n            : form.get('email').hasError('email')\r\n                ? 'Not a valid email'\r\n                : '';\r\n    }\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n            (data: any) => {\r\n                this.clients = data;\r\n                const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n                this.form.get('client').setValue(toSelect);\r\n                this.getCPOS(toSelect.id);\r\n                this.getUserList(toSelect.id);\r\n                this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterClientModels(name) : this.clients)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n    onClientChange(client) {\r\n        this.getCPOS(client.id);\r\n        this.getUserList(client.id);\r\n        this.form.get('cpos').setValue(\"\");\r\n        this.form.get('userList').setValue(\"\");\r\n        this.form.get('stationList').setValue(\"\");\r\n        this.radiobuttonList = [];\r\n        this.cdr.detectChanges();\r\n    }\r\n    onCPOChange(cpo){\r\n        this.form.get('userList').setValue(\"\");\r\n        this.form.get('stationList').setValue(\"\");\r\n        this.radiobuttonList = [];\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterClientModels(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getCPOS(client_id) {\r\n        this.cpoService.getCpoByClientId(client_id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                this.filteredOptionsCpo = this.form.controls.cpos.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n                    );\r\n            }, (err) => { }\r\n        )\r\n    }\r\n    displayCpo(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n    private _filterCharCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getUserList(id) {\r\n        this.userService.getActiveUsersByClient(id).subscribe(\r\n            (resp: any) => {\r\n                this.users = resp.data;\r\n                this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.username),\r\n                        map(username => username ? this._filterUserModels(username) : this.users)\r\n                    );\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    displayUser(item: any): string {\r\n        return item && item.username ? item.username : '';\r\n    }\r\n\r\n    private _filterUserModels(username: string): any[] {\r\n        const filterValue = username.toLowerCase();\r\n        return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n\r\n\r\n    onStationChange(event) {\r\n        this.radiobuttonList = event.value;\r\n    }\r\n\r\n    radioChange(e) {\r\n        for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n            if (e.value == this.radiobuttonList[i].station_id) {\r\n                this.radiobuttonList[i].default_station = 'Y'\r\n\r\n            } else {\r\n                this.radiobuttonList[i].default_station = 'N'\r\n\r\n            }\r\n        }\r\n    }\r\n    onUserChange(user) {\r\n        this.userService.getStationListWithStationAssignedToUser(this.form.controls.client.value.id, user.id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.stations = resp.data;\r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.stations.length; i++) {\r\n                        if (this.stations[i].default_station == 'Y') {\r\n                            this.form.get('defaultStation').setValue(this.stations[i]);\r\n                        }\r\n                        var userStation = this.stations[i];\r\n                        if (userStation.map_id != null && userStation.map_id != undefined) {\r\n                            selectedList.push(userStation);\r\n                        }\r\n                    }\r\n                    this.form.get('stationList').setValue(selectedList);\r\n                    this.radiobuttonList = selectedList;\r\n                }\r\n            }, (err) => {  }\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Client</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n                    required>\r\n                <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n                    (optionSelected)='onClientChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">account_circle\r\n                    </mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>CPO</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"cpos\" autocomplete=\"off\" [matAutocomplete]=\"cpoAuto\"\r\n                    required >\r\n                <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\"\r\n                (optionSelected)='onCPOChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo\">account_circle\r\n                    </mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('cpos').invalid\">Please select cpo </mat-error>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n        \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>User</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\"\r\n                    [matAutocomplete]=\"userListAuto\" required style=\"text-transform: none;\">\r\n                <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n                    (optionSelected)='onUserChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n                        {{option.username}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n                <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Station</mat-label>\r\n                <mat-select formControlName=\"stationList\" multiple (selectionChange)=\"onStationChange($event)\">\r\n                    <mat-option *ngFor=\"let option of stations\" [value]=\"option\">\r\n                        {{option.station_name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Station\">help</mat-icon>\r\n               \r\n            </mat-form-field>\r\n\r\n            \r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <div fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Default Station</mat-label>&nbsp;&nbsp;\r\n                <mat-radio-group aria-label=\"defaultStation\" formControlName=\"defaultStation\">\r\n                    <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.station_id\"\r\n                        name=\"roleRadio\" (change)=\"radioChange($event)\"\r\n                        [checked]=\"'Y' == radioButton.default_station ? true : false\">\r\n                        {{radioButton.station_name}}&nbsp;&nbsp;\r\n                    </mat-radio-button>\r\n                    <mat-error *ngIf=\"form.get('defaultStation').hasError('required')\">Please select default station\r\n                    </mat-error>\r\n                </mat-radio-group>\r\n            </div>\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n                color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n                {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n        </div>\r\n\r\n        <!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            \r\n        </div> -->\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n            <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n                routerLink=\"/userManagement/user-role/crud/list\">Cancel</button>\r\n        </div>\r\n\r\n    </form>\r\n</div>"],"sourceRoot":"webpack:///"}