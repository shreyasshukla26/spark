{"version":3,"sources":["webpack:///src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-crud/cpo-rfid-crud.component.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-crud/cpo-rfid-crud.component.html","webpack:///src/app/main/asset/rfid-management/cpo-rfid/action-dialog/action-dialog.component.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/action-dialog/action-dialog.component.html","webpack:///src/app/main/asset/rfid-management/cpo-rfid/create/create.component.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/create/create.component.html","webpack:///src/app/shared/services/rfid/rfid.service.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/view-dialog/view-dialog.component.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/view-dialog/view-dialog.component.html","webpack:///src/app/main/asset/rfid-management/cpo-rfid/list/list.component.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/list/list.component.html","webpack:///src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-crud/routes.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid.module.ts","webpack:///src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-routing.module.ts"],"names":["CpoRfidCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","nav_list","nav_list_with_tab","filter","x","id","objectData","children","y","objectChildData","z","childData","isDefaultRoutePermeted","t","push","label","link","navigate","selector","templateUrl","styleUrls","encapsulation","None","animations","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","ActionDialogComponent","fb","clientService","snackBar","dialogRef","data","cpoService","rfidService","isEditMode","status","initialize","getClientName","params","rfidList","rfidData","action","form","group","client_name","required","cpo_name","rfidlist","assignValues","getAllRfid","cpo_id","getCpoByclient","CLIENT_ID","getActiveClientsCW","userId","toSelect","find","c","get","setValue","filteredOptionsClient","controls","valueChanges","pipe","value","name","_filterClient","err","item","filterValue","toLowerCase","option","includes","cposName","event","getCpoByClientId","filteredOptionsClientCPO","_filterClientCPO","getAllRFidsWithMappedCPOs","ListRFID","selectedList","i","length","rfid","getRFidsByCpoId","selectedRFID","close","formValues","client_id","rfid_data","map","v","rfid_id","modify_by","created_by","updatecpoRfidMapping","open","duration","createCpoRfidMapping","hasError","checked","ref","closeActionPanel","onClientChange","updateStatus","onYesClick","CreateComponent","masterService","filteredOptions","getAllRfidByCPO","onSubmit","$event","preventDefault","onCPOChange","onRfidChange","RfidService","http","apiUrl2","API_URL2","post","user_id","login_id","map_id","providedIn","ViewDialogComponent","RFID","Group","level","expanded","totalCounts","ListComponent","dialog","head","dataSource","groupByColumns","expandedRfid","expandedSubRfid","clientSearch","cpoSearch","rfidSearch","statusSearch","client","CPO","columns","field","displayedColumns","column","getactivecposcw","filterEntity","filterType","ANYWHERE","getCpoRFidMappingCW","target","trim","paginator","firstPage","resp","allData","statusString","sort","getactivecposcwwithAll","role_code","selectedCpo_id","disable","getRfidbyCpoid","filteredOptionsCPO","_filterCPO","localCpoid","getGroups","clientName","element","confirmDialogRef","disableClose","afterClosed","result","unMapRFidCpoID","width","panelClass","autoFocus","row","addGroupsNew","_allGroup","rootGroup","getGroupList","parent","groups","uniqueBy","stringify","currentColumn","subGroups","forEach","rowsInGroup","a","b","isAsc","compare","allGroup","dataRow","getSublevelNew","toString","subGroup","unshift","concat","key","seen","k","hasOwnProperty","index","findIndex","active","direction","splice","rfid_no","visibleOption","ev","stopPropagation","exportedData","filteredData","chargerModel","rf_id_no","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","COMPONENTS","COMPONENTS_DYNAMIC","CpoRfidModule","imports","declarations","entryComponents","routes","CpoRfidRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBI;;AAKE;;AACF;;;;;;;;AAJG,kGAA2B,QAA3B,EAA2B,YAA3B;;AAGD;;AAAA;;;;;;;;;;;;;;;;ADxBN;;;;;UAUaA,oB;AAYX,sCAAoBC,MAApB,EAA4CC,GAA5C,EAA4EC,eAA5E,EAA6G;AAAA;;AAAzF,eAAAF,MAAA,GAAAA,MAAA;AAAwB,eAAAC,GAAA,GAAAA,GAAA;AAAgC,eAAAC,eAAA,GAAAA,eAAA;AAV5E,eAAAC,QAAA,GAAW,CACT;AACA;AAFS,WAAX;AAQA,eAAAC,SAAA,GAAY,EAAZ;AAIC;;;;4CACiB;AAAA;;AAChB,iBAAKF,eAAL,CAAqBG,gBAArB,CAAsCC,SAAtC,CAAgD,UAAAC,eAAe,EAAI;AACjE,mBAAI,CAACC,SAAL,GAAiBD,eAAjB;;AACA,kBAAI,KAAI,CAACC,SAAL,IAAkB,IAAlB,IAA0B,KAAI,CAACA,SAAL,IAAkBC,SAA5C,IAAyD,KAAI,CAACD,SAAL,CAAeE,KAAf,IAAwB,IAAjF,IAAyF,KAAI,CAACF,SAAL,CAAeE,KAAf,IAAwBD,SAArH,EAAgI;AAC9H,qBAAI,CAACD,SAAL,GAAiBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACD;;AACD,mBAAI,CAACb,GAAL,CAASc,aAAT;AACD,aAND;AAQD;;;qCAEU;AAAA;;AACT,iBAAKF,YAAL,GAAoBF,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,gBAAIE,QAAQ,GAAG,KAAKH,YAAL,CAAkBI,iBAAjC;AACAD,oBAAQ,CAACE,MAAT,CAAgB,UAACC,CAAD,EAAO;AACrB,kBAAIA,CAAC,CAACC,EAAF,KAAS,iBAAb,EAAgC;AAC9B,sBAAI,CAACC,UAAL,GAAkBF,CAAlB;;AACA,oBAAI,MAAI,CAACE,UAAL,CAAgBC,QAAhB,IAA4Bb,SAA5B,IAAyC,MAAI,CAACY,UAAL,CAAgBC,QAAhB,IAA4B,IAAzE,EAA+E;AAC7E,wBAAI,CAACD,UAAL,CAAgBC,QAAhB,CAAyBJ,MAAzB,CAAgC,UAACK,CAAD,EAAO;AACrC,wBAAIA,CAAC,CAACH,EAAF,KAAS,gBAAb,EAA+B;AAC7B,4BAAI,CAACI,eAAL,GAAuBD,CAAvB;;AACA,0BAAI,MAAI,CAACC,eAAL,CAAqBF,QAArB,IAAiCb,SAAjC,IAA8C,MAAI,CAACe,eAAL,CAAqBF,QAArB,IAAiC,IAAnF,EAAyF;AACvF,8BAAI,CAACE,eAAL,CAAqBF,QAArB,CAA8BJ,MAA9B,CAAqC,UAACO,CAAD,EAAO;AAC1C,gCAAI,CAACC,SAAL,GAAiBD,CAAjB;;AACA,8BAAIA,CAAC,CAACL,EAAF,KAAS,UAAb,EAAyB;AACvB,gCAAIO,sBAAsB,GAAG,KAA7B;;AACA,gCAAI,MAAI,CAACD,SAAL,CAAeJ,QAAf,IAA2Bb,SAA3B,IAAwC,MAAI,CAACiB,SAAL,CAAeJ,QAAf,IAA2B,IAAvE,EAA6E;AAC3E,oCAAI,CAACI,SAAL,CAAeJ,QAAf,CAAwBJ,MAAxB,CAA+B,UAACU,CAAD,EAAO;AACpC,oCAAIA,CAAC,CAACR,EAAF,KAAS,UAAb,EAAyB;AACvBO,wDAAsB,GAAG,IAAzB;;AACA,wCAAI,CAACvB,SAAL,CAAeyB,IAAf,CAAoB;AAAEC,yCAAK,EAAE,UAAT;AAAqBC,wCAAI,EAAE;AAA3B,mCAApB;AACD;;AACD,oCAAIH,CAAC,CAACR,EAAF,KAAS,QAAb,EAAuB;AACrB,wCAAI,CAAChB,SAAL,CAAeyB,IAAf,CAAoB;AAAEC,yCAAK,EAAE,SAAT;AAAoBC,wCAAI,EAAE;AAA1B,mCAApB;AACD;AACF,+BARD;AASD;;AAED,kCAAI,CAAC5B,QAAL,GAAgB,MAAI,CAACC,SAArB;;AACA,gCAAI,CAACuB,sBAAL,EAA6B;AAC3B,oCAAI,CAAC3B,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,mDAAmD,MAAI,CAAC5B,SAAL,CAAe,CAAf,EAAkB2B,IAAtE,CAArB;AACD;AACF;AACF,yBArBD;AAsBD;AACF;AAEF,mBA7BD;AA8BD;AAEF;AACF,aArCD;AAsCD;;;;;;;yBAnEUhC,oB,EAAoB,uH,EAAA,gI,EAAA,2J;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA,iB;AAAA,e;AAAA,+pB;AAAA;AAAA;ACfjC;;AACE;;AAGE;;AAGI;;AAEI;;AAEI;;AACiD;;AACjD;;AAMJ;;AACF;;AACJ;;AACJ;;AACF;;AACI;;AAOF;;AACA;;AACF;;;;AArBsB;;AAAA;;AAA2C;;AAAA;;AAatC;;AAAA;;;;;;;qBDZb;;;;;;wEAEDA,oB,EAAoB;gBAPhC,uDAOgC;iBAPtB;AACTkC,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAOsB,U;;;;;;;;;;;UA6EpBC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTN,oBAAQ,EAAE,sBADD;AAETO,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTR,oBAAQ,EAAE,sBADD;AAETO,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBE,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTT,oBAAQ,EAAE,sBADD;AAETO,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;;;;;;;;;;;;;;;;AExGrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBY;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOJ;;AAAmD;;AACnD;;;;;;AAME;;AACE;;AACF;;;;;;AAFoE;;AAClE;;AAAA;;;;;;AAOJ;;AAAgD;;AAChD;;;;;;AAOE;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;UD1BDG,qB;AAmBX,uCAAoBC,EAApB,EAA4CC,aAA5C,EAAkFC,QAAlF,EACmBC,SADnB,EACmGC,IADnG,EAC+HC,UAD/H,EAC8JC,WAD9J,EACuL;AAAA;;AADnK,eAAAN,EAAA,GAAAA,EAAA;AAAwB,eAAAC,aAAA,GAAAA,aAAA;AAAsC,eAAAC,QAAA,GAAAA,QAAA;AAC/D,eAAAC,SAAA,GAAAA,SAAA;AAAgF,eAAAC,IAAA,GAAAA,IAAA;AAA4B,eAAAC,UAAA,GAAAA,UAAA;AAA+B,eAAAC,WAAA,GAAAA,WAAA;AAjB9J,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAAC,MAAA,GAAS,KAAT;AAcyL;;;;qCAE9K;AACT,iBAAKC,UAAL;AACA,iBAAKC,aAAL,GAFS,CAGV;AACA;;;uCAES;AAER,iBAAKzC,YAAL,GAAoBF,IAAI,CAACC,KAAL,CAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ,CAApB;AAEA,iBAAKyC,MAAL,GAAc,KAAKP,IAAnB;AACA,iBAAKQ,QAAL,GAAgB,KAAKD,MAAL,CAAYE,QAA5B;AACA,iBAAKN,UAAL,GAAkB,KAAKI,MAAL,CAAYG,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AAEA,iBAAKC,IAAL,GAAY,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AACxBC,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CADW;AAExBC,sBAAQ,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFa;AAGxBE,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAHc;AAIxBV,oBAAM,EAAG,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAJb,aAAd,CAAZ;;AAOA,gBAAI,KAAKD,UAAT,EAAoB;AAClB,mBAAKc,YAAL,CAAkB,KAAKV,MAAvB;AACA,mBAAKD,aAAL;AACA,mBAAKY,UAAL,CAAgB,KAAKX,MAAL,CAAYP,IAAZ,CAAiBmB,MAAjC;AACA,mBAAKC,cAAL,CAAoB,KAAKb,MAAL,CAAYP,IAAZ,CAAiBqB,SAArC,EAJkB,CAKpB;AACC;AAEF;;;0CACY;AAAA;;AACX;AACA,iBAAKxB,aAAL,CAAmByB,kBAAnB,CAAsC,KAAKzD,YAAL,CAAkB0D,MAAxD,EAAgEjE,SAAhE,CACE,UAAC0C,IAAD,EAAY;AACV;AACA,oBAAI,CAACa,WAAL,GAAmBb,IAAnB;;AACA,kBAAG,MAAI,CAACG,UAAR,EAAmB;AACjB;AACA,oBAAMqB,QAAQ,GAAG,MAAI,CAACX,WAAL,CAAiBY,IAAjB,CAAsB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACtD,EAAF,IAAQ,MAAI,CAACmC,MAAL,CAAYP,IAAZ,CAAiBqB,SAA7B;AAAA,iBAAvB,CAAjB;;AACE,sBAAI,CAACV,IAAL,CAAUgB,GAAV,CAAc,aAAd,EAA6BC,QAA7B,CAAsCJ,QAAtC;;AAEJ,sBAAI,CAACK,qBAAL,GAA6B,MAAI,CAAClB,IAAL,CAAUmB,QAAV,CAAmBjB,WAAnB,CAA+BkB,YAA/B,CAC5BC,IAD4B,CAE3B,iEAAU,EAAV,CAF2B,EAG3B,2DAAI,UAAAC,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,iBAAT,CAH2B,EAI3B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,MAAI,CAACC,aAAL,CAAmBD,IAAnB,CAAH,GAA8B,MAAI,CAACrB,WAA3C;AAAA,iBAAR,CAJ2B,CAA7B;AAMC;AACF,aAhBH,EAgBI,UAACuB,GAAD,EAAO,CACP;AACD,aAlBH;AAoBD;;;4CACiBC,I,EAAS;AACzB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACcG,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;wCACqBA,I,EAAY;AAChC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAK1B,WAAL,CAAiB3C,MAAjB,CAAwB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA9B,CAAP;AACD;;;2CACwBJ,I,EAAY;AACnC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKG,QAAL,CAAcxE,MAAd,CAAqB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA3B,CAAP;AACD;;;yCACcK,K,EAAK;AACpB,iBAAKvB,cAAL,CAAoBuB,KAApB;AACE,iBAAKhC,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmC,EAAnC;AACD;;;yCAEcxD,E,EAAE;AAAA;;AAEf,iBAAK6B,UAAL,CAAgB2C,gBAAhB,CAAiCxE,EAAjC,EAAqCd,SAArC,CACD,UAAC0C,IAAD,EAAY;AACP,oBAAI,CAAC0C,QAAL,GAAgB1C,IAAhB;;AACA,kBAAG,MAAI,CAACG,UAAR,EAAmB;AACjB;AACA,oBAAMqB,QAAQ,GAAG,MAAI,CAACkB,QAAL,CAAcjB,IAAd,CAAmB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACtD,EAAF,IAAQ,MAAI,CAACmC,MAAL,CAAYP,IAAZ,CAAiBmB,MAA7B;AAAA,iBAApB,CAAjB;;AACE,sBAAI,CAACR,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCJ,QAAnC;;AACJ,sBAAI,CAACqB,wBAAL,GAAgC,MAAI,CAAClC,IAAL,CAAUmB,QAAV,CAAmBf,QAAnB,CAA4BgB,YAA5B,CAC/BC,IAD+B,CAE9B,iEAAU,EAAV,CAF8B,EAG9B,2DAAI,UAAAC,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,iBAAT,CAH8B,EAI9B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,MAAI,CAACY,gBAAL,CAAsBZ,IAAtB,CAAH,GAAiC,MAAI,CAACQ,QAA9C;AAAA,iBAAR,CAJ8B,CAAhC;AAMC;AACF,aAdH,EAcI,UAACN,GAAD,EAAO,CAAE,CAdb;AAiBA;;;qCACUhE,E,EAAE;AAAA;;AACZ,iBAAK8B,WAAL,CAAiB6C,yBAAjB,CAA2C3E,EAA3C,EAA+Cd,SAA/C,CACE,UAAC0C,IAAD,EAAY;AACV,oBAAI,CAACgD,QAAL,GAAgBhD,IAAI,CAACA,IAArB;AACA,kBAAIiD,YAAY,GAAG,EAAnB;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACF,QAAL,CAAcG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,oBAAIE,IAAI,GAAG,MAAI,CAACJ,QAAL,CAAcE,CAAd,CAAX;;AACA,oBAAGE,IAAI,CAAChF,EAAL,IAAW,IAAX,IAAmBgF,IAAI,CAAChF,EAAL,IAAWX,SAAjC,EAA2C;AACzCwF,8BAAY,CAACpE,IAAb,CAAkBuE,IAAlB;AACD;AACJ,eARW,CASV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA,oBAAI,CAACzC,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCqB,YAAnC,EAvBU,CAyBX;AACC;AACA;AACA;;AAGD,aAhCH,EAgCI,UAACb,GAAD,EAAO,CACP;AACD,aAlCH;AAoCA;;;4CACiBhE,E,EAAE;AAAA;;AACnB,iBAAK8B,WAAL,CAAiBmD,eAAjB,CAAiCjF,EAAjC,EAAqCd,SAArC,CACE,UAAC0C,IAAD,EAAY;AACV;AACA,oBAAI,CAACsD,YAAL,GAAoBtD,IAAI,CAACA,IAAzB,CAFU,CAGR;AACA;AACA;AACA;AAED;AAIF,aAbH,EAaI,UAACoC,GAAD,EAAO,CACP;AACD,aAfH;AAiBA;;;kCACM;AAEN,iBAAKrC,SAAL,CAAewD,KAAf;AACD;;;6CACe;AACd,iBAAKxD,SAAL,CAAewD,KAAf;AACD;;;uCAES;AAAA;;AACR,gBAAIC,UAAU,GAAG,KAAK7C,IAAL,CAAUsB,KAA3B;AAEA,gBAAM1B,MAAM,GAAQ;AAElBkD,uBAAS,EAAGD,UAAU,CAAC3C,WAAX,CAAuBzC,EAFjB;AAGlB+C,oBAAM,EAAGqC,UAAU,CAACzC,QAAX,CAAoB3C,EAHX;AAInB;AACCsF,uBAAS,EAAEF,UAAU,CAACxC,QAAX,CAAoB2C,GAApB,CAAwB,UAAAC,CAAC;AAAA,uBAAK;AAAExF,oBAAE,EAAEwF,CAAC,CAACC;AAAR,iBAAL;AAAA,eAAzB,CALO;AAMlBzD,oBAAM,EAAG,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B,GANnB,CAOtB;;AAPsB,aAApB,CAHQ,CAYZ;;AAEI,gBAAI,KAAKD,UAAT,EAAoB;AACpBI,oBAAM,CAACnC,EAAP,GAAY,KAAKmC,MAAL,CAAYP,IAAZ,CAAiB5B,EAA7B,EACAmC,MAAM,CAACuD,SAAP,GAAmB,KAAKjG,YAAL,CAAkB0D,MADrC;AAED,aAHC,MAGI;AACJhB,oBAAM,CAACwD,UAAP,GAAoB,KAAKlG,YAAL,CAAkB0D,MAAtC;AACD;;AAEC,gBAAI,KAAKpB,UAAT,EAAoB;AACpB,mBAAKD,WAAL,CAAiB8D,oBAAjB,CAAsCzD,MAAtC,EAA8CjD,SAA9C,CACE,UAAC0C,IAAD,EAAgB;AACd,sBAAI,CAACF,QAAL,CAAcmE,IAAd,CAAmB,8BAAnB,EAAmD,SAAnD,EAA8D;AAAEC,0BAAQ,EAAE;AAAZ,iBAA9D;;AACA,sBAAI,CAACnE,SAAL,CAAewD,KAAf;AACD,eAJH,EAKE,UAACnB,GAAD,EAAS;AACP,sBAAI,CAACtC,QAAL,CAAcmE,IAAd,CAAmB,kBAAnB,EAAuC,SAAvC,EAAkD;AAAEC,0BAAQ,EAAE;AAAZ,iBAAlD;AACD,eAPH;AASD,aAVC,MAUG;AACH,mBAAKhE,WAAL,CAAiBiE,oBAAjB,CAAsC5D,MAAtC,EAA8CjD,SAA9C,CACE,UAAC0C,IAAD,EAAgB;AACd,sBAAI,CAACF,QAAL,CAAcmE,IAAd,CAAmB,oBAAnB,EAAyC,SAAzC,EAAoD;AAAEC,0BAAQ,EAAE;AAAZ,iBAApD;;AACA,sBAAI,CAACnE,SAAL,CAAewD,KAAf;AACD,eAJH,EAKE,UAACnB,GAAD,EAAS;AACP,sBAAI,CAACtC,QAAL,CAAcmE,IAAd,CAAmB,kBAAnB,EAAuC,SAAvC,EAAkD;AAAEC,0BAAQ,EAAE;AAAZ,iBAAlD;AACD,eAPH;AAUD;;AAEC,iBAAKnE,SAAL,CAAewD,KAAf,CAAqBhD,MAArB;AACD;;;0CAEeI,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACgB,GAAL,CAAS,OAAT,EAAkByC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHzD,IAAI,CAACgB,GAAL,CAAS,OAAT,EAAkByC,QAAlB,CAA2B,OAA3B,IACA,mBADA,GAEA,EAJJ;AAKD;;;uCAEY7D,M,EAAM;AAEjB;AACA;AACA,iBAAKI,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCrB,MAAM,CAACP,IAAP,CAAYgB,QAA/C;AAGA,iBAAKZ,MAAL,GAAcG,MAAM,CAACP,IAAP,CAAYI,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAAjD;AACD;;;uCAEYuC,K,EAAK;AAChB,iBAAKvC,MAAL,GAAcuC,KAAK,CAAC0B,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKjE,MAAxB;AACD;;;;;;;yBAvPUT,qB,EAAqB,2H,EAAA,wJ,EAAA,wI,EAAA,sI,EAAA,gEAoB2C,wEApB3C,C,EAoB0D,+I,EAAA,kJ;AAAA,O;;;cApB/EA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;;;ACrBlC;;AAA6D;AAAA,qBAAS,IAAA4E,gBAAA,EAAT;AAA2B,aAA3B;;AACY;;AAAK;;AAG9E;;AAAoC;;AAAgB;;AACpD;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACA;;AACE;AAAA,qBAAkB,IAAAC,cAAA,wBAAlB;AAAwD,aAAxD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAc;;AAC5F;;AACA;;AAEF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AACE;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAc;;AAC9F;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAIF;;AACA;;AAA+E;;AAAI;;AACrF;;AACA;;AACE;;AAA4E;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAE1E;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAqE;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AACzE;;AACnB;;AAAkE;AAAA,qBAAS,IAAAnB,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC5F;;AACF;;AACF;;AACF;;;;;;;;AA5DU;;AAAA;;AAK0D;;AAAA;;AACN;;AAAA;;AAEnB;;AAAA;;AAQrB;;AAAA;;AAK2C;;AAAA;;AACN;;AAAA;;AAChB;;AAAA;;AAQrB;;AAAA;;AAQqB;;AAAA;;AAQwB;;AAAA;;AAEvD;;AAAA;;AAKwF;;AAAA;;;;;;;;qBD1CnF;;;;;;wEAEJ5D,qB,EAAqB;gBAPjC,uDAOiC;iBAPvB;AACTV,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAK;AALN,W;AAOuB,U;;;;;;;;;;;;oBAoBoC,oD;qBAAO,wE;;;;;;;;AAL/CgF,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AErCniE;;AAC/D;;AAAA;;;;;;AAOJ;;AAAmD;;AACnD;;;;;;AAOE;;AACE;;AACF;;;;;;AAFoE;;AAClE;;AAAA;;;;;;AAOJ;;AAAgD;;AAChD;;;;;;AASE;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;UDxBCK,e;AAYX,iCACU/E,EADV,EAEUgF,aAFV,EAGU/E,aAHV,EAIUC,QAJV,EAKU9C,MALV,EAMUiD,UANV,EAOUC,WAPV,EAOkC;AAAA;;AANxB,eAAAN,EAAA,GAAAA,EAAA;AACA,eAAAgF,aAAA,GAAAA,aAAA;AACA,eAAA/E,aAAA,GAAAA,aAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAA9C,MAAA,GAAAA,MAAA;AACA,eAAAiD,UAAA,GAAAA,UAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AARV,eAAAE,MAAA,GAAS,KAAT;AASQ;;;;qCAEG;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AAEX,iBAAKxC,YAAL,GAAoBF,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AAEA,iBAAK6C,IAAL,GAAY,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AACxBC,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CADW;AAExBC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFc;AAGxBE,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAHc;AAIxBV,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAJZ,aAAd,CAAZ;AAMA,iBAAKyE,eAAL;AACA,iBAAKvE,aAAL,GAXW,CAYX;AAED,W,CACD;AAEA;AACA;;;;sCACYlC,E,EAAI;AACd;AACA,iBAAK0G,eAAL,CAAqB1G,EAArB;AAED,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;0CACgBA,E,EAAI;AAAA;;AAClB;AACA,iBAAK8B,WAAL,CAAiB6C,yBAAjB,CAA2C3E,EAA3C,EAA+Cd,SAA/C,CACE,UAAC0C,IAAD,EAAe;AAEb,oBAAI,CAACgD,QAAL,GAAgBhD,IAAI,CAACA,IAArB,CAFa,CAGb;;AACA,kBAAIiD,YAAY,GAAG,EAAnB;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACF,QAAL,CAAcG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,oBAAIE,IAAI,GAAG,MAAI,CAACJ,QAAL,CAAcE,CAAd,CAAX;;AACA,oBAAIE,IAAI,CAAChF,EAAL,IAAW,IAAX,IAAmBgF,IAAI,CAAChF,EAAL,IAAWX,SAAlC,EAA6C;AAC3CwF,8BAAY,CAACpE,IAAb,CAAkBuE,IAAlB;AACD;AACF;;AAGD,oBAAI,CAACzC,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCqB,YAAnC;AAED,aAhBH,EAgBK,UAACb,GAAD,EAAS,CACV;AACD,aAlBH;AAoBD;;;0CACe;AAAA;;AACd;AACA,iBAAKvC,aAAL,CAAmByB,kBAAnB,CAAsC,KAAKzD,YAAL,CAAkB0D,MAAxD,EAAgEjE,SAAhE,CACE,UAAC0C,IAAD,EAAe;AACb;AACA,oBAAI,CAACa,WAAL,GAAmBb,IAAnB;;AACA,kBAAMwB,QAAQ,GAAG,MAAI,CAACX,WAAL,CAAiBY,IAAjB,CAAsB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACtD,EAAF,IAAQ,MAAI,CAACP,YAAL,CAAkB4F,SAA9B;AAAA,eAAvB,CAAjB;;AACA,oBAAI,CAAC9C,IAAL,CAAUgB,GAAV,CAAc,aAAd,EAA6BC,QAA7B,CAAsCJ,QAAtC;;AACA,oBAAI,CAACK,qBAAL,GAA6B,MAAI,CAAClB,IAAL,CAAUmB,QAAV,CAAmBjB,WAAnB,CAA+BkB,YAA/B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAAC,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,MAAI,CAACC,aAAL,CAAmBD,IAAnB,CAAH,GAA8B,MAAI,CAACrB,WAA3C;AAAA,eAAR,CAJyB,CAA7B;;AAMA,oBAAI,CAACO,cAAL,CAAoBI,QAAQ,CAACpD,EAA7B;AACD,aAbH,EAaK,UAACgE,GAAD,EAAS,CACV;AACD,aAfH;AAiBD;;;4CACiB;AAAA;;AAChB,iBAAKP,qBAAL,GAA6B,KAAKlB,IAAL,CAAUmB,QAAV,CAAmBjB,WAAnB,CAA+BkB,YAA/B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAAC,KAAK;AAAA,qBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,aAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,qBAAIA,IAAI,GAAG,OAAI,CAACC,aAAL,CAAmBD,IAAnB,CAAH,GAA8B,OAAI,CAACrB,WAA3C;AAAA,aAAR,CAJyB,CAA7B;AAMA,iBAAKgC,wBAAL,GAAgC,KAAKlC,IAAL,CAAUmB,QAAV,CAAmBf,QAAnB,CAA4BgB,YAA5B,CAC7BC,IAD6B,CAE5B,iEAAU,EAAV,CAF4B,EAG5B,2DAAI,UAAAC,KAAK;AAAA,qBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,aAAT,CAH4B,EAI5B,2DAAI,UAAAA,IAAI;AAAA,qBAAIA,IAAI,GAAG,OAAI,CAACY,gBAAL,CAAsBZ,IAAtB,CAAH,GAAiC,OAAI,CAACQ,QAA9C;AAAA,aAAR,CAJ4B,CAAhC;AAMD;;;4CACiBL,I,EAAS;AACzB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACcG,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;wCACqBA,I,EAAY;AAChC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAK1B,WAAL,CAAiB3C,MAAjB,CAAwB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA9B,CAAP;AACD;;;2CACwBJ,I,EAAY;AACnC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKG,QAAL,CAAcxE,MAAd,CAAqB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA3B,CAAP;AACD;;;yCACcK,K,EAAO;AACpB,iBAAKvB,cAAL,CAAoBuB,KAApB;AACA,iBAAKhC,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmC,EAAnC;AACD;;;yCAEcxD,E,EAAI;AAAA;;AAEjB,iBAAK6B,UAAL,CAAgB2C,gBAAhB,CAAiCxE,EAAjC,EAAqCd,SAArC,CACE,UAAC0C,IAAD,EAAe;AACb,qBAAI,CAAC0C,QAAL,GAAgB1C,IAAhB;AACA,qBAAI,CAAC6C,wBAAL,GAAgC,OAAI,CAAClC,IAAL,CAAUmB,QAAV,CAAmBf,QAAnB,CAA4BgB,YAA5B,CAC7BC,IAD6B,CAE5B,iEAAU,EAAV,CAF4B,EAG5B,2DAAI,UAAAC,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,eAAT,CAH4B,EAI5B,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACY,gBAAL,CAAsBZ,IAAtB,CAAH,GAAiC,OAAI,CAACQ,QAA9C;AAAA,eAAR,CAJ4B,CAAhC;AAMD,aATH,EASK,UAACN,GAAD,EAAS,CAAG,CATjB;AAYD;;;qCAEU;AAAA;;AACT,gBAAIoB,UAAU,GAAG,KAAK7C,IAAL,CAAUsB,KAA3B,CADS,CAET;AAEA;;AACA,gBAAI1B,MAAM,GAAG;AACXkD,uBAAS,EAAED,UAAU,CAAC3C,WAAX,CAAuBzC,EADvB;AAEX+C,oBAAM,EAAEqC,UAAU,CAACzC,QAAX,CAAoB3C,EAFjB;AAGX;AACA;AACAsF,uBAAS,EAAEF,UAAU,CAACxC,QAAX,CAAoB2C,GAApB,CAAwB,UAAAC,CAAC;AAAA,uBAAK;AAAExF,oBAAE,EAAEwF,CAAC,CAACC;AAAR,iBAAL;AAAA,eAAzB,CALA;AAMXzD,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B,GANzB;AAOX2D,wBAAU,EAAE,KAAKlG,YAAL,CAAkB0D;AAPnB,aAAb;AAWA,iBAAKrB,WAAL,CAAiBiE,oBAAjB,CAAsC5D,MAAtC,EAA8CjD,SAA9C,CACE,UAAC0C,IAAD,EAAe;AACb;AACA,qBAAI,CAACF,QAAL,CAAcmE,IAAd,CAAmB,kBAAnB,EAAuC,SAAvC,EAAkD;AAAEC,wBAAQ,EAAE;AAAZ,eAAlD;;AACA,qBAAI,CAAClH,MAAL,CAAYgC,QAAZ,CAAqB,CAAC,oDAAD,CAArB;AAED,aANH,EAOE,UAACoD,GAAD,EAAS;AACP;AACA,qBAAI,CAACtC,QAAL,CAAcmE,IAAd,CAAmB,kBAAnB,EAAuC,SAAvC,EAAkD;AAAEC,wBAAQ,EAAE;AAAZ,eAAlD;AACD,aAVH;AAaD;;;0CAEevD,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACgB,GAAL,CAAS,OAAT,EAAkByC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHzD,IAAI,CAACgB,GAAL,CAAS,OAAT,EAAkByC,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;uCACazB,K,EAAO;AAClB,iBAAKvC,MAAL,GAAcuC,KAAK,CAAC0B,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKjE,MAAxB;AACD;;;uCACYuC,K,EAAO,CACnB;;;;;;;yBA9MUgC,e,EAAe,2H,EAAA,wJ,EAAA,wJ,EAAA,wI,EAAA,uH,EAAA,+I,EAAA,kJ;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;;;;;;;;;;;;;;;ACpB5B;;AACE;;AACgC;AAAA,qBAAU,IAAAI,QAAA,EAAV;AAAoB,aAApB,EAAqB,eAArB,EAAqB;AAAA,qBAAkBC,MAAM,CAACC,cAAP,EAAlB;AAAyC,aAA9D;;AAC9B;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACA;;AACE;AAAA,qBAAkB,IAAAT,cAAA,wBAAlB;AAAwD,aAAxD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAc;;AAC5F;;AACA;;AAEF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AACE;AAAA,qBAAkB,IAAAU,WAAA,wBAAlB;AAAqD,aAArD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAc;;AAC9F;;AACA;;AAEF;;AAEF;;AAEA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AAAgD;AAAA,qBAAmB,IAAAC,YAAA,QAAnB;AAAuC,aAAvC;;AAC9C;;AAIF;;AACA;;AAA+E;;AAAI;;AACrF;;AACA;;AACE;;AAA4E;AAAA,qBAAU,IAAAV,YAAA,QAAV;AAA8B,aAA9B;;AAE1E;;AAAkC;;AACtC;;AACF;;AAEA;;AACE;;AAAuD;;AAAI;;AAC3D;;AACkE;;AAAM;;AAC1E;;AACF;;AACF;;;;;;;;AA9DQ;;AAAA;;AAK0D;;AAAA;;AACN;;AAAA;;AAEnB;;AAAA;;AAQrB;;AAAA;;AAK2C;;AAAA;;AACN;;AAAA;;AAEhB;;AAAA;;AAQrB;;AAAA;;AAUqB;;AAAA;;AAQwB;;AAAA;;AAEvD;;AAAA;;;;;;;;qBDnCI;;;;;;wEAEDE,e,EAAe;gBAP3B,uDAO2B;iBAPjB;AACT1F,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAOiB,U;;;;;;;;;;;;;;;;;AAUEgF,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AE9BnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOac,W;AAGT,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAAC,OAAA,aAAa,sEAAYC,QAAzB;AAEwC;;;;iCAEjChF,M,EAAQ;AACX,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,WAAsC/E,MAAtC,CAAP;AACH;;;iCACMA,M,EAAQ;AACX,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,WAAsC/E,MAAtC,CAAP;AACH;;;+CAEoBA,M,EAAQ;AACzB,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,yBAAoD/E,MAApD,CAAP;AACH;;;+CACoBA,M,EAAQ;AACzB,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,yBAAoD/E,MAApD,CAAP;AACH;;;wCAEanC,E,EAAI;AACd,mBAAO,KAAKiH,IAAL,CAAU1D,GAAV,WAAiB,KAAK2D,OAAtB,2BAA8ClH,EAA9C,EAAP;AACH;;;uCACY;AACT,mBAAO,KAAKiH,IAAL,CAAU1D,GAAV,WAAiB,KAAK2D,OAAtB,cAAP;AACH;;;kCAEMlH,E,EAAIqH,O,EAAS;AAChB,mBAAO,KAAKJ,IAAL,qBAAoB,KAAKC,OAAzB,kBAAwClH,EAAxC,cAA8CqH,OAA9C,EAAP;AACH;;;yCAEcrH,E,EAAIqH,O,EAAS;AACxB,mBAAO,KAAKJ,IAAL,qBACA,KAAKC,OADL,6BAC+BlH,EAD/B,cACqCqH,OADrC,EAAP;AAGH,W,CAED;AACA;AACA;;;;oDAE0BrH,E,EAAI;AAC1B,mBAAO,KAAKiH,IAAL,CAAU1D,GAAV,WAAiB,KAAK2D,OAAtB,uCAA0DlH,EAA1D,EAAP;AACH;;;8CACmBA,E,EAAI;AACpB,mBAAO,KAAKiH,IAAL,CAAU1D,GAAV,WAAiB,KAAK2D,OAAtB,iCAAoDlH,EAApD,EAAP;AACH;;;0CACeA,E,EAAI;AAChB,mBAAO,KAAKiH,IAAL,CAAU1D,GAAV,WAAiB,KAAK2D,OAAtB,6BAAgDlH,EAAhD,EAAP;AACH,W,CAED;;;;iDACuB+C,M,EAAQ;AAC3B,mBAAO,KAAKkE,IAAL,CAAU1D,GAAV,WAAiB,KAAK2D,OAAtB,kCAAqDnE,MAArD,EAAP;AACH;;;sDAE2BZ,M,EAAQ;AAChC,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,2BAAsD/E,MAAtD,CAAP;AACH,W,CAED;;;;yCACemF,Q,EAAUvE,M,EAAQ;AAC7B,gBAAIA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAI1D,SAA5B,IAAyC0D,MAAM,IAAI,EAAvD,EAA2D;AACvDA,oBAAM,GAAG,CAAT;AACH;;AACD,mBAAO,KAAKkE,IAAL,CAAU1D,GAAV,WACA,KAAK2D,OADL,iCACmCI,QADnC,cAC+CvE,MAD/C,EAAP;AAGH,W,CAED;AACA;AACA;;;;gDACsBuE,Q,EAAUvE,M,EAAQ;AACpC;AACA;AACA;AACA,mBAAO,KAAKkE,IAAL,CAAU1D,GAAV,WACA,KAAK2D,OADL,oCACsCI,QADtC,cACkDvE,MADlD,EAAP;AAGH;;;wCAEaZ,M,EAAQ;AAClB,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,qBAAgD/E,MAAhD,CAAP;AACH;;;iDAEsBA,M,EAAQ;AAC3B,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,8BAAyD/E,MAAzD,CAAP;AACH;;;oDAEyBA,M,EAAQ;AAC9B,mBAAO,KAAK8E,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,iCAA4D/E,MAA5D,CAAP;AACH,W,CAED;AACA;AACA;;;;6CAEmBoF,M,EAAQ;AACvB,mBAAO,KAAKN,IAAL,qBAAoB,KAAKC,OAAzB,iCAAuDK,MAAvD,EAAP;AACH;;;;;;;yBAnGQP,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFR;;;;;wEAEHA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACRQ,sBAAU,EAAE;AADJ,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBY;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAIJ;;AAAmD;;AACnD;;;;;;AAME;;AACE;;AACF;;;;;;AAFoE;;AAClE;;AAAA;;;;;;AAIJ;;AAAgD;;AAChD;;;;;;AAOE;;AACE;;AACF;;;;;;AAF4C;;AAC1C;;AAAA;;;;UDpBDC,mB;AAmBX,qCAAoBjG,EAApB,EAA4CC,aAA5C,EAAkFC,QAAlF,EACmBC,SADnB,EACiGC,IADjG,EAC6HC,UAD7H,EAC4JC,WAD5J,EACqL;AAAA;;AADjK,eAAAN,EAAA,GAAAA,EAAA;AAAwB,eAAAC,aAAA,GAAAA,aAAA;AAAsC,eAAAC,QAAA,GAAAA,QAAA;AAC/D,eAAAC,SAAA,GAAAA,SAAA;AAA8E,eAAAC,IAAA,GAAAA,IAAA;AAA4B,eAAAC,UAAA,GAAAA,UAAA;AAA+B,eAAAC,WAAA,GAAAA,WAAA;AAjB5J,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAAC,MAAA,GAAS,KAAT;AAcuL;;;;qCAE5K;AACT,iBAAKC,UAAL;AACA,iBAAKC,aAAL,GAFS,CAGV;AACA;;;uCAES;AAER,iBAAKzC,YAAL,GAAoBF,IAAI,CAACC,KAAL,CAAYC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ,CAApB;AAEA,iBAAKyC,MAAL,GAAc,KAAKP,IAAnB;AACA,iBAAKQ,QAAL,GAAgB,KAAKD,MAAL,CAAYE,QAA5B;AACA,iBAAKN,UAAL,GAAkB,KAAKI,MAAL,CAAYG,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AAEA,iBAAKC,IAAL,GAAY,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AACxBC,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CADW;AAExBC,sBAAQ,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFa;AAGxBE,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL;AAHc,aAAd,CAAZ;;AAMA,gBAAI,KAAKX,UAAT,EAAoB;AAClB,mBAAKc,YAAL,CAAkB,KAAKV,MAAvB;AACA,mBAAKD,aAAL;AACA,mBAAKY,UAAL,CAAgB,KAAKX,MAAL,CAAYP,IAAZ,CAAiBmB,MAAjC;AACA,mBAAKC,cAAL,CAAoB,KAAKb,MAAL,CAAYP,IAAZ,CAAiBqB,SAArC,EAJkB,CAKpB;AACC;AAEF;;;0CACY;AAAA;;AACX;AACA,iBAAKxB,aAAL,CAAmByB,kBAAnB,CAAsC,KAAKzD,YAAL,CAAkB0D,MAAxD,EAAgEjE,SAAhE,CACE,UAAC0C,IAAD,EAAY;AACV;AACA,qBAAI,CAACa,WAAL,GAAmBb,IAAnB;;AACA,kBAAG,OAAI,CAACG,UAAR,EAAmB;AACjB;AACA,oBAAMqB,QAAQ,GAAG,OAAI,CAACX,WAAL,CAAiBY,IAAjB,CAAsB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACtD,EAAF,IAAQ,OAAI,CAACmC,MAAL,CAAYP,IAAZ,CAAiBqB,SAA7B;AAAA,iBAAvB,CAAjB;;AACE,uBAAI,CAACV,IAAL,CAAUgB,GAAV,CAAc,aAAd,EAA6BC,QAA7B,CAAsCJ,QAAtC;;AAEJ,uBAAI,CAACK,qBAAL,GAA6B,OAAI,CAAClB,IAAL,CAAUmB,QAAV,CAAmBjB,WAAnB,CAA+BkB,YAA/B,CAC5BC,IAD4B,CAE3B,iEAAU,EAAV,CAF2B,EAG3B,2DAAI,UAAAC,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,iBAAT,CAH2B,EAI3B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,OAAI,CAACC,aAAL,CAAmBD,IAAnB,CAAH,GAA8B,OAAI,CAACrB,WAA3C;AAAA,iBAAR,CAJ2B,CAA7B;AAMC;AACF,aAhBH,EAgBI,UAACuB,GAAD,EAAO,CACP;AACD,aAlBH;AAoBD;;;4CACiBC,I,EAAS;AACzB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACcG,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;wCACqBA,I,EAAY;AAChC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAK1B,WAAL,CAAiB3C,MAAjB,CAAwB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA9B,CAAP;AACD;;;2CACwBJ,I,EAAY;AACnC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKG,QAAL,CAAcxE,MAAd,CAAqB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA3B,CAAP;AACD;;;yCACcK,K,EAAK;AACpB,iBAAKvB,cAAL,CAAoBuB,KAApB;AACC;;;yCAEcvE,E,EAAE;AAAA;;AAEf,iBAAK6B,UAAL,CAAgB2C,gBAAhB,CAAiCxE,EAAjC,EAAqCd,SAArC,CACD,UAAC0C,IAAD,EAAY;AACP,qBAAI,CAAC0C,QAAL,GAAgB1C,IAAhB;;AACA,kBAAG,OAAI,CAACG,UAAR,EAAmB;AACjB;AACA,oBAAMqB,QAAQ,GAAG,OAAI,CAACkB,QAAL,CAAcjB,IAAd,CAAmB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACtD,EAAF,IAAQ,OAAI,CAACmC,MAAL,CAAYP,IAAZ,CAAiBmB,MAA7B;AAAA,iBAApB,CAAjB;;AACE,uBAAI,CAACR,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCJ,QAAnC;;AACJ,uBAAI,CAACqB,wBAAL,GAAgC,OAAI,CAAClC,IAAL,CAAUmB,QAAV,CAAmBf,QAAnB,CAA4BgB,YAA5B,CAC/BC,IAD+B,CAE9B,iEAAU,EAAV,CAF8B,EAG9B,2DAAI,UAAAC,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAA9C;AAAA,iBAAT,CAH8B,EAI9B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,OAAI,CAACY,gBAAL,CAAsBZ,IAAtB,CAAH,GAAiC,OAAI,CAACQ,QAA9C;AAAA,iBAAR,CAJ8B,CAAhC;AAMC;AACF,aAdH,EAcI,UAACN,GAAD,EAAO,CAAE,CAdb;AAiBA;;;qCACUhE,E,EAAE;AAAA;;AACZ,iBAAK8B,WAAL,CAAiB6C,yBAAjB,CAA2C3E,EAA3C,EAA+Cd,SAA/C,CACE,UAAC0C,IAAD,EAAY;AACV,qBAAI,CAACgD,QAAL,GAAgBhD,IAAI,CAACA,IAArB;AACA,kBAAIiD,YAAY,GAAG,EAAnB;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACF,QAAL,CAAcG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,oBAAIE,IAAI,GAAG,OAAI,CAACJ,QAAL,CAAcE,CAAd,CAAX;;AACA,oBAAGE,IAAI,CAAChF,EAAL,IAAW,IAAX,IAAmBgF,IAAI,CAAChF,EAAL,IAAWX,SAAjC,EAA2C;AACzCwF,8BAAY,CAACpE,IAAb,CAAkBuE,IAAlB;AACD;AACJ,eARW,CASV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAGA,qBAAI,CAACzC,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCqB,YAAnC,EAvBU,CAyBX;AACC;AACA;AACA;;AAGD,aAhCH,EAgCI,UAACb,GAAD,EAAO,CACP;AACD,aAlCH;AAoCA;;;4CACiBhE,E,EAAE;AAAA;;AACnB,iBAAK8B,WAAL,CAAiBmD,eAAjB,CAAiCjF,EAAjC,EAAqCd,SAArC,CACE,UAAC0C,IAAD,EAAY;AACV;AACA,qBAAI,CAACsD,YAAL,GAAoBtD,IAAI,CAACA,IAAzB,CAFU,CAGR;AACA;AACA;AACA;AAED;AAIF,aAbH,EAaI,UAACoC,GAAD,EAAO,CACP;AACD,aAfH;AAiBA;;;kCACM;AAEN,iBAAKrC,SAAL,CAAewD,KAAf;AACD;;;6CACe;AACd,iBAAKxD,SAAL,CAAewD,KAAf;AACD;;;uCAES;AAAA;;AACR,gBAAIC,UAAU,GAAG,KAAK7C,IAAL,CAAUsB,KAA3B;AAEA,gBAAM1B,MAAM,GAAQ;AAElBkD,uBAAS,EAAGD,UAAU,CAAC3C,WAAX,CAAuBzC,EAFjB;AAGlB+C,oBAAM,EAAGqC,UAAU,CAACzC,QAAX,CAAoB3C,EAHX;AAInB;AACCsF,uBAAS,EAAEF,UAAU,CAACxC,QAAX,CAAoB2C,GAApB,CAAwB,UAAAC,CAAC;AAAA,uBAAK;AAAExF,oBAAE,EAAEwF,CAAC,CAACC;AAAR,iBAAL;AAAA,eAAzB,CALO;AAMlBzD,oBAAM,EAAG,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B,GANnB,CAOtB;;AAPsB,aAApB,CAHQ,CAYZ;;AAEI,gBAAI,KAAKD,UAAT,EAAoB;AACpBI,oBAAM,CAACnC,EAAP,GAAY,KAAKmC,MAAL,CAAYP,IAAZ,CAAiB5B,EAA7B,EACAmC,MAAM,CAACuD,SAAP,GAAmB,KAAKjG,YAAL,CAAkB0D,MADrC;AAED,aAHC,MAGI;AACJhB,oBAAM,CAACwD,UAAP,GAAoB,KAAKlG,YAAL,CAAkB0D,MAAtC;AACD;;AAEC,gBAAI,KAAKpB,UAAT,EAAoB;AACpB,mBAAKD,WAAL,CAAiB8D,oBAAjB,CAAsCzD,MAAtC,EAA8CjD,SAA9C,CACE,UAAC0C,IAAD,EAAgB;AACd,uBAAI,CAACF,QAAL,CAAcmE,IAAd,CAAmB,8BAAnB,EAAmD,SAAnD,EAA8D;AAAEC,0BAAQ,EAAE;AAAZ,iBAA9D;;AACA,uBAAI,CAACnE,SAAL,CAAewD,KAAf;AACD,eAJH,EAKE,UAACnB,GAAD,EAAS;AACP,uBAAI,CAACtC,QAAL,CAAcmE,IAAd,CAAmB,kBAAnB,EAAuC,SAAvC,EAAkD;AAAEC,0BAAQ,EAAE;AAAZ,iBAAlD;AACD,eAPH;AASD,aAVC,MAUG;AACH,mBAAKhE,WAAL,CAAiBiE,oBAAjB,CAAsC5D,MAAtC,EAA8CjD,SAA9C,CACE,UAAC0C,IAAD,EAAgB;AACd,uBAAI,CAACF,QAAL,CAAcmE,IAAd,CAAmB,oBAAnB,EAAyC,SAAzC,EAAoD;AAAEC,0BAAQ,EAAE;AAAZ,iBAApD;;AACA,uBAAI,CAACnE,SAAL,CAAewD,KAAf;AACD,eAJH,EAKE,UAACnB,GAAD,EAAS;AACP,uBAAI,CAACtC,QAAL,CAAcmE,IAAd,CAAmB,kBAAnB,EAAuC,SAAvC,EAAkD;AAAEC,0BAAQ,EAAE;AAAZ,iBAAlD;AACD,eAPH;AAUD;;AAEC,iBAAKnE,SAAL,CAAewD,KAAf,CAAqBhD,MAArB;AACD;;;0CAEeI,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACgB,GAAL,CAAS,OAAT,EAAkByC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHzD,IAAI,CAACgB,GAAL,CAAS,OAAT,EAAkByC,QAAlB,CAA2B,OAA3B,IACA,mBADA,GAEA,EAJJ;AAKD;;;uCAEY7D,M,EAAM;AAElB;AACC;AACA,iBAAKI,IAAL,CAAUgB,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCrB,MAAM,CAACP,IAAP,CAAYgB,QAA/C;AAGA,iBAAKZ,MAAL,GAAcG,MAAM,CAACP,IAAP,CAAYI,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAAjD;AACD;;;uCAEYuC,K,EAAK;AAChB,iBAAKvC,MAAL,GAAcuC,KAAK,CAAC0B,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKjE,MAAxB;AACD;;;;;;;yBArPUyF,mB,EAAmB,2H,EAAA,wJ,EAAA,wI,EAAA,sI,EAAA,gEAoB2C,wEApB3C,C,EAoB0D,+I,EAAA,kJ;AAAA,O;;;cApB7EA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;;;;;;ACpBhC;;AAA6D;AAAA,qBAAS,IAAAtB,gBAAA,EAAT;AAA2B,aAA3B;;AACQ;;AAAK;;AAE1E;;AAAoC;;AAAgB;;AACpD;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACA;;AACE;AAAA,qBAAkB,IAAAC,cAAA,wBAAlB;AAAwD,aAAxD;;AACA;;;;AAGF;;AACA;;AAA2C;;AAAW;;AACtD;;AAEF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AACE;;;;AAGF;;AACE;;AAA2C;;AAAW;;AACxD;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AAIF;;AACF;;AACA;;AACE;;AACE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AACA;;AACF;;AACF;;AACF;;AACA;;AAEE;;AAAkE;AAAA,qBAAS,IAAAlB,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC5F;;AACF;;AACF;;AACF;;;;;;;;AApDU;;AAAA;;AAKmE;;AAAA;;AACf;;AAAA;;AAEnB;;AAAA;;AAKrB;;AAAA;;AAKoD;;AAAA;;AACf;;AAAA;;AAChB;;AAAA;;AAKrB;;AAAA;;AAQqB;;AAAA;;AAOwB;;AAAA;;AAEvD;;AAAA;;;;;;;;qBD9BK;;;;;;wEAEJsC,mB,EAAmB;gBAP/B,uDAO+B;iBAPrB;AACT5G,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAK;AALN,W;AAOqB,U;;;;;;;;;;;;oBAoBoC,oD;qBAAO,wE;;;;;;;;AAL7CgF,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEpCnoBgC;;AACI;;AACJ;;;;;;AAF8D;;AAC1D;;AAAA;;;;;;AAQR;;AAA2C;;AAAiB;;;;;;;;AAuBhE;;AAA4E;;AAC3D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACnF;;AAAY;;;;;;;;AAChB;;AAEI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHgD;;AAAA;;;;;;AANpD;;AACI;;AAGA;;AAMJ;;;;;;AATW;;AAAA;;AAGU;;AAAA;;;;;;AAOrB;;AAA0C;;AAAoB;;;;;;AAApB;;AAAA;;;;;;;;AAKtC;;AAAyE;;AACrE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,WAA1B,EAAqC,MAArC;AAAqC,WAArC;;AAA+C;;AAAM;;AAC7E;;;;;;;;AACA;;AACI;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAzC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,WAA1B,EAAqC,MAArC;AAAqC,WAArC;;AAA+C;;AAAa;;AACpF;;;;;;AAF6C;;AAAA;;;;;;AALjD;;AACI;;AAGA;;AAIJ;;;;;;AAPW;;AAAA;;AAGU;;AAAA;;;;;;AAKrB;;AAA0C;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;;;AAKtC;;AAA0E;;AACtE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AAAM;;AAC9E;;;;;;;;AACA;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAxC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AAAa;;AACrF;;;;;;AAF4C;;AAAA;;;;;;AALhD;;AACI;;AAGA;;AAIJ;;;;;;AAPW;;AAAA;;AAGU;;AAAA;;;;;;AAKrB;;AAA0C;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;;;AAKtC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AAEI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAN7C;;AACI;;AAGA;;AAMJ;;;;;;AATW;;AAAA;;AAGU;;AAAA;;;;;;AAOrB;;AACI;;AAAqB;;;;;;AADgB;;AACrC;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AACA;;AAKI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAEhD;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAI;;AAAW;;AAE1C;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAM;;AACd;;;;;;AAGJ;;;;;;AACA;;;;;;AAMQ;;AAAiC;;AAAW;;;;;;AAC5C;;AAAkC;;AAAW;;;;;;AAFjD;;AACI;;AACA;;AACA;;AAAQ;;AAAgE;;AAC5E;;;;;;;;AAHe;;AAAA;;AACA;;AAAA;;AACH;;AAAA;;;;;;;;AAIhB;;AAAwE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxE;;;;;;;;;;;;UDvHHwB,I;;;;UAcAC,K,GAAb;AAAA;;AACI,aAAAC,KAAA,GAAQ,CAAR;AACA,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,WAAA,GAAc,CAAd;AACH,O;AACD;;;;;UAUaC,a;AAoCT,+BAAoBtG,aAApB,EAAyDuG,MAAzD,EACYtG,QADZ,EAC2CF,EAD3C,EACoEK,UADpE,EACoGC,WADpG,EAC8H;AAAA;;AAC1H;AACA;AAHgB,eAAAL,aAAA,GAAAA,aAAA;AAAqC,eAAAuG,MAAA,GAAAA,MAAA;AAC7C,eAAAtG,QAAA,GAAAA,QAAA;AAA+B,eAAAF,EAAA,GAAAA,EAAA;AAAyB,eAAAK,UAAA,GAAAA,UAAA;AAAgC,eAAAC,WAAA,GAAAA,WAAA,CAA0B,CAlC9H;AACA;;AACA,eAAAmG,IAAA,GAAO,CAAC,CAAC,aAAD,EAAgB,UAAhB,EAA4B,aAA5B,EAA2C,QAA3C,CAAD,CAAP;AACO,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAoC,EAApC,CAAb;AAcP,eAAAC,cAAA,GAA2B,EAA3B;AAIA,eAAAC,YAAA,GAAsB,EAAtB;AACA,eAAAC,eAAA,GAA0B,EAA1B;AAIA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,YAAA,GAAe,KAAf,CAK8H,CAI1H;;AACA,eAAKlG,IAAL,GAAY,KAAKf,EAAL,CAAQgB,KAAR,CAAc;AACtBkG,kBAAM,EAAE,CAAC,EAAD,CADc;AAEtBC,eAAG,EAAE,CAAC,EAAD,EAAK,0DAAWjG,QAAhB;AAFiB,WAAd,CAAZ;AAIH;;;;qCAEU;AACP,iBAAKjD,YAAL,GAAoBF,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CADO,CAEP;AACA;AACA;;AACA,iBAAKkJ,OAAL,GAAe,CAAC;AACZC,mBAAK,EAAE;AADK,aAAD,EAEZ;AACCA,mBAAK,EAAE;AADR,aAFY,EAIZ;AACCA,mBAAK,EAAE;AADR,aAJY,EAMZ;AACCA,mBAAK,EAAE;AADR,aANY,EAQZ;AACCA,mBAAK,EAAE;AADR,aARY,CAAf;AAWA,iBAAKC,gBAAL,GAAwB,KAAKF,OAAL,CAAarD,GAAb,CAAiB,UAAAwD,MAAM;AAAA,qBAAIA,MAAM,CAACF,KAAX;AAAA,aAAvB,CAAxB;AACA,iBAAKV,cAAL,GAAsB,CAAC,UAAD,CAAtB;AAEA,iBAAKa,eAAL,CAAqB,KAAKvJ,YAAL,CAAkB0D,MAAvC;AACA,iBAAK8F,YAAL,GAAoB,IAAIvB,IAAJ,EAApB;AACA,iBAAKwB,UAAL,GAAkB,gEAAeC,QAAjC;AACA,iBAAKC,mBAAL;AAEH;;;sCAEW7E,K,EAAc;AACtB,gBAAML,WAAW,GAAIK,KAAK,CAAC8E,MAAN,CAAkCxF,KAAvD;AACA,iBAAKqE,UAAL,CAAgBpI,MAAhB,GAAyBoE,WAAW,CAACoF,IAAZ,GAAmBnF,WAAnB,EAAzB;;AAEA,gBAAI,KAAK+D,UAAL,CAAgBqB,SAApB,EAA+B;AAC3B,mBAAKrB,UAAL,CAAgBqB,SAAhB,CAA0BC,SAA1B;AACH;AACJ,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;gDAEsB;AAAA;;AAClB,iBAAK1H,WAAL,CAAiBsH,mBAAjB,CAAqC,KAAK3J,YAAL,CAAkB0D,MAAvD,EAA+DjE,SAA/D,CACI,UAACuK,IAAD,EAAe;AACX,kBAAIA,IAAI,CAACzH,MAAL,IAAe,IAAnB,EAAyB;AACrB;AACA,uBAAI,CAAC0H,OAAL,GAAeD,IAAI,CAAC7H,IAApB;;AACA,qBAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAC4E,OAAL,CAAa3E,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,sBAAI,OAAI,CAAC4E,OAAL,CAAa5E,CAAb,EAAgB9C,MAAhB,IAA0B,GAA9B,EAAmC;AAC/B,2BAAI,CAAC0H,OAAL,CAAa5E,CAAb,EAAgB6E,YAAhB,GAA+B,UAA/B;AACH,mBAFD,MAEO;AACH,2BAAI,CAACD,OAAL,CAAa5E,CAAb,EAAgB6E,YAAhB,GAA+B,QAA/B;AACH;AACJ;;AACD,uBAAI,CAACzB,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACwB,OAA5B,CAAlB,CAVqB,CAWrB;;AACA,uBAAI,CAACxB,UAAL,CAAgBqB,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,uBAAI,CAACrB,UAAL,CAAgB0B,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACH,eAdD,MAcO;AACH;AACA;AACH;AACJ,aApBL,EAoBO,UAAC5F,GAAD,EAAS,CAAG,CApBnB;AAsBH;;;0CAGehE,E,EAAI;AAAA;;AAChB,iBAAK6B,UAAL,CAAgBgI,sBAAhB,CAAuC7J,EAAvC,EAA2Cd,SAA3C,CACI,UAAC0C,IAAD,EAAe;AACX,qBAAI,CAAC0C,QAAL,GAAgB1C,IAAhB;;AACA,kBAAI,OAAI,CAACnC,YAAL,CAAkBqK,SAAlB,IAA+B,KAAnC,EAA0C;AACtC,oBAAI,OAAI,CAACxF,QAAL,IAAiB,IAAjB,IAAyB,OAAI,CAACA,QAAL,IAAiBjF,SAA9C,EAAyD;AACrD,sBAAM+D,QAAQ,GAAG,OAAI,CAACkB,QAAL,CAAc,CAAd,CAAjB;AAEA,yBAAI,CAACyF,cAAL,GAAsB3G,QAAQ,CAACpD,EAA/B;;AACA,yBAAI,CAACuC,IAAL,CAAUgB,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BJ,QAA9B;;AAGA,sBAAI,OAAI,CAAC3D,YAAL,CAAkBqK,SAAlB,IAA+B,KAAnC,EAA0C;AACtC,2BAAI,CAACvH,IAAL,CAAUgB,GAAV,CAAc,KAAd,EAAqByG,OAArB;AACH;;AAED,yBAAI,CAACC,cAAL,CAAoB,OAAI,CAACF,cAAzB;AACH;;AACD,uBAAI,CAACG,kBAAL,GACI,OAAI,CAAC3H,IAAL,CAAUmB,QAAV,CAAmBiF,GAAnB,CAAuBhF,YAAvB,CAAoCC,IAApC,CACI,iEAAU,EAAV,CADJ,EAEI,2DAAI,UAACC,KAAD;AAAA,yBACA,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAACC,IAD1C;AAAA,iBAAJ,CAFJ,EAKI,2DAAI,UAACA,IAAD;AAAA,yBACAA,IAAI,GAAG,OAAI,CAACqG,UAAL,CAAgBrG,IAAhB,CAAH,GAA2B,OAAI,CAACQ,QADpC;AAAA,iBAAJ,CALJ,CADJ;AAUH;AACJ,aA5BL,EA6BI,UAACN,GAAD,EAAS,CAAE,CA7Bf;AA+BH;;;sCAEWhE,E,EAAI;AACZ,iBAAKiK,cAAL,CAAoBjK,EAApB;AACA,iBAAKkI,UAAL,CAAgBtG,IAAhB,GAAuB,EAAvB,CAFY,CAGZ;;AACA,iBAAKwI,UAAL,GAAkBpK,EAAlB;AACH;;;yCAEcA,E,EAAI;AAAA;;AAEf,iBAAK8B,WAAL,CAAiBmD,eAAjB,CAAiCjF,EAAjC,EAAqCd,SAArC,CACI,UAACuK,IAAD,EAAe;AACX,kBAAIA,IAAI,CAACzH,MAAL,IAAe,IAAnB,EAAyB;AACrB,uBAAI,CAACgD,IAAL,GAAYyE,IAAI,CAAC7H,IAAjB;AACA,uBAAI,CAAC8H,OAAL,GAAeD,IAAI,CAAC7H,IAApB;;AACA,qBAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAC4E,OAAL,CAAa3E,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,sBAAI,OAAI,CAAC4E,OAAL,CAAa5E,CAAb,EAAgB9C,MAAhB,IAA0B,GAA9B,EAAmC;AAC/B,2BAAI,CAAC0H,OAAL,CAAa5E,CAAb,EAAgB6E,YAAhB,GAA+B,UAA/B;AACH,mBAFD,MAEO;AACH,2BAAI,CAACD,OAAL,CAAa5E,CAAb,EAAgB6E,YAAhB,GAA+B,QAA/B;AACH;AAGJ;;AACD,uBAAI,CAACzB,UAAL,CAAgBtG,IAAhB,GAAuB,OAAI,CAACyI,SAAL,CAAe,OAAI,CAACX,OAApB,EAA6B,OAAI,CAACvB,cAAlC,CAAvB,CAZqB,CAarB;;AACA,uBAAI,CAACD,UAAL,CAAgBqB,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,uBAAI,CAACrB,UAAL,CAAgB0B,IAAhB,GAAuB,OAAI,CAACA,IAA5B,CAfqB,CAgBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,eAzBD,MAyBO,CACH;AACH;AACJ,aA9BL,EA8BO,UAAC5F,GAAD,EAAS,CACR;AACH,aAhCL;AAkCH;;;qCAEUC,I,EAAS;AAChB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACH;;;wCAEaG,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACH;;;qCAEkBA,I,EAAY;AAC3B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKG,QAAL,CAAcxE,MAAd,CAAqB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA3B,CAAP;AACH;;;wCAEqBJ,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKmG,UAAL,CAAgBxK,MAAhB,CAAuB,UAAAsE,MAAM;AAAA,qBAAIA,MAAM,CAACN,IAAP,CAAYK,WAAZ,GAA0BE,QAA1B,CAAmCH,WAAnC,CAAJ;AAAA,aAA7B,CAAP;AACH;;;kCAEMqG,O,EAAS;AAAA;;AACZ,iBAAKC,gBAAL,GAAwB,KAAKxC,MAAL,CAAYnC,IAAZ,CAAiB,mHAAjB,EAA6C;AACjE4E,0BAAY,EAAE;AADmD,aAA7C,CAAxB,CADY,CAKZ;;AAEA,iBAAKD,gBAAL,CAAsBE,WAAtB,GAAoCxL,SAApC,CAA8C,UAAAyL,MAAM,EAAI;AACpD,kBAAIA,MAAJ,EAAY;AACR,uBAAI,CAAC7I,WAAL,CAAiB8I,cAAjB,CAAgCL,OAAO,CAAChD,MAAxC,EAAgD,OAAI,CAAC9H,YAAL,CAAkB0D,MAAlE,EAA0EjE,SAA1E,CACI,UAAC0C,IAAD,EAAe;AACX,yBAAI,CAACqI,cAAL,CAAoB,OAAI,CAACG,UAAzB;;AACA,yBAAI,CAAChB,mBAAL,GAFW,CAGX;;;AACA,yBAAI,CAAC1H,QAAL,CAAcmE,IAAd,CAAmB,sBAAnB,EAA2C,SAA3C,EAAsD;AAAEC,4BAAQ,EAAE;AAAZ,mBAAtD;AACH,iBANL,EAMO,UAAC9B,GAAD,EAAS,CAEX,CARL;AAUH;;AACD,qBAAI,CAACwG,gBAAL,GAAwB,IAAxB;AACH,aAdD;AAiBH;;;qCAEUlI,M,EAAQV,I,EAAI;AAAA;;AAEnB,gBAAIO,MAAM,GAAG;AACTG,oBAAM,EAAEA,MADC;AAETV,kBAAI,EAAEA,IAFG;AAGTS,sBAAQ,EAAE,KAAK2C;AAHN,aAAb;AAMA,gBAAMrD,SAAS,GAAG,KAAKqG,MAAL,CAAYnC,IAAZ,CAAiB,4FAAjB,EAAwC;AACtDgF,mBAAK,EAAE,OAD+C;AAEtDjJ,kBAAI,EAAEO,MAFgD;AAGtD2I,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDN,0BAAY,EAAE;AALwC,aAAxC,CAAlB;AAQA9I,qBAAS,CAAC+I,WAAV,GAAwBxL,SAAxB,CAAkC,UAAAyL,MAAM,EAAI;AACxC,qBAAI,CAACV,cAAL,CAAoB,OAAI,CAACG,UAAzB,EADwC,CAExC;AACA;;AACH,aAJD;AAKH;;;qCAEU9H,M,EAAQV,I,EAAI;AAAA;;AACnB,gBAAIO,MAAM,GAAG;AACTG,oBAAM,EAAEA,MADC;AAETV,kBAAI,EAAEA;AAFG,aAAb;AAKA,gBAAMD,SAAS,GAAG,KAAKqG,MAAL,CAAYnC,IAAZ,CAAiB,uFAAjB,EAAsC;AACpDgF,mBAAK,EAAE,OAD6C;AAEpDjJ,kBAAI,EAAEO,MAF8C;AAGpD2I,wBAAU,EAAE,mBAHwC;AAIpDC,uBAAS,EAAE,KAJyC;AAKpDN,0BAAY,EAAE;AALsC,aAAtC,CAAlB;AAQA9I,qBAAS,CAAC+I,WAAV,GAAwBxL,SAAxB,CAAkC,UAAAyL,MAAM,EAAI;AAExC;AACA,qBAAI,CAACV,cAAL,CAAoB,OAAI,CAACG,UAAzB;AACH,aAJD;AAKH;;;2CAEgBY,G,EAAK;AAClB,gBAAIA,GAAG,CAACnD,QAAR,EAAkB;AACdmD,iBAAG,CAACnD,QAAJ,GAAe,KAAf;AACA,mBAAKK,UAAL,CAAgBtG,IAAhB,GAAuB,KAAKyI,SAAL,CAAe,KAAKX,OAApB,EAA6B,KAAKvB,cAAlC,CAAvB;AACH,aAHD,MAGO;AACH6C,iBAAG,CAACnD,QAAJ,GAAe,IAAf;AACA,mBAAKO,YAAL,GAAoB4C,GAApB;AACA,mBAAK9C,UAAL,CAAgBtG,IAAhB,GAAuB,KAAKqJ,YAAL,CAAkB,KAAKC,SAAvB,EAAkC,KAAKxB,OAAvC,EAAgD,KAAKvB,cAArD,EAAqE6C,GAArE,CAAvB;AACH;AACJ;;;oCAESpJ,I,EAAauG,c,EAAwB;AAC3C,gBAAMgD,SAAS,GAAG,IAAIxD,KAAJ,EAAlB;AACAwD,qBAAS,CAACtD,QAAV,GAAqB,KAArB;AACA,mBAAO,KAAKuD,YAAL,CAAkBxJ,IAAlB,EAAwB,CAAxB,EAA2BuG,cAA3B,EAA2CgD,SAA3C,CAAP;AACH;;;uCAEYvJ,I,EAAuE;AAAA;;AAAA,gBAA1DgG,KAA0D,uEAA1C,CAA0C;AAAA,gBAAvCO,cAAuC;AAAA,gBAAbkD,MAAa;;AAChF,gBAAIzD,KAAK,IAAIO,cAAc,CAACpD,MAA5B,EAAoC;AAChC,qBAAOnD,IAAP;AACH;;AACD,gBAAI0J,MAAM,GAAG,KAAKC,QAAL,CACT3J,IAAI,CAAC2D,GAAL,CACI,UAAAyF,GAAG,EAAI;AACH,kBAAML,MAAM,GAAG,IAAIhD,KAAJ,EAAf;AACAgD,oBAAM,CAAC/C,KAAP,GAAeA,KAAK,GAAG,CAAvB;;AACA,mBAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI8C,KAArB,EAA4B9C,CAAC,EAA7B,EAAiC;AAC7B6F,sBAAM,CAACxC,cAAc,CAACrD,CAAD,CAAf,CAAN,GAA4BkG,GAAG,CAAC7C,cAAc,CAACrD,CAAD,CAAf,CAA/B;AACH;;AACD,qBAAO6F,MAAP;AACH,aARL,CADS,EAWTpL,IAAI,CAACiM,SAXI,CAAb;AAaA,gBAAMC,aAAa,GAAGtD,cAAc,CAACP,KAAD,CAApC;AACA,gBAAI8D,SAAS,GAAG,EAAhB;AACAJ,kBAAM,CAACK,OAAP,CAAe,UAAAnJ,KAAK,EAAI;AACpB,kBAAMoJ,WAAW,GAAGhK,IAAI,CAAC9B,MAAL,CAAY,UAAAkL,GAAG;AAAA,uBAAIxI,KAAK,CAACiJ,aAAD,CAAL,KAAyBT,GAAG,CAACS,aAAD,CAAhC;AAAA,eAAf,CAApB;AACAjJ,mBAAK,CAACsF,WAAN,GAAoB8D,WAAW,CAAC7G,MAAhC;AACA,qBAAI,CAACsD,eAAL,GAAuB,EAAvB;AACH,aAJD;AAKAiD,kBAAM,GAAGA,MAAM,CAAC1B,IAAP,CAAY,UAACiC,CAAD,EAAUC,CAAV,EAAsB;AACvC,kBAAMC,KAAK,GAAG,KAAd;AACA,qBAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAClJ,QAAf,EAAyBmJ,CAAC,CAACnJ,QAA3B,EAAqCoJ,KAArC,CAAP;AAEH,aAJQ,CAAT;AAKA,iBAAKb,SAAL,GAAiBI,MAAjB;AACA,mBAAOA,MAAP;AACH;;;uCAEYW,Q,EAAiBrK,I,EAAauG,c,EAA0B+D,O,EAAY;AAC7E,gBAAMf,SAAS,GAAG,IAAIxD,KAAJ,EAAlB;AACAwD,qBAAS,CAACtD,QAAV,GAAqB,IAArB;AACA,mBAAO,KAAKsE,cAAL,CAAoBF,QAApB,EAA8BrK,IAA9B,EAAoC,CAApC,EAAuCuG,cAAvC,EAAuDgD,SAAvD,EAAkEe,OAAlE,CAAP;AACH;;;yCAEcD,Q,EAAiBrK,I,EAAagG,K,EAAeO,c,EAA0BkD,M,EAAea,O,EAAY;AAAA;;AAC7G,gBAAItE,KAAK,IAAIO,cAAc,CAACpD,MAA5B,EAAoC;AAChC,qBAAOnD,IAAP;AACH;;AACD,gBAAM6J,aAAa,GAAGtD,cAAc,CAACP,KAAD,CAApC;AACA,gBAAI8D,SAAS,GAAG,EAAhB;AACAO,oBAAQ,CAACN,OAAT,CAAiB,UAAAnJ,KAAK,EAAI;AACtB,kBAAMoJ,WAAW,GAAGhK,IAAI,CAAC9B,MAAL,CAAY,UAAAkL,GAAG;AAAA,uBAAIxI,KAAK,CAACiJ,aAAD,CAAL,KAAyBT,GAAG,CAACS,aAAD,CAAhC;AAAA,eAAf,CAApB;AACAjJ,mBAAK,CAACsF,WAAN,GAAoB8D,WAAW,CAAC7G,MAAhC;;AAEA,kBAAIvC,KAAK,CAACG,QAAN,IAAkBuJ,OAAO,CAACvJ,QAAR,CAAiByJ,QAAjB,EAAtB,EAAmD;AAC/C5J,qBAAK,CAACqF,QAAN,GAAiBqE,OAAO,CAACrE,QAAzB;;AACA,oBAAMwE,QAAQ,GAAG,OAAI,CAACF,cAAL,CAAoBF,QAApB,EAA8BL,WAA9B,EAA2ChE,KAAK,GAAG,CAAnD,EAAsDO,cAAtD,EAAsE3F,KAAtE,EAA6E0J,OAAO,CAACvJ,QAAR,CAAiByJ,QAAjB,EAA7E,CAAjB;;AACA,uBAAI,CAAC/D,eAAL,GAAuBgE,QAAvB;AACAA,wBAAQ,CAACC,OAAT,CAAiB9J,KAAjB;AACAkJ,yBAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBF,QAAjB,CAAZ;AACH,eAND,MAMO;AACHX,yBAAS,GAAGA,SAAS,CAACa,MAAV,CAAiB/J,KAAjB,CAAZ;AACH;AACJ,aAbD;AAcA,mBAAOkJ,SAAP;AACH;;;mCAEQG,C,EAAGW,G,EAAK;AACb,gBAAMC,IAAI,GAAG,EAAb;AACA,mBAAOZ,CAAC,CAAC/L,MAAF,CAAS,UAACmE,IAAD,EAAU;AACtB,kBAAMyI,CAAC,GAAGF,GAAG,CAACvI,IAAD,CAAb;AACA,qBAAOwI,IAAI,CAACE,cAAL,CAAoBD,CAApB,IAAyB,KAAzB,GAAkCD,IAAI,CAACC,CAAD,CAAJ,GAAU,IAAnD;AACH,aAHM,CAAP;AAIH;;;kCAEOE,K,EAAO3I,I,EAAI;AACf,mBAAOA,IAAI,CAAC2D,KAAZ;AACH;;;qCAEUgC,I,EAAe;AAAA;;AACtB,gBAAIhI,IAAI,GAAG,KAAK8H,OAAhB;AACA,gBAAMkD,KAAK,GAAGhL,IAAI,CAACiL,SAAL,CAAe,UAAA9M,CAAC;AAAA,qBAAIA,CAAC,CAAC,OAAD,CAAD,IAAc,CAAlB;AAAA,aAAhB,CAAd;;AACA,gBAAI6J,IAAI,CAACkD,MAAL,IAAelD,IAAI,CAACmD,SAAL,KAAmB,EAAtC,EAA0C;AACtC,kBAAIH,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZhL,oBAAI,CAACoL,MAAL,CAAYJ,KAAZ,EAAmB,CAAnB;AACH;;AAEDhL,kBAAI,GAAGA,IAAI,CAACgI,IAAL,CAAU,UAACiC,CAAD,EAAUC,CAAV,EAAsB;AACnC,oBAAMC,KAAK,GAAGnC,IAAI,CAACmD,SAAL,KAAmB,KAAjC;;AACA,wBAAQnD,IAAI,CAACkD,MAAb;AACI,uBAAK,aAAL;AACI,2BAAO,OAAI,CAACd,OAAL,CAAaH,CAAC,CAACpJ,WAAf,EAA4BqJ,CAAC,CAACrJ,WAA9B,EAA2CsJ,KAA3C,CAAP;;AACJ,uBAAK,UAAL;AACI,2BAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAClJ,QAAf,EAAyBmJ,CAAC,CAACnJ,QAA3B,EAAqCoJ,KAArC,CAAP;;AACJ,uBAAK,SAAL;AACI,2BAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAACoB,OAAf,EAAwBnB,CAAC,CAACmB,OAA1B,EAAmClB,KAAnC,CAAP;;AACJ,uBAAK,QAAL;AACI,2BAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAAC7J,MAAf,EAAuB8J,CAAC,CAAC9J,MAAzB,EAAiC+J,KAAjC,CAAP;;AAEJ,uBAAK,QAAL;AACI,2BAAO,OAAI,CAACC,OAAL,CAAaH,CAAC,CAACvJ,MAAf,EAAuBwJ,CAAC,CAACxJ,MAAzB,EAAiCyJ,KAAjC,CAAP;;AACJ;AACI,2BAAO,CAAP;AAbR;AAeH,eAjBM,CAAP;AAkBH;;AACD,iBAAK7D,UAAL,CAAgBtG,IAAhB,GAAuB,KAAKqJ,YAAL,CAAkB,KAAKC,SAAvB,EAAkCtJ,IAAlC,EAAwC,KAAKuG,cAA7C,EAA6D,KAAKC,YAAlE,CAAvB;AACH;;;kCAEeyD,C,EAAGC,C,EAAGC,K,EAAO;AACzB,mBAAO,CAACF,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAd,KAAoBC,KAAK,GAAG,CAAH,GAAO,CAAC,CAAjC,CAAP;AACH;;;2CAEgBmB,a,EAAeC,E,EAAI;AAChC;AACA;AACA;AACAA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,cAArB,EAAqC;AACjC,mBAAK5E,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKW,YAAL,CAAkBxG,WAAlB,GAAgC,EAAhC;AACH;;AAED,gBAAIyK,aAAa,IAAI,WAArB,EAAkC;AAC9B,mBAAK3E,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACA,mBAAKU,YAAL,CAAkBtG,QAAlB,GAA6B,EAA7B;AAEH;;AACD,gBAAIuK,aAAa,IAAI,YAArB,EAAmC;AAC/B,mBAAK1E,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKS,YAAL,CAAkBgE,OAAlB,GAA4B,EAA5B;AAEH;;AACD,gBAAIC,aAAa,IAAI,cAArB,EAAqC;AACjC,mBAAKzE,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKQ,YAAL,CAAkBU,YAAlB,GAAiC,EAAjC;AACH;AACJ;;;wCAEa;AAEV,iBAAK0D,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoD,UAAL,CAAgBoF,YAAhB,CAA6BvI,MAAjD,EAAyDD,CAAC,EAA1D,EAA8D;AAC1D,kBAAIyI,YAAY,GAAG,KAAKrF,UAAL,CAAgBoF,YAAhB,CAA6BxI,CAA7B,CAAnB,CAD0D,CAE1D;AACA;;AACA,kBAAIlD,IAAI,GAAG;AACP,gCAAgB2L,YAAY,CAAC9K,WADtB;AACmC,4BAAY8K,YAAY,CAAC5K,QAD5D;AACsE,2BAAW4K,YAAY,CAACC,QAD9F;AAEP,0BAAUD,YAAY,CAAC5D;AAFhB,eAAX;AAIA,mBAAK0D,YAAL,CAAkB5M,IAAlB,CAAuBmB,IAAvB;AACH;;AAGD,gBAAM6L,SAAS,GAAG,4CAAWC,aAAX,CAAyB,KAAKL,YAA9B,CAAlB;AACA,gBAAMM,QAAQ,GAAkB,4CAAWC,QAAX,EAAhC;AAEA,wDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,eAAlD;AACA,4DAAeE,QAAf,EAAyB,oBAAzB;AACH;;;sCAEW;AAAA;;AACR;AACA,gBAAIG,GAAG,GAAG,IAAI,4CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAGA,iBAAKT,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoD,UAAL,CAAgBoF,YAAhB,CAA6BvI,MAAjD,EAAyDD,CAAC,EAA1D,EAA8D;AAC1D,kBAAIiJ,MAAM,GAAG,KAAK7F,UAAL,CAAgBoF,YAAhB,CAA6BxI,CAA7B,CAAb,CAD0D,CAE1D;AACA;;AACA,kBAAIlD,IAAI,GAAG,CAACmM,MAAM,CAACtL,WAAR,EAAqBsL,MAAM,CAACpL,QAA5B,EAAsCoL,MAAM,CAACP,QAA7C,EAAuDO,MAAM,CAACpE,YAA9D,CAAX;AAEA,mBAAK0D,YAAL,CAAkB5M,IAAlB,CAAuBmB,IAAvB;AACH;;AACD,gBAAIoM,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAL,eAAG,CAACU,WAAJ,CAAgB,EAAhB;AACAV,eAAG,CAACW,YAAJ,CAAiB,GAAjB;AACAX,eAAG,CAACU,WAAJ,CAAgB,EAAhB;AAECV,eAAW,CAACY,SAAZ,CAAsB;AACnBzG,kBAAI,EAAE,KAAKA,IADQ;AAEnB0G,kBAAI,EAAE,KAAKtB,YAFQ;AAGnBuB,mBAAK,EAAE,MAHY;AAInBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJO;AAKnBC,oBAAM,EAAE;AACJC,2BAAW,EAAE,CADT;AAEJC,wBAAQ,EAAE;AAFN,eALW;AAWnBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXW;AAYnBC,yBAAW,EAAE,qBAACzN,IAAD,EAAU,CACtB,CAbkB;AAcnB0N,yBAAW,EAAE,qBAAC1N,IAAD,EAAU;AACnBkM,mBAAG,CAACyB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAF,mBAAG,CAACyB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAJ,mBAAG,CAAC0B,IAAJ,CAAS,sBAAT,EAAiC1B,GAAG,CAAC2B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAApE,EAAuE,EAAvE,EAA2E;AAAEC,uBAAK,EAAE;AAAT,iBAA3E;AAEA9B,mBAAG,CAACW,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAX,mBAAG,CAACU,WAAJ,CAAgB,EAAhB;AACAV,mBAAG,CAAC+B,SAAJ,CAAc/B,GAAG,CAACgC,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAjC,mBAAG,CAAC0B,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACA1B,mBAAG,CAAC+B,SAAJ,CAAc/B,GAAG,CAACgC,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAjC,mBAAG,CAACW,YAAJ,CAAiB,GAAjB;AACAX,mBAAG,CAACU,WAAJ,CAAgB,CAAhB;AACAV,mBAAG,CAAC0B,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAP,mBAAG,CAAC0B,IAAJ,CAAS,kBAAkB,OAAI,CAAC/P,YAAL,CAAkBuQ,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA9B,mBAAG,GAAG,OAAI,CAACmC,YAAL,CAAkBnC,GAAlB,CAAN;AACH;AA/BkB,aAAtB,EAzBO,CA2DR;;AACAA,eAAG,CAACoC,MAAJ,CAAW,kBAAX,EA5DQ,CA6DR;AACA;;AACApC,eAAG,CAACqC,IAAJ,CAAS,0BAAT;AAEH;;;uCAEYrC,G,EAAK;AACd,gBAAIsC,OAAO,GAAGtC,GAAG,CAACuC,gBAAJ,EAAd;AACA,gBAAMvL,CAAC,GAAGgJ,GAAG,CAAC2B,QAAJ,CAAaY,gBAAb,EAAV;AACAvC,eAAG,CAACW,YAAJ,CAAiB,GAAjB;AACAX,eAAG,CAACU,WAAJ,CAAgB,EAAhB,EAJc,CAKd;;AAEAV,eAAG,CAAC0B,IAAJ,CAAS,UAAUc,MAAM,CAACxL,CAAD,CAAhB,GAAsB,MAAtB,GAA+BwL,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOtC,GAAP;AAEH;;;;;;;yBA9iBQ/F,a,EAAa,yJ,EAAA,oI,EAAA,yI,EAAA,2H,EAAA,gJ,EAAA,mJ;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;4EAUX,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;AC/DxB;;AACI;;AACI;;AACI;;AAAsC;AAAA,qBAAS,IAAAwI,WAAA,EAAT;AAAsB,aAAtB;;AAClC;;AAAU;;AAAiB;;AAC7B;;AAAS;;AACT;;AAAsC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACpC;;AAAU;;AAAc;;AAC1B;;AAEN;;AACA;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAAW;;AAAW;;AACtB;;AACA;;AACI;AAAA,qBAAkB,IAAA1J,WAAA,wBAAlB;AAAqD,aAArD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAC9E;;AACJ;;AACA;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAOA;;AACI;;AACI;;AACI;;AAGI;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AAWA;;AAEJ;;AAEA;;AACI;;AAGA;;AAcJ;;AAEA;;AACA;;AAIA;;AACI;;AAKJ;;AAEA;;AAGJ;;AAEA;;AACJ;;AACJ;;AACJ;;;;;;AAxIsB;;AAAA;;AAKwD;;AAAA;;AACP;;AAAA;;AAER;;AAAA;;AASvB;;AAAA;;AAkBQ;;AAAA,mGAAyB,eAAzB,EAAyB,gBAAzB,EAAyB,YAAzB,EAAyB,cAAzB;;AAgFA;;AAAA;;AACa;;AAAA;;AAYf;;AAAA,iKAA0B,eAA1B,EAA0B,WAA1B;;AAKnB;;AAAA;;;;;;;;qBDhGX;;;;;;wEAEHiB,a,EAAa;gBAPzB,uDAOyB;iBAPf;AACPlH,oBAAQ,EAAE,UADH;AAEPC,uBAAW,EAAE,uBAFN;AAGPC,qBAAS,EAAE,CAAC,uBAAD,CAHJ;AAIPC,yBAAa,EAAE,gEAAkBC,IAJ1B;AAKPC,sBAAU,EAAE;AALL,W;AAOe,U;;;;;;;;;;;;;;;AAUqBqI,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBK,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AE/DhD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAcO,UAAM6G,gBAAgB,GAAW,CACtC;AAAEC,YAAI,EAAG,QAAT;AAAmBC,iBAAS,EAAG,wEAA/B;AAAgDC,mBAAW,EAAC,CAAC,4EAAD;AAA5D,OADsC,EAEtC;AAAEF,YAAI,EAAG,MAAT;AAAiBC,iBAAS,EAAG,kEAA7B;AAA6CC,mBAAW,EAAE,CAAC,4EAAD;AAA1D,OAFsC,EAGtC;AAAEF,YAAI,EAAE,EAAR;AAAYG,kBAAU,EAAE,MAAxB;AAAgCC,iBAAS,EAAE;AAA3C,OAHsC,CAAjC;;;;;;;;;;;;;;;;ACdP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAMC,UAAU,GAAE,CAAC,2FAAD,EAAuB,wEAAvB,EAAwC,kEAAxC,CAAlB;AACA,UAAMC,kBAAkB,GAAE,CAAC,4FAAD,EAAuB,sFAAvB,CAA1B;;UAQaC,a;;;;;cAAAA;;;;2BAAAA,a;AAAa,S;AAAA,kBALd,CAAC,qEAAD,EAAe,6EAAf,EAAoC,sEAApC,EAAmD,oEAAnD,CAKc;;;;4HAAbA,a,EAAa;AAAA,yBATP,2FASO,EATe,wEASf,EATgC,kEAShC,EARC,4FAQD,EARuB,sFAQvB;AAR0C,oBAGvD,qEAHuD,EAGzC,6EAHyC,EAGpB,sEAHoB,EAGL,oEAHK;AAQ1C,S;AALqD,O;;;;;wEAKlEA,a,EAAa;gBANzB,sDAMyB;iBANhB;AACNC,mBAAO,EAAC,CAAC,qEAAD,EAAe,6EAAf,EAAoC,sEAApC,EAAmD,oEAAnD,CADF;AAENC,wBAAY,EAAG,CAACJ,UAAD,EAAYC,kBAAZ,CAFT;AAGNI,2BAAe,EAAG,CAACJ,kBAAD;AAHZ,W;AAMgB,U;;;;;;;;;;;;;;;;;;ACnB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMK,MAAM,GAAY,CACpB;AACIX,YAAI,EAAG,MADX;AACkBC,iBAAS,EAAG,2FAD9B;AACmDC,mBAAW,EAAE,CAAC,4EAAD,CADhE;AAC6E1Q,gBAAQ,EAAG;AADxF,OADoB,CAAxB;;UAYaoR,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAJnB,CAAC,6DAAaC,QAAb,CAAsBF,MAAtB,CAAD,CAImB,EAHlB,4DAGkB;;;;4HAApBC,oB,EAAoB;AAAA;AAAA,oBAHlB,4DAGkB;AAAA,S;AAHN,O;;;;;wEAGdA,oB,EAAoB;gBALhC,sDAKgC;iBALvB;AACNJ,mBAAO,EAAG,CAAC,6DAAaK,QAAb,CAAsBF,MAAtB,CAAD,CADJ;AAENG,mBAAO,EAAG,CAAC,4DAAD;AAFJ,W;AAKuB,U","file":"cpo-rfid-cpo-rfid-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-cpo-rfid-crud',\r\n  templateUrl: './cpo-rfid-crud.component.html',\r\n  styleUrls: ['./cpo-rfid-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CpoRfidCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'CPO-RFID', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"rfidManagement\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"cpo-rfid\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if (this.childData.children != undefined && this.childData.children != null) {\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"cpo-rfId\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'CPO-RFID', link: 'list' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/rfidManagement/cpo-rfid/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  client_name:any;\r\n  cposName:any;\r\n  filteredOptionsClient:Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n // ListRFID: string[] = ['RFID-1', 'RFID-2', 'RFID-3', 'RFID-4', 'RFID-5', 'RFID-6'];\r\n ListRFID:any;\r\n selectedRFID:any;\r\n unSelectedRFID:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  \r\n\r\n  rfidList:any;\r\n  constructor(private fb: FormBuilder,private clientService: ClientService, private snackBar: MatSnackBar,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cpoService: CpoService,private rfidService:RfidService) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClientName();\r\n   // this.getAllRfid();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.rfidList = this.params.rfidData;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name : ['', [Validators.required]] ,\r\n      rfidlist: ['', [Validators.required]] ,\r\n      status : this.status == true ? 'Y' : 'N'  \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n      this.getClientName();\r\n      this.getAllRfid(this.params.data.cpo_id);\r\n      this.getCpoByclient(this.params.data.CLIENT_ID)\r\n    //  this.getAllRfidbyCPOid(this.params.data.cpo_id);\r\n    }\r\n   \r\n  }\r\n  getClientName(){\r\n    //;\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.client_name = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.client_name.find(c => c.id == this.params.data.CLIENT_ID);\r\n            this.form.get('client_name').setValue(toSelect);\r\n          \r\n        this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClient(name) : this.client_name)\r\n        );\r\n        }\r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  displayClientName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCPOName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.client_name.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClientCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(event){\r\n\t\tthis.getCpoByclient(event);\r\n    this.form.get('cpo_name').setValue(\"\");\r\n  }\r\n  \r\n  getCpoByclient(id){\r\n\r\n    this.cpoService.getCpoByClientId(id).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.cposName = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n            this.form.get('cpo_name').setValue(toSelect);\r\n        this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n        );\r\n        }\r\n      },(err)=>{}\r\n\t\t)\r\n   \r\n   }\r\n   getAllRfid(id){\r\n    this.rfidService.getAllRFidsWithMappedCPOs(id).subscribe(\r\n      (data:any)=>{\r\n        this.ListRFID = data.data;\r\n        var selectedList = [];\r\n        for (let i = 0; i < this.ListRFID.length; i++) {\r\n          var rfid = this.ListRFID[i];\r\n          if(rfid.id != null && rfid.id != undefined){\r\n            selectedList.push(rfid);\r\n          }\r\n      }\r\n        // for (let i = 0; i < this.ListRFID.length; i++) {\r\n        //     var rfid = this.ListRFID[i];\r\n        //   for (let k = 0; k < this.rfidList.length; k++){\r\n        //     var cpoRfID = this.rfidList[k];\r\n        //     if(rfid.id +'' == cpoRfID.id+''){\r\n        //       selectedList.push(rfid);\r\n        //     }\r\n        //   }\r\n\r\n        //   //const toSelect = this.ListRFID.find(c => c.id == this.params.data.rfid_id);\r\n        //   //this.form.get('rfidlist').setValue([toSelect]);\r\n        // }\r\n\r\n\r\n        this.form.get('rfidlist').setValue(selectedList);\r\n        \r\n       // this.getAllRfidbyCPOid(this.params.data.cpo_id)\r\n        // if(this.isEditMode){\r\n        //   this.form.get('rfidlist').setValue(this.ListRFID);\r\n        // }\r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n   getAllRfidbyCPOid(id){\r\n    this.rfidService.getRFidsByCpoId(id).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.selectedRFID = data.data;\r\n          // for (let i = 0; i < this.ListRFID.length; i++){\r\n          //   const toSelect = this.ListRFID.find(c => c.id == this.params.data.cpo_id);\r\n          //   this.form.get('rfidlist').setValue(toSelect);\r\n          // }\r\n\r\n         // this.form.get('rfidlist').setValue(this.selectedRFID);\r\n        \r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      client_id : formValues.client_name.id,\r\n      cpo_id : formValues.cpo_name.id,\r\n     // rfid_data  : formValues.rfidlist,\r\n      rfid_data :formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.updatecpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.createCpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('CPO-Rfid  created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    //this.form.get('client_name').setValue(params.data.client_name);\r\n    //this.form.get('cpo_name').setValue(params.data.cpo_name);\r\n    this.form.get('rfidlist').setValue(params.data.rfidlist);\r\n   \r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n     style=\"cursor:pointer;color:white\"  class=\"material-icons-outlined\">clear</mat-icon>\r\n     \r\n\r\n<mat-toolbar class=\"action_toolbar\">CPO-RFID Mapping</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client Name</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n          <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n            (optionSelected)='onClientChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>CPO Name</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n          <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter cpo name\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"49\" class=\"pr-4\">\r\n          <mat-label>RFID List</mat-label>\r\n          <mat-select formControlName=\"rfidlist\" multiple>\r\n            <mat-option *ngFor=\"let option of ListRFID\" [value]=\"option\">\r\n              {{option.rfid_no}}\r\n            </mat-option>\r\n\r\n          </mat-select>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter rfid list\">help</mat-icon>\r\n        </mat-form-field>\r\n        <div fxFlex=\"50\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { identity, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  form: FormGroup;\r\n  client_name: any;\r\n  cposName: any;\r\n  localStorage: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n  // ListRFID: string[] = ['RFID-1', 'RFID-2', 'RFID-3', 'RFID-4', 'RFID-5', 'RFID-6'];\r\n  ListRFID: any;\r\n  rfidList: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private masterService: MasterService,\r\n    private clientService: ClientService, \r\n    private snackBar: MatSnackBar,\r\n    private router: Router, \r\n    private cpoService: CpoService, \r\n    private rfidService: RfidService\r\n    ) {  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name: ['', [Validators.required]],\r\n      rfidlist: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.filteredOptions();\r\n    this.getClientName();\r\n    //this.getAllRfid();\r\n\r\n  }\r\n  // get rfidlist(): FormControl {\r\n\r\n  //   return this.form.get('rfidlist') as FormControl;\r\n  // }\r\n  onCPOChange(id) {\r\n    //this.getSelectedRFIDbyCPO(id);\r\n    this.getAllRfidByCPO(id);\r\n\r\n  }\r\n  // getSelectedRFIDbyCPO(id){\r\n  //   this.rfidService.getRFidsByCpoId(id).subscribe(\r\n  //     (data:any)=>{\r\n  //       //;\r\n  //       this.rfidList = data.data;\r\n  //        },(err)=>{\r\n  //       //;\r\n  //     }\r\n  //   )\r\n  // }\r\n  getAllRfidByCPO(id) {\r\n    //;\r\n    this.rfidService.getAllRFidsWithMappedCPOs(id).subscribe(\r\n      (data: any) => {\r\n\r\n        this.ListRFID = data.data;\r\n        // this.rfidList = data.data;\r\n        var selectedList = [];\r\n        for (let i = 0; i < this.ListRFID.length; i++) {\r\n          var rfid = this.ListRFID[i];\r\n          if (rfid.id != null && rfid.id != undefined) {\r\n            selectedList.push(rfid);\r\n          }\r\n        }\r\n\r\n\r\n        this.form.get('rfidlist').setValue(selectedList);\r\n\r\n      }, (err) => {\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  getClientName() {\r\n    //;\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.client_name = data;\r\n        const toSelect = this.client_name.find(c => c.id == this.localStorage.client_id);\r\n        this.form.get('client_name').setValue(toSelect);\r\n        this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClient(name) : this.client_name)\r\n          );\r\n        this.getCpoByclient(toSelect.id);\r\n      }, (err) => {\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  filteredOptions() {\r\n    this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterClient(name) : this.client_name)\r\n      );\r\n    this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n      );\r\n  }\r\n  displayClientName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCPOName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.client_name.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClientCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(event) {\r\n    this.getCpoByclient(event);\r\n    this.form.get('cpo_name').setValue(\"\");\r\n  }\r\n\r\n  getCpoByclient(id) {\r\n\r\n    this.cpoService.getCpoByClientId(id).subscribe(\r\n      (data: any) => {\r\n        this.cposName = data;\r\n        this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n          );\r\n      }, (err) => { }\r\n    )\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    let formValues = this.form.value;\r\n    ////\r\n\r\n    //;\r\n    let params = {\r\n      client_id: formValues.client_name.id,\r\n      cpo_id: formValues.cpo_name.id,\r\n      //rfid_data :formValues.rfidlist.map(v => v.rfid_id),\r\n      //rfid_data :formValues.rfidlist,\r\n      rfid_data: formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n      status: this.status == true ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n    this.rfidService.createCpoRfidMapping(params).subscribe(\r\n      (data: any) => {\r\n        // \r\n        this.snackBar.open('CPO-RFID mapped!', 'Dismiss', { duration: 5000 });\r\n        this.router.navigate(['/assetManagement/rfidManagement/cpo-rfid/crud/list']);\r\n\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  // onRFIDRemoved(rfid: string) {\r\n  //   const rfids = this.form.controls.rfidlist.value as string[];\r\n  //   this.removeFirst(rfids, rfid);\r\n  //   this.form.controls.rfidlist.setValue(rfids); // To trigger change detection\r\n  // }\r\n  // private removeFirst<T>(array: T[], toRemove: T): void {\r\n  //   const index = array.indexOf(toRemove);\r\n  //   if (index !== -1) {\r\n  //     array.splice(index, 1);\r\n  //   }\r\n  // }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  onRfidChange(event) {\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client Name</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n        <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n          (optionSelected)='onClientChange($event.option.value.id)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client name\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>CPO Name</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n        <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\"\r\n          (optionSelected)='onCPOChange($event.option.value.id)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter cpo name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>RFID List</mat-label>\r\n        <mat-select formControlName=\"rfidlist\" multiple (selectionChange)=\"onRfidChange($event)\">\r\n          <mat-option *ngFor=\"let option of ListRFID\" [value]=\"option\">\r\n            {{option.rfid_no}}\r\n          </mat-option>\r\n\r\n        </mat-select>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter rfid list\">help</mat-icon>\r\n      </mat-form-field>\r\n      <div fxFlex=\"50\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/rfidManagement/cpo-rfid/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  client_name:any;\r\n  cposName:any;\r\n  filteredOptionsClient:Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n // ListRFID: string[] = ['RFID-1', 'RFID-2', 'RFID-3', 'RFID-4', 'RFID-5', 'RFID-6'];\r\n ListRFID:any;\r\n selectedRFID:any;\r\n unSelectedRFID:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  \r\n\r\n  rfidList:any;\r\n  constructor(private fb: FormBuilder,private clientService: ClientService, private snackBar: MatSnackBar,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cpoService: CpoService,private rfidService:RfidService) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClientName();\r\n   // this.getAllRfid();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.rfidList = this.params.rfidData;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name : ['', [Validators.required]] ,\r\n      rfidlist: ['', [Validators.required]]  \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n      this.getClientName();\r\n      this.getAllRfid(this.params.data.cpo_id);\r\n      this.getCpoByclient(this.params.data.CLIENT_ID)\r\n    //  this.getAllRfidbyCPOid(this.params.data.cpo_id);\r\n    }\r\n   \r\n  }\r\n  getClientName(){\r\n    //;\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.client_name = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.client_name.find(c => c.id == this.params.data.CLIENT_ID);\r\n            this.form.get('client_name').setValue(toSelect);\r\n          \r\n        this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClient(name) : this.client_name)\r\n        );\r\n        }\r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  displayClientName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCPOName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.client_name.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClientCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(event){\r\n\t\tthis.getCpoByclient(event);\r\n  }\r\n  \r\n  getCpoByclient(id){\r\n\r\n    this.cpoService.getCpoByClientId(id).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.cposName = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n            this.form.get('cpo_name').setValue(toSelect);\r\n        this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n        );\r\n        }\r\n      },(err)=>{}\r\n\t\t)\r\n   \r\n   }\r\n   getAllRfid(id){\r\n    this.rfidService.getAllRFidsWithMappedCPOs(id).subscribe(\r\n      (data:any)=>{\r\n        this.ListRFID = data.data;\r\n        var selectedList = [];\r\n        for (let i = 0; i < this.ListRFID.length; i++) {\r\n          var rfid = this.ListRFID[i];\r\n          if(rfid.id != null && rfid.id != undefined){\r\n            selectedList.push(rfid);\r\n          }\r\n      }\r\n        // for (let i = 0; i < this.ListRFID.length; i++) {\r\n        //     var rfid = this.ListRFID[i];\r\n        //   for (let k = 0; k < this.rfidList.length; k++){\r\n        //     var cpoRfID = this.rfidList[k];\r\n        //     if(rfid.id +'' == cpoRfID.id+''){\r\n        //       selectedList.push(rfid);\r\n        //     }\r\n        //   }\r\n\r\n        //   //const toSelect = this.ListRFID.find(c => c.id == this.params.data.rfid_id);\r\n        //   //this.form.get('rfidlist').setValue([toSelect]);\r\n        // }\r\n\r\n\r\n        this.form.get('rfidlist').setValue(selectedList);\r\n        \r\n       // this.getAllRfidbyCPOid(this.params.data.cpo_id)\r\n        // if(this.isEditMode){\r\n        //   this.form.get('rfidlist').setValue(this.ListRFID);\r\n        // }\r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n   getAllRfidbyCPOid(id){\r\n    this.rfidService.getRFidsByCpoId(id).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.selectedRFID = data.data;\r\n          // for (let i = 0; i < this.ListRFID.length; i++){\r\n          //   const toSelect = this.ListRFID.find(c => c.id == this.params.data.cpo_id);\r\n          //   this.form.get('rfidlist').setValue(toSelect);\r\n          // }\r\n\r\n         // this.form.get('rfidlist').setValue(this.selectedRFID);\r\n        \r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      client_id : formValues.client_name.id,\r\n      cpo_id : formValues.cpo_name.id,\r\n     // rfid_data  : formValues.rfidlist,\r\n      rfid_data :formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.updatecpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.createCpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('CPO-Rfid  created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n   // this.form.get('client_name').setValue(params.data.client_name);\r\n    //this.form.get('cpo_name').setValue(params.data.cpo_name);\r\n    this.form.get('rfidlist').setValue(params.data.rfidlist);\r\n   \r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">CPO-RFID Mapping</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client Name</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n          <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n            (optionSelected)='onClientChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>CPO Name</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n          <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"49\" class=\"pr-4\">\r\n          <mat-label>RFID List</mat-label>\r\n          <mat-select disabled formControlName=\"rfidlist\" multiple>\r\n            <mat-option *ngFor=\"let option of ListRFID\" [value]=\"option\">\r\n              {{option.rfid_no}}\r\n            </mat-option>\r\n\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <div fxFlex=\"50\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" disabled\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport class RFID {\r\n    id: string;\r\n    client_name: string;\r\n    cpo_name: string;\r\n    rfid_no: string;\r\n    status: string;\r\n    created_date: string;\r\n    createdby: number;\r\n    modify_date: string;\r\n    modifyby: number;\r\n    action: string;\r\n    statusString: string;\r\n}\r\n\r\nexport class Group {\r\n    level = 0;\r\n    expanded = false;\r\n    totalCounts = 0;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n    selector: 'app-list',\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: RFID;\r\n    filterType: MatTableFilter;\r\n    //displayedColumns: string[] = [ 'client_name', 'cpo_name','rfid_no','status','action'];\r\n    //dataSource: MatTableDataSource<RFID>;\r\n    head = [['Client Name', 'CPO Name', 'RFID Number', 'Status']];\r\n    public dataSource = new MatTableDataSource<any | Group>([]);\r\n    // clients : RFID[];\r\n    localStorage: any;\r\n    form: FormGroup;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    cposName: any;\r\n    clientName: any;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    rfid: RFID[];\r\n    localCpoid: any;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n    groupByColumns: string[] = [];\r\n    allData: any[];\r\n    _allGroup: any[];\r\n\r\n    expandedRfid: any[] = [];\r\n    expandedSubRfid: RFID[] = [];\r\n    Row: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientSearch = false;\r\n    cpoSearch = false;\r\n    rfidSearch = false;\r\n    statusSearch = false;\r\n    selectedCpo_id:any;\r\n    exportedData: any[];\r\n    cpoRfid: any;\r\n    constructor(private clientService: ClientService, public dialog: MatDialog,\r\n        private snackBar: MatSnackBar, private fb: FormBuilder, private cpoService: CpoService, private rfidService: RfidService)  {\r\n        // Create 100 users\r\n        // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n        // Assign the data to the data source for the table to render\r\n        this.form = this.fb.group({\r\n            client: [''],\r\n            CPO: [\"\", Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n        // this.getClients();\r\n        // this.getClient();\r\n        // this.getCPOS();\r\n        this.columns = [{\r\n            field: 'client_name'\r\n        }, {\r\n            field: 'cpo_name'\r\n        }, {\r\n            field: 'rfid_no'\r\n        }, {\r\n            field: 'status'\r\n        }, {\r\n            field: 'action'\r\n        }];\r\n        this.displayedColumns = this.columns.map(column => column.field);\r\n        this.groupByColumns = ['cpo_name'];\r\n\r\n        this.getactivecposcw(this.localStorage.userId)\r\n        this.filterEntity = new RFID();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n        this.getCpoRFidMappingCW();\r\n        \r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    // getClients(){\r\n    //   this.clientService.getClients().subscribe(\r\n    //     (data:any)=>{\r\n    //       this.clients = data;\r\n    //       this.dataSource = new MatTableDataSource(this.clients);\r\n    //       this.dataSource.paginator = this.paginator;\r\n    //       this.dataSource.sort = this.sort;\r\n    //     },(err)=>{\r\n    //     }\r\n    //   )\r\n    // }\r\n    // getClient() {\r\n    //   //;\r\n    //   this.clientService.getClientById(this.localStorage.client_id).subscribe(\r\n    //     (data: any) => {\r\n    //      // ;\r\n    //       this.clientName = data;\r\n\r\n    //       this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n    //         .pipe(\r\n    //           startWith(''),\r\n    //           map(value => typeof value === 'string' ? value : value.name),\r\n    //           map(name => name ? this._filterClient(name) : this.clientName)\r\n    //         );\r\n    //     }, (err) => { }\r\n    //   )\r\n    // }\r\n\r\n    // onClientChange(id){\r\n    //   this.getactivecposcw(id);\r\n    // }\r\n\r\n    getCpoRFidMappingCW() {\r\n        this.rfidService.getCpoRFidMappingCW(this.localStorage.userId).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status == true) {\r\n                    // this.cpoRfid = resp;\r\n                    this.allData = resp.data;\r\n                    for (var i = 0; i < this.allData.length; i++) {\r\n                        if (this.allData[i].status == 'N') {\r\n                            this.allData[i].statusString = 'Inactive';\r\n                        } else {\r\n                            this.allData[i].statusString = 'Active';\r\n                        }\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(this.allData);\r\n                    //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    // this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n                    return;\r\n                }\r\n            }, (err) => { }\r\n        )\r\n    }\r\n\r\n\r\n    getactivecposcw(id) {\r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n\r\n                        this.selectedCpo_id = toSelect.id;\r\n                        this.form.get(\"CPO\").setValue(toSelect);\r\n                        \r\n\r\n                        if (this.localStorage.role_code == \"CPO\") {\r\n                            this.form.get(\"CPO\").disable();\r\n                        }\r\n\r\n                        this.getRfidbyCpoid(this.selectedCpo_id);\r\n                    }\r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    onCPOChange(id) {\r\n        this.getRfidbyCpoid(id);\r\n        this.dataSource.data = [];\r\n        //this.getCpoRFidMappingCW();\r\n        this.localCpoid = id;\r\n    }\r\n\r\n    getRfidbyCpoid(id) {\r\n\r\n        this.rfidService.getRFidsByCpoId(id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status == true) {\r\n                    this.rfid = resp.data;\r\n                    this.allData = resp.data;\r\n                    for (var i = 0; i < this.allData.length; i++) {\r\n                        if (this.allData[i].status == 'N') {\r\n                            this.allData[i].statusString = 'Inactive';\r\n                        } else {\r\n                            this.allData[i].statusString = 'Active';\r\n                        }\r\n\r\n\r\n                    }\r\n                    this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n                    //this.dataSource = new MatTableDataSource(this.rfid);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    // this.dataSource._pageData = (data: any[]) => {\r\n                    //   const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n                    //   // find start/end index with groups excluded\r\n                    //   const filter = data.filter(r => !r.isGroup).splice(startIndex, this.paginator.pageSize);\r\n                    //   const start = filter[0];\r\n                    //   const end = filter[filter.length - 1];\r\n                    //   // return all data between first and last item (including groups)\r\n                    //   return data.slice().splice(data.indexOf(start), data.indexOf(end));\r\n                    // }\r\n                } else {\r\n                    //this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n                }\r\n            }, (err) => {\r\n                //;\r\n            }\r\n        )\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    private _filterClient(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    delete(element) {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: true\r\n        });\r\n\r\n        //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.rfidService.unMapRFidCpoID(element.map_id, this.localStorage.userId).subscribe(\r\n                    (data: any) => {\r\n                        this.getRfidbyCpoid(this.localCpoid);\r\n                        this.getCpoRFidMappingCW();\r\n                        //this.getClient();\r\n                        this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n                    }, (err) => {\r\n\r\n                    }\r\n                )\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n            rfidData: this.rfid\r\n        }\r\n\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: '800px',\r\n            data: params,\r\n            panelClass: 'app-action-dialog',\r\n            autoFocus: false,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.getRfidbyCpoid(this.localCpoid);\r\n            // this.moderate(result);\r\n            // this.getClients();\r\n        });\r\n    }\r\n\r\n    viewDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data\r\n        }\r\n\r\n        const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n            width: '800px',\r\n            data: params,\r\n            panelClass: 'app-action-dialog',\r\n            autoFocus: false,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            // this.moderate(result);\r\n            this.getRfidbyCpoid(this.localCpoid);\r\n        });\r\n    }\r\n\r\n    groupHeaderClick(row) {\r\n        if (row.expanded) {\r\n            row.expanded = false;\r\n            this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n        } else {\r\n            row.expanded = true;\r\n            this.expandedRfid = row;\r\n            this.dataSource.data = this.addGroupsNew(this._allGroup, this.allData, this.groupByColumns, row);\r\n        }\r\n    }\r\n\r\n    getGroups(data: any[], groupByColumns: string[]): any[] {\r\n        const rootGroup = new Group();\r\n        rootGroup.expanded = false;\r\n        return this.getGroupList(data, 0, groupByColumns, rootGroup);\r\n    }\r\n\r\n    getGroupList(data: any[], level: number = 0, groupByColumns: string[], parent: Group): any[] {\r\n        if (level >= groupByColumns.length) {\r\n            return data;\r\n        }\r\n        let groups = this.uniqueBy(\r\n            data.map(\r\n                row => {\r\n                    const result = new Group();\r\n                    result.level = level + 1;\r\n                    for (let i = 0; i <= level; i++) {\r\n                        result[groupByColumns[i]] = row[groupByColumns[i]];\r\n                    }\r\n                    return result;\r\n                }\r\n            ),\r\n            JSON.stringify);\r\n\r\n        const currentColumn = groupByColumns[level];\r\n        let subGroups = [];\r\n        groups.forEach(group => {\r\n            const rowsInGroup = data.filter(row => group[currentColumn] === row[currentColumn]);\r\n            group.totalCounts = rowsInGroup.length;\r\n            this.expandedSubRfid = [];\r\n        });\r\n        groups = groups.sort((a: RFID, b: RFID) => {\r\n            const isAsc = 'asc';\r\n            return this.compare(a.cpo_name, b.cpo_name, isAsc);\r\n\r\n        });\r\n        this._allGroup = groups;\r\n        return groups;\r\n    }\r\n\r\n    addGroupsNew(allGroup: any[], data: any[], groupByColumns: string[], dataRow: any): any[] {\r\n        const rootGroup = new Group();\r\n        rootGroup.expanded = true;\r\n        return this.getSublevelNew(allGroup, data, 0, groupByColumns, rootGroup, dataRow);\r\n    }\r\n\r\n    getSublevelNew(allGroup: any[], data: any[], level: number, groupByColumns: string[], parent: Group, dataRow: any): any[] {\r\n        if (level >= groupByColumns.length) {\r\n            return data;\r\n        }\r\n        const currentColumn = groupByColumns[level];\r\n        let subGroups = [];\r\n        allGroup.forEach(group => {\r\n            const rowsInGroup = data.filter(row => group[currentColumn] === row[currentColumn]);\r\n            group.totalCounts = rowsInGroup.length;\r\n\r\n            if (group.cpo_name == dataRow.cpo_name.toString()) {\r\n                group.expanded = dataRow.expanded;\r\n                const subGroup = this.getSublevelNew(allGroup, rowsInGroup, level + 1, groupByColumns, group, dataRow.cpo_name.toString());\r\n                this.expandedSubRfid = subGroup;\r\n                subGroup.unshift(group);\r\n                subGroups = subGroups.concat(subGroup);\r\n            } else {\r\n                subGroups = subGroups.concat(group);\r\n            }\r\n        });\r\n        return subGroups;\r\n    }\r\n\r\n    uniqueBy(a, key) {\r\n        const seen = {};\r\n        return a.filter((item) => {\r\n            const k = key(item);\r\n            return seen.hasOwnProperty(k) ? false : (seen[k] = true);\r\n        });\r\n    }\r\n\r\n    isGroup(index, item): boolean {\r\n        return item.level;\r\n    }\r\n\r\n    onSortData(sort: MatSort) {\r\n        let data = this.allData;\r\n        const index = data.findIndex(x => x['level'] == 1);\r\n        if (sort.active && sort.direction !== '') {\r\n            if (index > -1) {\r\n                data.splice(index, 1);\r\n            }\r\n\r\n            data = data.sort((a: RFID, b: RFID) => {\r\n                const isAsc = sort.direction === 'asc';\r\n                switch (sort.active) {\r\n                    case 'client_name':\r\n                        return this.compare(a.client_name, b.client_name, isAsc);\r\n                    case 'cpo_name':\r\n                        return this.compare(a.cpo_name, b.cpo_name, isAsc);\r\n                    case 'rfid_no':\r\n                        return this.compare(a.rfid_no, b.rfid_no, isAsc);\r\n                    case 'status':\r\n                        return this.compare(a.status, b.status, isAsc);\r\n\r\n                    case 'action':\r\n                        return this.compare(a.action, b.action, isAsc);\r\n                    default:\r\n                        return 0;\r\n                }\r\n            });\r\n        }\r\n        this.dataSource.data = this.addGroupsNew(this._allGroup, data, this.groupByColumns, this.expandedRfid);\r\n    }\r\n\r\n    private compare(a, b, isAsc) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        // visibleOption = !visibleOption;\r\n        //nameSearch = false;\r\n        //descSearch = false;\r\n        ev.stopPropagation();\r\n        if (visibleOption == 'clientSearch') {\r\n            this.clientSearch = !this.clientSearch;\r\n            this.filterEntity.client_name = \"\";\r\n        }\r\n\r\n        if (visibleOption == 'cpoSearch') {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n\r\n        }\r\n        if (visibleOption == 'rfidSearch') {\r\n            this.rfidSearch = !this.rfidSearch;\r\n            this.filterEntity.rfid_no = \"\";\r\n\r\n        }\r\n        if (visibleOption == 'statusSearch') {\r\n            this.statusSearch = !this.statusSearch;\r\n            this.filterEntity.statusString = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chargerModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                'Client Name ': chargerModel.client_name, 'CPO Name': chargerModel.cpo_name, 'RFID No': chargerModel.rf_id_no,\r\n                'Status': chargerModel.statusString\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n\r\n\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, 'CPO-Rfid List');\r\n        XLSX.writeFile(workBook, 'CPO-Rfid List.xlsx');\r\n    }\r\n\r\n    pdfExport() {\r\n        //this.preloader.open();\r\n        var doc = new jsPDF({ // set needed dimensions for any element\r\n\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chrger = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [chrger.client_name, chrger.cpo_name, chrger.rf_id_no, chrger.statusString];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = 'assets/images/logos/logo_sparkev_main.png';\r\n        var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(('en-GB'));\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: 'grid',\r\n            headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {\r\n            },\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img , 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text('CPO-Rfid List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text('Date:' + createdDate, 15, 18);\r\n\r\n                doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n                doc = this.addWaterMark(doc);\r\n            }\r\n        })\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output('dataurlnewwindow')\r\n        //this.preloader.close();\r\n        // below line for Download PDF document  \r\n        doc.save('CPO-Rfid List report.pdf');\r\n\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n        return doc;\r\n\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <div style=\"text-align: left ;margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n            <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n                <mat-icon>sim_card_download</mat-icon> \r\n              </button>&nbsp;&nbsp;\r\n              <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n                <mat-icon>picture_as_pdf</mat-icon> \r\n              </button>\r\n            <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n        </div>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" class=\"form-field-full\">\r\n                    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"50\">\r\n                            <mat-label>Select CPO </mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"CPO\" [matAutocomplete]=\"auto2\">\r\n                            <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                                (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                                <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                                    {{option.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <div matSuffix style=\"display: flex;\">\r\n                                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter cpo name\">account_circle\r\n                                </mat-icon>\r\n                            </div>\r\n                            <mat-error *ngIf=\"form.get('CPO').invalid\">Please select cpo</mat-error>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div class=\"\">\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n            <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.client_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rfid_no\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!rfidSearch\" class=\"custom_font_size\" style=\"display: flex;\">RFID No &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"rfidSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Rfid No.\" [(ngModel)]=\"filterEntity.rfid_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.rf_id_no}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 110px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n                <ng-container matColumnDef=\"groupHeader\">\r\n                    <mat-cell colspan=\"999\" *matCellDef=\"let group\">\r\n                        <mat-icon *ngIf=\"group.expanded\">expand_less</mat-icon>\r\n                        <mat-icon *ngIf=\"!group.expanded\">expand_more</mat-icon>\r\n                        <strong>{{group[groupByColumns[group.level-1]]}} ({{group.totalCounts}})</strong>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-row *matRowDef=\"let row; columns: ['groupHeader']; when: isGroup;\" (click)=\"groupHeaderClick(row)\">\r\n                </mat-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\n import { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent, canActivate:[AuthGuard]},\r\n  { path : 'list', component : ListComponent , canActivate :[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CpoRfidCrudComponent } from './cpo-rfid-crud/cpo-rfid-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CpoRfidRoutingModule } from './cpo-rfid-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[CpoRfidCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, CpoRfidRoutingModule,MatChipsModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class CpoRfidModule{}","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CpoRfidCrudComponent } from './cpo-rfid-crud/cpo-rfid-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './cpo-rfid-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : CpoRfidCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class CpoRfidRoutingModule{}"]}