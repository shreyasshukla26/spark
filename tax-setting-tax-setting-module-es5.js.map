{"version":3,"sources":["webpack:///src/app/main/tariff-management/tax-setting/tax-setting-routing.module.ts","webpack:///src/app/main/tariff-management/tax-setting/tax-setting-crud/routes.ts","webpack:///src/app/main/tariff-management/tax-setting/tax-setting.module.ts","webpack:///src/app/main/tariff-management/tax-setting/view-dialog/view-dialog.component.ts","webpack:///src/app/main/tariff-management/tax-setting/view-dialog/view-dialog.component.html","webpack:///src/app/main/tariff-management/tax-setting/tax-setting-crud/tax-setting-crud.component.ts","webpack:///src/app/main/tariff-management/tax-setting/tax-setting-crud/tax-setting-crud.component.html","webpack:///src/app/main/tariff-management/tax-setting/action-dialog/action-dialog.component.ts","webpack:///src/app/main/tariff-management/tax-setting/action-dialog/action-dialog.component.html","webpack:///src/app/main/tariff-management/tax-setting/list/list.component.ts","webpack:///src/app/main/tariff-management/tax-setting/list/list.component.html","webpack:///src/app/main/tariff-management/tax-setting/create/create.component.ts","webpack:///src/app/main/tariff-management/tax-setting/create/create.component.html"],"names":["routes","path","component","canActivate","children","TaxSettingRoutingModule","forChild","imports","exports","TABS_DEMO_ROUTES","redirectTo","pathMatch","COMPONENTS","COMPONENTS_DYNAMIC","TaxSettingModule","declarations","entryComponents","autocompleteObjectValidator","control","value","ViewDialogComponent","fb","snackBar","dialogRef","data","router","menuMasterService","isEditMode","status","initialize","localStorage","JSON","parse","getItem","params","action","form","group","nav_level","required","project","parent_id","nav_id","title","pattern","type","icon","icon_url","url","display_ord","assignValues","getNavLevel","getParentByNavLevel","getProject","getType","getMenuIcon","close","get","hasError","setValue","display_order","subscribe","resp","toSelect","find","c","filteredOptionsNavLevel","controls","valueChanges","pipe","name","_filterNavLevel","err","$navLevel_id","filterValue","toLowerCase","filter","option","toString","includes","item","id","project_id","filteredOptionsProject","code","_filterProject","getMenuType","menuType","filteredOptionsMenuType","_filterMenuType","menuIcon","filteredOptionsMenuIcon","_filterMenuIcon","navLevel_id","parentId","filteredOptionsParentId","_filterParentId","event","checked","active","closeActionPanel","onNavLevelChange","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","TaxSettingCrudComponent","cdr","_utilityService","tabLinks","label","link","tempLinks","nav_list","nav_list_with_tab","activeMenuItems$","menuItemSelecte","menuArray","undefined","detectChanges","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","ActionDialogComponent","formValues","clearValidators","valid","modify_by","userId","created_by","update","open","recordUpdateMessage","duration","errorMessage","create","menuMasterCreate","onYesClick","TariffManagement","ListComponent","dialog","displayedColumns","head","titleSearch","navlevelSearch","typeSearch","disp_ordSearch","iconSearch","urlSearch","nav_idSearch","statusSearch","getMenuMaster","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","getAllMenus","tariffData","i","length","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteMessage","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","exportedData","filteredData","menuMaster","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","CreateComponent","countryService","typeList","quataList","timeBoolean","energyBoolean","flatBoolean","variableBoolean","stateTaxForm","fgroup","createVariableFG","country","tax_name","tax_value","array","noOfVariable","disabled","ONLY_NUMBERS","getAllCountry","getAllState","state","taxanme","taxvalue","removeAt","reset","countries","filteredOptionCountry","_filterCountry","states","filteredOptionState","_filterState","onSubmit","$event","preventDefault"],"mappings":"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","file":"tax-setting-tax-setting-module-es5.js","sourcesContent":["\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TaxSettingCrudComponent } from './tax-setting-crud/tax-setting-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './tax-setting-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : TaxSettingCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class TaxSettingRoutingModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n    path: 'create', component: CreateComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'list', component: ListComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '', redirectTo: 'list', pathMatch: 'full'\r\n  },\r\n];\r\n","\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { TaxSettingRoutingModule } from './tax-setting-routing.module';\r\nimport { TaxSettingCrudComponent } from './tax-setting-crud/tax-setting-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\n\r\n\r\nconst COMPONENTS =[ TaxSettingCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, TaxSettingRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class TaxSettingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level:any;\r\n  project:any;\r\n  menuType:any;\r\n  menuIcon:any;\r\n  parentId:any;\r\n  display_order:any;\r\n  filteredOptionsNavLevel : Observable<any[]>;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  filteredOptionsMenuType : Observable<any[]>;\r\n  filteredOptionsMenuIcon : Observable<any[]>;\r\n  filteredOptionsParentId : Observable<any[]>;\r\n  status = false;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router,private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      // code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      //description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: ['', [Validators.required]],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getNavLevel();\r\n    this.getParentByNavLevel(this.params.data.nav_level);\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n     this.form.get('nav_id').setValue(params.data.nav_id);\r\n     this.form.get('title').setValue(this.params.data.title);\r\n     this.form.get('icon_url').setValue(params.data.icon_url);\r\n     this.form.get('url').setValue(params.data.url);\r\n     this.form.get('display_ord').setValue(params.data.display_order);\r\n     this.status = this.params.data.status == 'Y' ? true : false; \r\n  }\r\n\r\n getNavLevel(){\r\n      this.menuMasterService.getNavLevel().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.nav_level =resp.data.nav_level;\r\n            //this.display_order = resp.data.next_display_order;\r\n            if(this.isEditMode){\r\n                const toSelect = this.nav_level.find(c => c == this.params.data.nav_level);\r\n                this.form.get('nav_level').setValue(toSelect);\r\n                this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value),\r\n                map(name => name ? this._filterNavLevel(name) : this.nav_level)\r\n              );\r\n            }\r\n\r\n          }\r\n        }, (err) => { }\r\n      );\r\n\r\n    }\r\n  onNavLevelChange($navLevel_id){\r\n    //console.log($navLevel_id);\r\n    this.form.get('parent_id').setValue('');\r\n    this.getParentByNavLevel($navLevel_id);\r\n    //this.form.get('display_ord').setValue( this.display_order);\r\n  }\r\n  private _filterNavLevel(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string{\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n           this.form.get('project').setValue(toSelect);\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.code),\r\n              map(name => name ? this._filterProject(name) : this.project)\r\n            );\r\n          }\r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string{\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType() {\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuType = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuType.find(c => c.type == this.params.data.type);\r\n           this.form.get('type').setValue(toSelect);\r\n           this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.type),\r\n              map(name => name ? this._filterMenuType(name) : this.menuType)\r\n            );\r\n\r\n          }\r\n          \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string{\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon() {\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuIcon = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuIcon.find(c => c.icon == this.params.data.icon);\r\n           this.form.get('icon').setValue(toSelect);\r\n           this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.icon),\r\n              map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n            );\r\n          }\r\n          \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option => option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string{\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id) {\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.parentId = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.parentId.find(c => c.id == this.params.data.parent_id);\r\n           this.form.get('parent_id').setValue(toSelect);\r\n           this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n              map(name => name ? this._filterParentId(name) : this.parentId)\r\n            );\r\n          }\r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string{\r\n    return item && item.title ? item.title : '';\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white; \" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Menu Master</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\"\r\n\t\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"parent_id\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"project\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" autocomplete=\"off\" readonly\r\n\t\t\t\t\tstyle=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" autocomplete=\"off\" [matAutocomplete]=\"typeAuto\"\r\n\t\t\t\t\t\treadonly>\r\n\t\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\" autocomplete=\"off\" [matAutocomplete]=\"iconAuto\"\r\n\t\t\t\t\t\treadonly>\r\n\t\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\t\t\treadonly style=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" readonly style=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('url').errors?.required\">Please enter url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').errors?.required\">Please enter display order\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement [disabled]=\"true\">\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import {ChangeDetectorRef, Component,OnInit,ViewEncapsulation} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-tax-setting-crud',\r\n  templateUrl: './tax-setting-crud.component.html',\r\n  styleUrls: ['./tax-setting-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class TaxSettingCrudComponent implements OnInit {\r\n\r\n   tabLinks = [\r\n    { label: 'Tax Setting', link: 'list' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray:any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n  \r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    // nav_list.filter((x) => {\r\n    //   if (x.id === \"menuManagement\") {\r\n    //     this.objectData = x;\r\n    //     this.objectData.children.filter((y) => {\r\n    //       if (y.id === \"crud\") {\r\n    //         this.objectChildData = y;\r\n\r\n    //         let isDefaultRoutePermeted = false;\r\n    //         this.objectChildData.children.filter((z) => {\r\n    //           if (z.id === \"menuMaster\") {\r\n    //             isDefaultRoutePermeted = true;\r\n    //             this.tempLinks.push({ label: 'Menu Master', link: 'list' });\r\n    //           }\r\n    //           if (z.id === \"addNew\") {\r\n    //             this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n    //           }\r\n    //         });\r\n    //         this.tabLinks = this.tempLinks;\r\n    //         if (!isDefaultRoutePermeted) {\r\n    //           this.router.navigate(['/menuManagement/crud/crud/' + this.tempLinks[0].link]);\r\n    //         }\r\n\r\n    //       }\r\n\r\n    //     });\r\n    //   }\r\n    // });\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level: any;\r\n  project: any;\r\n  menuType: any;\r\n  menuIcon: any;\r\n  parentId: any;\r\n  display_order:any;\r\n  status = false;\r\n  filteredOptionsNavLevel: Observable<any[]>;\r\n  filteredOptionsProject: Observable<any[]>;\r\n  filteredOptionsMenuType: Observable<any[]>;\r\n  filteredOptionsMenuIcon: Observable<any[]>;\r\n  filteredOptionsParentId: Observable<any[]>;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private menuMasterService: MenuMasterService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['',[autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: [''],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.getNavLevel();\r\n    this.getParentByNavLevel(this.params.data.nav_level);\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    //console.log(formValues); \r\n    if(formValues.nav_level == 1 ){\r\n      this.form.get('parent_id').setValue(null);\r\n      this.form.get('parent_id').clearValidators();\r\n    }\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      const params: any = {\r\n        nav_level: formValues.nav_level,\r\n        project_id: formValues.project.id,\r\n        parent_id: formValues.parent_id == null ? null  : formValues.parent_id.id,\r\n        nav_id: formValues.nav_id,\r\n        title: formValues.title,\r\n        type: formValues.type.type,\r\n        icon: formValues.icon.icon,\r\n        icon_url: formValues.icon_url,\r\n        url: formValues.url == \"\" ? null : formValues.url,\r\n        display_order: formValues.display_ord,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n      \r\n  \r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        this.menuMasterService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n                this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                this.dialogRef.close();\r\n                \r\n            }else{\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n            \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.menuMasterService.create(params).subscribe(\r\n          (resp: any) => {\r\n            this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }else{\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n      return form.get('email').hasError('required')\r\n        ? 'You must enter a value'\r\n        : form.get('email').hasError('email')\r\n          ? 'Not a valid email'\r\n          : '';\r\n    }\r\n\r\n    assignValues(params) {\r\n      this.form.get('nav_id').setValue(params.data.nav_id);\r\n      this.form.get('title').setValue(this.params.data.title);\r\n      this.form.get('icon_url').setValue(params.data.icon_url);\r\n      this.form.get('url').setValue(params.data.url);\r\n      this.form.get('display_ord').setValue(params.data.display_order);\r\n      this.status = this.params.data.status == 'Y' ? true : false;\r\n    }\r\n\r\n    getNavLevel(){\r\n      this.menuMasterService.getNavLevel().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.nav_level =resp.data.nav_level;\r\n            //this.display_order = resp.data.next_display_order;\r\n            if(this.isEditMode){\r\n                const toSelect = this.nav_level.find(c => c == this.params.data.nav_level);\r\n                this.form.get('nav_level').setValue(toSelect);\r\n              }\r\n              this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value),\r\n                map(value => value ? this._filterNavLevel(value) : this.nav_level)\r\n              );\r\n          }\r\n        }, (err) => { }\r\n      );\r\n      \r\n\r\n    }\r\n    onNavLevelChange(navLevel_id){\r\n      //console.log($navLevel_id);\r\n      this.form.get('parent_id').setValue('');\r\n      this.getParentByNavLevel(navLevel_id);\r\n      //this.form.get('display_ord').setValue( this.display_order);\r\n    }\r\n  private _filterNavLevel(value: string): any[] {\r\n    const filterValue = value.toString().toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string {\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n           this.form.get('project').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.code),\r\n              map(code => code ? this._filterProject(code) : this.project)\r\n            );\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(code: string): any[] {\r\n    const filterValue = code.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string {\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType() {\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuType = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuType.find(c => c.type == this.params.data.type);\r\n           this.form.get('type').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.type),\r\n              map(name => name ? this._filterMenuType(name) : this.menuType)\r\n            );  \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string {\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon() {\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuIcon = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuIcon.find(c => c.icon == this.params.data.icon);\r\n           this.form.get('icon').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.icon),\r\n              map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n            ); \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option =>  option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string {\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id) {\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.parentId = resp.data;\r\n          if(this.isEditMode){\r\n                if(navLevel_id != 1){\r\n                  const toSelect = this.parentId.find(c => c.id == this.params.data.parent_id);\r\n                 this.form.get('parent_id').setValue(toSelect);\r\n               }else{\r\n                this.form.get('parent_id').setValue(null);\r\n                this.form.get('parent_id').clearValidators();\r\n               }\r\n          }\r\n           this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n              map(name => name ? this._filterParentId(name) : this.parentId)\r\n            );\r\n          \r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string {\r\n    return item && item.title ? item.title : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\t\t<form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\">\r\n\t\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\"\r\n\t\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"parent_id\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\">\r\n\t\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.code}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" required autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform:none\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"typeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.type}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"iconAuto\">\r\n\t\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.icon}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform: none\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" style=\"text-transform: none\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('url').invalid\">Please enter url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').invalid\">Please enter display order\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t{{isEditMode? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\r\n\t</div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nexport class TariffManagement {\r\n  id: number;\r\n  nav_level: number;\r\n  project_id: number;\r\n  nav_id: string;\r\n  title: string;\r\n  type: string;\r\n  icon: string;\r\n  icon_url: string;\r\n  url: string;\r\n  display_order: number;\r\n  parent_id: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: TariffManagement;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['nav_level', 'title', 'type', 'status', 'action'];\r\n  head = [['Title', 'Type', 'Display Order', 'Icon', 'Url', 'Nav Level', 'Nav Id', 'Status']]\r\n  dataSource: MatTableDataSource<TariffManagement>;\r\n  tariffData: TariffManagement[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dialogRef: any;\r\n  titleSearch = false;\r\n  navlevelSearch = false;\r\n  typeSearch = false;\r\n  disp_ordSearch = false;\r\n  iconSearch = false;\r\n  urlSearch = false;\r\n  nav_idSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(public dialog: MatDialog, private menuMasterService: MenuMasterService,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getMenuMaster();\r\n    this.filterEntity = new TariffManagement();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getMenuMaster() {\r\n    this.menuMasterService.getAllMenus().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.tariffData = resp.data;\r\n          for (var i = 0; i < this.tariffData.length; i++) {\r\n            if (this.tariffData[i].status == 'N') {\r\n              this.tariffData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.tariffData[i].statusString = 'Active';\r\n            }\r\n            if(this.tariffData[i].title == null ){\r\n              this.tariffData[i].title = '';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.tariffData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.menuMasterService.delete(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.getMenuMaster();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n            }\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getMenuMaster();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getMenuMaster();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'titleSearch') {\r\n      this.titleSearch = !this.titleSearch;\r\n      this.filterEntity.title = '';\r\n    }\r\n    if (visibleOption == 'typeSearch') {\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.type = ''\r\n    }\r\n    if (visibleOption == 'disp_ordSearch') {\r\n      this.disp_ordSearch = !this.disp_ordSearch;\r\n      this.filterEntity.display_order = null;\r\n    }\r\n    if (visibleOption == 'iconSearch') {\r\n      this.iconSearch = !this.iconSearch;\r\n      this.filterEntity.icon = '';\r\n    }\r\n    if (visibleOption == 'urlSearch') {\r\n      this.urlSearch = !this.urlSearch;\r\n      this.filterEntity.url = '';\r\n    }\r\n    if (visibleOption == 'nav_idSearch') {\r\n      this.nav_idSearch = !this.nav_idSearch;\r\n      this.filterEntity.nav_id = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if (visibleOption == 'navlevelSearch') {\r\n      this.navlevelSearch = !this.navlevelSearch;\r\n      this.filterEntity.nav_level = null;\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var menuMaster = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Title': menuMaster.title, 'Type': menuMaster.type, 'Display Order': menuMaster.display_order,\r\n        'Icon': menuMaster.icon, 'Url ': menuMaster.url, 'Nav Level': menuMaster.nav_level,\r\n        'Nav ID': menuMaster.nav_id, 'Status': menuMaster.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'MenuMaster.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var menuMaster = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [menuMaster.title, menuMaster.type, menuMaster.display_order, menuMaster.icon, menuMaster.url, menuMaster.nav_level,\r\n      menuMaster.nav_id, menuMaster.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('MenuMaster Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not For Public Use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('MenuMaster report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <mat-table  [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table\r\n        [dataSource]=\"dataSource\" matSort matTableFilter>\r\n\r\n        \r\n        <ng-container matColumnDef=\"title\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!titleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('titleSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"titleSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Title \" [(ngModel)]=\"filterEntity.title\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('titleSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.title}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"nav_level\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!navlevelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Type\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('navlevelSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"navlevelSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\"Nav Level \" [(ngModel)]=\"filterEntity.nav_level\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('navlevelSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.nav_level}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"type\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger/Session\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Type\" [(ngModel)]=\"filterEntity.type\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.type}} </mat-cell>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"icon\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!iconSearch\" class=\"custom_font_size\" style=\"display: flex;\">Icon\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('iconSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"iconSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Icon\" [(ngModel)]=\"filterEntity.icon\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('iconSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.icon}} </mat-cell>\r\n        </ng-container> -->\r\n        <!-- <ng-container matColumnDef=\"url\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!urlSearch\" class=\"custom_font_size\" style=\"display: flex;\">Url\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"urlSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Url \" [(ngModel)]=\"filterEntity.url\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.url}} </mat-cell>\r\n        </ng-container> -->\r\n        \r\n        <ng-container matColumnDef=\"status\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                {{row.statusString}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef >\r\n                <span class=\"custom_font_size\">Action</span>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let element\">\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                    style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                    style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                    delete</mat-icon>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n        <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  flatform: FormGroup;\r\n  variableform: FormGroup;\r\n  localStorage: any;\r\n  nav_level:any;\r\n  display_order:any;\r\n  project:any;\r\n  menuType:any;\r\n  menuIcon:any;\r\n  parentId:any;\r\n  status = false;\r\n  typeList: string[] = ['Flat', 'Variable'];\r\n  quataList:string[] = ['Time','Energy']\r\n  timeBoolean = false;\r\n  energyBoolean = false;\r\n  flatBoolean = false;\r\n  variableBoolean = false;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  charSchud_forms: FormGroup;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router,private menuMasterService:MenuMasterService,\r\n    public countryService: CountriesService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize(); \r\n    this.form.get('noOfVariable').setValue(this.form.value.stateTaxForm.length);\r\n  }\r\n\r\n  initialize() {\r\n    const fgroup = this.createVariableFG();\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.createVariableFG();\r\n    this.form = this.fb.group({\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      tax_name: ['', [ Validators.required]],\r\n      tax_value: ['',[ Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      stateTaxForm : this.fb.array([fgroup]) ,\r\n      noOfVariable: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n    });\r\n    this.getAllCountry();\r\n    this.getAllState(fgroup);\r\n    \r\n  }\r\n  private createVariableFG(): FormGroup {\r\n    return new FormGroup({\r\n      state: new FormControl(''),\r\n      taxanme: new FormControl(''),\r\n      taxvalue: new FormControl(''),\r\n    });\r\n  }\r\n  onSubmit() {\r\n    // let formValues = this.form.value;\r\n    // if(formValues.nav_level == \"1\" ){\r\n    //   this.form.get('parent_id').setValue(null);\r\n    //   this.form.get('parent_id').clearValidators();\r\n    // }else{\r\n    //   this.form.get('parent_id').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    // }\r\n    // if (this.form.valid) {\r\n    //   //console.log(formValues);\r\n    //   let params = {\r\n        \r\n    //     nav_level:formValues.nav_level,\r\n    //     project_id:formValues.project.id,\r\n    //     parent_id: formValues.parent_id == \"\" ? null  : formValues.parent_id.id,\r\n    //     nav_id:formValues.nav_id,\r\n    //     title:formValues.title,\r\n    //     type:formValues.type.type,\r\n    //     icon:formValues.icon.icon,\r\n    //     icon_url:formValues.icon_url,\r\n    //     url:formValues.url == \"\" ? null : formValues.url,\r\n    //     display_order:formValues.display_ord,\r\n    //     status: this.status == true ? 'Y' : 'N',\r\n    //     created_by: this.localStorage.userId,\r\n    //   }\r\n    //   //console.log(params)\r\n    //   this.menuMasterService.create(params).subscribe(\r\n    //     (resp:any) => {\r\n    //       if(resp.status == true){\r\n    //         //console.log(params,resp.data);\r\n    //         this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n    //         this.router.navigate(['/menuManagement/crud/list/']);\r\n    //       }else{\r\n    //         this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n    //       }\r\n\r\n    //     },(err) =>{\r\n    //       this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    //      }\r\n    //   );\r\n    // }else{\r\n    //   this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    // }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  \r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  \r\n  public addVariableFG() {\r\n    const stateTaxForm = this.form.get('stateTaxForm') as FormArray;\r\n    const fgroup = this.createVariableFG();\r\n    stateTaxForm.push(fgroup);\r\n    this.form.get('noOfVariable').setValue(this.form.value.stateTaxForm.length);\r\n\r\n  }\r\n\r\n  public removeVariableFG(i: number) {\r\n    const stateTaxForm = this.form.get('stateTaxForm') as FormArray\r\n    if (stateTaxForm.length > 1) {\r\n      stateTaxForm.removeAt(i)\r\n    } else {\r\n      stateTaxForm.reset()\r\n    }\r\n    this.form.get('noOfVariable').setValue(this.form.value.stateTaxForm.length);\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(fgroup:FormGroup) {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = fgroup.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Tax Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"tax_name\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('tax_name').hasError('required')\">Please enter tax name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('tax_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Tax Value</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" type=\"number\" formControlName=\"tax_value\" maxlength=\"200\" autocomplete=\"off\">\r\n\r\n\t\t\t\t<mat-error *ngIf=\"form.get('tax_value').invalid\">Please enter tax value</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div formArrayName=\"stateTaxForm\">\r\n\t\t\t<div fxLayout=\"column\" *ngFor=\"let variable of form.get('stateTaxForm')['controls']; let i = index\"\r\n\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\tState Tax: {{i+1}}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>State/Province</mat-label>\r\n\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\"\r\n\t\t\t\t\t\t\tautocomplete=\"off\" required>\r\n\t\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city\r\n\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"variable.get('state').invalid\">Please select state</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Tax Name</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"taxanme\" autocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter tax name \">help</mat-icon>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Tax Value</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"taxvalue\" autocomplete=\"off\" type=\"number\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter tax value \">help</mat-icon>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t<div class=\"add-row\" flex=\"20\">\r\n\t\t\t\t\t\t<mat-label class=\"sm-txt\">Add Row</mat-label>\r\n\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n\t\t\t\t\t\t\t(click)=\"addVariableFG()\" matTooltip=\"Add\">\r\n\t\t\t\t\t\t\t<mat-icon>add_circle</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n\t\t\t\t\t\t\t(click)=\"removeVariableFG(i)\" matTooltip=\"Remove\">\r\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"tariffManagement/taxSetting/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n\r\n</div>"]}