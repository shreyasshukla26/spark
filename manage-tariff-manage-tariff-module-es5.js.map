{"version":3,"sources":["webpack:///src/app/main/tariff-management/manage-tariff/manage-tariff.module.ts","webpack:///src/app/main/tariff-management/manage-tariff/create/create.component.ts","webpack:///src/app/main/tariff-management/manage-tariff/create/create.component.html","webpack:///src/app/main/tariff-management/manage-tariff/list/list.component.ts","webpack:///src/app/main/tariff-management/manage-tariff/list/list.component.html","webpack:///src/app/main/tariff-management/manage-tariff/manage-tariff-routing.module.ts","webpack:///src/app/main/tariff-management/manage-tariff/manage-tariff-crud/manage-tariff-crud.component.ts","webpack:///src/app/main/tariff-management/manage-tariff/manage-tariff-crud/manage-tariff-crud.component.html","webpack:///src/app/main/tariff-management/manage-tariff/manage-tariff-crud/routes.ts","webpack:///src/app/main/tariff-management/manage-tariff/action-dialog/action-dialog.component.ts","webpack:///src/app/main/tariff-management/manage-tariff/action-dialog/action-dialog.component.html","webpack:///src/app/main/tariff-management/manage-tariff/view-dialog/view-dialog.component.ts","webpack:///src/app/main/tariff-management/manage-tariff/view-dialog/view-dialog.component.html"],"names":["COMPONENTS","COMPONENTS_DYNAMIC","ManageTariffModule","imports","declarations","entryComponents","autocompleteObjectValidator","control","value","CreateComponent","fb","snackBar","router","menuMasterService","status","typeList","quataList","timeBoolean","energyBoolean","flatBoolean","variableBoolean","initialize","form","get","setValue","variableForm","length","fgroup","createVariableFG","localStorage","JSON","parse","getItem","group","name","required","type","session","quata_type","time_limit","addition_charges","energy_limit","isParking","isReservertion","array","isCharger","parkinghr","reservertion","chargerhr","noOfVariable","disabled","pattern","ONLY_NUMBERS","offer","oTime","cTime","price","monday","tuesday","wednesday","thursday","friday","saturday","sunday","hasError","event","checked","active","push","i","removeAt","reset","onSubmit","$event","preventDefault","type_item","selector","templateUrl","styleUrls","TariffManagement","ListComponent","dialog","cdr","displayedColumns","head","titleSearch","navlevelSearch","typeSearch","disp_ordSearch","iconSearch","urlSearch","nav_idSearch","statusSearch","getMenuMaster","filterEntity","filterType","ANYWHERE","filterValue","target","dataSource","filter","trim","toLowerCase","paginator","firstPage","getAllMenus","subscribe","resp","tariffData","data","statusString","title","sort","open","NoRecordFoundMessage","duration","err","id","confirmDialogRef","disableClose","afterClosed","result","userId","deleteMessage","detectChanges","errorMessage","action","params","dialogRef","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","display_order","icon","url","nav_id","nav_level","exportedData","filteredData","menuMaster","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","encapsulation","None","animations","routes","path","component","canActivate","children","ManageTariffRoutingModule","forChild","exports","ManageTariffCrudComponent","_utilityService","tabLinks","label","link","tempLinks","nav_list","nav_list_with_tab","activeMenuItems$","menuItemSelecte","menuArray","undefined","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","TABS_DEMO_ROUTES","redirectTo","pathMatch","ActionDialogComponent","isEditMode","project","parent_id","icon_url","display_ord","getNavLevel","getParentByNavLevel","getProject","getType","getMenuIcon","assignValues","close","formValues","clearValidators","valid","project_id","modify_by","created_by","update","recordUpdateMessage","create","menuMasterCreate","toSelect","find","c","filteredOptionsNavLevel","controls","valueChanges","pipe","_filterNavLevel","navLevel_id","toString","option","includes","item","filteredOptionsProject","code","_filterProject","getMenuType","menuType","filteredOptionsMenuType","_filterMenuType","menuIcon","filteredOptionsMenuIcon","_filterMenuIcon","parentId","filteredOptionsParentId","_filterParentId","closeActionPanel","onNavLevelChange","updateStatus","onYesClick","ViewDialogComponent","$navLevel_id"],"mappings":"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","file":"manage-tariff-manage-tariff-module-es5.js","sourcesContent":["\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ManageTariffRoutingModule } from './manage-tariff-routing.module';\r\nimport { ManageTariffCrudComponent } from './manage-tariff-crud/manage-tariff-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\n\r\n\r\nconst COMPONENTS =[ ManageTariffCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ManageTariffRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ManageTariffModule{}","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  typeList: string[] = ['Flat', 'Variable'];\r\n  quataList:string[] = ['Time','Energy']\r\n  timeBoolean = false;\r\n  energyBoolean = false;\r\n  flatBoolean = false;\r\n  variableBoolean = false;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  charSchud_forms: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router,private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize(); \r\n    this.form.get('noOfVariable').setValue(this.form.value.variableForm.length);\r\n  }\r\n\r\n  initialize() {\r\n    const fgroup = this.createVariableFG();\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.createVariableFG();\r\n    this.form = this.fb.group({\r\n      name: ['', [ Validators.required]],\r\n      type: ['', [ Validators.required]],\r\n      session: ['',[ Validators.required]],\r\n      quata_type:['',[ Validators.required]],\r\n      time_limit:[],\r\n      addition_charges:[''],\r\n      energy_limit:[''],\r\n      //addition_energy_charges:[''],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      isParking: false,\r\n      isReservertion:false,\r\n      variableForm : this.fb.array([fgroup]) ,\r\n      isCharger:false,\r\n      parkinghr:[''],\r\n      reservertion:[''],\r\n      chargerhr:[''],\r\n      noOfVariable: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n    });\r\n    \r\n  }\r\n  private createVariableFG(): FormGroup {\r\n    return new FormGroup({\r\n      offer: new FormControl(''),\r\n      oTime: new FormControl(''),\r\n      cTime: new FormControl(''),\r\n      price: new FormControl(''),\r\n      monday: new FormControl(''),\r\n      tuesday:new FormControl(''),\r\n      wednesday:new FormControl(''),\r\n      thursday:new FormControl(''),\r\n      friday:new FormControl(''),\r\n      saturday:new FormControl(''),\r\n      sunday:new FormControl(''),\r\n    });\r\n  }\r\n  onSubmit() {\r\n    // let formValues = this.form.value;\r\n    // if(formValues.nav_level == \"1\" ){\r\n    //   this.form.get('parent_id').setValue(null);\r\n    //   this.form.get('parent_id').clearValidators();\r\n    // }else{\r\n    //   this.form.get('parent_id').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    // }\r\n    // if (this.form.valid) {\r\n    //   //console.log(formValues);\r\n    //   let params = {\r\n        \r\n    //     nav_level:formValues.nav_level,\r\n    //     project_id:formValues.project.id,\r\n    //     parent_id: formValues.parent_id == \"\" ? null  : formValues.parent_id.id,\r\n    //     nav_id:formValues.nav_id,\r\n    //     title:formValues.title,\r\n    //     type:formValues.type.type,\r\n    //     icon:formValues.icon.icon,\r\n    //     icon_url:formValues.icon_url,\r\n    //     url:formValues.url == \"\" ? null : formValues.url,\r\n    //     display_order:formValues.display_ord,\r\n    //     status: this.status == true ? 'Y' : 'N',\r\n    //     created_by: this.localStorage.userId,\r\n    //   }\r\n    //   //console.log(params)\r\n    //   this.menuMasterService.create(params).subscribe(\r\n    //     (resp:any) => {\r\n    //       if(resp.status == true){\r\n    //         //console.log(params,resp.data);\r\n    //         this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n    //         this.router.navigate(['/menuManagement/crud/list/']);\r\n    //       }else{\r\n    //         this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n    //       }\r\n\r\n    //     },(err) =>{\r\n    //       this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    //      }\r\n    //   );\r\n    // }else{\r\n    //   this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    // }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  \r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  quata_type(event){\r\n    if(event.value == \"Time\"){\r\n      this.timeBoolean = true;\r\n      this.energyBoolean = false;\r\n    }else{\r\n      this.energyBoolean = true;\r\n      this.timeBoolean = false;\r\n    }\r\n    \r\n  }\r\n  type_item(event){\r\n    if(event.value == \"Variable\"){\r\n      this.flatBoolean = false;\r\n      this.variableBoolean = true;\r\n      this.timeBoolean = false;\r\n      this.energyBoolean = false;\r\n    }else{\r\n      this.flatBoolean = true;\r\n      this.variableBoolean = false;\r\n      this.energyBoolean = false;\r\n    }\r\n  \r\n  }\r\n  public addVariableFG() {\r\n    const variableForm = this.form.get('variableForm') as FormArray;\r\n    const fgroup = this.createVariableFG();\r\n    variableForm.push(fgroup);\r\n    \r\n\r\n    this.form.get('noOfVariable').setValue(this.form.value.variableForm.length);\r\n\r\n  }\r\n\r\n  public removeVariableFG(i: number) {\r\n    const variableForm = this.form.get('variableForm') as FormArray\r\n    if (variableForm.length > 1) {\r\n      variableForm.removeAt(i)\r\n    } else {\r\n      variableForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfVariable').setValue(this.form.value.variableForm.length);\r\n\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t<mat-select disableRipple formControlName=\"type\" (selectionChange)=\"type_item($event)\" required>\r\n\t\t\t\t\t<mat-option [value]=\"option\" *ngFor=\"let option of typeList\"> {{ option }}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('type').hasError('required')\">Please select type</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charges/Session</mat-label>\r\n\t\t\t\t<input matInput type=\"number\" formControlName=\"session\" autocomplete=\"off\" required>\r\n\r\n\t\t\t\t<mat-error *ngIf=\"form.get('session').invalid\">Please enter charger/session</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" *ngIf=\"flatBoolean\">\r\n\t\t\t\t<mat-label>Quata Type</mat-label>\r\n\t\t\t\t<mat-select disableRipple formControlName=\"quata_type\" (selectionChange)=\"quata_type($event)\" required>\r\n\t\t\t\t\t<mat-option [value]=\"option\" *ngFor=\"let option of quataList\"> {{ option }}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('quata_type').hasError('required')\">Please select quata type</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" *ngIf=\"timeBoolean\">\r\n\t\t\t\t<mat-label>Time Limit</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"time_limit\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('time_limit').invalid\">Please enter charger/session</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" *ngIf=\"energyBoolean\">\r\n\t\t\t\t<mat-label>Energy Limit</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"energy_limit\" maxlength=\"200\" autocomplete=\"off\">\r\n\r\n\t\t\t\t<mat-error *ngIf=\"form.get('time_limit').invalid\">Please enter charger/session</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" *ngIf=\"timeBoolean || energyBoolean\">\r\n\t\t\t\t<mat-label>Additional Charges</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addition_charges\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t</mat-form-field>\r\n\t\t\t<!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" *ngIf=\"energyBoolean\">\r\n\t\t\t\t<mat-label>Additional Charges</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addition_energy_charges\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t</mat-form-field> -->\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" *ngIf=\"flatBoolean\">\r\n\t\t\t<div fxFlex=\"33\" style=\"align-items: baseline;\">\r\n\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"isParking\" #parkCheckbox>Parking Charges/Hr</mat-checkbox>\r\n\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"70\" class=\"pr-4\" *ngIf=\"parkCheckbox.checked\">\r\n\t\t\t\t\t<mat-label>Parking Charges/Hr</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" formControlName=\"parkinghr\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"33\" style=\"align-items: baseline;\">\r\n\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"isReservertion\" #reseCheckbox>Reservtion</mat-checkbox>\r\n\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"70\" class=\"pr-4\" *ngIf=\"reseCheckbox.checked\">\r\n\t\t\t\t\t<mat-label>Reservtion</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" formControlName=\"reservertion\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"33\" style=\"align-items: baseline;\">\r\n\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"isCharger\" #chargCheckbox> Charges/Hr</mat-checkbox>\r\n\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"70\" class=\"pr-4\" *ngIf=\"chargCheckbox.checked\">\r\n\t\t\t\t\t<mat-label>Charges/Hr</mat-label>\r\n\t\t\t\t\t<input matInput type=\"number\" formControlName=\"chargerhr\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div formArrayName=\"variableForm\" *ngIf=\"variableBoolean\">\r\n\t\t\t<div fxLayout=\"column\" *ngFor=\"let variable of form.get('variableForm')['controls']; let i = index\"\r\n\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\tEnergy Charges: {{i+1}}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Offer Name</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"offer\" autocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter offer name \">help</mat-icon>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>From Time</mat-label>\r\n\t\t\t\t\t\t<input matInput aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter from time\">schedule\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"variable.get('oTime').invalid\">Please enter from time\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>To Time</mat-label>\r\n\t\t\t\t\t\t<input matInput aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter to time\">schedule</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"variable.get('cTime').hasError('required')\">Please enter to time\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Price</mat-label>\r\n\t\t\t\t\t\t<input matInput type=\"number\" formControlName=\"price\" autocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter price \">help</mat-icon>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" class=\"mt-10\">\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"monday\">Monday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"tuesday\">Tuesday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"wednesday\">Wednesday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"thursday\">Thursday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"friday\">Friday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"saturday\">Saturday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div fxFlex=\"12\">\r\n\t\t\t\t\t\t<mat-checkbox class=\"pr-4\" formControlName=\"sunday\">Sunday</mat-checkbox>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" class=\"mt-10\">\r\n\t\t\t\t\t<div class=\"add-row\" flex=\"20\">\r\n\t\t\t\t\t\t<mat-label class=\"sm-txt\">Add Row</mat-label>\r\n\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n\t\t\t\t\t\t\t(click)=\"addVariableFG()\" matTooltip=\"Add\">\r\n\t\t\t\t\t\t\t<mat-icon>add_circle</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n\t\t\t\t\t\t\t(click)=\"removeVariableFG(i)\" matTooltip=\"Remove\">\r\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-10\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"tariffManagement/manageTariff/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nexport class TariffManagement {\r\n  id: number;\r\n  nav_level: number;\r\n  project_id: number;\r\n  nav_id: string;\r\n  title: string;\r\n  type: string;\r\n  icon: string;\r\n  icon_url: string;\r\n  url: string;\r\n  display_order: number;\r\n  parent_id: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: TariffManagement;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['nav_level', 'title', 'type', 'status', 'action'];\r\n  head = [['Title', 'Type', 'Display Order', 'Icon', 'Url', 'Nav Level', 'Nav Id', 'Status']]\r\n  dataSource: MatTableDataSource<TariffManagement>;\r\n  tariffData: TariffManagement[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dialogRef: any;\r\n  titleSearch = false;\r\n  navlevelSearch = false;\r\n  typeSearch = false;\r\n  disp_ordSearch = false;\r\n  iconSearch = false;\r\n  urlSearch = false;\r\n  nav_idSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(public dialog: MatDialog, private menuMasterService: MenuMasterService,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getMenuMaster();\r\n    this.filterEntity = new TariffManagement();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getMenuMaster() {\r\n    this.menuMasterService.getAllMenus().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.tariffData = resp.data;\r\n          for (var i = 0; i < this.tariffData.length; i++) {\r\n            if (this.tariffData[i].status == 'N') {\r\n              this.tariffData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.tariffData[i].statusString = 'Active';\r\n            }\r\n            if(this.tariffData[i].title == null ){\r\n              this.tariffData[i].title = '';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.tariffData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.menuMasterService.delete(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.getMenuMaster();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n            }\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getMenuMaster();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getMenuMaster();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'titleSearch') {\r\n      this.titleSearch = !this.titleSearch;\r\n      this.filterEntity.title = '';\r\n    }\r\n    if (visibleOption == 'typeSearch') {\r\n      this.typeSearch = !this.typeSearch;\r\n      this.filterEntity.type = ''\r\n    }\r\n    if (visibleOption == 'disp_ordSearch') {\r\n      this.disp_ordSearch = !this.disp_ordSearch;\r\n      this.filterEntity.display_order = null;\r\n    }\r\n    if (visibleOption == 'iconSearch') {\r\n      this.iconSearch = !this.iconSearch;\r\n      this.filterEntity.icon = '';\r\n    }\r\n    if (visibleOption == 'urlSearch') {\r\n      this.urlSearch = !this.urlSearch;\r\n      this.filterEntity.url = '';\r\n    }\r\n    if (visibleOption == 'nav_idSearch') {\r\n      this.nav_idSearch = !this.nav_idSearch;\r\n      this.filterEntity.nav_id = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    if (visibleOption == 'navlevelSearch') {\r\n      this.navlevelSearch = !this.navlevelSearch;\r\n      this.filterEntity.nav_level = null;\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var menuMaster = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Title': menuMaster.title, 'Type': menuMaster.type, 'Display Order': menuMaster.display_order,\r\n        'Icon': menuMaster.icon, 'Url ': menuMaster.url, 'Nav Level': menuMaster.nav_level,\r\n        'Nav ID': menuMaster.nav_id, 'Status': menuMaster.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'MenuMaster.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var menuMaster = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [menuMaster.title, menuMaster.type, menuMaster.display_order, menuMaster.icon, menuMaster.url, menuMaster.nav_level,\r\n      menuMaster.nav_id, menuMaster.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('MenuMaster Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not For Public Use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('MenuMaster report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <mat-table  [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table\r\n        [dataSource]=\"dataSource\" matSort matTableFilter>\r\n\r\n        \r\n        <ng-container matColumnDef=\"title\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!titleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('titleSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"titleSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Title \" [(ngModel)]=\"filterEntity.title\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('titleSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.title}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"nav_level\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!navlevelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Type\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('navlevelSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"navlevelSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\"Nav Level \" [(ngModel)]=\"filterEntity.nav_level\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('navlevelSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.nav_level}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"type\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!typeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger/Session\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"typeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Type\" [(ngModel)]=\"filterEntity.type\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('typeSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.type}} </mat-cell>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"icon\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!iconSearch\" class=\"custom_font_size\" style=\"display: flex;\">Icon\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('iconSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"iconSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Icon\" [(ngModel)]=\"filterEntity.icon\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('iconSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.icon}} </mat-cell>\r\n        </ng-container> -->\r\n        <!-- <ng-container matColumnDef=\"url\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!urlSearch\" class=\"custom_font_size\" style=\"display: flex;\">Url\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"urlSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Url \" [(ngModel)]=\"filterEntity.url\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.url}} </mat-cell>\r\n        </ng-container> -->\r\n        \r\n        <ng-container matColumnDef=\"status\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                {{row.statusString}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef >\r\n                <span class=\"custom_font_size\">Action</span>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let element\">\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                    style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                    style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                    delete</mat-icon>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n        <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageTariffCrudComponent } from './manage-tariff-crud/manage-tariff-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './manage-tariff-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ManageTariffCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ManageTariffRoutingModule{}","import {ChangeDetectorRef, Component,OnInit,ViewEncapsulation} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-tariff-crud',\r\n  templateUrl: './manage-tariff-crud.component.html',\r\n  styleUrls: ['./manage-tariff-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ManageTariffCrudComponent implements OnInit {\r\n\r\n   tabLinks = [\r\n    { label: 'Tariff List', link: 'list' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray:any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n  \r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    // nav_list.filter((x) => {\r\n    //   if (x.id === \"menuManagement\") {\r\n    //     this.objectData = x;\r\n    //     this.objectData.children.filter((y) => {\r\n    //       if (y.id === \"crud\") {\r\n    //         this.objectChildData = y;\r\n\r\n    //         let isDefaultRoutePermeted = false;\r\n    //         this.objectChildData.children.filter((z) => {\r\n    //           if (z.id === \"menuMaster\") {\r\n    //             isDefaultRoutePermeted = true;\r\n    //             this.tempLinks.push({ label: 'Menu Master', link: 'list' });\r\n    //           }\r\n    //           if (z.id === \"addNew\") {\r\n    //             this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n    //           }\r\n    //         });\r\n    //         this.tabLinks = this.tempLinks;\r\n    //         if (!isDefaultRoutePermeted) {\r\n    //           this.router.navigate(['/menuManagement/crud/crud/' + this.tempLinks[0].link]);\r\n    //         }\r\n\r\n    //       }\r\n\r\n    //     });\r\n    //   }\r\n    // });\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n    path: 'create', component: CreateComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'list', component: ListComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '', redirectTo: 'list', pathMatch: 'full'\r\n  },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level: any;\r\n  project: any;\r\n  menuType: any;\r\n  menuIcon: any;\r\n  parentId: any;\r\n  display_order:any;\r\n  status = false;\r\n  filteredOptionsNavLevel: Observable<any[]>;\r\n  filteredOptionsProject: Observable<any[]>;\r\n  filteredOptionsMenuType: Observable<any[]>;\r\n  filteredOptionsMenuIcon: Observable<any[]>;\r\n  filteredOptionsParentId: Observable<any[]>;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private menuMasterService: MenuMasterService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['',[autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: [''],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.getNavLevel();\r\n    this.getParentByNavLevel(this.params.data.nav_level);\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    //console.log(formValues); \r\n    if(formValues.nav_level == 1 ){\r\n      this.form.get('parent_id').setValue(null);\r\n      this.form.get('parent_id').clearValidators();\r\n    }\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      const params: any = {\r\n        nav_level: formValues.nav_level,\r\n        project_id: formValues.project.id,\r\n        parent_id: formValues.parent_id == null ? null  : formValues.parent_id.id,\r\n        nav_id: formValues.nav_id,\r\n        title: formValues.title,\r\n        type: formValues.type.type,\r\n        icon: formValues.icon.icon,\r\n        icon_url: formValues.icon_url,\r\n        url: formValues.url == \"\" ? null : formValues.url,\r\n        display_order: formValues.display_ord,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n      \r\n  \r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        this.menuMasterService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n                this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                this.dialogRef.close();\r\n                \r\n            }else{\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n            \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.menuMasterService.create(params).subscribe(\r\n          (resp: any) => {\r\n            this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }else{\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n      return form.get('email').hasError('required')\r\n        ? 'You must enter a value'\r\n        : form.get('email').hasError('email')\r\n          ? 'Not a valid email'\r\n          : '';\r\n    }\r\n\r\n    assignValues(params) {\r\n      this.form.get('nav_id').setValue(params.data.nav_id);\r\n      this.form.get('title').setValue(this.params.data.title);\r\n      this.form.get('icon_url').setValue(params.data.icon_url);\r\n      this.form.get('url').setValue(params.data.url);\r\n      this.form.get('display_ord').setValue(params.data.display_order);\r\n      this.status = this.params.data.status == 'Y' ? true : false;\r\n    }\r\n\r\n    getNavLevel(){\r\n      this.menuMasterService.getNavLevel().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.nav_level =resp.data.nav_level;\r\n            //this.display_order = resp.data.next_display_order;\r\n            if(this.isEditMode){\r\n                const toSelect = this.nav_level.find(c => c == this.params.data.nav_level);\r\n                this.form.get('nav_level').setValue(toSelect);\r\n              }\r\n              this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value),\r\n                map(value => value ? this._filterNavLevel(value) : this.nav_level)\r\n              );\r\n          }\r\n        }, (err) => { }\r\n      );\r\n      \r\n\r\n    }\r\n    onNavLevelChange(navLevel_id){\r\n      //console.log($navLevel_id);\r\n      this.form.get('parent_id').setValue('');\r\n      this.getParentByNavLevel(navLevel_id);\r\n      //this.form.get('display_ord').setValue( this.display_order);\r\n    }\r\n  private _filterNavLevel(value: string): any[] {\r\n    const filterValue = value.toString().toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string {\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n           this.form.get('project').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.code),\r\n              map(code => code ? this._filterProject(code) : this.project)\r\n            );\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(code: string): any[] {\r\n    const filterValue = code.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string {\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType() {\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuType = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuType.find(c => c.type == this.params.data.type);\r\n           this.form.get('type').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.type),\r\n              map(name => name ? this._filterMenuType(name) : this.menuType)\r\n            );  \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string {\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon() {\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuIcon = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuIcon.find(c => c.icon == this.params.data.icon);\r\n           this.form.get('icon').setValue(toSelect);\r\n          }\r\n           this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.icon),\r\n              map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n            ); \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option =>  option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string {\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id) {\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.parentId = resp.data;\r\n          if(this.isEditMode){\r\n                if(navLevel_id != 1){\r\n                  const toSelect = this.parentId.find(c => c.id == this.params.data.parent_id);\r\n                 this.form.get('parent_id').setValue(toSelect);\r\n               }else{\r\n                this.form.get('parent_id').setValue(null);\r\n                this.form.get('parent_id').clearValidators();\r\n               }\r\n          }\r\n           this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n              map(name => name ? this._filterParentId(name) : this.parentId)\r\n            );\r\n          \r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string {\r\n    return item && item.title ? item.title : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\t\t<form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\">\r\n\t\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\"\r\n\t\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"parent_id\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\">\r\n\t\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.code}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" required autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform:none\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"typeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.type}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"iconAuto\">\r\n\t\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.icon}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform: none\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" style=\"text-transform: none\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('url').invalid\">Please enter url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').invalid\">Please enter display order\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t{{isEditMode? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\r\n\t</div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level:any;\r\n  project:any;\r\n  menuType:any;\r\n  menuIcon:any;\r\n  parentId:any;\r\n  display_order:any;\r\n  filteredOptionsNavLevel : Observable<any[]>;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  filteredOptionsMenuType : Observable<any[]>;\r\n  filteredOptionsMenuIcon : Observable<any[]>;\r\n  filteredOptionsParentId : Observable<any[]>;\r\n  status = false;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router,private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      nav_level: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      parent_id: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      nav_id: ['', [Validators.required]],\r\n      // code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      title: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      //description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      icon_url: [''],\r\n      url: ['', [Validators.required]],\r\n      display_ord: ['', Validators.required],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getNavLevel();\r\n    this.getParentByNavLevel(this.params.data.nav_level);\r\n    this.getProject();\r\n    this.getType();\r\n    this.getMenuIcon();\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n     this.form.get('nav_id').setValue(params.data.nav_id);\r\n     this.form.get('title').setValue(this.params.data.title);\r\n     this.form.get('icon_url').setValue(params.data.icon_url);\r\n     this.form.get('url').setValue(params.data.url);\r\n     this.form.get('display_ord').setValue(params.data.display_order);\r\n     this.status = this.params.data.status == 'Y' ? true : false; \r\n  }\r\n\r\n getNavLevel(){\r\n      this.menuMasterService.getNavLevel().subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.nav_level =resp.data.nav_level;\r\n            //this.display_order = resp.data.next_display_order;\r\n            if(this.isEditMode){\r\n                const toSelect = this.nav_level.find(c => c == this.params.data.nav_level);\r\n                this.form.get('nav_level').setValue(toSelect);\r\n                this.filteredOptionsNavLevel = this.form.controls.nav_level.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value),\r\n                map(name => name ? this._filterNavLevel(name) : this.nav_level)\r\n              );\r\n            }\r\n\r\n          }\r\n        }, (err) => { }\r\n      );\r\n\r\n    }\r\n  onNavLevelChange($navLevel_id){\r\n    //console.log($navLevel_id);\r\n    this.form.get('parent_id').setValue('');\r\n    this.getParentByNavLevel($navLevel_id);\r\n    //this.form.get('display_ord').setValue( this.display_order);\r\n  }\r\n  private _filterNavLevel(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.nav_level.filter(option => option.toString().toLowerCase().includes(filterValue));\r\n  }\r\n  displayNavLevel(item: any): string{\r\n    return item && item ? item : '';\r\n  }\r\n\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n           this.form.get('project').setValue(toSelect);\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.code),\r\n              map(name => name ? this._filterProject(name) : this.project)\r\n            );\r\n          }\r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.project.filter(option => option.code.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string{\r\n    return item && item.code ? item.code : '';\r\n  }\r\n\r\n  getType() {\r\n    this.menuMasterService.getMenuType().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuType = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuType.find(c => c.type == this.params.data.type);\r\n           this.form.get('type').setValue(toSelect);\r\n           this.filteredOptionsMenuType = this.form.controls.type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.type),\r\n              map(name => name ? this._filterMenuType(name) : this.menuType)\r\n            );\r\n\r\n          }\r\n          \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuType.filter(option => option.type.toLowerCase().includes(filterValue));\r\n  }\r\n  displayType(item: any): string{\r\n    return item && item.type ? item.type : '';\r\n  }\r\n\r\n  getMenuIcon() {\r\n    this.menuMasterService.getMenuIcon().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.menuIcon = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.menuIcon.find(c => c.icon == this.params.data.icon);\r\n           this.form.get('icon').setValue(toSelect);\r\n           this.filteredOptionsMenuIcon = this.form.controls.icon.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.icon),\r\n              map(name => name ? this._filterMenuIcon(name) : this.menuIcon)\r\n            );\r\n          }\r\n          \r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterMenuIcon(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.menuIcon.filter(option => option.icon == null ? false :  option.icon.toLowerCase().includes(filterValue));\r\n  }\r\n  displayIcon(item: any): string{\r\n    return item && item.icon ? item.icon : '';\r\n  }\r\n\r\n  getParentByNavLevel(navLevel_id) {\r\n    this.menuMasterService.getParentByNavLevel(navLevel_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.parentId = resp.data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.parentId.find(c => c.id == this.params.data.parent_id);\r\n           this.form.get('parent_id').setValue(toSelect);\r\n           this.filteredOptionsParentId = this.form.controls.parent_id.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : (value == null ? '' : value.title)),\r\n              map(name => name ? this._filterParentId(name) : this.parentId)\r\n            );\r\n          }\r\n\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n\r\n  }\r\n  private _filterParentId(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.parentId.filter(option => option.title.toLowerCase().includes(filterValue));\r\n  }\r\n  displayParentId(item: any): string{\r\n    return item && item.title ? item.title : '';\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white; \" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Menu Master</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav Level</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"nav_level\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"navLevelAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #navLevelAuto=\"matAutocomplete\" [displayWith]=\"displayNavLevel\"\r\n\t\t\t\t\t\t(optionSelected)=\"onNavLevelChange($event.option.value)\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsNavLevel  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select nav level\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_level').invalid\">Please select nav level</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Parent ID</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"parent_id\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"parentIdAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #parentIdAuto=\"matAutocomplete\" [displayWith]=\"displayParentId\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsParentId  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.title}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select parant Id\">help\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('parent_id').invalid\">Please select parent Id</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"project\" autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Nav ID</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"nav_id\" maxlength=\"200\" autocomplete=\"off\" readonly\r\n\t\t\t\t\tstyle=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('required')\">Please enter nav Id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('nav_id').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Title</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"title\" maxlength=\"200\" autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('required')\">Please enter title</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('title').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"type\" autocomplete=\"off\" [matAutocomplete]=\"typeAuto\"\r\n\t\t\t\t\t\treadonly>\r\n\t\t\t\t\t<mat-autocomplete #typeAuto=\"matAutocomplete\" [displayWith]=\"displayType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuType  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select type\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('type').invalid\">Please select type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"icon\" autocomplete=\"off\" [matAutocomplete]=\"iconAuto\"\r\n\t\t\t\t\t\treadonly>\r\n\t\t\t\t\t<mat-autocomplete #iconAuto=\"matAutocomplete\" [displayWith]=\"displayIcon\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsMenuIcon  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select icon\">model_training\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon').invalid\">Please select icon</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Icon Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"icon_url\" maxlength=\"200\" autocomplete=\"off\"\r\n\t\t\t\t\t\treadonly style=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('icon_url').invalid\">Please enter icon url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Url</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"url\" maxlength=\"500\" autocomplete=\"off\" readonly style=\"text-transform: lowercase\">\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('url').errors?.required\">Please enter url</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Display Order</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"display_ord\" autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('display_ord').errors?.required\">Please enter display order\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement [disabled]=\"true\">\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>"]}