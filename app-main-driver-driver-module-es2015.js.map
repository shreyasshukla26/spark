{"version":3,"sources":["./src/app/main/driver/driver-crud/driver-crud.component.ts","./src/app/main/driver/driver-crud/driver-crud.component.html","./src/app/main/driver/list/list.component.ts","./src/app/main/driver/list/list.component.html","./src/app/main/driver/driver-crud/routes.ts","./src/app/main/driver/view-dialog/view-dialog.component.ts","./src/app/main/driver/view-dialog/view-dialog.component.html","./src/app/main/driver/driver-routing.module.ts","./src/app/shared/services/rfid/rfid.service.ts","./src/app/main/driver/driver.module.ts","./src/app/shared/services/driver/driver.service.ts","./src/app/main/driver/action-dialog/action-dialog.component.ts","./src/app/main/driver/action-dialog/action-dialog.component.html","./src/app/main/driver/create/create.component.ts","./src/app/main/driver/create/create.component.html"],"names":[],"mappings":"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","file":"app-main-driver-driver-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n@Component({\r\n  selector: 'app-driver-crud',\r\n  templateUrl: './driver-crud.component.html',\r\n  styleUrls: ['./driver-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class DriverCrudComponent implements OnInit {\r\n\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Clients', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  tempLinks = [];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  dyanmictab: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n\r\n\r\n      if (x.id === \"manageDriver\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'List', link: 'list' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/driverManagement/crud/' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n    <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n      <!-- CENTER -->\r\n      <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n          <!-- HEADER -->\r\n          <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n                  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                        [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}} \r\n                  </span>\r\n  \r\n                  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                          (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                      <mat-icon>menu</mat-icon>\r\n                  </button-->\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n      <a mat-tab-link\r\n         *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n         [routerLink]=\"tabLink.link\"\r\n         routerLinkActive #rla=\"routerLinkActive\"\r\n         [active]=\"rla.isActive\">\r\n        {{tabLink.label}}\r\n      </a>\r\n    </nav>\r\n    <router-outlet ></router-outlet>\r\n  </div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nexport class Driver {\r\n  id: string;\r\n  cpo_id: number;\r\n  cpo_name: string;\r\n  name: string;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_id: number;\r\n  state_id: number;\r\n  country_id: number;\r\n  mobile: string;\r\n  status: string;\r\n  created_date: string;\r\n  created_by: number; // corrected property name\r\n  statusString: string;\r\n  modify_date: string;\r\n  modify_by: number; // corrected property name\r\n  action: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: Driver;\r\n  filterType: MatTableFilter;\r\n  head = [['CPO Name', 'Driver Name', 'Mobile', 'Status']];\r\n  public dataSource = new MatTableDataSource<any>([]);\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  cposName: any;\r\n  clientName: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  rfid: Driver[];\r\n  localCpoid: any;\r\n  columns: any[];\r\n  displayedColumns: string[];\r\n  groupByColumns: string[] = [];\r\n  driverData: any[];\r\n  _allGroup: any[];\r\n\r\n  expandedRfid: any[] = [];\r\n  expandedSubRfid: Driver[] = [];\r\n  Row: any;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  cpoSearch = false;\r\n  nameSearch = false;\r\n  mobileSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  cpoRfid: any;\r\n  selectedCpo_id: any = 0;\r\n\r\n  constructor(\r\n    private driverService: DriverService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private cpoService: CpoService,\r\n    private rfidService: RfidService\r\n  ) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.form = this.fb.group({\r\n      CPO: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.columns = [\r\n      {\r\n        field: 'cpo_name'\r\n      },\r\n      {\r\n        field: 'name'\r\n      },\r\n      {\r\n        field: 'mobile'\r\n      },\r\n      {\r\n        field: 'status'\r\n      },\r\n      {\r\n        field: 'action'\r\n      }\r\n    ];\r\n    this.displayedColumns = this.columns.map(column => column.field);\r\n\r\n    this.getactivecposcw(this.localStorage.userId)\r\n    this.filterEntity = new Driver();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    // this.getDriverData(this.selectedCpo_id);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getDriverData(cpo_id?: number) {\r\n    \r\n    this.driverService.getDriverById(this.localStorage.userId, cpo_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.driverData = resp.data;\r\n          for (var i = 0; i < this.driverData.length; i++) {\r\n            if (this.driverData[i].status == 'N') {\r\n              this.driverData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.driverData[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.driverData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.driverData = [];\r\n          this.dataSource = new MatTableDataSource(this.driverData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    );\r\n  }\r\n\r\n  getactivecposcw(id) {\r\n    this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cposName = data;\r\n        if (this.localStorage.role_code != \"END\") {\r\n          if (this.cposName != null && this.cposName != undefined) {\r\n            // const toSelect = this.cposName.length == 1 ? this.cposName[0] : this.cposName[1];\r\n            const toSelect = this.cposName[0];\r\n\r\n            this.selectedCpo_id = toSelect.id;\r\n            this.form.get('CPO').setValue(toSelect);\r\n\r\n            if (this.localStorage.role_code == \"CPO\") {\r\n              this.form.get('CPO').disable();\r\n            }\r\n\r\n            this.getDriverData(this.selectedCpo_id);\r\n          }\r\n          this.filteredOptionsCPO = this.form.controls.CPO.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCPO(name) : this.cposName)\r\n          );\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  delete(element) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.driverService.delete(element.id).subscribe(\r\n          (data: any) => {\r\n            this.getDriverData(this.selectedCpo_id);\r\n            this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n  onCPOChange(cpo_id) {\r\n    this.selectedCpo_id = cpo_id;\r\n    this.getDriverData(cpo_id);\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      rfidData: this.rfid\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getDriverData(this.selectedCpo_id);\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getDriverData(this.selectedCpo_id);\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n\r\n    if (visibleOption == 'cpoSearch') {\r\n      this.cpoSearch = !this.cpoSearch;\r\n      this.filterEntity.cpo_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var driverData = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'CPO Name': driverData.cpo_name,\r\n        'Name': driverData.name,\r\n        'Mobile': driverData.mobile,\r\n        'Status': driverData.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Driver List');\r\n    XLSX.writeFile(workBook, 'Driver List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var driverData = this.dataSource.filteredData[i];\r\n      var data = [driverData.cpo_name, driverData.name, driverData.mobile, driverData.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Driver List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Driver List report.pdf');\r\n\r\n  }\r\n\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <div style=\"text-align: left ;margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n            <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                <mat-icon>sim_card_download</mat-icon>\r\n            </button>&nbsp;&nbsp;\r\n            <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                <mat-icon>picture_as_pdf</mat-icon>\r\n            </button>\r\n            <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n        </div>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" class=\"form-field-full\">\r\n                    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"50\">\r\n                            <mat-label>Select CPO </mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"CPO\" [matAutocomplete]=\"auto2\">\r\n                            <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                                (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                                <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                                    {{option.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <div matSuffix style=\"display: flex;\">\r\n                                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                                <mat-icon matSuffix class=\"secondary-text\"\r\n                                    matTooltip=\"Please enter cpo name\">account_circle\r\n                                </mat-icon>\r\n                            </div>\r\n                            <mat-error *ngIf=\"form.get('CPO').invalid\">Please select cpo</mat-error>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"\">\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n            <mat-table \r\n                mat-table matTableFilter \r\n                [dataSource]=\"dataSource\" \r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" \r\n                matSort \r\n                class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Mobile &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Mobile No.\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.mobile}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 110px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path: 'create', canActivate: [AuthGuard], component: CreateComponent },\r\n  { path: 'list', canActivate: [AuthGuard], component: ListComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss']\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  cpos: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  countries: any;\r\n  cities: any;\r\n  states: any;\r\n\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    private driverService: DriverService,\r\n    private snackBar: MatSnackBar,\r\n    private cpoService: CpoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', Validators.required],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    // Disable all form controls\r\n    Object.keys(this.form.controls).forEach(key => {\r\n      this.form.get(key).disable();\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  assignValues(params) {\r\n    // this.form.get('cpo').setValue(params.data.name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getCpos() {\r\n\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n        this.cpos = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n\r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCPO(name) : this.cpos)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n    style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">View Driver</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n            name=\"form\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>CPO</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n                    <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not\r\n                        allowed</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 1</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 2</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Pin Code</mat-label>\r\n                    <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n                        autocomplete=\"off\" required>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select country\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select state\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select city\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Landmark</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required\r\n                        autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n                    (change)=\"updateStatus($event)\" #toggleElement>\r\n                    {{status ? 'Active' : 'Inactive'}}\r\n                </mat-slide-toggle>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n                <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DriverCrudComponent } from './driver-crud/driver-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nimport { TABS_DEMO_ROUTES } from './driver-crud/routes';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'crud', component: DriverCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n  },\r\n  {\r\n    path: 'driverRfid',  \r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import('app/main/driver/driver-rfid/driver-rfid.module').then(m => m.DriverRfidModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DriverRoutingModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\nimport { DriverRoutingModule } from './driver-routing.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { DriverCrudComponent } from './driver-crud/driver-crud.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nconst COMPONENTS = [DriverCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n  declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    DriverRoutingModule,\r\n    FuseSharedModule\r\n  ],\r\n  entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\nexport class DriverModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriverService {\r\n\r\n  apiUrl2 = `${environment.API_URL2}/driver`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  create(params) {\r\n    return this.http.post(`${this.apiUrl2}/crt/`, params);\r\n  }\r\n\r\n  update(params) {\r\n    return this.http.post(`${this.apiUrl2}/upd/`, params);\r\n  }\r\n\r\n  getDriverById(login_id, cpo_id) {\r\n    if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n      cpo_id = 0;\r\n    }\r\n    return this.http.get(`${this.apiUrl2}/gtDriversCW/${login_id}/${cpo_id}`);\r\n  }\r\n\r\n  delete(driver_id) {\r\n    return this.http.delete(`${this.apiUrl2}/dlt/${driver_id}`);\r\n  }\r\n\r\n  getUnmappedDriverByCpoId(cpo_id) {\r\n    return this.http.get(`${this.apiUrl2}/gtDriverByCpoId/${cpo_id}`)\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss']\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  cpos: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  countries: any;\r\n  cities: any;\r\n  states: any;\r\n\r\n  errorMsg: String;\r\n  splitted: String;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n    public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    private driverService: DriverService,\r\n    private snackBar: MatSnackBar,\r\n    private cpoService: CpoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', Validators.required],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  assignValues(params) {\r\n    // this.form.get('cpo').setValue(params.data.name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    \r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params: any = {\r\n        cpo_id: formValues.cpo.id,\r\n        name: formValues.name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      // tslint:disable-next-line: no-//\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.driverService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n                this.errorMsg = resp.message;\r\n                var index = this.errorMsg.lastIndexOf(\" \");\r\n                this.splitted = this.errorMsg.substring(index + 1);\r\n                if (this.splitted == \"'name'\") {\r\n                  this.snackBar.open(MessageConstant.chargingStationDuplicate, 'Dismiss', { duration: 5000 });\r\n                } if (this.splitted == \"'mobile'\") {\r\n                  this.snackBar.open(MessageConstant.mobileDuplicate, 'Dismiss', { duration: 5000 });\r\n                }\r\n              } else {\r\n                this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.driverService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    }\r\n\r\n  }\r\n\r\n  getCpos() {\r\n\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n        this.cpos = data;\r\n        \r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n          \r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCPO(name) : this.cpos)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n \r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n    style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Update Driver</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n            name=\"form\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>CPO</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n                    <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n                    <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not\r\n                        allowed</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 1</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Address Line 2</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Pin Code</mat-label>\r\n                    <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n                        autocomplete=\"off\" required>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n                        (optionSelected)='onCountryChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select country\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n                        (optionSelected)='onStateChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select state\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n                        (optionSelected)='onCityChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            matTooltip=\"Please select city\">location_city</mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Landmark</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required\r\n                        autocomplete=\"off\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n                    (change)=\"updateStatus($event)\" #toggleElement>\r\n                    {{status ? 'Active' : 'Inactive'}}\r\n                </mat-slide-toggle>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n                <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n                    ? 'Save' : 'Save'}}</button>\r\n                <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  brands: any;\r\n  models: any;\r\n  chargerTypes: any;\r\n  vehicleTypes: any;\r\n  localStorage: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  cpos:any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  localClient: any;\r\n  selectedClient_id: any;\r\n  selectedCpo_id: any;\r\n\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  constructor(private fb: FormBuilder, private masterService: MasterService,\r\n    private driverService: DriverService, private snackBar: MatSnackBar,\r\n    private router: Router, public countryService: CountriesService, private cpoService : CpoService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', Validators.required],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n    this.getCpos();\r\n  }\r\n\r\n  getCpos(){\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n      this.cpos = data;\r\n      this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCPO(name) : this.cpos)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  \r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        this.countries = data;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (stateData: any) => {\r\n        this.states = stateData;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      ////\r\n\r\n      let params = {\r\n        cpo_id: formValues.cpo.id,\r\n        name: formValues.name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n\r\n      this.driverService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/driverManagement/crud/list']);\r\n          } else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              var index = this.errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this.errorMsg.substring(index + 1);\r\n              if (this.splitted == \"'name'\") {\r\n                this.snackBar.open(MessageConstant.clientDuplicate, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'mobile'\") {\r\n                this.snackBar.open(MessageConstant.mobileDuplicateClient, 'Dismiss', { duration: 5000 });\r\n              }\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n          }\r\n\r\n\r\n        },\r\n        (err) => {\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>CPO</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n        <mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n          autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" style=\"height: 53px;\" color=\"primary\" [checked]=\"status\"\r\n        (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\"\r\n        routerLink=\"/clientManagement/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>"],"sourceRoot":"webpack:///"}