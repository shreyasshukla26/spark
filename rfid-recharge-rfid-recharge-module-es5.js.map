{"version":3,"sources":["webpack:///src/app/main/asset/rfid-management/rfid-recharge/energy-consumption-logs/energy-consumption-logs.component.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/energy-consumption-logs/energy-consumption-logs.component.html","webpack:///src/app/main/asset/rfid-management/rfid-recharge/list/list.component.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/list/list.component.html","webpack:///src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge.module.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/recharge-history/recharge-history.component.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/recharge-history/recharge-history.component.html","webpack:///src/app/shared/services/rfid/rfid.service.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-crud/rfid-recharge-crud.component.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-crud/rfid-recharge-crud.component.html","webpack:///src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-routing.module.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/action-dialog/action-dialog.component.ts","webpack:///src/app/main/asset/rfid-management/rfid-recharge/action-dialog/action-dialog.component.html","webpack:///src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-crud/routes.ts"],"names":["$event","RECHARGE_HISTORY","EnergyConsumptionLogsComponent","dialog","snackBar","fb","cpoService","rfidService","datePipe","head","dataSource","clientNameSearch","cpoSearch","durationSearch","stationNameSearch","rfidNoSearch","amountSearch","billedAmountSearch","startTimeSearch","stopTimeSearch","transactionDateSearch","chargAmountSearch","createdDateSearch","statusSearch","transactionid","stationid","tranactionDate","form","group","CPO","required","toDate","fromDate","localStorage","JSON","parse","getItem","columns","field","displayedColumns","map","column","getactivecposcw","userId","filterEntity","filterType","ANYWHERE","id","getactivecposcwwithAll","subscribe","data","cposName","role_code","undefined","toSelect","selectedCpo_id","get","setValue","getrfidRechargeHistory","filteredOptionsCPO","controls","valueChanges","pipe","value","name","_filterCPO","err","item","filterValue","toLowerCase","filter","option","includes","cpo_id","formValues","transform","params","getConsumptionLogsByCpoId","resp","status","rfidRechargeHistory","i","length","start_time","stop_time","transaction_date","paginator","sort","open","NoRecordFoundMessage","duration","event","target","trim","firstPage","action","dialogRef","width","panelClass","autoFocus","disableClose","afterClosed","result","setTimeout","visibleOption","ev","stopPropagation","cpo_name","rf_id_no","billed_amt","station_id","exportedData","filteredData","rechargeHistoryModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","RFID","ListComponent","balanceSearch","show","console","log","disable","getRfidRecharge","getRechargeLogsbyCCSW","rfidRecharge","client_name","station_name","balance","rfidRechargeModel","COMPONENTS","COMPONENTS_DYNAMIC","RfidRechargeModule","imports","declarations","entryComponents","RechargeHistoryComponent","getRechargeLogsByCpoId","created_date","amount","charging_amt","Amount","RfidService","http","apiUrl2","API_URL2","post","user_id","login_id","map_id","providedIn","RfidRechargeCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","children","y","objectChildData","z","childData","isDefaultRoutePermeted","t","label","link","navigate","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","routes","path","component","canActivate","RfidRechargeRoutingModule","forChild","exports","ActionDialogComponent","isEditMode","initialize","pattern","close","valid","rfid","expiry_date","created_by","modify_by","updateBalance","closeActionPanel","onYesClick","ref","TABS_DEMO_ROUTES","redirectTo","pathMatch"],"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","file":"rfid-recharge-rfid-recharge-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { CpoService } from \"app/shared/services/cpo/cpo.service\";\r\n\r\nexport class RECHARGE_HISTORY {\r\n    id: string;\r\n    cpo_id: string;\r\n    rf_id_no: string;\r\n    cpo_name: string;\r\n    billed_amt: string;\r\n    start_time: string;\r\n    stop_time: string;\r\n    transaction_id: string;\r\n    station_id: string;\r\n    transaction_date: string;\r\n    duration: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-energy-consumption-logs\",\r\n    templateUrl: \"./energy-consumption-logs.component.html\",\r\n    styleUrls: [\"./energy-consumption-logs.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class EnergyConsumptionLogsComponent implements OnInit {\r\n    filterEntity: RECHARGE_HISTORY;\r\n    filterType: MatTableFilter;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n\r\n    head = [\r\n        [\r\n            \"CPO Name\",\r\n            \"RFID No\",\r\n            \"Bill Amount\",\r\n            \"Start Amount\",\r\n            \"Stop Amount\",\r\n            \"Transaction Date\",\r\n            \"Duration\",\r\n        ],\r\n    ];\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    localStorage: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientNameSearch = false;\r\n    cpoSearch = false;\r\n    durationSearch = false;\r\n    stationNameSearch = false;\r\n    rfidNoSearch = false;\r\n    amountSearch = false;\r\n    billedAmountSearch = false;\r\n    startTimeSearch = false;\r\n    stopTimeSearch = false;\r\n    transactionDateSearch = false;\r\n    chargAmountSearch = false;\r\n    createdDateSearch = false;\r\n    statusSearch = false;\r\n    transactionid = false;\r\n    stationid = false;\r\n    tranactionDate = false;\r\n    exportedData: any[];\r\n    cposName: any;\r\n    clientName: any;\r\n    form: FormGroup;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    selectedCpo_id: any;\r\n    localClient: any;\r\n    rfidRechargeHistory: any;\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private fb: FormBuilder,\r\n        private cpoService: CpoService,\r\n        private rfidService: RfidService,\r\n        private datePipe: DatePipe\r\n    ) {\r\n        this.form = this.fb.group({\r\n            CPO: [\"\", Validators.required],\r\n            toDate: [\"\"],\r\n            fromDate: [\"\"],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.columns = [\r\n            {\r\n                field: \"cpo_name\",\r\n            },\r\n            {\r\n                field: \"rf_id_no\",\r\n            },\r\n            {\r\n                field: \"billed_amt\",\r\n            },\r\n            {\r\n                field: \"start_time\",\r\n            },\r\n            {\r\n                field: \"stop_time\",\r\n            },\r\n            {\r\n                field: \"transaction_date\",\r\n            },\r\n            {\r\n                field: \"duration\",\r\n            },\r\n        ];\r\n        this.displayedColumns = this.columns.map((column) => column.field);\r\n\r\n        this.getactivecposcw(this.localStorage.userId);\r\n        this.filterEntity = new RECHARGE_HISTORY();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    getactivecposcw(id) {\r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n\r\n                        this.selectedCpo_id = toSelect.id;\r\n                        this.form.get(\"CPO\").setValue(toSelect);\r\n\r\n                        // if (this.localStorage.role_code == \"CPO\") {\r\n                        //     this.form.get(\"CPO\").disable();\r\n                        // }\r\n\r\n                        // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                        this.getrfidRechargeHistory();\r\n                    }\r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onCPOChange(cpo_id) {\r\n        this.selectedCpo_id = cpo_id;\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    onChangeDateFilter() {\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    getrfidRechargeHistory() {\r\n        let formValues = this.form.value;\r\n\r\n        let fromDate = this.datePipe.transform(\r\n            formValues.fromDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n        let toDate = this.datePipe.transform(\r\n            formValues.toDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n       \r\n        let params = {\r\n            cpo_id: formValues.CPO.id,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n        };\r\n        this.rfidService.getConsumptionLogsByCpoId(params).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status) {\r\n                    this.rfidRechargeHistory = resp.data;\r\n                    for (var i = 0; i < this.rfidRechargeHistory.length; i++) {\r\n                        this.rfidRechargeHistory[i].start_time =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].start_time,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                        this.rfidRechargeHistory[i].stop_time =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].stop_time,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                        this.rfidRechargeHistory[i].transaction_date =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].transaction_date,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.rfidRechargeHistory = [];\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    this.snackBar.open(\r\n                        MessageConstant.NoRecordFoundMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 3000 }\r\n                    );\r\n                    return;\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"1200px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            setTimeout(() => {\r\n                // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                this.getrfidRechargeHistory();\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"cpoSearch\") {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n        }\r\n        if (visibleOption == \"rfidNoSearch\") {\r\n            this.rfidNoSearch = !this.rfidNoSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"billedAmountSearch\") {\r\n            this.billedAmountSearch = !this.billedAmountSearch;\r\n            this.filterEntity.billed_amt = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"startTimeSearch\") {\r\n            this.startTimeSearch = !this.startTimeSearch;\r\n            this.filterEntity.start_time = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"stopTimeSearch\") {\r\n            this.stopTimeSearch = !this.stopTimeSearch;\r\n            this.filterEntity.stop_time = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"transactionDateSearch\") {\r\n            this.transactionDateSearch = !this.transactionDateSearch;\r\n            this.filterEntity.transaction_date = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"createdDateSearch\") {\r\n            this.createdDateSearch = !this.createdDateSearch;\r\n            this.filterEntity.station_id = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"durationSearch\") {\r\n            this.durationSearch = !this.durationSearch;\r\n            this.filterEntity.duration = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"CPO Name\": rechargeHistoryModel.cpo_name,\r\n                \"RFID No\": rechargeHistoryModel.rf_id_no,\r\n                \"Bill Amount\": rechargeHistoryModel.billed_amt,\r\n                \"Start Time\": rechargeHistoryModel.start_time,\r\n                \"Stop Time\": rechargeHistoryModel.stop_time,\r\n                \"Transaction Date\": rechargeHistoryModel.transaction_date,\r\n                \"Duration\": rechargeHistoryModel.duration,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"sales disptch\");\r\n        XLSX.writeFile(workBook, \"RFID By Cpo.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                rechargeHistoryModel.cpo_name,\r\n                rechargeHistoryModel.rf_id_no,\r\n                rechargeHistoryModel.billed_amt,\r\n                rechargeHistoryModel.start_time,\r\n                rechargeHistoryModel.stop_time,\r\n                rechargeHistoryModel.transaction_date,\r\n                rechargeHistoryModel.duration,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"Charging Station Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n\r\n        // below line for Download PDF document\r\n        doc.save(\"Charging Station report.pdf\");\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-card\r\n    style=\"padding: 16px !important\"\r\n    *ngIf=\"localStorage.role_code != 'END'\"\r\n>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                >\r\n                    <mat-label>Select CPO </mat-label>\r\n                    <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"CPO\"\r\n                        [matAutocomplete]=\"auto2\"\r\n                    />\r\n                    <mat-autocomplete\r\n                        #auto2=\"matAutocomplete\"\r\n                        [displayWith]=\"displayCPO\"\r\n                        (optionSelected)=\"onCPOChange($event.option.value.id)\"\r\n                    >\r\n                        <mat-option\r\n                            *ngFor=\"let option of filteredOptionsCPO | async\"\r\n                            [value]=\"option\"\r\n                        >\r\n                            {{ option.name }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex\">\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >expand_more</mat-icon\r\n                        >\r\n                        <mat-icon\r\n                            matSuffix\r\n                            class=\"secondary-text\"\r\n                            matTooltip=\"Please enter cpo name\"\r\n                            >account_circle\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('CPO').invalid\"\r\n                        >Please select cpo</mat-error\r\n                    >\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>From Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"fDate\"\r\n                        formControlName=\"fromDate\"\r\n                        #fromDate\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"fDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>To Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"tDate\"\r\n                        formControlName=\"toDate\"\r\n                        [min]=\"\r\n                            !!form.value.fromDate\r\n                                ? form.value.fromDate._d\r\n                                : '2020-01-01'\r\n                        \"\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"tDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #tDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table\r\n                mat-table\r\n                matTableFilter\r\n                [dataSource]=\"dataSource\"\r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\"\r\n                matSort\r\n                class=\"mat-elevation-z8\"\r\n            >\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >CPO Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!rfidNoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >RFID<mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"rfidNoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" RFID \"\r\n                                [(ngModel)]=\"filterEntity.rf_id_no\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.rf_id_no }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"billed_amt\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!billedAmountSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                        >\r\n                            Bill Amount &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'billedAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"billedAmountSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Billed Amount\"\r\n                                [(ngModel)]=\"filterEntity.billed_amt\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'billedAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.billed_amt }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"start_time\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!startTimeSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Start time\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('startTimeSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"startTimeSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Start Time\"\r\n                                [(ngModel)]=\"filterEntity.start_time\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('startTimeSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.start_time }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"stop_time\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!stopTimeSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Stop time\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('stopTimeSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"stopTimeSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Stop Time\"\r\n                                [(ngModel)]=\"filterEntity.stop_time\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('stopTimeSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.stop_time }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"transaction_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Transaction ID  &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"station_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Station ID &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container> -->\r\n                <ng-container matColumnDef=\"transaction_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!transactionDateSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Transaction Date &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'transactionDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"transactionDateSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" Transaction Date \"\r\n                                [(ngModel)]=\"filterEntity.transaction_date\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'transactionDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.transaction_date }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"duration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!durationSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Duration &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('durationSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"durationSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" Duration \"\r\n                                [(ngModel)]=\"filterEntity.duration\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('durationSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.duration }}</td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"action\" >\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div style=\"display: flex\">\r\n                            <mat-icon\r\n                                color=\"primary\"\r\n                                matTooltip=\"Edit\"\r\n                                (click)=\"openDialog('EDIT', element)\"\r\n                                style=\"cursor: pointer\"\r\n                                >edit</mat-icon\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-container> -->\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n\r\n            <mat-paginator\r\n                [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n            ></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { CpoService } from \"app/shared/services/cpo/cpo.service\";\r\n\r\nexport class RFID {\r\n    id: string;\r\n    client_id: string;\r\n    client_name: string;\r\n    cpo_id: string;\r\n    cpo_name: string;\r\n    station_name: string;\r\n    rfid_id: number;\r\n    rf_id_no: string;\r\n    balance: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-list\",\r\n    templateUrl: \"./list.component.html\",\r\n    styleUrls: [\"./list.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: RFID;\r\n    filterType: MatTableFilter;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n\r\n    head = [\r\n        [\r\n            \"Client Name\",\r\n            \"CPO Name\",\r\n            \"Station Name\",\r\n            \"RFID\",\r\n            \"Balance\",\r\n            \"Action\",\r\n        ],\r\n    ];\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    localStorage: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientNameSearch = false;\r\n    cpoSearch = false;\r\n    stationNameSearch = false;\r\n    rfidNoSearch = false;\r\n    balanceSearch = false;\r\n    chargAmountSearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    cposName: any;\r\n    clientName: any;\r\n    form: FormGroup;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    selectedCpo_id: any;\r\n    localClient: any;\r\n    rfidRecharge: any;\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private fb: FormBuilder,\r\n        private cpoService: CpoService,\r\n        private rfidService: RfidService\r\n    ) {\r\n        this.form = this.fb.group({\r\n            CPO: [\"\", Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.columns = [\r\n            {\r\n                field: \"client_name\",\r\n            },\r\n            {\r\n                field: \"cpo_name\",\r\n            },\r\n            {\r\n                field: \"station_name\",\r\n            },\r\n            {\r\n                field: \"rf_id_no\",\r\n            },\r\n            {\r\n                field: \"balance\",\r\n            },\r\n            {\r\n                field: \"action\",\r\n                show: ((this.localStorage.role_code !== \"CPO\") && (this.localStorage.role_code != \"END\"))\r\n            },\r\n        ];\r\n        // Filter out the columns that should not be displayed\r\n        this.displayedColumns = this.columns.filter(column => column.show !== false).map(column => column.field);\r\n\r\n        this.getactivecposcw(this.localStorage.userId);\r\n        this.filterEntity = new RFID();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    getactivecposcw(id) {\r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                console.log('data');\r\n                console.log(data);\r\n                \r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n                        console.log(\"toselect\");\r\n                        console.log(toSelect);\r\n\r\n                        this.selectedCpo_id = toSelect.id;\r\n                        this.form.get(\"CPO\").setValue(toSelect);\r\n\r\n                        if (this.localStorage.role_code == \"CPO\") {\r\n                            this.form.get(\"CPO\").disable();\r\n                        }\r\n\r\n                        this.getRfidRecharge(this.selectedCpo_id);\r\n                    }\r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onCPOChange(cpo_id) {\r\n        this.selectedCpo_id = cpo_id;\r\n        this.getRfidRecharge(cpo_id);\r\n    }\r\n\r\n    getRfidRecharge(cpo_id) {\r\n        this.rfidService\r\n            .getRechargeLogsbyCCSW(this.localStorage.userId, cpo_id)\r\n            .subscribe(\r\n                (resp: any) => {\r\n                    if (resp.status) {\r\n                        this.rfidRecharge = resp.data;\r\n                        this.dataSource = new MatTableDataSource(\r\n                            this.rfidRecharge\r\n                        );\r\n                        this.dataSource.paginator = this.paginator;\r\n                        this.dataSource.sort = this.sort;\r\n                    } else {\r\n                        this.rfidRecharge = [];\r\n                        this.dataSource = new MatTableDataSource(\r\n                            this.rfidRecharge\r\n                        );\r\n                        this.dataSource.paginator = this.paginator;\r\n                        this.dataSource.sort = this.sort;\r\n                        this.snackBar.open(\r\n                            MessageConstant.NoRecordFoundMessage,\r\n                            \"Dismiss\",\r\n                            { duration: 3000 }\r\n                        );\r\n                        return;\r\n                    }\r\n                },\r\n                (err) => {}\r\n            );\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"1200px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            setTimeout(() => {\r\n                this.getRfidRecharge(this.selectedCpo_id);\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"clientNameSearch\") {\r\n            this.clientNameSearch = !this.clientNameSearch;\r\n            this.filterEntity.client_name = \"\";\r\n        }\r\n        if (visibleOption == \"cpoSearch\") {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n        }\r\n        if (visibleOption == \"stationNameSearch\") {\r\n            this.stationNameSearch = !this.stationNameSearch;\r\n            this.filterEntity.station_name = \"\";\r\n        }\r\n        if (visibleOption == \"stationNameSearch\") {\r\n            this.stationNameSearch = !this.stationNameSearch;\r\n            this.filterEntity.station_name = \"\";\r\n        }\r\n        if (visibleOption == \"rfidNoSearch\") {\r\n            this.rfidNoSearch = !this.rfidNoSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n        if (visibleOption == \"balanceSearch\") {\r\n            this.balanceSearch = !this.balanceSearch;\r\n            this.filterEntity.balance = \"\";\r\n        }\r\n        // if (visibleOption == \"chargAmountSearch\") {\r\n        //     this.chargAmountSearch = !this.chargAmountSearch;\r\n        //     this.filterEntity.charging_amt = \"\";\r\n        // }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rfidRechargeModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"Client Name\": rfidRechargeModel.client_name,\r\n                \"CPO Name\": rfidRechargeModel.cpo_name,\r\n                \"Station Name\": rfidRechargeModel.station_name,\r\n                \"RFID No\": rfidRechargeModel.rf_id_no,\r\n                \"Balance\": rfidRechargeModel.balance,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"sales disptch\");\r\n        XLSX.writeFile(workBook, \"RFID By Cpo.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rfidRechargeModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                rfidRechargeModel.client_name,\r\n                rfidRechargeModel.cpo_name,\r\n                rfidRechargeModel.station_name,\r\n                rfidRechargeModel.rf_id_no,\r\n                rfidRechargeModel.balance,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        } \r\n        \r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"Charging Station Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n\r\n        // below line for Download PDF document\r\n        doc.save(\"Charging Station report.pdf\");\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-card\r\n    style=\"padding: 16px !important\"\r\n    *ngIf=\"localStorage.role_code != 'END'\"\r\n>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"50\"\r\n                >\r\n                    <mat-label>Select CPO </mat-label>\r\n                    <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"CPO\"\r\n                        [matAutocomplete]=\"auto2\"\r\n                    />\r\n                    <mat-autocomplete\r\n                        #auto2=\"matAutocomplete\"\r\n                        [displayWith]=\"displayCPO\"\r\n                        (optionSelected)=\"onCPOChange($event.option.value.id)\"\r\n                    >\r\n                        <mat-option\r\n                            *ngFor=\"let option of filteredOptionsCPO | async\"\r\n                            [value]=\"option\"\r\n                        >\r\n                            {{ option.name }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex\">\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >expand_more</mat-icon\r\n                        >\r\n                        <mat-icon\r\n                            matSuffix\r\n                            class=\"secondary-text\"\r\n                            matTooltip=\"Please enter cpo name\"\r\n                            >account_circle\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('CPO').invalid\"\r\n                        >Please select cpo</mat-error\r\n                    >\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table\r\n                mat-table\r\n                matTableFilter\r\n                [dataSource]=\"dataSource\"\r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\"\r\n                matSort\r\n                class=\"mat-elevation-z8\"\r\n            >\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!clientNameSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Client Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('clientNameSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"clientNameSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" Client Name \"\r\n                                [(ngModel)]=\"filterEntity.client_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('clientNameSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.client_name }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >CPO Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!stationNameSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Station Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'stationNameSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"stationNameSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  Station Name \"\r\n                                [(ngModel)]=\"filterEntity.station_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'stationNameSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.station_name }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!rfidNoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >RFID<mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"rfidNoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" RFID \"\r\n                                [(ngModel)]=\"filterEntity.rf_id_no\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.rf_id_no }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"balance\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!balanceSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Balance &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('balanceSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"balanceSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Balance\"\r\n                                [(ngModel)]=\"filterEntity.balance\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('balanceSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.balance }}</td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"charging_amt\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!chargAmountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charge Amount <mat-icon matSuffix (click)=\"changeVisibility('chargAmountSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"chargAmountSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charge Amount\" [(ngModel)]=\"filterEntity.charging_amt\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('chargAmountSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charging_amt}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container *ngIf=\"localStorage.role_code !== 'CPO'\" matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div style=\"display: flex\">\r\n                            <mat-icon\r\n                                color=\"primary\"\r\n                                matTooltip=\"Edit\"\r\n                                (click)=\"openDialog('EDIT', element)\"\r\n                                style=\"cursor: pointer\"\r\n                                >edit</mat-icon\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n\r\n            <mat-paginator\r\n                [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n            ></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\n\r\nimport { RfidRechargeRoutingModule } from \"./rfid-recharge-routing.module\";\r\nimport { ListComponent } from \"./list/list.component\";\r\nimport { RfidRechargeCrudComponent } from \"./rfid-recharge-crud/rfid-recharge-crud.component\";\r\nimport { ActionDialogComponent } from \"./action-dialog/action-dialog.component\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { RechargeHistoryComponent } from './recharge-history/recharge-history.component';\r\nimport { EnergyConsumptionLogsComponent } from './energy-consumption-logs/energy-consumption-logs.component';\r\n\r\nconst COMPONENTS = [RfidRechargeCrudComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RfidRechargeRoutingModule, FuseSharedModule],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC, RechargeHistoryComponent, EnergyConsumptionLogsComponent],\r\n    entryComponents: [COMPONENTS_DYNAMIC],\r\n})\r\nexport class RfidRechargeModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { CpoService } from \"app/shared/services/cpo/cpo.service\";\r\n\r\nexport class RECHARGE_HISTORY {\r\n    id: string;\r\n    cpo_id: string;\r\n    cpo_name: string;\r\n    userid: string;\r\n    approvedby: string;\r\n    modeofpayment: string;\r\n    paymentdate: string;\r\n    rf_id_no: string;\r\n    amount: string;\r\n    charging_amt: string;\r\n    status: string;\r\n    modifyby: string;\r\n    created_date: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-recharge-history\",\r\n    templateUrl: \"./recharge-history.component.html\",\r\n    styleUrls: [\"./recharge-history.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class RechargeHistoryComponent implements OnInit {\r\n    filterEntity: RECHARGE_HISTORY;\r\n    filterType: MatTableFilter;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n\r\n    head = [[\"CPO Name\", \"RFID\", \"Amount\", \"Charging Amount\", \"Created Date\"]];\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    localStorage: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientNameSearch = false;\r\n    cpoSearch = false;\r\n    stationNameSearch = false;\r\n    rfidNoSearch = false;\r\n    amountSearch = false;\r\n    chargAmountSearch = false;\r\n    createdDateSearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    cposName: any;\r\n    clientName: any;\r\n    form: FormGroup;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    selectedCpo_id: any;\r\n    localClient: any;\r\n    rfidRechargeHistory: any;\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private fb: FormBuilder,\r\n        private cpoService: CpoService,\r\n        private rfidService: RfidService,\r\n        private datePipe: DatePipe\r\n    ) {\r\n        this.form = this.fb.group({\r\n            CPO: [\"\", Validators.required],\r\n            toDate: [\"\"],\r\n            fromDate: [\"\"],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        // if (this.localStorage.role_code == \"CPO\") {\r\n        //     this.form.get(\"CPO\").disable();\r\n        // }\r\n\r\n        this.columns = [\r\n            {\r\n                field: \"cpo_name\",\r\n            },\r\n            {\r\n                field: \"rf_id_no\",\r\n            },\r\n            {\r\n                field: \"amount\",\r\n            },\r\n            {\r\n                field: \"charging_amt\",\r\n            },\r\n            {\r\n                field: \"created_date\",\r\n            },\r\n        ];\r\n        this.displayedColumns = this.columns.map((column) => column.field);\r\n\r\n        this.getactivecposcw(this.localStorage.userId);\r\n        this.filterEntity = new RECHARGE_HISTORY();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    getactivecposcw(id) {\r\n        \r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n                        console.log(\"CPO Data:\", toSelect);\r\n\r\n                         this.selectedCpo_id = toSelect.id;\r\n                         this.form.get(\"CPO\").setValue(toSelect); \r\n\r\n                        // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                        this.getrfidRechargeHistory();\r\n                    } \r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {\r\n            }\r\n            \r\n        );\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onCPOChange(cpo_id) {\r\n        this.selectedCpo_id = cpo_id;\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    onChangeDateFilter() {\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    getrfidRechargeHistory() {\r\n        let formValues = this.form.value;\r\n\r\n        let fromDate = this.datePipe.transform(\r\n            formValues.fromDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n        let toDate = this.datePipe.transform(\r\n            formValues.toDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n        console.log(\"formValues\");\r\n        console.log(formValues);\r\n        \r\n\r\n        let params = {\r\n            cpo_id: formValues.CPO.id,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n        };\r\n        \r\n        this.rfidService.getRechargeLogsByCpoId(params).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status) {\r\n                    this.rfidRechargeHistory = resp.data;\r\n                    for (var i = 0; i < this.rfidRechargeHistory.length; i++) {\r\n                        this.rfidRechargeHistory[i].created_date =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].created_date,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.rfidRechargeHistory = [];\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    this.snackBar.open(\r\n                        MessageConstant.NoRecordFoundMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 3000 }\r\n                    );\r\n                    return;\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"1200px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            setTimeout(() => {\r\n                // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                this.getrfidRechargeHistory();\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"cpoSearch\") {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n        }\r\n        if (visibleOption == \"rfidNoSearch\") {\r\n            this.rfidNoSearch = !this.rfidNoSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n        if (visibleOption == \"amountSearch\") {\r\n            this.amountSearch = !this.amountSearch;\r\n            this.filterEntity.amount = \"\";\r\n        }\r\n        if (visibleOption == \"chargAmountSearch\") {\r\n            this.chargAmountSearch = !this.chargAmountSearch;\r\n            this.filterEntity.charging_amt = \"\";\r\n        }\r\n        if (visibleOption == \"createdDateSearch\") {\r\n            this.createdDateSearch = !this.createdDateSearch;\r\n            this.filterEntity.created_date = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"CPO Name\": rechargeHistoryModel.cpo_name,\r\n                \"RFID No\": rechargeHistoryModel.rf_id_no,\r\n                Amount: rechargeHistoryModel.amount,\r\n                \"Charging Amount\": rechargeHistoryModel.charging_amt,\r\n                \"Created Date\": rechargeHistoryModel.created_date,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"sales disptch\");\r\n        XLSX.writeFile(workBook, \"RFID By Cpo.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                rechargeHistoryModel.cpo_name,\r\n                rechargeHistoryModel.rf_id_no,\r\n                rechargeHistoryModel.amount,\r\n                rechargeHistoryModel.charging_amt,\r\n                rechargeHistoryModel.created_date,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"Charging Station Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n\r\n        // below line for Download PDF document\r\n        doc.save(\"Charging Station report.pdf\");\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-card\r\n    style=\"padding: 16px !important\"\r\n    *ngIf=\"localStorage.role_code != 'END'\"\r\n>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                >\r\n                    <mat-label>Select CPO </mat-label>\r\n                    <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"CPO\"\r\n                        [matAutocomplete]=\"auto2\"\r\n                    />\r\n                    <mat-autocomplete\r\n                        #auto2=\"matAutocomplete\"\r\n                        [displayWith]=\"displayCPO\"\r\n                        (optionSelected)=\"onCPOChange($event.option.value.id)\"\r\n                    >\r\n                        <mat-option\r\n                            *ngFor=\"let option of filteredOptionsCPO | async\"\r\n                            [value]=\"option\"\r\n                        >\r\n                            {{ option.name }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex\">\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >expand_more</mat-icon\r\n                        >\r\n                        <mat-icon\r\n                            matSuffix\r\n                            class=\"secondary-text\"\r\n                            matTooltip=\"Please enter cpo name\"\r\n                            >account_circle\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('CPO').invalid\"\r\n                        >Please select cpo</mat-error\r\n                    >\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>From Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"fDate\"\r\n                        formControlName=\"fromDate\"\r\n                        #fromDate\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"fDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>To Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"tDate\"\r\n                        formControlName=\"toDate\"\r\n                        [min]=\"\r\n                            !!form.value.fromDate\r\n                                ? form.value.fromDate._d\r\n                                : '2020-01-01'\r\n                        \"\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"tDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #tDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table\r\n                mat-table\r\n                matTableFilter\r\n                [dataSource]=\"dataSource\"\r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\"\r\n                matSort\r\n                class=\"mat-elevation-z8\"\r\n            >\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >CPO Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!rfidNoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >RFID<mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"rfidNoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" RFID \"\r\n                                [(ngModel)]=\"filterEntity.rf_id_no\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.rf_id_no }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!amountSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Amount &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('amountSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"amountSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Amount\"\r\n                                [(ngModel)]=\"filterEntity.amount\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('amountSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.amount }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charging_amt\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!chargAmountSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Charging Amount\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'chargAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"chargAmountSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Charging Amount\"\r\n                                [(ngModel)]=\"filterEntity.charging_amt\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'chargAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.charging_amt }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"created_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!createdDateSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Created Date\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'createdDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"createdDateSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Created Date\"\r\n                                [(ngModel)]=\"filterEntity.created_date\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'createdDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.created_date }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"action\" >\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div style=\"display: flex\">\r\n                            <mat-icon\r\n                                color=\"primary\"\r\n                                matTooltip=\"Edit\"\r\n                                (click)=\"openDialog('EDIT', element)\"\r\n                                style=\"cursor: pointer\"\r\n                                >edit</mat-icon\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-container> -->\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n\r\n            <mat-paginator\r\n                [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n            ></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\n\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { UtilityService } from \"app/shared/services/utility/utility.service\";\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n    selector: \"app-rfid-recharge-crud\",\r\n    templateUrl: \"./rfid-recharge-crud.component.html\",\r\n    styleUrls: [\"./rfid-recharge-crud.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class RfidRechargeCrudComponent implements OnInit {\r\n    tabLinks = [\r\n        // { label: 'RFID', link: 'list' },\r\n        // { label: 'Add New', link: 'create' }\r\n    ];\r\n    menuArray: any;\r\n    localStorage: any;\r\n    objectData: any;\r\n    objectChildData: any;\r\n    tempLinks = [];\r\n    childData: any;\r\n    constructor(\r\n        private router: Router,\r\n        private cdr: ChangeDetectorRef,\r\n        private _utilityService: UtilityService\r\n    ) {}\r\n    ngAfterViewInit() {\r\n        this._utilityService.activeMenuItems$.subscribe((menuItemSelecte) => {\r\n          \r\n          this.menuArray = menuItemSelecte;\r\n          if (\r\n                this.menuArray == null ||\r\n                this.menuArray == undefined ||\r\n                this.menuArray.title == null ||\r\n                this.menuArray.title == undefined\r\n            ) {\r\n                this.menuArray = JSON.parse(\r\n                    localStorage.getItem(\"activeMenuItems\")\r\n                );\r\n            }\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        let nav_list = this.localStorage.nav_list_with_tab;\r\n        nav_list.filter((x) => {\r\n            if (x.id === \"assetManagement\") {\r\n                this.objectData = x;\r\n                if (\r\n                    this.objectData.children != undefined &&\r\n                    this.objectData.children != null\r\n                ) {\r\n                    this.objectData.children.filter((y) => {\r\n                        if (y.id === \"rfidManagement\") {\r\n                            this.objectChildData = y;\r\n                            if (\r\n                                this.objectChildData.children != undefined &&\r\n                                this.objectChildData.children != null\r\n                            ) {\r\n                                this.objectChildData.children.filter((z) => {\r\n                                    this.childData = z;\r\n                                    if (z.id === \"rfid-recharge\") {\r\n                                        let isDefaultRoutePermeted = false;\r\n                                        if (\r\n                                            this.childData.children !=\r\n                                                undefined &&\r\n                                            this.childData.children != null\r\n                                        ) {\r\n                                            this.childData.children.filter(\r\n                                                (t) => {\r\n                                                    if (t.id === \"list\") {\r\n                                                        isDefaultRoutePermeted =\r\n                                                            true;\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"RFID\",\r\n                                                            link: \"list\",\r\n                                                        });\r\n                                                    }\r\n                                                    if (t.id === \"recharge-history\") {\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"Recharge history\",\r\n                                                            link: \"recharge-history\",\r\n                                                        });\r\n                                                    }\r\n                                                    if (t.id === \"energy-consumption-logs\") {\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"Energy Consumption Logs\",\r\n                                                            link: \"energy-consumption-logs\",\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                        }\r\n\r\n                                        this.tabLinks = this.tempLinks;\r\n                                        if (!isDefaultRoutePermeted) {\r\n                                            this.router.navigate([\r\n                                                \"/assetManagement/rfidManagement/rfid-recharge/crud/\" +\r\n                                                    this.tempLinks[0].link,\r\n                                            ]);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n@Component({\r\n    selector: \"sunny-routed-content\",\r\n    template: \"Having a lot of light from the sun.\",\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"rainy-routed-content\",\r\n    template: \"A rainy period of time is one when it rains a lot\",\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"foggy-routed-content\",\r\n    template: \"If the weather is foggy, there is fog\",\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n    <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n      <!-- CENTER -->\r\n      <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n          <!-- HEADER -->\r\n          <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n                  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                        [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                  </span>\r\n  \r\n                  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                          (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                      <mat-icon>menu</mat-icon>\r\n                  </button-->\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n      <a mat-tab-link\r\n         *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n         [routerLink]=\"tabLink.link\"\r\n         routerLinkActive #rla=\"routerLinkActive\"\r\n         [active]=\"rla.isActive\">\r\n        {{tabLink.label}}\r\n      </a>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  \r\n  ","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RfidRechargeCrudComponent } from \"./rfid-recharge-crud/rfid-recharge-crud.component\";\r\nimport { AuthGuard } from \"app/shared/interceptors/auth-gaurd\";\r\nimport { TABS_DEMO_ROUTES } from \"./rfid-recharge-crud/routes\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"crud\",\r\n        component: RfidRechargeCrudComponent,\r\n        canActivate: [AuthGuard],\r\n        children: TABS_DEMO_ROUTES,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class RfidRechargeRoutingModule {}\r\n","import { DatePipe } from \"@angular/common\";\r\nimport {\r\n    Component,\r\n    Inject,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MtxDialogData } from \"@ng-matero/extensions\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\n\r\n@Component({\r\n    selector: \"app-action-dialog\",\r\n    templateUrl: \"./action-dialog.component.html\",\r\n    styleUrls: [\"./action-dialog.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n    params: any;\r\n    isEditMode = false;\r\n    form: FormGroup;\r\n    localStorage: any;\r\n    status = false;\r\n\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private rfidService: RfidService,\r\n        private snackBar: MatSnackBar,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.params = this.data;\r\n\r\n        this.isEditMode = this.params.action == \"CREATE\" ? false : true;\r\n\r\n        this.form = this.fb.group({\r\n            amount: [\"\", [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n        });\r\n\r\n        // if (this.isEditMode) {\r\n        //     this.assignValues(this.params);\r\n        // }\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    closeActionPanel() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    onYesClick() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            const params: any = {\r\n                rfid: this.params.data.id,\r\n                cpo_id: this.params.data.cpo_id,\r\n                station_id: this.params.data.station_id,\r\n                amount: formValues.amount,\r\n                expiry_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\r\n                created_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\r\n                created_by: this.localStorage.userId,\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n            };\r\n\r\n            if (this.isEditMode) {\r\n                (params.id = this.params.data.id),\r\n                    (params.modify_by = this.localStorage.userId);\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n                this.rfidService.updateBalance(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(\r\n                            \"Record updated successfully!\",\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(\"Please try again\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n\r\n            this.dialogRef.close(params);\r\n        }\r\n        return;\r\n    }\r\n}\r\n","<!-- close button on popup -->\r\n<mat-icon\r\n    id=\"dialog_action_close\"\r\n    matTooltip=\"Close window\"\r\n    (click)=\"closeActionPanel()\"\r\n    style=\"cursor: pointer; color: white\"\r\n    class=\"material-icons-outlined\"\r\n    >clear</mat-icon\r\n>\r\n\r\n<mat-toolbar class=\"action_toolbar\">RFID Recharge</mat-toolbar>\r\n<div style=\"padding: 24px; max-height: 22vw; overflow: auto\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form\r\n            [formGroup]=\"form\"\r\n            class=\"mat-card mat-elevation-z4\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"start\"\r\n            fxFlex=\"1 0 auto\"\r\n            name=\"form\"\r\n        >\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input\r\n                        matInput\r\n                        placeholder=\"\"\r\n                        formControlName=\"amount\"\r\n                        autocomplete=\"off\"\r\n                        required\r\n                    />\r\n                    <mat-icon\r\n                        matSuffix\r\n                        class=\"secondary-text\"\r\n                        matTooltip=\"Please enter amount\"\r\n                        >help</mat-icon\r\n                    >\r\n                    <mat-error *ngIf=\"form.get('amount').hasError('required')\"\r\n                        >Please enter amount.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('amount').hasError('pattern')\"\r\n                        >Special character are not allowed</mat-error\r\n                    >\r\n                </mat-form-field>\r\n            </div>\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                style=\"padding-top: 10px\"\r\n            >\r\n                <button\r\n                    mat-raised-button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    class=\"mr-8\"\r\n                    (click)=\"onYesClick()\"\r\n                >\r\n                    {{ isEditMode ? \"Save\" : \"Save\" }}\r\n                </button>\r\n                <button\r\n                    mat-raised-button\r\n                    type=\"button\"\r\n                    color=\"warn\"\r\n                    class=\"mr-8\"\r\n                    (click)=\"close()\"\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"app/shared/interceptors/auth-gaurd\";\r\n\r\nimport { ListComponent } from \"../list/list.component\";\r\nimport { RechargeHistoryComponent } from \"../recharge-history/recharge-history.component\";\r\nimport { EnergyConsumptionLogsComponent } from \"../energy-consumption-logs/energy-consumption-logs.component\";\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n    { path: \"list\", component: ListComponent, canActivate: [AuthGuard] },\r\n    {\r\n        path: \"recharge-history\",\r\n        component: RechargeHistoryComponent,\r\n        canActivate: [AuthGuard],\r\n    },\r\n    {\r\n        path: \"energy-consumption-logs\",\r\n        component: EnergyConsumptionLogsComponent,\r\n        canActivate: [AuthGuard],\r\n    },\r\n    { path: \"\", redirectTo: \"list\", pathMatch: \"full\" },\r\n];\r\n"]}