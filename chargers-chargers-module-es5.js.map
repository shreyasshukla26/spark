{"version":3,"sources":["webpack:///src/app/main/asset/charger/chargers/charger-crud/charger-crud.component.ts","webpack:///src/app/main/asset/charger/chargers/charger-crud/charger-crud.component.html","webpack:///src/app/main/asset/charger/chargers/create/create.component.ts","webpack:///src/app/main/asset/charger/chargers/create/create.component.html","webpack:///src/app/main/asset/charger/chargers/list-client/list-client.component.ts","webpack:///src/app/main/asset/charger/chargers/list-client/list-client.component.html","webpack:///src/app/main/asset/charger/chargers/action-dialog/action-dialog.component.ts","webpack:///src/app/main/asset/charger/chargers/action-dialog/action-dialog.component.html","webpack:///src/app/main/asset/charger/chargers/charger-crud/routes.ts","webpack:///src/app/main/asset/charger/chargers/chargers-routing.module.ts","webpack:///src/app/main/asset/charger/chargers/chargers.module.ts","webpack:///src/app/main/asset/charger/chargers/view-dialog/view-dialog.component.ts","webpack:///src/app/main/asset/charger/chargers/view-dialog/view-dialog.component.html","webpack:///src/app/main/asset/charger/chargers/list/list.component.ts","webpack:///src/app/main/asset/charger/chargers/list/list.component.html"],"names":["ChargerCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","nav_list","nav_list_with_tab","filter","x","id","objectData","children","y","objectChildData","z","childData","isDefaultRoutePermeted","t","push","label","link","navigate","selector","templateUrl","styleUrls","encapsulation","None","animations","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","autocompleteObjectValidator","control","value","CreateComponent","fb","chargerBatchService","chargingStationService","versionService","chargerService","chargingModelService","snackBar","countryService","datePipe","dateService","disabled","showSpinners","showSeconds","touchUi","enableMeridian","minDate","Date","stepHour","stepMinute","stepSecond","isAvailable","status","initialize","form","group","name","required","pattern","serialNo","chargingModel","station","currentVersion","noOfGuns","addressLine1","addressLine2","landmark","city","state","country","pincode","lat","otaConfig","periodicCheckRefTime","periodicityInHours","max","min","whenToUpgrade","upgradeSpecificTime","getChargingModels","getStations","getVersions","fillterOption","getAllCountry","getAllState","data","countries","filteredOptionCountry","controls","valueChanges","pipe","_filterCountry","err","states","filteredOptionState","_filterState","getAllCities","cities","filteredOptionCity","_filterCity","chargingModels","filteredOptionsCharModel","_filterCharModels","getChargingStations","stations","versions","filteredOptionsCurrVersion","_filterCurrVersion","selectedValue","toSelect","find","c","connector_data","get","setValue","length","valid","formValues","params","serial_no","model_id","station_id","current_version_id","no_of_guns","Lat","Lng","OTA_Config","Periodic_Check_Ref_Time","transform","Periodicity_in_hours","When_to_Upgrade","Upgrade_Specific_Time","is_available","created_by","userId","address1","address2","PIN","city_id","state_id","country_id","create","open","chargerNCreate","duration","dublicateCharger","errorMessage","hasError","event","checked","toggleAvailable","item","filterValue","toLowerCase","batches","option","includes","pin_code_id","getCountryStateByPIN","getCountryByState","countrydata","getStateByCountry","statedata","getCityByState","Citydata","getStatesByCountry","getCitiesByStates","stateId","citiesdata","ref","onSubmit","$event","preventDefault","onChangeChargingModel","stopPropagation","updateAvailable","updateStatus","providers","Client","ListClientComponent","dialog","cpoService","clientService","displayedColumns","head","clientSearch","nameSearch","serialSearch","modelSearch","statusSearch","charClient","charCPO","charStat","clientCpoStaDetails","getAllClientChargers","filterEntity","filterType","ANYWHERE","getClients","target","dataSource","trim","paginator","firstPage","allChargers","i","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteChargerFromClient","deleteMessage","action","dialogRef","width","autoFocus","panelClass","visibleOption","ev","client_name","model_name","exportedData","filteredData","chargerModel","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","clientList","role_code","getCPOByClient","client_id","filteredOptionsCharClient","_filterCharClient","cpoList","stationList","getStationByCPO","cpo_id","filteredOptionsCharCPO","cpo_name","_filterCharCPO","filteredOptionsCharStat","station_name","_filterCharStat","tableExport","pdfExport","ActionDialogComponent","isEditMode","isDirty","validatingForm","assignValues","getAllCity","countryID","stateID","close","refineDate","charger_id","modify_by","update","recordUpdateMessage","closeActionPanel","onYesClick","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","routes","ChargersRoutingModule","forChild","imports","exports","COMPONENTS","COMPONENTS_DYNAMIC","ChargersModule","declarations","entryComponents","ViewDialogComponent","Charger","ListComponent","displaySearch","modelVarientSearch","currentVersionSearch","noGunsSearch","availabbleSearch","getPlantChargers","chargers","availableString"],"mappings":"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","file":"chargers-chargers-module-es5.js","sourcesContent":["\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charger-crud',\r\n  templateUrl: './charger-crud.component.html',\r\n  styleUrls: ['./charger-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargerCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Chargers - Plant', link: 'list' },\r\n    // { label: 'Chargers Client', link: 'listClient' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if(this.objectData.children != undefined){\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"chargerManagement\") {\r\n              this.objectChildData = y;\r\n              if(this.objectChildData.children != undefined){\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"crud\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if(this.childData.children != undefined){\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"chargersPlant\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'Chargers - Plant', link: 'list' });\r\n                        }\r\n                        if(t.id === \"chargersClient\"){\r\n                          this.tempLinks.push({ label: 'Chargers Client', link: 'listClient' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n            \r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/chargerManagement/chargers/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n              \r\n  \r\n            }\r\n  \r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { ChargerService } from '@shared/services/client/client.service';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  minDate = new Date();\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n\r\n  form: FormGroup;\r\n  batches:any;\r\n  chargingModels:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  connector_data :any;\r\n\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  filteredOptionsBatch: Observable<any[]>;\r\n  filteredOptionsCharModel: Observable<any[]>;\r\n  filteredOptionsCurrVersion: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  states:any;\r\n  stateName:any;\r\n  cities:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n \r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private chargingModelService : ChargingModelService,\r\n    private snackBar: MatSnackBar,public countryService: CountriesService,\r\n    private router : Router, private datePipe: DatePipe,private dateService : DateService,) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name: ['',[ Validators.required,Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]  ],\r\n      serialNo: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)] ],\r\n     // batch: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      chargingModel: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      station: [''],\r\n      currentVersion: ['', [autocompleteObjectValidator()]],\r\n      noOfGuns: [''],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],   \r\n      lat: ['', ],\r\n      long: ['', ],\r\n     \r\n      otaConfig: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/) ]],\r\n      periodicCheckRefTime: ['', ],\r\n      periodicityInHours: ['', [ Validators.pattern(/^[0-9]*$/),Validators.max(48), Validators.min(0)]],\r\n      whenToUpgrade: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      upgradeSpecificTime: [''],\r\n      isAvailable: [{value:'false'}, [Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n    });\r\n   \r\n   // this.getBatches();\r\n    this.getChargingModels();\r\n    this.getStations();\r\n    this.getVersions();\r\n    this.fillterOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n       \r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getChargingModels(){\r\n    this.chargingModelService.getChargingModels().subscribe(\r\n      (data:any)=>{\r\n        this.chargingModels = data;\r\n        this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // getBatches(){\r\n  //   this.chargerBatchService.getChargerBatches().subscribe(\r\n  //     (data:any)=>{\r\n        \r\n  //       this.batches = data;\r\n  //       this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n  //       .pipe(\r\n  //         startWith(''),\r\n  //         map(value => typeof value === 'string' ? value : value.name),\r\n  //         map(name => name ? this._filterBatch(name) : this.batches)\r\n  //       );\r\n  //     },(err)=>{\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.stations = data.data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n        this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  onChangeChargingModel(selectedValue){\r\n    const toSelect = this.chargingModels.find(c => c.id == selectedValue);\r\n    this.connector_data = toSelect.connector_data;\r\n    this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n  }\r\n\r\n  onSubmit(){\r\n    \r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      if(formValues.otaConfig  == ''){\r\n        formValues.otaConfig =  null;\r\n      }\r\n      if(formValues.periodicityInHours  == ''){\r\n        formValues.periodicityInHours =  null;\r\n      }\r\n      if(formValues.whenToUpgrade  == ''){\r\n        formValues.whenToUpgrade =  null;\r\n      }\r\n      if(formValues.upgradeSpecificTime  == ''){\r\n        formValues.upgradeSpecificTime =  null;\r\n      }\r\n\r\n    \r\n    let params = {\r\n      name :formValues.name, \r\n      serial_no :formValues.serialNo, \r\n      //batch_id :formValues.batch.id, \r\n      model_id :formValues.chargingModel.id, \r\n      station_id : !!formValues.station ? formValues.station : 0, \r\n      current_version_id :formValues.currentVersion.id, \r\n      no_of_guns :formValues.noOfGuns, \r\n      //address1 : !!formValues.address ? formValues.address : '', \r\n      Lat :!!formValues.lat ? formValues.lat : 0, \r\n      Lng : !!formValues.long ? formValues.long : 0, \r\n      OTA_Config :formValues.otaConfig, \r\n      Periodic_Check_Ref_Time :this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd HH:mm:ss\") ,  //this.dateService.refineDate(formValues.periodicCheckRefTime),//this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\") , \r\n      Periodicity_in_hours :formValues.periodicityInHours, \r\n      When_to_Upgrade :formValues.whenToUpgrade, \r\n      Upgrade_Specific_Time :this.datePipe.transform(formValues.upgradeSpecificTime, \"yyyy-MM-dd HH:mm:ss\") ,//formValues.upgradeSpecificTime, \r\n      is_available :this.isAvailable == true ? 1 : 0, \r\n      status :  this.status == true ? 'Y' : 'N', \r\n      created_by : this.localStorage.userId,\r\n      connector_data : this.connector_data,\r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      PIN: formValues.pincode,\r\n      landmark: formValues.landmark,\r\n      city_id : formValues.city.id,//formValues.city,\r\n      state_id : formValues.state.id,\r\n      country_id :formValues.country.id \r\n    }\r\n    this.chargerService.create(params).subscribe(\r\n      (data:any )=>{\r\n        if(data.status){\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/assetManagement/chargerManagement/chargers/crud/list']);\r\n        }else{\r\n          this.snackBar.open(MessageConstant.dublicateCharger, 'Dismiss', { duration: 5000 });\r\n        }\r\n      },\r\n      (err)=>{\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n    }\r\n    else{\r\n      return;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  fillterOption(){\r\n    \r\n      this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n      );\r\n      this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n  }\r\n  displayBatch(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayChargingModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCurrentVersion(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterBatch(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.batches.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingModels.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCurrVersion(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.versions.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry(){\r\n    \r\n      this.pin_code_id = this.form.value.pincode;\r\n      this.form.get('state').setValue( \"\");\r\n      this.form.get('city').setValue( \"\");\r\n      this.form.get('country').setValue(\"\");\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n      (data:any)=>{\r\n        //this.form.reset();\r\n        if(data != undefined && data != null && data.length > 0){\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id ).subscribe(\r\n            (countrydata:any)=>{\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n              \r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value.name),\r\n                map(name => name ? this._filterCountry(name) : this.countries)\r\n              );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n                (statedata:any)=>{\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n                  \r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                  .pipe(\r\n                    startWith(''),\r\n                    map(value => typeof value === 'string' ? value : value.name),\r\n                    map(name => name ? this._filterState(name) : this.states)\r\n                  );\r\n                  \r\n                },(err)=>{\r\n                  \r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id ).subscribe(\r\n                (Citydata:any)=>{\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                 // this.form.get('state').setValue(toSelect);\r\n                  \r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                  .pipe(\r\n                    startWith(''),\r\n                    map(value => typeof value === 'string' ? value : value.name),\r\n                    map(name => name ? this._filterCity(name) : this.cities)\r\n                  );\r\n                  \r\n                },(err)=>{\r\n                  \r\n                }\r\n              )\r\n            },(err)=>{\r\n              \r\n            }\r\n          )\r\n        }else{\r\n\r\n        }\r\n       \r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event){\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    \r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue( \"\");\r\n    this.form.get('city').setValue( \"\");\r\n  }\r\n  getStatesByCountry(state){\r\n     this.state_id = state.id;\r\n     this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n      (statedata:any)=>{\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  onStateChange(event){\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId){\r\n    this.state_id = stateId.id;\r\n     this.countryService.getCityByState(this.state_id ).subscribe(\r\n      (citiesdata:any)=>{\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId){\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id ).subscribe(\r\n      (countrydata:any)=>{\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n        \r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n       \r\n     },(err)=>{\r\n       \r\n     }\r\n   )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Model Variant</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"chargingModel\" required id=\"chargerCreateCModel\"\r\n          [matAutocomplete]=\"chargingModelAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model variant\">model_training</mat-icon>\r\n          </div>\r\n          \r\n          <mat-autocomplete #chargingModelAuto=\"matAutocomplete\" [displayWith]=\"displayChargingModel\"\r\n          (optionSelected)=\"onChangeChargingModel($event.option.value.id)\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCharModel | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n       \r\n        <mat-error *ngIf=\"form.get('chargingModel').invalid\">Please select model variant </mat-error>\r\n      </mat-form-field>\r\n      <!--mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n              <mat-label>Part No</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"batch\"   type=\"search\" autocomplete=\"off\" id=\"createChargerBatch\" [matAutocomplete]=\"batchAuto\" required >\r\n              <mat-autocomplete #batchAuto=\"matAutocomplete\"  [displayWith]=\"displayBatch\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsBatch | async\" [value]=\"option\">\r\n                    {{option.name}}\r\n                  </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"form.get('batch').invalid\">Please select part number \r\n              </mat-error>\r\n            </mat-form-field-->\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Serial No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"serialNo\" type=\"search\" maxlength=\"20\" required\r\n          autocomplete=\"off\" id=\"chargerCreateSerial\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <!-- <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon> -->\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n          </div>\r\n        <mat-error *ngIf=\"form.get('serialNo').hasError('required')\">Please enter serial no</mat-error>\r\n        <mat-error *ngIf=\"form.get('serialNo').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Charger Display Id</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" type=\"search\" maxlength=\"20\" required autocomplete=\"off\"\r\n          id=\"chargerCreateDisplayId\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger display id\">desktop_windows\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter charger display id</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Current Version</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"currentVersion\" id=\"chargerCreateCVersion\"\r\n          [matAutocomplete]=\"currentVersionAuto\" type=\"search\" autocomplete=\"off\">\r\n        <mat-autocomplete #currentVersionAuto=\"matAutocomplete\" [displayWith]=\"displayCurrentVersion\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsCurrVersion | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n            \r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select current version \">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('currentVersion').invalid\">Please select current version\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>OTA Config</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"otaConfig\" id=\"chargerCreateOTAConfig\" maxlength=\"100\"\r\n          type=\"search\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter OTA Config \">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('otaConfig').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Periodic Check Ref Time</mat-label>\r\n        <input matInput [ngxMatDatetimePicker]=\"startDatePicker\" placeholder=\"\" formControlName=\"periodicCheckRefTime\"\r\n          [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\" readonly required>\r\n\r\n        <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon class=\"secondary-text\" matTooltip=\"Please enter periodic check ref time\">help</mat-icon>\r\n          <mat-icon mat-icon-button type=\"button\" (click)=\"startDatePicker.open(); $event.stopPropagation();\">today\r\n          </mat-icon>\r\n        </div>\r\n\r\n\r\n        <ngx-mat-datetime-picker #startDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n          [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n          [enableMeridian]=\"enableMeridian\">\r\n        </ngx-mat-datetime-picker>\r\n        <mat-error *ngIf=\"form.get('periodicCheckRefTime').invalid\">Please enter periodic check ref time </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Periodicity In Hours</mat-label>\r\n        <input matInput placeholder=\"\" aria-label=\"Periodicity In Hours\" max=\"48\" type=\"number\"\r\n          id=\"periodicityInHoursmat\" formControlName=\"periodicityInHours\" autocomplete=\"off\" type=\"number\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter proidicity in hours\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('periodicityInHours').hasError('max')\">Maximum value is not greater then equal 48\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('periodicityInHours').hasError('min')\">Maximum value is not greater then equal 0\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>When To Upgrade</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"whenToUpgrade\" maxlength=\"100\" id=\"chargerCreateWhenToUpgrade\"\r\n          type=\"search\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter when to upgrade\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('pattern')\">Only character are allowed</mat-error>\r\n      </mat-form-field>\r\n      <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n              <mat-label>Upgrade Specific Time</mat-label>\r\n              <input matInput placeholder=\"\" aria-label=\"Editable dial\" \r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  formControlName=\"upgradeSpecificTime\" [format]=\"24\" required> \r\n\r\n                <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter upgrade specific time\">help</mat-icon>\r\n              <ngx-material-timepicker #upgradeSpecificTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\r\n              <mat-error *ngIf=\"form.get('upgradeSpecificTime').hasError('hasError')\">Please enter upgrade specific time</mat-error>\r\n            </mat-form-field> -->\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Upgrade Specific Time</mat-label>\r\n\r\n        <input matInput [ngxMatDatetimePicker]=\"upgradeDatePicker\" placeholder=\"\" readonly\r\n          formControlName=\"upgradeSpecificTime\" [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\" readonly required>\r\n        <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n        <button mat-icon-button matSuffix type=\"button\" (click)=\"upgradeDatePicker.open(); $event.stopPropagation();\">\r\n          <mat-icon>today</mat-icon>\r\n        </button>\r\n        <ngx-mat-datetime-picker #upgradeDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n          [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n          [enableMeridian]=\"enableMeridian\">\r\n        </ngx-mat-datetime-picker>\r\n        <mat-error *ngIf=\"form.get('upgradeSpecificTime').invalid\">Please enter upgrade specific time </mat-error>\r\n\r\n        <!-- <input matInput placeholder=\"\" aria-label=\"Editable dial\" required\r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  [disabled]=\" (form.get('whenToUpgrade').value.value != 'SPECIFIC_TIME')? true:false\"  readonly formControlName=\"upgradeSpecificTime\"  [value]=\"'12:00'\" [format]=\"24\"> \r\n              <ngx-material-timepicker #upgradeSpecificTime  [enableKeyboardInput]=\"false\"></ngx-material-timepicker> -->\r\n\r\n\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <div fxFlex=\"16\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n          (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n          {{isAvailable ? 'Available' : 'Unavailable'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxFlex=\"16\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/chargerManagement/chargers/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nexport class Client {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  serial_no: string;\r\n  client_name: string;\r\n  model_name: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list-client',\r\n  templateUrl: './list-client.component.html',\r\n  styleUrls: ['./list-client.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListClientComponent implements OnInit {\r\n\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['client_name', 'name', 'serial_no', 'model_name', 'status', 'action'];\r\n  head = [['Client Name', 'Name', 'Serial No', 'Model Name', 'Status']];\r\n  dataSource: MatTableDataSource<Client>;\r\n\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  nameSearch = false;\r\n  serialSearch = false;\r\n  modelSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  cposName: any;\r\n  clientName:any;\r\n  chargingStationName: any;\r\n  filteredOptionsCharClient:Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog,private cpoService: CpoService,private fb: FormBuilder, \r\n    private chargingStationService: ChargingStationService,private clientService:ClientService,private snackBar: MatSnackBar, \r\n    private cdr: ChangeDetectorRef) {\r\n      this.form = this.fb.group({\r\n        charClient:[''],\r\n        charCPO: [''],\r\n        charStat: ['']\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    \r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'))\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllClientChargers(id) {\r\n    this.chargerService.getAllClientChargers(id).subscribe(\r\n      (data: any) => {\r\n        if (data != null) {\r\n          this.allChargers = data;\r\n          for (var i = 0; i < this.allChargers.length; i++) {\r\n            if (this.allChargers[i].status == 'N') {\r\n              this.allChargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.allChargers[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.allChargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargerService.deleteChargerFromClient(id, this.localStorage.userId).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getAllClientChargers(this.localStorage.userId);\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'clientSearch') {\r\n      this.clientSearch = !this.clientSearch;\r\n      this.filterEntity.client_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no = \"\";\r\n    }\r\n    if (visibleOption == 'modelSearch') {\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.model_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Client Name': chargerModel.client_name, 'Name': chargerModel.name, 'Serial No': chargerModel.serial_no,\r\n        'Model Name': chargerModel.model_name, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n    XLSX.writeFile(workBook, 'Sales Dispatch.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.client_name, chrger.name, chrger.name, chrger.serial_no, chrger.model_name, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage( img, 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Sales Dispatch Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Sales Dispatch report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.clientList != null && this.clientList != undefined && this.clientList.length >0 ) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n\r\n    } \r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  onClientChange(client_id){\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined && this.cpoList.length > 0) {\r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  \r\n  onCPOChange(event) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station =[];\r\n\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      for(var i = 0; i< this.stationList.length; i++){\r\n        if(id == this.stationList[i].cpo_id){\r\n          this.station.push( this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        const toSelect = this.station[0];//this.station.find(c => c.cpo_id == id);\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getAllClientChargers(this.localStorage.userId);\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    } \r\n\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n  onStationChange(event) {\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    //this.getAllClientChargers();\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n      \r\n</div>\r\n<mat-card style=\"padding:16px  !important; display:none\" *ngIf=\"localStorage.role_code == 'END'\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                        (optionSelected)='onClientChange($event.option.value.client_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.client_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.cpo_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select  CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.station_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Model Name \" [(ngModel)]=\"filterEntity.model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                        </td>\r\n                    </tr> -->\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  public minDate: moment.Moment;\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionsBatch: Observable<any[]>;\r\n  filteredOptionsCharModel: Observable<any[]>;\r\n  filteredOptionsCurrVersion: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerBatchService: ChargerBatchService,\r\n    private chargingStationService: ChargingStationService,\r\n    private versionService: VersionService, private chargerService: ChargerService,\r\n    private dateService: DateService, private chargingModelService: ChargingModelService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      serialNo: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      //batch: ['',[autocompleteObjectValidator(),Validators.required] ],\r\n      chargingModel: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      station: ['',],\r\n      currentVersion: ['', [autocompleteObjectValidator()]],\r\n      noOfGuns: ['', [Validators.required]],\r\n      // addressLine1:[''],\r\n      // addressLine2:[''],\r\n      // landmark:[''],\r\n      // city:['',[Validators.required]],\r\n      // state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // pincode:[''],   \r\n      // lat: ['', ],\r\n      // long: ['', ],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      pincode: [''],\r\n      lat: ['',],\r\n      long: ['',],\r\n      otaConfig: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      periodicCheckRefTime: [''],\r\n      periodicityInHours: ['', [Validators.pattern(/^[0-9]*$/), Validators.max(48), Validators.min(0)]],\r\n      whenToUpgrade: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      upgradeSpecificTime: [''],\r\n      isAvailable: [{ value: 'false' }, [Validators.required]],\r\n    });\r\n\r\n\r\n    this.getChargingModels();\r\n    //this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n    //this.onChangeChargingModel();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.fillterOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getChargingModels() {\r\n    this.chargingModelService.getChargingModels().subscribe(\r\n      (data: any) => {\r\n        this.chargingModels = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargingModels.find(c => c.id == this.params.data.model_id);\r\n          this.form.get('chargingModel').setValue(toSelect);\r\n          this.connector_data = toSelect.connector_data;\r\n          this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n          this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  // getBatches(){\r\n  //   this.chargerBatchService.getChargerBatches().subscribe(\r\n  //     (data:any)=>{\r\n\r\n  //       this.batches = data;\r\n\r\n  //       if(this.isEditMode){\r\n\r\n  //         const toSelect = this.batches.find(c => c.id == this.params.data.batch_id);\r\n  //         this.form.get('batch').setValue(toSelect);\r\n  //         this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n  //         .pipe(\r\n  //           startWith(''),\r\n  //           // tap(() => this.form.controls.batch.setValue(toSelect)),\r\n  //           map(value => typeof value === 'string' ? value : value.name),\r\n  //           map(name => name ? this._filterBatch(name) : this.batches)\r\n  //         );\r\n  //       }\r\n  //     },(err)=>{\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getStations() {\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data: any) => {\r\n\r\n        this.stations = data.data;\r\n        // if(this.isEditMode){\r\n\r\n        //   const toSelect = this.stations.find(c => c.id == this.params.data.station_id);\r\n        //   this.form.get('station').setValue(toSelect.id);\r\n        // }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions() {\r\n    this.versionService.getVersions().subscribe(\r\n      (data: any) => {\r\n        \r\n        this.versions = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.versions.find(c => c.id == this.params.data.current_version_id);\r\n\r\n          this.form.get('currentVersion').setValue(toSelect);\r\n          this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onChangeChargingModel(selectedValue) {\r\n    const toSelect = this.chargingModels.find(c => c.id == selectedValue);\r\n    this.connector_data = toSelect.connector_data;\r\n    this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      if (formValues.otaConfig == '') {\r\n        formValues.otaConfig = null;\r\n      }\r\n      if (formValues.periodicityInHours == '') {\r\n        formValues.periodicityInHours = null;\r\n      }\r\n      if (formValues.whenToUpgrade == '') {\r\n        formValues.whenToUpgrade = null;\r\n      }\r\n      if (formValues.upgradeSpecificTime == '') {\r\n        formValues.upgradeSpecificTime = null;\r\n      }\r\n\r\n      const params: any = {\r\n\r\n        name: formValues.name,\r\n        serial_no: formValues.serialNo,\r\n        //batch_id :formValues.batch.id, \r\n        model_id: formValues.chargingModel.id,\r\n        station_id: !!formValues.station ? formValues.station : 0,\r\n        current_version_id: formValues.currentVersion.id,\r\n        no_of_guns: formValues.noOfGuns,\r\n        //address1 : !!formValues.address ? formValues.address : '', \r\n        Lat: !!formValues.lat ? formValues.lat : 0,\r\n        Lng: !!formValues.long ? formValues.long : 0,\r\n        OTA_Config: formValues.otaConfig,\r\n        Periodic_Check_Ref_Time: this.dateService.refineDate(formValues.periodicCheckRefTime),\r\n        Periodicity_in_hours: formValues.periodicityInHours,\r\n        When_to_Upgrade: formValues.whenToUpgrade,\r\n        Upgrade_Specific_Time: this.datePipe.transform(formValues.upgradeSpecificTime, \"yyyy-MM-dd HH:mm:ss\"),//formValues.upgradeSpecificTime, \r\n        connector_data: this.connector_data,\r\n        is_available: this.isAvailable == true ? 1 : 0,\r\n        // address1 :formValues.addressLine1,\r\n        // address2 :formValues.addressLine2,\r\n        // PIN: formValues.pincode,\r\n        // landmark: formValues.landmark,\r\n        // city_id : formValues.city.id,\r\n        // state_id : formValues.state.id,\r\n        // country_id : formValues.country.id, \r\n        status: this.status == true ? 'Y' : 'N'\r\n\r\n\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = !!this.params.data.charger_id ? this.params.data.charger_id : this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.chargerService.update(params).subscribe(\r\n          (data: any) => {\r\n\r\n            if (data.status) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.dublicateCharger, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.chargerService.create(params).subscribe(\r\n          (data: any) => {\r\n\r\n            this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      // this.dialogRef.close(params);\r\n    }\r\n    return;\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    ;\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serialNo').setValue(params.data.serial_no);\r\n    this.form.get('noOfGuns').setValue(params.data.no_of_guns);\r\n    this.form.get('lat').setValue(params.data.Lat);\r\n    this.form.get('long').setValue(params.data.Lng);\r\n    this.form.get('otaConfig').setValue(params.data.OTA_Config);\r\n    //this.form.get('periodicCheckRefTime').setValue(this.dateService.refineDate(params.data.Periodic_Check_Ref_Time)); \r\n    this.form.get('periodicCheckRefTime').setValue(params.data.Periodic_Check_Ref_Time);                     //this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd HH:mm:ss\") ,\r\n    this.form.get('periodicityInHours').setValue(params.data.Periodicity_in_hours);\r\n    this.form.get('whenToUpgrade').setValue(params.data.When_to_Upgrade);\r\n    // this.form.get('upgradeSpecificTime').setValue(this.datePipe.transform(params.data.Upgrade_Specific_Time, \"HH:mm\"));//(params.data.Upgrade_Specific_Time); \r\n    this.form.get('upgradeSpecificTime').setValue(params.data.Upgrade_Specific_Time);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.isAvailable = params.data.is_available == 1 ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  updateAvailable(event) {\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n\r\n  fillterOption() {\r\n    // this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n    //   .pipe(\r\n    //     startWith(''),\r\n    //     map(value => typeof value === 'string' ? value : value.name),\r\n    //     map(name => name ? this._filterBatch(name) : this.batches)\r\n    //   );\r\n    this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n      );\r\n    this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n      );\r\n    //       this.countries = this.form.controls.country.valueChanges\r\n    //       .pipe(\r\n    //      startWith(''),\r\n    //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n    //      map(value => typeof value === 'string' ? value : value.name),\r\n    //      map(name => name ? this._filterCountry(name) : this.countries)\r\n    //    ); \r\n    //       this.states = this.form.controls.state.valueChanges\r\n    //       .pipe(\r\n    //      startWith(''),\r\n    //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n    //      map(value => typeof value === 'string' ? value : value.name),\r\n    //      map(name => name ? this._filterState(name) : this.states)\r\n    //    );\r\n\r\n    // this.cities = this.form.controls.city.valueChanges\r\n    //          .pipe(\r\n    //         startWith(''),\r\n    //         //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n    //         map(value => typeof value === 'string' ? value : value.name),\r\n    //         map(name => name ? this._filterCity(name) : this.cities)\r\n    //       );\r\n  }\r\n\r\n  // displayBatch(item: any): string {\r\n  //   return item && item.name ? item.name : '';\r\n  // }\r\n\r\n  displayChargingModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayCurrentVersion(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  // private _filterBatch(name: string): any[] {\r\n  //   const filterValue = name.toLowerCase();\r\n  //   return this.batches.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  // }\r\n\r\n  private _filterCharModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingModels.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterCurrVersion(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.versions.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Model Variant</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"chargingModel\" required id=\"chargerCreateCModel\"\r\n            [matAutocomplete]=\"chargingModelAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n            <div matSuffix style=\"display: flex;\">\r\n              <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n              <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model variant\">model_training</mat-icon>\r\n            </div>\r\n          \r\n            <mat-autocomplete #chargingModelAuto=\"matAutocomplete\" [displayWith]=\"displayChargingModel\"\r\n            (optionSelected)=\"onChangeChargingModel($event.option.value.id)\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharModel | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        \r\n          <mat-error *ngIf=\"form.get('chargingModel').invalid\">Please select model variant </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Serial No</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"serialNo\" type=\"search\" maxlength=\"20\" required\r\n            autocomplete=\"off\" id=\"chargerCreateSerial\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('required')\">Please enter serial no</mat-error>\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Charger Display Id</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" type=\"search\" required autocomplete=\"off\"\r\n            id=\"chargerCreateDisplayId\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charger display id\">desktop_windows\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter charger display id</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Current Version</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"currentVersion\" id=\"chargerCreateCVersion\"\r\n            [matAutocomplete]=\"currentVersionAuto\" type=\"search\" required autocomplete=\"off\">\r\n            <div matSuffix style=\"display: flex;\">\r\n              <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n              <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select current version \">help</mat-icon>\r\n            </div>\r\n          \r\n            <mat-autocomplete #currentVersionAuto=\"matAutocomplete\" [displayWith]=\"displayCurrentVersion\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCurrVersion | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          \r\n          <mat-error *ngIf=\"form.get('currentVersion').invalid\">Please select current version\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>OTA Config</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"otaConfig\" id=\"chargerCreateOTAConfig\" type=\"search\"\r\n            autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter OTA Config \">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('otaConfig').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodic Check Ref Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"startDatePicker\" placeholder=\"\" formControlName=\"periodicCheckRefTime\"\r\n            [disabled]=\"disabled\" readonly>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon class=\"secondary-text\" matTooltip=\"Please enter periodic check ref time\">help</mat-icon>\r\n            <mat-icon mat-icon-button type=\"button\" (click)=\"startDatePicker.open(); $event.stopPropagation();\">today\r\n            </mat-icon>\r\n          </div>\r\n          <!-- <button mat-icon-button matSuffix type=\"button\" (click)=\"startDatePicker.open(); $event.stopPropagation();\">\r\n                <mat-icon>today</mat-icon>\r\n             </button> -->\r\n          <ngx-mat-datetime-picker #startDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodicity In Hours</mat-label>\r\n          <input matInput placeholder=\"\" aria-label=\"Periodicity In Hours\" max=\"48\" id=\"periodicityInHoursmat\"\r\n            formControlName=\"periodicityInHours\" autocomplete=\"off\" type=\"number\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter proidicity in hours\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('max')\">Maximum value is not greater then equal 48\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('min')\">Maximum value is not greater then equal 0\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>When To Upgrade</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"whenToUpgrade\" id=\"chargerCreateWhenToUpgrade\" type=\"search\"\r\n            autocomplete=\"off\">\r\n\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter when to upgrade\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('pattern')\">Only character are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Upgrade Specific Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"upgradeDatePicker\" placeholder=\"\" readonly\r\n            formControlName=\"upgradeSpecificTime\" [disabled]=\"disabled\" readonly required>\r\n          <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n          <button mat-icon-button matSuffix type=\"button\" (click)=\"upgradeDatePicker.open(); $event.stopPropagation();\">\r\n            <mat-icon>today</mat-icon>\r\n          </button>\r\n          <ngx-mat-datetime-picker #upgradeDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n          <!-- <input matInput placeholder=\"\" aria-label=\"Editable dial\" required\r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  [disabled]=\" (form.get('whenToUpgrade').value.value != 'SPECIFIC_TIME')? true:false\"  readonly formControlName=\"upgradeSpecificTime\"  [value]=\"'12:00'\" [format]=\"24\"> \r\n              <ngx-material-timepicker #upgradeSpecificTime  [enableKeyboardInput]=\"false\"></ngx-material-timepicker> -->\r\n\r\n          <mat-error *ngIf=\"form.get('upgradeSpecificTime').invalid\">Please enter upgrade specific time </mat-error>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n              <mat-label>Upgrade Specific Time</mat-label>\r\n             \r\n              <input matInput placeholder=\"\" aria-label=\"Editable dial\" \r\n                [ngxTimepicker]=\"upgradeSpecificTime\" readonly formControlName=\"upgradeSpecificTime\" [format]=\"24\"> \r\n                <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter upgrade specific time\">help</mat-icon>\r\n              <ngx-material-timepicker #upgradeSpecificTime [enableKeyboardInput]=\"false\"></ngx-material-timepicker>\r\n\r\n             \r\n            </mat-form-field> -->\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n            (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n            {{isAvailable ? 'Available' : 'Unavailable'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListClientComponent } from '../list-client/list-client.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard] },\r\n  { path : 'listClient', component : ListClientComponent , canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargerCrudComponent } from './charger-crud/charger-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './charger-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ChargerCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n    {\r\n        path : 'listClient',component : ChargerCrudComponent,canActivate: [AuthGuard],\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ChargersRoutingModule{}","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\n// import { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ChargersRoutingModule } from './chargers-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ChargerCrudComponent } from './charger-crud/charger-crud.component';\r\nimport { ListClientComponent } from './list-client/list-client.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport {\r\n    NgxMatDatetimePickerModule, \r\n    NgxMatNativeDateModule, \r\n    NgxMatTimepickerModule ,\r\n    NgxMatDateFormats,\r\n    NGX_MAT_DATE_FORMATS,\r\n    NgxMatDateAdapter,\r\n    \r\n  } from '@angular-material-components/datetime-picker';\r\nconst COMPONENTS =[ChargerCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ChargersRoutingModule,FuseSharedModule,NgxMatDatetimePickerModule, \r\n        NgxMatNativeDateModule, \r\n        NgxMatTimepickerModule ,],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC, ListClientComponent],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargersModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  public minDate: moment.Moment;\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  chargingModels:any;\r\n  connector_data :any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionsBatch: Observable<any[]>;\r\n  filteredOptionsCharModel: Observable<any[]>;\r\n  filteredOptionsCurrVersion: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder,private chargerBatchService : ChargerBatchService,\r\n    private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private dateService : DateService, private chargingModelService : ChargingModelService,\r\n    private snackBar: MatSnackBar,public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [ Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      serialNo: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      //batch: ['',[autocompleteObjectValidator(),Validators.required] ],\r\n      chargingModel: ['',[autocompleteObjectValidator(),Validators.required]],\r\n      station: ['', ],\r\n      currentVersion: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      noOfGuns: ['', [Validators.required]],\r\n      // addressLine1:[''],\r\n      // addressLine2:[''],\r\n      // landmark:[''],\r\n      // city:['',[Validators.required]],\r\n      // state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      // pincode:[''],   \r\n      // lat: ['', ],\r\n      // long: ['', ],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],   \r\n      lat: ['', ],\r\n      long: ['', ],\r\n      otaConfig: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      periodicCheckRefTime: [''],\r\n      periodicityInHours: ['', [Validators.required, Validators.pattern(/^[0-9]*$/),Validators.max(48), Validators.min(0)]],\r\n      whenToUpgrade: ['', [Validators.required, Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      upgradeSpecificTime: [''],\r\n      isAvailable: [{value:'false'}, [Validators.required]],\r\n    });\r\n\r\n    this.getChargingModels();\r\n    //this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n    //this.onChangeChargingModel();\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n    this.fillterOption();\r\n     //this.getCountry();\r\n     this.getAllCountry();\r\n     this.getAllState(this.params.data.country_id);\r\n     this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.countries = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getChargingModels(){\r\n    this.chargingModelService.getChargingModels().subscribe(\r\n      (data:any)=>{\r\n        this.chargingModels = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargingModels.find(c => c.id == this.params.data.model_id);\r\n          this.form.get('chargingModel').setValue(toSelect);\r\n          this.connector_data = toSelect.connector_data;\r\n          this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n          this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n        );\r\n        }\r\n\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  // getBatches(){\r\n  //   this.chargerBatchService.getChargerBatches().subscribe(\r\n  //     (data:any)=>{\r\n        \r\n  //       this.batches = data;\r\n\r\n  //       if(this.isEditMode){\r\n          \r\n  //         const toSelect = this.batches.find(c => c.id == this.params.data.batch_id);\r\n  //         this.form.get('batch').setValue(toSelect);\r\n  //         this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n  //         .pipe(\r\n  //           startWith(''),\r\n  //           // tap(() => this.form.controls.batch.setValue(toSelect)),\r\n  //           map(value => typeof value === 'string' ? value : value.name),\r\n  //           map(name => name ? this._filterBatch(name) : this.batches)\r\n  //         );\r\n  //       }\r\n  //     },(err)=>{\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.stations = data.data;\r\n        // if(this.isEditMode){\r\n          \r\n        //   const toSelect = this.stations.find(c => c.id == this.params.data.station_id);\r\n        //   this.form.get('station').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.versions.find(c => c.id == this.params.data.current_version_id);\r\n          this.form.get('currentVersion').setValue(toSelect);\r\n          this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n         // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  onChangeChargingModel(selectedValue){\r\n    const toSelect = this.chargingModels.find(c => c.id == selectedValue);\r\n    this.connector_data = toSelect.connector_data;\r\n    this.form.get('noOfGuns').setValue(toSelect.connector_data.length);\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n    \r\n      const params: any = {\r\n  \r\n        name :formValues.name, \r\n        serial_no :formValues.serialNo, \r\n        //batch_id :formValues.batch.id, \r\n        model_id :formValues.chargingModel.id, \r\n        station_id : !!formValues.station ? formValues.station : 0, \r\n        current_version_id :formValues.currentVersion.id, \r\n        no_of_guns :formValues.noOfGuns, \r\n        //address1 : !!formValues.address ? formValues.address : '', \r\n        Lat :!!formValues.lat ? formValues.lat : 0, \r\n        Lng : !!formValues.long ? formValues.long : 0, \r\n        OTA_Config :formValues.otaConfig, \r\n        Periodic_Check_Ref_Time : this.dateService.refineDate(formValues.periodicCheckRefTime) , \r\n        Periodicity_in_hours :formValues.periodicityInHours, \r\n        When_to_Upgrade :formValues.whenToUpgrade, \r\n        Upgrade_Specific_Time :this.datePipe.transform(formValues.upgradeSpecificTime, \"yyyy-MM-dd HH:mm:ss\"),\r\n        connector_data : this.connector_data,\r\n        is_available :this.isAvailable == true ? 1 : 0, \r\n        // address1 :formValues.addressLine1,\r\n        // address2 :formValues.addressLine2,\r\n        // PIN: formValues.pincode,\r\n        // landmark: formValues.landmark,\r\n        // city_id : formValues.city.id,\r\n        // state_id : formValues.state.id,\r\n        // country_id : formValues.country.id, \r\n        status : this.status == true ? 'Y' : 'N'\r\n        \r\n       \r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n      if (this.isEditMode){\r\n      this.chargerService.update(params).subscribe(\r\n        (data: any ) => {\r\n        \r\n          if(data.status){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(MessageConstant.dublicateCharger, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.chargerService.create(params).subscribe(\r\n        (data: any ) => {\r\n          \r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          \r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n  \r\n      // this.dialogRef.close(params);\r\n    }\r\n    return;\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    ;\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serialNo').setValue(params.data.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.data.no_of_guns); \r\n    this.form.get('lat').setValue(params.data.Lat); \r\n    this.form.get('long').setValue(params.data.Lng); \r\n    this.form.get('otaConfig').setValue(params.data.OTA_Config); \r\n    //this.form.get('periodicCheckRefTime').setValue(this.dateService.refineDate(params.data.Periodic_Check_Ref_Time)); \r\n    this.form.get('periodicCheckRefTime').setValue(params.data.Periodic_Check_Ref_Time);                     //this.datePipe.transform(formValues.periodicCheckRefTime, \"yyyy-MM-dd HH:mm:ss\") ,\r\n    this.form.get('periodicityInHours').setValue(params.data.Periodicity_in_hours); \r\n    this.form.get('whenToUpgrade').setValue(params.data.When_to_Upgrade); \r\n   // this.form.get('upgradeSpecificTime').setValue(this.datePipe.transform(params.data.Upgrade_Specific_Time, \"HH:mm\"));//(params.data.Upgrade_Specific_Time); \r\n   this.form.get('upgradeSpecificTime').setValue(params.data.Upgrade_Specific_Time);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.isAvailable = params.data.is_available == 1 ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  fillterOption(){\r\n    // this.filteredOptionsBatch = this.form.controls.batch.valueChanges\r\n    //   .pipe(\r\n    //     startWith(''),\r\n    //     map(value => typeof value === 'string' ? value : value.name),\r\n    //     map(name => name ? this._filterBatch(name) : this.batches)\r\n    //   );\r\n      this.filteredOptionsCharModel = this.form.controls.chargingModel.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharModels(name) : this.chargingModels)\r\n      );\r\n      this.filteredOptionsCurrVersion = this.form.controls.currentVersion.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCurrVersion(name) : this.versions)\r\n        );\r\n  //       this.countries = this.form.controls.country.valueChanges\r\n  //       .pipe(\r\n  //      startWith(''),\r\n  //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n  //      map(value => typeof value === 'string' ? value : value.name),\r\n  //      map(name => name ? this._filterCountry(name) : this.countries)\r\n  //    ); \r\n  //       this.states = this.form.controls.state.valueChanges\r\n  //       .pipe(\r\n  //      startWith(''),\r\n  //      //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n  //      map(value => typeof value === 'string' ? value : value.name),\r\n  //      map(name => name ? this._filterState(name) : this.states)\r\n  //    );\r\n    \r\n  // this.cities = this.form.controls.city.valueChanges\r\n  //          .pipe(\r\n  //         startWith(''),\r\n  //         //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n  //         map(value => typeof value === 'string' ? value : value.name),\r\n  //         map(name => name ? this._filterCity(name) : this.cities)\r\n  //       );\r\n  }\r\n  // displayBatch(item: any): string {\r\n  //   return item && item.name ? item.name : '';\r\n  // }\r\n  displayChargingModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCurrentVersion(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  // private _filterBatch(name: string): any[] {\r\n  //   const filterValue = name.toLowerCase();\r\n  //   return this.batches.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  // }\r\n  private _filterCharModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingModels.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCurrVersion(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.versions.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n    \r\n    \r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n  \r\n}\r\n\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Model Variant</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"chargingModel\" required id=\"chargerCreateCModel\"\r\n            [matAutocomplete]=\"chargingModelAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-autocomplete #chargingModelAuto=\"matAutocomplete\" [displayWith]=\"displayChargingModel\"\r\n            (optionSelected)=\"onChangeChargingModel($event.option.value.id)\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharModel | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"form.get('chargingModel').invalid\">Please select model variant </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Serial No</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"serialNo\" type=\"search\" maxlength=\"15\" required\r\n            autocomplete=\"off\" id=\"chargerCreateSerial\">\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('required')\">Please enter serial no</mat-error>\r\n          <mat-error *ngIf=\"form.get('serialNo').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Charger Display Id</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"name\" type=\"search\" required autocomplete=\"off\"\r\n            id=\"chargerCreateDisplayId\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter charger display id</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Current Version</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"currentVersion\" id=\"chargerCreateCVersion\"\r\n            [matAutocomplete]=\"currentVersionAuto\" type=\"search\" required autocomplete=\"off\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-autocomplete #currentVersionAuto=\"matAutocomplete\" [displayWith]=\"displayCurrentVersion\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCurrVersion | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"form.get('currentVersion').invalid\">Please select current version\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>OTA Config</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"otaConfig\" id=\"chargerCreateOTAConfig\" type=\"search\"\r\n            required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('otaConfig').invalid\">Please enter OTA config\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('otaConfig').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodic Check Ref Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"startDatePicker\" placeholder=\"\" formControlName=\"periodicCheckRefTime\"\r\n            [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\" readonly required>\r\n\r\n          <button mat-icon-button matSuffix type=\"button\" disabled\r\n            (click)=\"startDatePicker.open(); $event.stopPropagation();\">\r\n            <mat-icon>today</mat-icon>\r\n          </button>\r\n          <ngx-mat-datetime-picker #startDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n          <mat-error *ngIf=\"form.get('periodicCheckRefTime').invalid\">Please enter periodic check ref time\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Periodicity In Hours</mat-label>\r\n          <input matInput readonly placeholder=\"\" aria-label=\"Periodicity In Hours\" max=\"48\" id=\"periodicityInHoursmat\"\r\n            formControlName=\"periodicityInHours\" required autocomplete=\"off\" type=\"number\">\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('max')\">Maximum value is not greater then equal 48\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('periodicityInHours').hasError('min')\">Maximum value is not greater then equal 0\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>When To Upgrade</mat-label>\r\n          <input readonly matInput placeholder=\"\" formControlName=\"whenToUpgrade\" id=\"chargerCreateWhenToUpgrade\"\r\n            type=\"search\" required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('required')\">Please enter when to upgrade</mat-error>\r\n          <mat-error *ngIf=\"form.get('whenToUpgrade').hasError('pattern')\">Only character are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Upgrade Specific Time</mat-label>\r\n          <input matInput [ngxMatDatetimePicker]=\"upgradeDatePicker\" placeholder=\"\" readonly\r\n            formControlName=\"upgradeSpecificTime\" [disabled]=\"disabled\" readonly required>\r\n          <!--mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle-->\r\n          <button mat-icon-button matSuffix type=\"button\" disabled (click)=\"upgradeDatePicker.open(); $event.stopPropagation();\">\r\n            <mat-icon>today</mat-icon>\r\n          </button>\r\n          <ngx-mat-datetime-picker #upgradeDatePicker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n            [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n            [enableMeridian]=\"enableMeridian\">\r\n          </ngx-mat-datetime-picker>\r\n          <!-- <input matInput placeholder=\"\" aria-label=\"Editable dial\" required\r\n                [ngxTimepicker]=\"upgradeSpecificTime\"  [disabled]=\" (form.get('whenToUpgrade').value.value != 'SPECIFIC_TIME')? true:false\"  readonly formControlName=\"upgradeSpecificTime\"  [value]=\"'12:00'\" [format]=\"24\"> \r\n              <ngx-material-timepicker #upgradeSpecificTime  [enableKeyboardInput]=\"false\"></ngx-material-timepicker> -->\r\n\r\n          <mat-error *ngIf=\"form.get('upgradeSpecificTime').invalid\">Please enter upgrade specific time </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n            (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n            {{isAvailable ? 'Available' : 'Unavailable'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n                (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport class Charger {\r\n  id: string;\r\n  name: string;\r\n  serial_no: string;\r\n  batch_id: number;\r\n  station_id: number;\r\n  current_version_id: number;\r\n  no_of_guns: number;\r\n  model_name: string;\r\n  Address: string;\r\n  Lat: number;\r\n  Lng: number;\r\n  OTA_Config: string;\r\n  Periodic_Check_Ref_Time: string;\r\n  Periodicity_in_hours: number;\r\n  When_to_Upgrade: string;\r\n  Upgrade_Specific_Time: number;\r\n  is_available: number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  availableString: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Charger;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['serial_no', 'name', 'model_name',\r\n    'version_name', 'status', 'action'];\r\n  head = [['Serial Number', 'Name', 'Model Name', 'Version Name', 'Status']]\r\n  dataSource: MatTableDataSource<Charger>;\r\n\r\n  chargers: Charger[];\r\n  //messageConstant = MessageConstant;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  serialSearch = false;\r\n  displaySearch = false;\r\n  modelVarientSearch = false;\r\n  currentVersionSearch = false;\r\n  noGunsSearch = false;\r\n  availabbleSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPlantChargers();\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new Charger();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getPlantChargers() {\r\n    this.chargerService.getPlantChargers().subscribe(\r\n      (data: any) => {\r\n        if (data.length > 0) {\r\n          this.chargers = data;\r\n          for (var i = 0; i < this.chargers.length; i++) {\r\n            if (this.chargers[i].status == 'N') {\r\n              this.chargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.chargers[i].statusString = 'Active';\r\n            }\r\n            if (this.chargers[i].is_available = 0) {\r\n              this.chargers[i].availableString = \"No\"\r\n            } else {\r\n              this.chargers[i].availableString = \"Yes\"\r\n            }\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.chargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargerService.delete(id).subscribe(\r\n          (data: any) => {\r\n            this.getPlantChargers();\r\n            this.cdr.detectChanges();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getPlantChargers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  //  convertToYesNo(row){\r\n  //       var rtString = 'No';\r\n  //       if(row.is_available == 0){\r\n  //         rtString = 'No';\r\n\r\n  //       }else{\r\n  //         rtString = 'Yes';\r\n\r\n  //       }\r\n  //       row.is_available_string = rtString;\r\n  //       //row.is_available == 0 ? 'No' : 'Yes';\r\n  //       return rtString;\r\n  //  }\r\n  changeVisibility(visibleOption, ev) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;e\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'serialSearch') {\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'displaySearch') {\r\n      this.displaySearch = !this.displaySearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if (visibleOption == 'modelVarientSearch') {\r\n      this.modelVarientSearch = !this.modelVarientSearch;\r\n      this.filterEntity.model_name = \"\";\r\n    }\r\n    if (visibleOption == 'currentVersionSearch') {\r\n      this.currentVersionSearch = !this.currentVersionSearch;\r\n      this.filterEntity.current_version_id = null;\r\n    }\r\n    if (visibleOption == 'noGunsSearch') {\r\n      this.noGunsSearch = !this.noGunsSearch;\r\n      this.filterEntity.no_of_guns = null;\r\n    }\r\n    if (visibleOption == 'availabbleSearch') {\r\n      this.availabbleSearch = !this.availabbleSearch;\r\n      this.filterEntity.availableString = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n  tableExport() {\r\n    // const tab = document.getElementById('mapTable');\r\n    // const ws: XLSX.WorkSheet=XLSX.utils.table_to_sheet(tab);//converts a DOM TABLE element to a worksheet\r\n    // const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    // XLSX.utils.book_append_sheet(wb, ws, 'Mapped Charger');\r\n\r\n    // /* save to file */\r\n    // XLSX.writeFile(wb, 'Mapped Charger.xlsx');\r\n    //this.preloader.open();\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Serial No': chargerModel.serial_no, 'Charger Display Id': chargerModel.name, 'Model Varitent': chargerModel.model_name,\r\n        'Current Version': chargerModel.current_version_id, 'No of Guns ': chargerModel.no_of_guns,\r\n        'Available': chargerModel.availableString, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Chargers.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n\r\n\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getPlantChargers();\r\n    });\r\n  }\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n\r\n      var data = [chargerModel.serial_no, chargerModel.name, chargerModel.model_name, chargerModel.current_version_id, chargerModel.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage( img, 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Plant Charger Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Plant charger report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n\r\n\r\n\r\n    return doc;\r\n\r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!displaySearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Display\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('displaySearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"displaySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Display \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('displaySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelVarientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Varitent\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelVarientSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelVarientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Model Variant\" [(ngModel)]=\"filterEntity.model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelVarientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"version_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!currentVersionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Current\r\n                            Version &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('currentVersionSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"currentVersionSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Current Version\" [(ngModel)]=\"filterEntity.current_version_id\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('currentVersionSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.version_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <!-- Row shown when there is no matching data. -->\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"]}