{"version":3,"sources":["./src/app/main/asset/rfid-management/rfid/rfid-crud/rfid-crud.component.ts","./src/app/main/asset/rfid-management/rfid/rfid-crud/rfid-crud.component.html","./src/app/main/asset/rfid-management/rfid/list/list.component.ts","./src/app/main/asset/rfid-management/rfid/list/list.component.html","./src/app/main/asset/rfid-management/rfid/action-dialog/action-dialog.component.ts","./src/app/main/asset/rfid-management/rfid/action-dialog/action-dialog.component.html","./src/app/shared/services/rfid/rfid.service.ts","./src/app/main/asset/rfid-management/rfid/rfid-crud/routes.ts","./src/app/main/asset/rfid-management/rfid/rfid.module.ts","./src/app/main/asset/rfid-management/rfid/create/create.component.ts","./src/app/main/asset/rfid-management/rfid/create/create.component.html","./src/app/main/asset/rfid-management/rfid/view-dialog/view-dialog.component.ts","./src/app/main/asset/rfid-management/rfid/view-dialog/view-dialog.component.html","./src/app/main/asset/rfid-management/rfid/rfid-routing.module.ts"],"names":[],"mappings":"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","file":"rfid-rfid-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\n\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { UtilityService } from \"app/shared/services/utility/utility.service\";\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n    selector: \"app-rfid-crud\",\r\n    templateUrl: \"./rfid-crud.component.html\",\r\n    styleUrls: [\"./rfid-crud.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class RfidCrudComponent implements OnInit {\r\n    tabLinks = [\r\n        // { label: 'RFID', link: 'list' },\r\n        // { label: 'Add New', link: 'create' }\r\n    ];\r\n    menuArray: any;\r\n    localStorage: any;\r\n    objectData: any;\r\n    objectChildData: any;\r\n    tempLinks = [];\r\n    childData: any;\r\n    constructor(\r\n        private router: Router,\r\n        private cdr: ChangeDetectorRef,\r\n        private _utilityService: UtilityService\r\n    ) {}\r\n    ngAfterViewInit() {\r\n        this._utilityService.activeMenuItems$.subscribe((menuItemSelecte) => {\r\n            this.menuArray = menuItemSelecte;\r\n            if (\r\n                this.menuArray == null ||\r\n                this.menuArray == undefined ||\r\n                this.menuArray.title == null ||\r\n                this.menuArray.title == undefined\r\n            ) {\r\n                this.menuArray = JSON.parse(\r\n                    localStorage.getItem(\"activeMenuItems\")\r\n                );\r\n            }\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        let nav_list = this.localStorage.nav_list_with_tab;\r\n        nav_list.filter((x) => {\r\n            if (x.id === \"assetManagement\") {\r\n                this.objectData = x;\r\n                if (\r\n                    this.objectData.children != undefined &&\r\n                    this.objectData.children != null\r\n                ) {\r\n                    this.objectData.children.filter((y) => {\r\n                        if (y.id === \"rfidManagement\") {\r\n                            this.objectChildData = y;\r\n                            if (\r\n                                this.objectChildData.children != undefined &&\r\n                                this.objectChildData.children != null\r\n                            ) {\r\n                                this.objectChildData.children.filter((z) => {\r\n                                    this.childData = z;\r\n                                    if (z.id === \"rfid\") {\r\n                                        let isDefaultRoutePermeted = false;\r\n                                        if (\r\n                                            this.childData.children !=\r\n                                                undefined &&\r\n                                            this.childData.children != null\r\n                                        ) {\r\n                                            this.childData.children.filter(\r\n                                                (t) => {\r\n                                                    if (t.id === \"rfid\") {\r\n                                                        isDefaultRoutePermeted =\r\n                                                            true;\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"RFID\",\r\n                                                            link: \"list\",\r\n                                                        });\r\n                                                    }\r\n                                                    if (t.id === \"addNew\") {\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"Add New\",\r\n                                                            link: \"create\",\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                        }\r\n\r\n                                        this.tabLinks = this.tempLinks;\r\n                                        if (!isDefaultRoutePermeted) {\r\n                                            this.router.navigate([\r\n                                                \"/assetManagement/rfidManagement/rfid/crud/\" +\r\n                                                    this.tempLinks[0].link,\r\n                                            ]);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: \"sunny-routed-content\",\r\n    template: \"Having a lot of light from the sun.\",\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"rainy-routed-content\",\r\n    template: \"A rainy period of time is one when it rains a lot\",\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"foggy-routed-content\",\r\n    template: \"If the weather is foggy, there is fog\",\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ViewDialogComponent } from \"../view-dialog/view-dialog.component\";\r\nexport class RFID {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    rf_id_no: string;\r\n    expiry_date: string;\r\n    status: string;\r\n    created_date: string;\r\n    createdby: number;\r\n    modify_date: string;\r\n    modifyby: number;\r\n    statusString: string;\r\n    dateConverted: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n    selector: \"app-list\",\r\n    templateUrl: \"./list.component.html\",\r\n    styleUrls: [\"./list.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: RFID;\r\n    filterType: MatTableFilter;\r\n    displayedColumns: string[] = [\r\n        \"rf_id_no\",\r\n        \"expiry_date\",\r\n        \"status\",\r\n        \"action\",\r\n    ];\r\n    head = [[\"RFID Number\", \"Expiry Date\", \"Name\", \"Status\"]];\r\n    dataSource: MatTableDataSource<RFID>;\r\n    localStorage: any;\r\n    rfid: RFID[];\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    rfidSearch = false;\r\n    expirySearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    constructor(\r\n        private rfidService: RfidService,\r\n        public dialog: MatDialog,\r\n        private datePipe: DatePipe,\r\n        private snackBar: MatSnackBar\r\n    ) {\r\n        // Create 100 users\r\n        // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n        // Assign the data to the data source for the table to render\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        this.getRFids();\r\n        this.filterEntity = new RFID();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    getRFids() {\r\n        this.rfidService.getAllRfid().subscribe(\r\n            (data: any) => {\r\n                if (data != null) {\r\n                    this.rfid = data;\r\n                    for (var i = 0; i < this.rfid.length; i++) {\r\n                        this.rfid[i].dateConverted = this.datePipe.transform(\r\n                            this.rfid[i].expiry_date,\r\n                            \"dd/MM/yyyy\"\r\n                        );\r\n                        if (this.rfid[i].status == \"N\") {\r\n                            this.rfid[i].statusString = \"Inactive\";\r\n                        } else {\r\n                            this.rfid[i].statusString = \"Active\";\r\n                        }\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(this.rfid);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.snackBar.open(\r\n                        MessageConstant.NoRecordFoundMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 3000 }\r\n                    );\r\n\r\n                    return;\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    delete(id) {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: true,\r\n        });\r\n\r\n        //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe((result) => {\r\n            if (result) {\r\n                this.rfidService.delete(id, this.localStorage.userId).subscribe(\r\n                    (data: any) => {\r\n                        this.getRFids();\r\n                        this.snackBar.open(\"Deleted successfully\", \"Dismiss\", {\r\n                            duration: 2000,\r\n                        });\r\n                    },\r\n                    (err) => {}\r\n                );\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"800px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            // this.moderate(result);\r\n            this.getRFids();\r\n        });\r\n    }\r\n    viewDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n\r\n        const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n            width: \"800px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            // this.moderate(result);\r\n            this.getRFids();\r\n        });\r\n    }\r\n    changeVisibility(visibleOption, ev) {\r\n        // visibleOption = !visibleOption;\r\n        //nameSearch = false;\r\n        //descSearch = false;\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"rfidSearch\") {\r\n            this.rfidSearch = !this.rfidSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"expirySearch\") {\r\n            this.expirySearch = !this.expirySearch;\r\n            this.filterEntity.dateConverted = \"\";\r\n        }\r\n        if (visibleOption == \"statusSearch\") {\r\n            this.statusSearch = !this.statusSearch;\r\n            this.filterEntity.statusString = \"\";\r\n        }\r\n    }\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chargerModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"RFID Number \": chargerModel.rf_id_no,\r\n                \"Expiry Date\": chargerModel.dateConverted,\r\n                Status: chargerModel.statusString,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"RFID List\");\r\n        XLSX.writeFile(workBook, \"RFID List.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        //this.preloader.open();\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chrger = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                chrger.rf_id_no,\r\n                chrger.dateConverted,\r\n                chrger.name,\r\n                chrger.statusString,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"RFID List Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n        //this.preloader.close();\r\n        // below line for Download PDF document\r\n        doc.save(\"RFID List report.pdf\");\r\n    }\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\"\r\n>\r\n<button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n    <mat-icon>sim_card_download</mat-icon> \r\n  </button>&nbsp;&nbsp;\r\n  <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n    <mat-icon>picture_as_pdf</mat-icon> \r\n  </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\"  class=\"page-layout simple fullwidth\"  style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n      \r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                   [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!rfidSearch\"  class=\"custom_font_size\" style=\"display: flex;\">RFID Number &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"rfidSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" RFID Number \"\r\n                                   [(ngModel)]=\"filterEntity.rf_id_no\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.rf_id_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"expiry_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!expirySearch\"  class=\"custom_font_size\" style=\"display: flex;\">Expiry Date &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('expirySearch',$event)\">search</mat-icon> </span>\r\n                       \r\n                        <mat-form-field *ngIf=\"expirySearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Expiry Date \"\r\n                                   [(ngModel)]=\"filterEntity.dateConverted\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('expirySearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConverted }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field  *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" status \"\r\n                                   [(ngModel)]=\"filterEntity.statusString\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"\r\n                        [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef  >\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                                <mat-icon color=\"primary\" matTooltip=\"View\"\r\n                                (click)=\"viewDialog('VIEW',element)\"\r\n                                style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\"\r\n                                  (click)=\"openDialog('EDIT',element)\"\r\n                                  style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\"\r\n                                  (click)=\"delete(element.id)\"\r\n                                  style=\"cursor:pointer\">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                \r\n               \r\n                <tr mat-header-row  *matHeaderRowDef=\"displayedColumns\">\r\n                </tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import {\r\n    Component,\r\n    OnInit,\r\n    Inject,\r\n    ElementRef,\r\n    ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MasterService } from \"app/shared/services/master/master.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { VehicleService } from \"app/shared/services/master/vehicle/vehicle.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MtxDialogData } from \"@ng-matero/extensions\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\n@Component({\r\n    selector: \"app-action-dialog\",\r\n    templateUrl: \"./action-dialog.component.html\",\r\n    styleUrls: [\"./action-dialog.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n    params: any;\r\n    isEditMode = false;\r\n    form: FormGroup;\r\n    localStorage: any;\r\n    status = false;\r\n\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private rfidService: RfidService,\r\n        private snackBar: MatSnackBar,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.params = this.data;\r\n\r\n        this.isEditMode = this.params.action == \"CREATE\" ? false : true;\r\n\r\n        this.form = this.fb.group({\r\n            // name: ['', [Validators.required]],\r\n            //description : ['', [Validators.required]] ,\r\n            rfid_no: [\r\n                \"\",\r\n                [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)],\r\n            ],\r\n            rfid_expDate: [\"\", [Validators.required]],\r\n        });\r\n\r\n        if (this.isEditMode) {\r\n            this.assignValues(this.params);\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    closeActionPanel() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    onYesClick() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            const params: any = {\r\n                name: !!formValues.name ? formValues.name : \"\",\r\n                //description :formValues.description,\r\n                rfid_no: formValues.rfid_no,\r\n                expiry_date: this.datePipe.transform(\r\n                    formValues.rfid_expDate,\r\n                    \"yyyy-MM-dd\"\r\n                ),\r\n                created_date: this.datePipe.transform(\r\n                    formValues.rfid_expDate,\r\n                    \"yyyy-MM-dd\"\r\n                ),\r\n                created_by: this.localStorage.userId,\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n                // tslint:disable-next-line: semicolon\r\n            };\r\n            // tslint:disable-next-line: no-//\r\n\r\n            if (this.isEditMode) {\r\n                (params.id = this.params.data.id),\r\n                    (params.modify_by = this.localStorage.userId);\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n                this.rfidService.update(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(\r\n                            \"Record updated successfully!\",\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(\"Please try again\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                );\r\n            } else {\r\n                this.rfidService.create(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(\"Rfid created!\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(\"Please try again\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n\r\n            this.dialogRef.close(params);\r\n        }\r\n        return;\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get(\"email\").hasError(\"required\")\r\n            ? \"You must enter a value\"\r\n            : form.get(\"email\").hasError(\"email\")\r\n            ? \"Not a valid email\"\r\n            : \"\";\r\n    }\r\n\r\n    assignValues(params) {\r\n        // this.form.get('name').setValue(params.data.name);\r\n        //this.form.get('description').setValue(params.data.description);\r\n        this.form.get(\"rfid_no\").setValue(params.data.rf_id_no);\r\n        this.form.get(\"rfid_expDate\").setValue(params.data.expiry_date);\r\n\r\n        this.status = params.data.status == \"Y\" ? true : false;\r\n    }\r\n\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n}\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">RFID</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n      fxFlex=\"1 0 auto\" name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>RFID Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"rfid_no\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter RFID number\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('rfid_no').hasError('required')\">Please enter RFID number\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('rfid_no').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Expiry Date</mat-label>\r\n          <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n            </mat-icon>\r\n            <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </div>\r\n          <!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n          <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <div fxFlex=\"50\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard]},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { RfidCrudComponent } from './rfid-crud/rfid-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RfidRoutingModule } from './rfid-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[RfidCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, RfidRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RfidModule{}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup;\r\n  brands: any;\r\n  models: any;\r\n  chargerTypes: any;\r\n  vehicleTypes: any;\r\n  localStorage: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  constructor(private fb: FormBuilder, private masterService: MasterService,\r\n    private rfidService: RfidService, private snackBar: MatSnackBar,\r\n    private router: Router, private datePipe: DatePipe) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      // rf_name: ['', [Validators.required]],\r\n      // rfid_description : ['', [Validators.required]] ,\r\n      rfid_number: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      rfid_expDate: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    } else {\r\n      let formValues = this.form.value;\r\n      let params = {\r\n        name: !!formValues.rf_name ? formValues.rf_name : '',\r\n        // description :formValues.rfid_description, \r\n        rfid_no: formValues.rfid_number,\r\n        expiry_date: this.datePipe.transform(formValues.rfid_expDate, \"yyyy-MM-dd\"),\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_date: this.datePipe.transform(formValues.rfid_expDate, \"yyyy-MM-dd\"),\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      this.rfidService.create(params).subscribe(\r\n        (data: any) => {\r\n\r\n          this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/assetManagement/rfidManagement/rfid/crud/list']);\r\n\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>RFID Number</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"rfid_number\" autocomplete=\"off\" maxlength=\"100\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter RFID number\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('rfid_number').hasError('required')\">Please enter RFID number\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('rfid_number').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Expiry Date</mat-label>\r\n        <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n          </mat-icon>\r\n          <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </div>\r\n        <!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n        <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"50\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/rfidManagement/rfid/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder,private rfidService: RfidService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      // name: ['', [Validators.required]],\r\n      //description : ['', [Validators.required]] ,\r\n      rfid_no: [''],\r\n      rfid_expDate : ['']   \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if (this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n  \r\n        name : !!formValues.name ? formValues.name : '', \r\n        //description :formValues.description, \r\n        rfid_no :formValues.rfid_no,\r\n        expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n          created_by : this.localStorage.userId,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.rfidService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.rfidService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n  \r\n      this.dialogRef.close(params);\r\n\r\n    }\r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    // this.form.get('name').setValue(params.data.name);\r\n    //this.form.get('description').setValue(params.data.description);\r\n    this.form.get('rfid_no').setValue(params.data.rf_id_no);\r\n    this.form.get('rfid_expDate').setValue(params.data.expiry_date);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">RFID</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n            fxFlex=\"1 0 auto\" name=\"form\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>RFID Number</mat-label>\r\n                    <input readonly matInput placeholder=\"\" formControlName=\"rfid_no\" autocomplete=\"off\">\r\n\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Expiry Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n                    <mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <div fxFlex=\"50\">\r\n                    <mat-slide-toggle disabled class=\"example-margin\" disable color=\"primary\" [checked]=\"status\"\r\n                        (change)=\"updateStatus($event)\" #toggleElement>\r\n                        {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n\r\n                <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RfidCrudComponent } from './rfid-crud/rfid-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './rfid-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RfidCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RfidRoutingModule{}"],"sourceRoot":"webpack:///"}