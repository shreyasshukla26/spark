{"version":3,"sources":["./src/app/main/asset/alarm-configuration/create/create.component.ts","./src/app/main/asset/alarm-configuration/create/create.component.html","./src/app/main/asset/alarm-configuration/alarm-configuration-crud/routes.ts","./src/app/main/asset/alarm-configuration/view-dialog/view-dialog.component.ts","./src/app/main/asset/alarm-configuration/view-dialog/view-dialog.component.html","./src/app/main/asset/alarm-configuration/alarm-configuration.module.ts","./src/app/main/asset/alarm-configuration/alarm-configuration-routing.module.ts","./src/app/main/asset/alarm-configuration/alarm-configuration-crud/alarm-configuration-crud.component.ts","./src/app/main/asset/alarm-configuration/alarm-configuration-crud/alarm-configuration-crud.component.html","./src/app/main/asset/alarm-configuration/list/list.component.ts","./src/app/main/asset/alarm-configuration/list/list.component.html","./src/app/main/asset/alarm-configuration/action-dialog/action-dialog.component.ts","./src/app/main/asset/alarm-configuration/action-dialog/action-dialog.component.html"],"names":[],"mappings":"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","file":"alarm-configuration-alarm-configuration-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\n//import { MasterService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface AlarmModel {\r\n  model:any;\r\n  client:any;\r\n  mobile : number;\r\n  email : any;\r\n  alarm:any;\r\n  sms: any;\r\n  creativity:any;\r\n\r\n}\r\nconst ELEMENT_DATA : AlarmModel[] =[\r\n  { alarm: 'Alarm1', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm2', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm3', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm4', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm5', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm6', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm7', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm8', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n  { alarm: 'Alarm9', sms: 1.0079, email: 'H', creativity: 'kjhhb',model:'model',client:'c1',mobile:54555},\r\n\r\n];\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  \r\n  displayedColumns: string[] = ['alarm','sms', 'email','creativity'];\r\n   dataSource = new MatTableDataSource<AlarmModel>(ELEMENT_DATA);\r\n\r\n  form: FormGroup;\r\n  chargerModelTypes:any;\r\n  clients:any;\r\n  mobile:any;\r\n  email:any;\r\n  localStorage : any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  filteredOptionsModel: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  \r\n  batteryBackup: boolean;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, \r\n              private chargerTypeService :ChargerTypeService, \r\n              private masterService: MasterService,\r\n              private snackBar: MatSnackBar,private router : Router,\r\n              private clientService:ClientService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.form = this.fb.group({\r\n      model: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      mobile: ['', [ Validators.pattern(/[0-9]/)]],\r\n      email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n    });\r\n    this.getChargingModel();\r\n    this.getClient();\r\n    //this.getManufacturers();\r\n    //this.getChargerModelTypes();\r\n    //this.getCommunicationProtocols(); \r\n \r\n  \r\n   \r\n  }\r\n\r\n \r\n  /*onSubmit(){\r\n    //;\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      \r\n      let params : AlarmModel = {\r\n        model : formValues.model,\r\n        client : formValues.client ,\r\n        mobile : formValues.mobile ,\r\n        email : formValues.email ,\r\n      }\r\n  \r\n      this.chargingModelService.create(params).subscribe(\r\n        (data:any )=>{ \r\n          this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/assetManagement/alarmConfiguation/crud/list']);\r\n  \r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else{\r\n      return;\r\n    }\r\n  \r\n  }*/\r\n\r\n  abc(){\r\n    \r\n    this.form;\r\n  }\r\n  getClient(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        this.clients = data;\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClients(name) : this.clients)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getChargingModel(){\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerModelTypes = data;\r\n        this.filteredOptionsModel = this.form.controls.chargerModelType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModel(name) : this.chargerModelTypes)\r\n        );\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  \r\n\r\n\r\n   displayModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterModel(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClients(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" >\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Model</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"model\" autocomplete=\"off\" required\r\n\t\t\t\t\t[matAutocomplete]=\"modelAuto\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #modelAuto=\"matAutocomplete\" [displayWith]=\"displayModel\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsModel | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model\">model_training</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('model').invalid\">Please select Model</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" required\r\n\t\t\t\t\t[matAutocomplete]=\"clientAuto\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('client').invalid\">Please select Client</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"mobile\" maxlength=\"10\" autocomplete=\"off\">\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"email\" maxlength=\"50\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter Email</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n\t\t\t<div class=\"content\" style=\"min-width: auto;\">\r\n\t\t\r\n\t\t\t\t<div class=\"mat-elevation-z8\">\r\n\t\t\t\t\t<table mat-table  [dataSource]=\"dataSource\" \r\n\t\t\t\t\t\tmatSort class=\"mat-elevation-z8\">\r\n\t\t\t\t\t\t<ng-container matColumnDef=\"alarm\">\r\n\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef >Alarm</th>\r\n\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let row\"> {{row.alarm}} </td>\r\n\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t<ng-container matColumnDef=\"sms\">\r\n\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef >SMS</th>\r\n\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let row\"><mat-checkbox  ></mat-checkbox> </td>\r\n\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t<ng-container matColumnDef=\"email\">\r\n\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef >Email</th>\r\n\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let row\"><mat-checkbox  ></mat-checkbox>  </td>\r\n\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t<ng-container matColumnDef=\"creativity\">\r\n\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef>creativity</th>\r\n\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let row\"><mat-checkbox  ></mat-checkbox></td>\r\n\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\t\t\t\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n\t\t\t\trouterLink=\"/assetManagement/alarmConfiguation/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent},\r\n  { path : 'list', component : ListComponent},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {  FormControl, FormArray } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface ChargingModel {\r\n  id ?: number;\r\n  client_id ?: number;\r\n  charger_type_id : number;\r\n  client_name ?: string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name ?: string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name ?: string;\r\n  battery_backup : string;\r\n  code : string;\r\n  name : string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name ?: string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  connector_data : ChargingModelConnectorMap[];\r\n  status : string ;\r\n  created_date ?: string ;\r\n  created_by ?: number;\r\n  modify_date ?: string ;\r\n  modify_by ?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap{\r\n  id : number;\r\n  model_id : number;\r\n  connector_type_id : number;\r\n  io_type_id : number;\r\n  current_type_id : number;\r\n  voltage : number;\r\n  phase : number;\r\n  max_amp : number;\r\n  power : number;\r\n  frequency : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  \r\n  chargerTypes :any;\r\n  manufacturers:any;\r\n  chargerModelTypes:any;\r\n  communicationProtocols:any;\r\n  connectorTypes:any;\r\n  ioTypes:any;\r\n  currentTypes:any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  filteredOptionsCharType: Observable<any[]>;\r\n  filteredOptionsManufacturer: Observable<any[]>;\r\n  filteredOptionsCharModelType : Observable<any[]>;\r\n  filteredOptionsCommunicationProto: Observable<any[]>;\r\n  communicationModeData: string[] = ['LAN', 'SIM', 'WIFI'];\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerTypeService: ChargerTypeService, \r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<ViewDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private chargingModelService : ChargingModelService, \r\n     private masterService: MasterService,\r\n    private router : Router) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      chargerType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      manufacturer: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      chargerModelType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      batteryBackup: [{value:false},  [Validators.required]],\r\n      code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      communicationProtocol: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      communicationMode: ['', [Validators.required]],\r\n      cardReaderType: ['', [Validators.required]],\r\n      noOfConnectors: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n      connectorForm : this.fb.array([this.createConnectorFG()]) ,\r\n    });\r\n\r\n    this.getChargetTypes();\r\n    this.getManufacturers();\r\n    this.getChargerModelTypes();\r\n    this.getCommunicationProtocols();\r\n    this.getConnectorTypes();\r\n    this.getIOTypes();\r\n    this.getCurrentTypes();   \r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n   this.filteredOptions();\r\n  }\r\n\r\n  private createConnectorFG(): FormGroup {\r\n    return new FormGroup({\r\n      connectorType: new FormControl(''),\r\n      ioType: new FormControl(''),\r\n      currentType: new FormControl('',),\r\n      voltage: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      phase: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      maxAmp: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      power: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      frequency: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)])\r\n    });\r\n  }\r\n\r\n  public addConnectorFG() {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    connectorForm.push(this.createConnectorFG());\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  public removeConnectorFG(i: number) {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    if (connectorForm.length > 1) {\r\n      connectorForm.removeAt(i)\r\n    } else {\r\n      connectorForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  getChargetTypes(){\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerTypes = data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerTypes.find(c => c.id == this.params.data.charger_type_id);\r\n          this.form.get('chargerType').setValue(toSelect);\r\n         this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n            //tap(() => this.form.controls.chargerType.setValue(toSelect)),\r\n           //tap(() => this.form.get('chargerType').setValue({name:toSelect.name, id:toSelect.id})),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n         \r\n         );\r\n        }\r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getManufacturers(){\r\n    this.masterService.getManufacturers().subscribe(\r\n      (data:any)=>{\r\n        this.manufacturers = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n          this.form.get('manufacturer').setValue(toSelect);\r\n          this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n           // tap(() => this.form.controls.manufacturer.setValue(toSelect)),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n          );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getChargerModelTypes(){\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerModelTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerModelTypes.find(c => c.id == this.params.data.charger_model_type_id);\r\n         this.form.get('chargerModelType').setValue(toSelect);\r\n         this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n           //tap(() => this.form.controls.chargerModelType.setValue(toSelect)),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n         );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCommunicationProtocols(){\r\n    this.masterService.getCommunicationProtocols().subscribe(\r\n      (data:any)=>{\r\n        this.communicationProtocols = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.communicationProtocols.find(c => c.id == this.params.data.communication_protocol_id);\r\n          this.form.get('communicationProtocol').setValue(toSelect);\r\n          this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.communicationProtocol.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n        );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getIOTypes(){\r\n    this.masterService.getIOTypes().subscribe(\r\n      (data:any)=>{\r\n        this.ioTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCurrentTypes(){\r\n    this.masterService.getCurrentTypes().subscribe(\r\n      (data:any)=>{\r\n        this.currentTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let connectors=[] ;\r\n  \r\n      formValues.connectorForm.forEach(item => {\r\n        connectors.push({\r\n          connector_type_id : item.connectorType ,\r\n          io_type_id : item.ioType,\r\n          current_type_id : item.currentType,\r\n          voltage : item.voltage ,\r\n          phase : item.phase,\r\n          max_amp : item.maxAmp,\r\n          power : item.power,\r\n          frequency : item.frequency,\r\n          status : 'Y',\r\n          created_by : this.localStorage.userId \r\n        })\r\n      });\r\n  \r\n      \r\n      let params : ChargingModel = {\r\n        charger_type_id : formValues.chargerType.id,\r\n        manufacturer_id : formValues.manufacturer.id ,\r\n        charger_model_type_id : formValues.chargerModelType.id ,\r\n        battery_backup  : this.batteryBackup == true ? 'Y' : 'N',\r\n        code : formValues.code ,\r\n        name : formValues.name ,\r\n        description : formValues.description ,\r\n        communication_protocol_id : formValues.communicationProtocol.id ,\r\n        communication_mode : formValues.communicationMode ,\r\n        card_reader_type : formValues.cardReaderType ,\r\n        no_of_connectors : formValues.connectorForm.length ,\r\n        connector_data : connectors,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n  \r\n      if (this.isEditMode){\r\n        params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n      } else{\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      \r\n  \r\n      if (this.isEditMode){\r\n        this.chargingModelService.update(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }else{\r\n        this.chargingModelService.create(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n        this.dialogRef.close(params);\r\n    }\r\n   \r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    var temp = new Array();\r\n    temp = this.params.data.communication_mode.split(\",\");\r\n\r\n    this.form.get('communicationMode').setValue(temp);\r\n    this.form.get('cardReaderType').setValue(params.data.card_reader_type);\r\n    this.form.get('noOfConnectors').setValue(params.data.no_of_connectors);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.batteryBackup = params.data.battery_backup == 'Y' ? true : false;\r\n\r\n    this.assignValuesFG(params.data.connector_data);\r\n  }\r\n\r\n  assignValuesFG(data){\r\n\r\n    let connector_data = [];\r\n\r\n    data.forEach(connector => {\r\n      this.addConnectorFG();\r\n      connector_data.push({ id : connector.id ,\r\n        model_id : connector.model_id ,\r\n        connectorType : connector.connector_type_id ,\r\n        ioType : connector.io_type_id ,\r\n        currentType : connector.current_type_id ,\r\n        voltage : connector.voltage ,\r\n        phase : connector.phase ,\r\n        maxAmp : connector.max_amp ,\r\n        power : connector.power ,\r\n        frequency : connector.frequency ,\r\n        status : connector.status ,\r\n        created_date : connector.created_date ,\r\n        created_by : connector.created_by ,\r\n        modify_date : connector.modify_date ,\r\n        modify_by : connector.modify_by })\r\n    });\r\n    \r\n   this.removeConnectorFG(data.length);\r\n\r\n   const connectorForm = this.form.get('connectorForm') as FormArray;\r\n\r\n   connectorForm.patchValue(connector_data);\r\n\r\n\r\n  }\r\n\r\n  clkBatteryBackup(event){\r\n    this.batteryBackup = event.checked;\r\n    this.ref.checked = this.batteryBackup;\r\n  }\r\n  clkRfidCardReader(event){\r\n    this.rfidCardReader = event.checked;\r\n    this.rfid.checked = this.rfidCardReader;\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  \r\n  filteredOptions(){\r\n    this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n    );\r\n    this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n     \r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n    );\r\n    this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n    );\r\n    this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n      );\r\n  }\r\n  displayCharType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayManfacturer(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharModelType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCommunicationProto(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }  \r\n  private _filterCharType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterManfacturer(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.manufacturers.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModelType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCommunicationProtocol(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.communicationProtocols.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Variants</mat-toolbar>\r\n\t<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\" >\r\n  <form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n     fxFlex=\"1 0 auto\" name=\"form\" >\r\n     <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"chargerType\" autocomplete=\"off\" required  [matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput  readonly formControlName=\"manufacturer\"  autocomplete=\"off\" required [matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\"  [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t<input type=\"text\" readonly  matInput formControlName=\"chargerModelType\" autocomplete=\"off\"  required  [matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"code\" maxlength=\"20\"\r\n\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special Character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"50\"\r\n\t\t\t\t\trequired autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\"  readonly formControlName=\"description\" maxlength=\"200\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special Character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"communicationProtocol\"  required autocomplete=\"off\"  [matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"  [displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t<mat-select formControlName=\"communicationMode\" disabled  multiple>\r\n\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">{{communication}}</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"cardReaderType\"\r\n\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cardReaderType').invalid\">Please enter card reader type\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>No. Of Connectors</mat-label>\r\n\t\t\t\t<input matInput numbersOnly readonly placeholder=\"\" formControlName=\"noOfConnectors\"\r\n\t\t\t\t\trequired  autocomplete=\"off\" >\r\n\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter no. of connectors\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div  fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t<mat-slide-toggle disabled class=\"example-margin sm-txt mt-10\" color=\"primary\" \r\n\t\t\t\t[checked]=\"batteryBackup\" (change)=\"clkBatteryBackup($event)\" #toggleElement>\r\n\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"17\" class=\"pr-4\">\r\n        \t\t<mat-label class=\"sm-txt mr-20\">RFID card reader</mat-label>\r\n        \t\t\t<mat-slide-toggle disabled class=\"example-margin sm-txt mt-10\" color=\"primary\" \r\n         \t\t\t [checked]=\"rfidCardReader\" (change)=\"clkRfidCardReader($event)\" #rfidToggleElement>\r\n          \t\t\t\t{{rfidCardReader ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n      <div fxFlex=\"18\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n        <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\"\r\n        [checked]=\"status\" (change)=\"updateStatus($event)\" #activeElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<mat-card style=\"box-shadow: none!important;\">\r\n      <div formArrayName=\"connectorForm\">\r\n\t\t\t\t<div   fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\" [formGroupName]=\"i\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t</div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select disabled  formControlName=\"connectorType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select disabled formControlName=\"ioType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select  disabled formControlName=\"currentType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n              </mat-form-field >\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly formControlName=\"voltage\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n            <mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n              <mat-label>Phase</mat-label>\r\n                    <input matInput readonly placeholder=\"\" formControlName=\"phase\"\r\n                       autocomplete=\"off\">\r\n                    <mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n              </mat-form-field>\r\n\t\t\t\t\t</div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Max. Amp.(A)</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input  readonly matInput placeholder=\"\" formControlName=\"maxAmp\"\r\n\t\t\t\t\t\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t  \t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t  <input matInput readonly placeholder=\"\" formControlName=\"power\"\t autocomplete=\"off\">\r\n\t\t\t\t\t  \t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t  <mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t    \t<input readonly\r\n\t\t\t\t\t\t\t matInput placeholder=\"\" formControlName=\"frequency\"  autocomplete=\"off\">\r\n\t\t\t\t\t\t    <mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n            <!-- <div class=\"add-row\">\r\n              <mat-label class=\"sm-txt\">Add Row</mat-label>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n                (click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n              <mat-icon>add_circle</mat-icon>\r\n              </button>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n                (click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n              <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div> -->\r\n\t\t</div>\r\n\t\t\t\t\r\n        </div>\r\n      </div>\r\n\t\t</mat-card>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n      <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\"\r\n      (click)=\"close()\" >Cancel</button>\t\r\n    </div>\r\n       \r\n\r\n     </form>\r\n</div>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { AlarmConfigurationRoutingModule } from './alarm-configuration-routing.module';\r\nimport { AlarmConfigurationCrudComponent } from './alarm-configuration-crud/alarm-configuration-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ AlarmConfigurationCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, AlarmConfigurationRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class AlarmConfigurationModule{}","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AlarmConfigurationCrudComponent } from './alarm-configuration-crud//alarm-configuration-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './alarm-configuration-crud/routes';\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : AlarmConfigurationCrudComponent, children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class AlarmConfigurationRoutingModule{}","import {Component,OnInit,ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-alarm-configuration-crud',\r\n  templateUrl: './alarm-configuration-crud.component.html',\r\n  styleUrls: ['./alarm-configuration-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class AlarmConfigurationCrudComponent implements OnInit {\r\n   // Nav bar demo\r\n   tabLinks = [\r\n    { label: 'Alarm Configuration', link: 'list' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n\r\n  menuArray:any;\r\n  ngOnInit(){\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport {Component, OnInit, ViewChild,ChangeDetectorRef} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport{ViewDialogComponent} from'../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nexport class ChargingModel {\r\n  id : number;\r\n  client_id : number;\r\n  client_name : string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name : string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name : string;\r\n  battery_backup : string;\r\n  code : string;\r\n  name : string;\r\n  charger_type_name:string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name : string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n  connector_data : string;\r\n  statusString:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: ChargingModel;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['code','name', 'charger_type_name','manufacturer_name','status','action'];\r\n\r\n  dataSource: MatTableDataSource<ChargingModel>;\r\n\r\n  charginModels : ChargingModel[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  dialogRef: any;\r\n  codeSearch = false;\r\n  nameSearch = false;\r\n  chargerTypeSearch = false;\r\n  manfactureSearch = false;\r\n  cModelTypeSearch = false;\r\n  batteryBackupSearch = false;\r\n  communicationSearch = false;\r\n  communicationModeSearch = false;\r\n  cardReaderSearch = false;\r\n  noConnectorSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  //messageConstant = MessageConstant;\r\n  constructor(private chargingModelService : ChargingModelService ,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    \r\n    this.getChargingModels();\r\n    this.filterEntity = new ChargingModel();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getChargingModels(){\r\n    this.chargingModelService.getChargingModelsAll().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        if(data != null){\r\n          this.charginModels = data;\r\n          \r\n          for(var i=0; i < this.charginModels.length;i++){\r\n            if(this.charginModels[i].status == 'N'){\r\n              this.charginModels[i].statusString = 'Inactive';\r\n            }else{\r\n              this.charginModels[i].statusString = 'Active';\r\n            }\r\n            \r\n           \r\n          }\r\n          this.dataSource = new MatTableDataSource(this.charginModels);\r\n  \r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        }else{\r\n          return;\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n          this.chargingModelService.delete(id).subscribe(\r\n      (data:any)=>{\r\n        ;\r\n        this.getChargingModels();\r\n        this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n        this.cdr.detectChanges();\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n   \r\n  }\r\n\r\n  viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getChargingModels();\r\n    });\r\n  }\r\n  openDialog(action,data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getChargingModels();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n      if(visibleOption == 'codeSearch'){\r\n        this.codeSearch = !this.codeSearch;\r\n        this.filterEntity.code = \"\";\r\n      }\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    if(visibleOption == 'chargerTypeSearch'){\r\n      this.chargerTypeSearch = !this.chargerTypeSearch;\r\n      this.filterEntity.charger_type_name = \"\";\r\n    }\r\n    if(visibleOption == 'manfactureSearch'){\r\n      this.manfactureSearch = !this.manfactureSearch;\r\n      this.filterEntity.manufacturer_name = \"\";\r\n    }\r\n    if(visibleOption == 'cModelTypeSearch'){\r\n      this.cModelTypeSearch = !this.cModelTypeSearch;\r\n      this.filterEntity.charger_type_name = \"\";\r\n    }\r\n    if(visibleOption == 'batteryBackupSearch'){\r\n      this.batteryBackupSearch = !this.batteryBackupSearch;\r\n      this.filterEntity.battery_backup = \"\";\r\n    }\r\n    if(visibleOption == 'communicationSearch'){\r\n      this.communicationSearch = !this.communicationSearch;\r\n      this.filterEntity.communication_protocol_name = \"\";\r\n    }\r\n    if(visibleOption == 'communicationModeSearch'){\r\n      this.communicationModeSearch = !this.communicationModeSearch;\r\n      this.filterEntity.communication_mode = \"\";\r\n    }\r\n    if(visibleOption == 'cardReaderSearch'){\r\n      this.cardReaderSearch = !this.cardReaderSearch;\r\n      this.filterEntity.card_reader_type = \"\";\r\n    }\r\n    if(visibleOption == 'noConnectorSearch'){\r\n      this.noConnectorSearch = !this.noConnectorSearch;\r\n      this.filterEntity.no_of_connectors= null;\r\n    } \r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n   }\r\n   tableExport()\r\n   {\r\n     // const tab = document.getElementById('mapTable');\r\n     // const ws: XLSX.WorkSheet=XLSX.utils.table_to_sheet(tab);//converts a DOM TABLE element to a worksheet\r\n     // const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n     // XLSX.utils.book_append_sheet(wb, ws, 'Mapped Charger');\r\n   \r\n     // /* save to file */\r\n     // XLSX.writeFile(wb, 'Mapped Charger.xlsx');\r\n     //this.preloader.open();\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Code':chargerModel.code,'Name':chargerModel.name,'Charger Type':chargerModel.charger_type_name,\r\n                  'Manufacturer': chargerModel.manufacturer_name,'Charger Model Type ':chargerModel.charger_model_type_name,\r\n                  'Battery Backup':chargerModel.battery_backup,'Communication Protocol':chargerModel.communication_protocol_name,\r\n                  'Communication Mode':chargerModel.communication_mode,'Card Reader Type':chargerModel.card_reader_type,\r\n                  'No Of Connectors':chargerModel.no_of_connectors,'Status':chargerModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n       XLSX.writeFile(workBook, 'Varients.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n     \r\n   \r\n   }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"tableExport()\">\r\n        <mat-icon>downloading</mat-icon> &nbsp;&nbsp;Export Excel\r\n    </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!codeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Code &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"codeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Code\" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"charger_type_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!chargerTypeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Type\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('chargerTypeSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"chargerTypeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Type\" [(ngModel)]=\"filterEntity.charger_type_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('chargerTypeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charger_type_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"manufacturer_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!manfactureSearch\" class=\"custom_font_size\" style=\"display: flex;\">Manufacturer\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('manfactureSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"manfactureSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Manufacturer\" [(ngModel)]=\"filterEntity.manufacturer_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('manfactureSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.manufacturer_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <!-- <tr mat-header-row  *matHeaderRowDef=\"['lable_code','lable_name', 'lable_charger_type','lable_manufacturer','lable_status','lable_Active']\"></tr> -->\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[ 10, 30,50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {  FormControl, FormArray } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface ChargingModel {\r\n  id ?: number;\r\n  client_id ?: number;\r\n  charger_type_id : number;\r\n  client_name ?: string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name ?: string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name ?: string;\r\n  battery_backup : string;\r\n  code : string;\r\n  name : string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name ?: string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  connector_data : ChargingModelConnectorMap[];\r\n  status : string ;\r\n  created_date ?: string ;\r\n  created_by ?: number;\r\n  modify_date ?: string ;\r\n  modify_by ?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap{\r\n  id : number;\r\n  model_id : number;\r\n  connector_type_id : number;\r\n  io_type_id : number;\r\n  current_type_id : number;\r\n  voltage : number;\r\n  phase : number;\r\n  max_amp : number;\r\n  power : number;\r\n  frequency : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  \r\n  chargerTypes :any;\r\n  manufacturers:any;\r\n  chargerModelTypes:any;\r\n  communicationProtocols:any;\r\n  connectorTypes:any;\r\n  ioTypes:any;\r\n  currentTypes:any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  filteredOptionsCharType: Observable<any[]>;\r\n  filteredOptionsManufacturer: Observable<any[]>;\r\n  filteredOptionsCharModelType : Observable<any[]>;\r\n  filteredOptionsCommunicationProto: Observable<any[]>;\r\n  communicationModeData: string[] = ['LAN', 'SIM', 'WIFI'];\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerTypeService: ChargerTypeService, \r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<ActionDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private chargingModelService : ChargingModelService, \r\n     private masterService: MasterService,\r\n    private router : Router) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      chargerType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      manufacturer: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      chargerModelType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      batteryBackup: [{value:false},  [Validators.required]],\r\n      code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      communicationProtocol: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      communicationMode: ['', [Validators.required]],\r\n      cardReaderType: [''],\r\n      noOfConnectors: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n      connectorForm : this.fb.array([this.createConnectorFG()]) ,\r\n    });\r\n\r\n    this.getChargetTypes();\r\n    this.getManufacturers();\r\n    this.getChargerModelTypes();\r\n    this.getCommunicationProtocols();\r\n    this.getConnectorTypes();\r\n    this.getIOTypes();\r\n    this.getCurrentTypes();   \r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n   this.filteredOptions();\r\n  }\r\n\r\n  private createConnectorFG(): FormGroup {\r\n    return new FormGroup({\r\n      connectorType: new FormControl(''),\r\n      ioType: new FormControl(''),\r\n      currentType: new FormControl('',),\r\n      voltage: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      phase: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      maxAmp: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      power: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      frequency: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)])\r\n    });\r\n  }\r\n\r\n  public addConnectorFG() {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    connectorForm.push(this.createConnectorFG());\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  public removeConnectorFG(i: number) {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    if (connectorForm.length > 1) {\r\n      connectorForm.removeAt(i)\r\n    } else {\r\n      connectorForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  getChargetTypes(){\r\n    this.chargerTypeService.getActiveChargerTypes().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true){\r\n          if(resp.data.length > 0){\r\n            this.chargerTypes = resp.data;\r\n        \r\n            if(this.isEditMode){\r\n              const toSelect = this.chargerTypes.find(c => c.id == this.params.data.charger_type_id);\r\n              this.form.get('chargerType').setValue(toSelect);\r\n             this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n             .pipe(\r\n               startWith(''),\r\n                //tap(() => this.form.controls.chargerType.setValue(toSelect)),\r\n               //tap(() => this.form.get('chargerType').setValue({name:toSelect.name, id:toSelect.id})),\r\n               map(value => typeof value === 'string' ? value : value.name),\r\n               map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n             \r\n             );\r\n            }\r\n          }else{\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage,'Dismiss',{duration:2000});\r\n          }\r\n        }\r\n        \r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getManufacturers(){\r\n    this.masterService.getManufacturers().subscribe(\r\n      (data:any)=>{\r\n        this.manufacturers = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n          this.form.get('manufacturer').setValue(toSelect);\r\n          this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n           // tap(() => this.form.controls.manufacturer.setValue(toSelect)),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n          );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getChargerModelTypes(){\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerModelTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerModelTypes.find(c => c.id == this.params.data.charger_model_type_id);\r\n         this.form.get('chargerModelType').setValue(toSelect);\r\n         this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n           //tap(() => this.form.controls.chargerModelType.setValue(toSelect)),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n         );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCommunicationProtocols(){\r\n    this.masterService.getCommunicationProtocols().subscribe(\r\n      (data:any)=>{\r\n        this.communicationProtocols = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.communicationProtocols.find(c => c.id == this.params.data.communication_protocol_id);\r\n          this.form.get('communicationProtocol').setValue(toSelect);\r\n          this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.communicationProtocol.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n        );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getIOTypes(){\r\n    this.masterService.getIOTypes().subscribe(\r\n      (data:any)=>{\r\n        this.ioTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCurrentTypes(){\r\n    this.masterService.getCurrentTypes().subscribe(\r\n      (data:any)=>{\r\n        this.currentTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let connectors=[] ;\r\n  \r\n      formValues.connectorForm.forEach(item => {\r\n        connectors.push({\r\n          connector_type_id : item.connectorType ,\r\n          io_type_id : item.ioType,\r\n          current_type_id : item.currentType,\r\n          voltage : item.voltage ,\r\n          phase : item.phase,\r\n          max_amp : item.maxAmp,\r\n          power : item.power,\r\n          frequency : item.frequency,\r\n          status : 'Y',\r\n          created_by : this.localStorage.userId \r\n        })\r\n      });\r\n  \r\n      \r\n      let params : ChargingModel = {\r\n        charger_type_id : formValues.chargerType.id,\r\n        manufacturer_id : formValues.manufacturer.id ,\r\n        charger_model_type_id : formValues.chargerModelType.id ,\r\n        battery_backup  : this.batteryBackup == true ? 'Y' : 'N',\r\n        code : formValues.code ,\r\n        name : formValues.name ,\r\n        description : formValues.description ,\r\n        communication_protocol_id : formValues.communicationProtocol.id ,\r\n        communication_mode : formValues.communicationMode ,\r\n        card_reader_type : formValues.cardReaderType ,\r\n        no_of_connectors : formValues.connectorForm.length ,\r\n        connector_data : connectors,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n  \r\n      if (this.isEditMode){\r\n        params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n      } else{\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      \r\n  \r\n      if (this.isEditMode){\r\n        this.chargingModelService.update(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }else{\r\n        this.chargingModelService.create(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n        this.dialogRef.close(params);\r\n    }\r\n   \r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    var temp = new Array();\r\n    temp = this.params.data.communication_mode.split(\",\");\r\n\r\n    this.form.get('communicationMode').setValue(temp);\r\n    this.form.get('cardReaderType').setValue(params.data.card_reader_type);\r\n    this.form.get('noOfConnectors').setValue(params.data.no_of_connectors);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.batteryBackup = params.data.battery_backup == 'Y' ? true : false;\r\n\r\n    this.assignValuesFG(params.data.connector_data);\r\n  }\r\n\r\n  assignValuesFG(data){\r\n\r\n    let connector_data = [];\r\n\r\n    data.forEach(connector => {\r\n      this.addConnectorFG();\r\n      connector_data.push({ id : connector.id ,\r\n        model_id : connector.model_id ,\r\n        connectorType : connector.connector_type_id ,\r\n        ioType : connector.io_type_id ,\r\n        currentType : connector.current_type_id ,\r\n        voltage : connector.voltage ,\r\n        phase : connector.phase ,\r\n        maxAmp : connector.max_amp ,\r\n        power : connector.power ,\r\n        frequency : connector.frequency ,\r\n        status : connector.status ,\r\n        created_date : connector.created_date ,\r\n        created_by : connector.created_by ,\r\n        modify_date : connector.modify_date ,\r\n        modify_by : connector.modify_by })\r\n    });\r\n    \r\n   this.removeConnectorFG(data.length);\r\n\r\n   const connectorForm = this.form.get('connectorForm') as FormArray;\r\n\r\n   connectorForm.patchValue(connector_data);\r\n\r\n\r\n  }\r\n\r\n  clkBatteryBackup(event){\r\n    this.batteryBackup = event.checked;\r\n    this.ref.checked = this.batteryBackup;\r\n  }\r\n  clkRfidCardReader(event){\r\n    this.rfidCardReader = event.checked;\r\n    this.rfid.checked = this.rfidCardReader;\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  \r\n  filteredOptions(){\r\n    this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n    );\r\n    this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n     \r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n    );\r\n    this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n    );\r\n    this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n      );\r\n  }\r\n  displayCharType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayManfacturer(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharModelType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCommunicationProto(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }  \r\n  private _filterCharType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterManfacturer(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.manufacturers.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModelType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCommunicationProtocol(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.communicationProtocols.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\"> Models</mat-toolbar>\r\n\t<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\" >\r\n  <form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n     fxFlex=\"1 0 auto\" name=\"form\" >\r\n     <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerType\" autocomplete=\"off\" required  [matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select charger model\">model_training</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"manufacturer\"  autocomplete=\"off\" required [matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\"  [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please select manufacturer\">precision_manufacturing</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerModelType\" autocomplete=\"off\"  required  [matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please select charger model type\">format_list_bulleted</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"20\"\r\n\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special Character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"50\"\r\n\t\t\t\t\trequired autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter name\">badge</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter description\">description</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special Character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"communicationProtocol\"  required autocomplete=\"off\"  [matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"  [displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please select communication protocol\">import_contacts</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t<mat-select formControlName=\"communicationMode\" multiple>\r\n\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">{{communication}}</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t\t<mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter communication mode\">burst_mode</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cardReaderType\"\r\n\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter card reader type\">chrome_reader_mode</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cardReaderType').invalid\">Please enter card reader type\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>No. Of Connectors</mat-label>\r\n\t\t\t\t<input matInput numbersOnly placeholder=\"\" formControlName=\"noOfConnectors\"\r\n\t\t\t\t\trequired  autocomplete=\"off\" >\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter no. of connectors\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter no. of connectors\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div  fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" \r\n\t\t\t\t[checked]=\"batteryBackup\" (change)=\"clkBatteryBackup($event)\" #toggleElement>\r\n\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"17\" class=\"pr-4\">\r\n        \t\t<mat-label class=\"sm-txt mr-20\">RFID card reader</mat-label>\r\n        \t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" \r\n         \t\t\t [checked]=\"rfidCardReader\" (change)=\"clkRfidCardReader($event)\" #rfidToggleElement>\r\n          \t\t\t\t{{rfidCardReader ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n      <div fxFlex=\"18\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\"\r\n        [checked]=\"status\" (change)=\"updateStatus($event)\" #activeElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<mat-card style=\"box-shadow: none!important;\">\r\n      <div formArrayName=\"connectorForm\">\r\n\t\t\t\t<div   fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\" [formGroupName]=\"i\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t</div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select  formControlName=\"connectorType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t<mat-icon matSuffix  class=\"secondary-text\"  matTooltip=\"Please enter connector type\">help</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select  formControlName=\"ioType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t<mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter I/O type\">help</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t<mat-select  formControlName=\"currentType\" >\r\n\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter current type\">help</mat-icon>\r\n              </mat-form-field >\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput  formControlName=\"voltage\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter voltage \">help</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n            <mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n              <mat-label>Phase</mat-label>\r\n                    <input matInput placeholder=\"\" formControlName=\"phase\"\r\n                       autocomplete=\"off\">\r\n\t\t\t\t\t   <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter phase\">help</mat-icon>\r\n                    <mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n              </mat-form-field>\r\n\t\t\t\t\t</div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\"  fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Max. Amp.(A)</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"maxAmp\"\r\n\t\t\t\t\t\t\t\t\t\t autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t\t\t <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter max Amp.\">help</mat-icon>\r\n\t\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t  <input matInput placeholder=\"\" formControlName=\"power\"\t autocomplete=\"off\">\r\n\t\t\t\t\t\t  <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter power\">help</mat-icon>\r\n\t\t\t\t\t  \t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field  appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t<mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t    \t<input matInput placeholder=\"\" formControlName=\"frequency\"  autocomplete=\"off\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter frequency\">help</mat-icon>\r\n\t\t\t\t\t\t    <mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g. 00.00)</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n            <div class=\"add-row\">\r\n              <mat-label class=\"sm-txt\">Add Row</mat-label>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n                (click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n              <mat-icon>add_circle</mat-icon>\r\n              </button>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n                (click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n              <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n        </div>\r\n      </div>\r\n\t\t</mat-card>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button>\r\n      <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\"\r\n      (click)=\"close()\" >Cancel</button>\t\r\n    </div>\r\n       \r\n\r\n     </form>\r\n</div>\r\n</div>"],"sourceRoot":"webpack:///"}