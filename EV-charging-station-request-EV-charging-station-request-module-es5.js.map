{"version":3,"sources":["webpack:///src/app/main/customer-management/EV-charging-station-request/create/create.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/create/create.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/action-dialog/action-dialog.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/action-dialog/action-dialog.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/EV-charging-station-request.module.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/myPending-list/myPending-list.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/myPending-list/myPending-list.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/EV-charging-station-request-crud/routes.ts","webpack:///src/app/shared/services/customer-management/evCharging-station-request.service.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/view-dialog/view-dialog.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/view-dialog/view-dialog.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/approved-list/approved-list.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/approved-list/approved-list.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/EV-charging-station-request-crud/EV-charging-station-request-crud.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/EV-charging-station-request-crud/EV-charging-station-request-crud.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/list/list.component.ts","webpack:///src/app/main/customer-management/EV-charging-station-request/list/list.component.html","webpack:///src/app/main/customer-management/EV-charging-station-request/EV-charging-station-request-routing.module.ts"],"names":["autocompleteObjectValidator","control","value","CreateComponent","fb","countryService","evCharStationReqService","snackBar","router","datePipe","dialog","accountService","status","initialize","localStorage","JSON","parse","getItem","form","group","email","required","pattern","mobile","user_vol","station_spac","lat","lng","popu_density","addressLine1","addressLine2","pincode","city","state","country","landmark","getUserInfo","getAllCountry","getAllState","subscribe","resp","countries","filteredOptionCountry","controls","valueChanges","pipe","name","_filterCountry","err","item","filterValue","toLowerCase","filter","option","includes","states","filteredOptionState","_filterState","getAllCities","cities","filteredOptionCity","_filterCity","pin_code_id","getCountryStateByPIN","data","undefined","length","state_id","getCountryByState","countrydata","toSelect","find","c","id","country_id","get","setValue","getStateByCountry","statedata","getCityByState","Citydata","event","getStatesByCountry","userId","userInfo","valid","formValues","params","user_id","volume_of_ev_user","space_for_station","population_density","address1","address2","PIN","city_id","like_count","dislike_count","created_by","createEvChargingStationRequest","open","evCharhingStation","duration","navigate","message","errorMessage","hasError","stateId","citiesdata","getCitiesByStates","checked","ref","dialogRef","width","height","afterClosed","result","mLat","mLong","customLocationMessage","onSubmit","$event","preventDefault","getLatLong","getStateCountry","onCityChange","onStateChange","onCountryChange","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","ActionDialogComponent","isEditMode","isAvailable","isDirty","validatingForm","menuArray","action","assignValues","getAllCity","countryID","stateID","close","modify_by","updateEvChargingStationRequest","recordUpdateMessage","chargerNCreate","closeActionPanel","onYesClick","toggleAvailable","COMPONENTS","COMPONENTS_DYNAMIC","EVChargingStationRequestModule","imports","declarations","entryComponents","MyEVPendingRequest","MyPendingListComponent","cdr","displayedColumns","head","usernameSearch","mobileSearch","emailSearch","evVolSearch","citySearch","stateSearch","statusSearch","staSpaceSearch","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","cityId","getMyPendingCharStatReq","getEvChargingStationRequestByUserIdCityId","myPendingCharReq","i","statusString","sort","detectChanges","NoRecordFoundMessage","confirmDialogRef","disableClose","deleteChargerStationRequest","deleteMessage","buttonAction","panelClass","autoFocus","visibleOption","ev","stopPropagation","user_name","city_name","state_name","exportedData","filteredData","evDealers","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","EVChargingStationRequestService","http","apiUrl2","API_URL2","post","providedIn","ViewDialogComponent","isButtonAction","isModerate","approveRejectChargerStationRequest","ApprovEvChargingStationRequest","ApprovedListComponent","likeFlag","dislikeFlag","getApprovedRejectCharStatReq","role_name","getApproveRejectByUserIdCityId","approvedCharReq","getApproveRejectEvChargingStationRequestByCityId","element","like_dislike","onLikeDislikeRequest","like","dislike","EVChargingStationRequestCrudComponent","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","title","nav_list","nav_list_with_tab","x","objectData","children","y","objectChildData","z","isDefaultRoutePermeted","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","EvPendingStationRequest","ListComponent","getEvPendingCharStationByCityId","getEvChargingStationRequestByCityId","pendingChargerReq","charReq","routes","EVChargingStationRequestRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWQ;;AAA2D;;AAC3D;;;;;;AACA;;AAA0D;;AAC1D;;;;;;AAOA;;AAA0D;;AAAkB;;;;;;AAC5E;;AAAyD;;AAAwB;;;;;;AAOjF;;AAAwD;;AAAqB;;;;;;AAM7E;;AAAwD;;AAAsB;;;;;;AAY9E;;AAA6D;;AAA2B;;;;;;AACxF;;AAA4D;;AAAuB;;;;;;AAQnF;;AAAiE;;AAA0B;;;;;;AAC3F;;AAAgE;;AAAuB;;;;;;AAOvF;;AAAiE;;AAA+B;;;;;;AAChG;;AAAgE;;AAAuB;;;;;;AA0BvF;;AAA4D;;AAC5D;;;;;;AACA;;AAA2D;;AAC3D;;;;;;AAQE;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAOJ;;AAAyD;;AAAiB;;;;;;AAQxE;;AACE;;AACF;;;;;;AAF+D;;AAC7D;;AAAA;;;;;;AAOJ;;AAA0D;;AAAkB;;;;;;AAW1E;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOJ;;AAA4D;;AAAoB;;;;ADhIxF,eAASA,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAED,OAAO,CAACC;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAaYC,e;AAoBX,iCAAoBC,EAApB,EAA4CC,cAA5C,EAAqFC,uBAArF,EACUC,QADV,EACyCC,MADzC,EACiEC,QADjE,EAC2FC,MAD3F,EAEUC,cAFV,EAEwC;AAAA;;AAFpB,eAAAP,EAAA,GAAAA,EAAA;AAAwB,eAAAC,cAAA,GAAAA,cAAA;AAAyC,eAAAC,uBAAA,GAAAA,uBAAA;AAC3E,eAAAC,QAAA,GAAAA,QAAA;AAA+B,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAAC,QAAA,GAAAA,QAAA;AAA0B,eAAAC,MAAA,GAAAA,MAAA;AACjF,eAAAC,cAAA,GAAAA,cAAA;AAPV,eAAAC,MAAA,GAAS,IAAT;AASC;;;;qCAEU;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,IAAL,GAAY,KAAKd,EAAL,CAAQe,KAAR,CAAc;AACxBC,mBAAK,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,mCAAnB,CAArB,CAAL,CADgB;AAExBC,oBAAM,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,2BAAnB,CAAtB,CAAL,CAFe;AAGxBE,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,OAAX,CAAmB,UAAnB,CAAD,CAAL,CAHc;AAIxBG,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,OAAX,CAAmB,UAAnB,CAAD,CAAL,CAJU;AAKxBI,iBAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CALmB;AAMxBM,iBAAG,EAAC,CAAC,EAAD,EAAI,0DAAWN,QAAf,CANoB;AAOxBO,0BAAY,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWN,OAAX,CAAmB,UAAnB,CAAD,CAAJ,CAPW;AAQxBO,0BAAY,EAAE,CAAC,EAAD,CARU;AASxBC,0BAAY,EAAE,CAAC,EAAD,CATU;AAUxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,oCAAnB,CAAtB,CAAL,CAVe;AAWxBU,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAChC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAXkB;AAYxBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACjC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAZiB;AAaxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAClC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAbe;AAcxBc,sBAAQ,EAAE,CAAC,EAAD,CAdc;AAexBvB,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAfZ,aAAd,CAAZ;AAiBA,iBAAKwB,WAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,WAAL,GArBW,CAsBX;AACD;;;0CAEe;AAAA;;AACd,iBAAKjC,cAAL,CAAoBgC,aAApB,GAAoCE,SAApC,CACE,UAACC,IAAD,EAAe;AACb,mBAAI,CAACC,SAAL,GAAiBD,IAAjB;AACA,mBAAI,CAACE,qBAAL,GAA6B,KAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,KAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,KAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aATH,EASK,UAACO,GAAD,EAAS,CAEX,CAXH;AAaD;;;yCACcC,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKV,SAAL,CAAeW,MAAf,CAAsB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;wCACa;AAAA;;AACZ,iBAAK7C,cAAL,CAAoBiC,WAApB,GAAkCC,SAAlC,CACE,UAACC,IAAD,EAAe;AACb,oBAAI,CAACe,MAAL,GAAcf,IAAd;AACA,oBAAI,CAACgB,mBAAL,GAA2B,MAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,MAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,MAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aATH,EASK,UAACP,GAAD,EAAS,CAEX,CAXH;AAaD;;;uCACYC,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKI,MAAL,CAAYH,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;uCAEY;AAAA;;AACX,iBAAK7C,cAAL,CAAoBqD,YAApB,GAAmCnB,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,oBAAI,CAACmB,MAAL,GAAcnB,IAAd;AACA,oBAAI,CAACoB,kBAAL,GAA0B,MAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,MAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,MAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aATH,EASK,UAACX,GAAD,EAAS,CAEX,CAXH;AAaD;;;sCACWC,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKQ,MAAL,CAAYP,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;4CAEiB;AAAA;;AAChB,iBAAKY,WAAL,GAAmB,KAAK5C,IAAL,CAAUhB,KAAV,CAAgB6B,OAAnC;AACA,iBAAK1B,cAAL,CAAoB0D,oBAApB,CAAyC,KAAKD,WAA9C,EAA2DvB,SAA3D,CACE,UAACyB,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAIC,SAAR,IAAqBD,IAAI,IAAI,IAA7B,IAAqCA,IAAI,CAACE,MAAL,GAAc,CAAvD,EAA0D;AACxD,sBAAI,CAACC,QAAL,GAAgBH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAxB;;AACA,sBAAI,CAAC9D,cAAL,CAAoB+D,iBAApB,CAAsC,MAAI,CAACD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB,wBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,sBAAMC,QAAQ,GAAG,MAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAAC,CAAD,CAAJ,CAAQU,UAApB;AAAA,mBAArB,CAAjB;;AACA,wBAAI,CAACxD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,wBAAI,CAAC5B,qBAAL,GAA6B,MAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,2BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,mBAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,2BAAIA,IAAI,GAAG,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,MAAI,CAACL,SAA5C;AAAA,mBAAR,CAJyB,CAA7B;AAMA,wBAAI,CAACiC,UAAL,GAAkBV,IAAI,CAAC,CAAD,CAAJ,CAAQU,UAA1B;;AACA,wBAAI,CAACrE,cAAL,CAAoBwE,iBAApB,CAAsC,MAAI,CAACH,UAA3C,EAAuDnC,SAAvD,CACE,UAACuC,SAAD,EAAoB;AAClB,0BAAI,CAACvB,MAAL,GAAcuB,SAAd;;AACA,wBAAMR,QAAQ,GAAG,MAAI,CAACf,MAAL,CAAYgB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAApB;AAAA,qBAAlB,CAAjB;;AACA,0BAAI,CAACjD,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCN,QAAhC;;AAEA,0BAAI,CAACd,mBAAL,GAA2B,MAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,qBAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,MAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,MAAI,CAACS,MAA1C;AAAA,qBAAR,CAJuB,CAA3B;AAOD,mBAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;;AAiBA,wBAAI,CAACmB,QAAL,GAAgBH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAxB;;AACA,wBAAI,CAAC9D,cAAL,CAAoB0E,cAApB,CAAmC,MAAI,CAACZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACyC,QAAD,EAAmB;AACjB,0BAAI,CAACrB,MAAL,GAAcqB,QAAd,CADiB,CAEjB;AACA;;AACA,0BAAI,CAACpB,kBAAL,GAA0B,MAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,qBAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,MAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,MAAI,CAACa,MAAzC;AAAA,qBAAR,CAJsB,CAA1B;AAOD,mBAZH,EAYK,UAACX,GAAD,EAAS,CAEX,CAdH;AAgBD,iBA/CH,EA+CK,UAACA,GAAD,EAAS,CAEX,CAjDH;AAmDD,eArDD,MAqDO,CAEN;AACF,aA1DH,EA0DK,UAACA,GAAD,EAAS,CAEX,CA5DH;AA8DD;;;0CACeiC,K,EAAO;AACrB,iBAAKxC,SAAL,GAAiB,EAAjB;AACA,iBAAKJ,aAAL;AACA,iBAAK6C,kBAAL,CAAwBD,KAAxB,EAHqB,CAIrB;;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK1D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CAEkB3C,K,EAAO;AAAA;;AACxB,iBAAKkC,QAAL,GAAgBlC,KAAK,CAACwC,EAAtB;AACA,iBAAKpE,cAAL,CAAoBwE,iBAApB,CAAsC,KAAKV,QAA3C,EAAqD5B,SAArD,CACE,UAACuC,SAAD,EAAoB;AAClB;AACA,oBAAI,CAACvB,MAAL,GAAcuB,SAAd,CAFkB,CAGlB;AACA;;AACA,oBAAI,CAACtB,mBAAL,GAA2B,MAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,MAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,MAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;wCACU;AAAA;;AACT,iBAAKrC,cAAL,CAAoByB,WAApB,CAAgC,KAAKtB,YAAL,CAAkBqE,MAAlD,EAA0D5C,SAA1D,CACD,UAACC,IAAD,EAAY;AACP,oBAAI,CAAC4C,QAAL,GAAgB5C,IAAhB,CADO,CAEP;;AACA,oBAAI,CAACtB,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,MAAI,CAACQ,QAAL,CAAc,CAAd,EAAiBhE,KAAjD;;AACA,oBAAI,CAACF,IAAL,CAAUyD,GAAV,CAAc,QAAd,EAAwBC,QAAxB,CAAiC,MAAI,CAACQ,QAAL,CAAc,CAAd,EAAiB7D,MAAlD;AACD,aANH,EAMI,UAACyB,GAAD,EAAO,CAER,CARH;AAUA;;;qCAES;AAAA;;AACT,gBAAI,KAAK9B,IAAL,CAAUmE,KAAd,EAAqB;AACnB,kBAAIC,UAAU,GAAG,KAAKpE,IAAL,CAAUhB,KAA3B;AAEA,kBAAIqF,MAAM,GAAG;AACXhE,sBAAM,EAAE+D,UAAU,CAAC/D,MADR;AAEXiE,uBAAO,EAAE,KAAK1E,YAAL,CAAkBqE,MAFhB;AAGX/D,qBAAK,EAAEkE,UAAU,CAAClE,KAHP;AAIXqE,iCAAiB,EAAEH,UAAU,CAAC9D,QAAX,IAAuB,EAAvB,GAA4B,CAA5B,GAA+B8D,UAAU,CAAC9D,QAJlD;AAKXkE,iCAAiB,EAAEJ,UAAU,CAAC7D,YAAX,IAA2B,EAA3B,GAAgC,CAAhC,GAAmC6D,UAAU,CAAC7D,YALtD;AAMXC,mBAAG,EAAE4D,UAAU,CAAC5D,GANL;AAOXC,mBAAG,EAAE2D,UAAU,CAAC3D,GAPL;AAQXgE,kCAAkB,EAAEL,UAAU,CAAC1D,YAAX,IAA2B,EAA3B,GAAgC,CAAhC,GAAmC0D,UAAU,CAAC1D,YARvD;AASXgE,wBAAQ,EAAEN,UAAU,CAACzD,YATV;AAUXgE,wBAAQ,EAAEP,UAAU,CAACxD,YAVV;AAWXgE,mBAAG,EAAER,UAAU,CAACvD,OAXL;AAYXI,wBAAQ,EAAEmD,UAAU,CAACnD,QAZV;AAaX4D,uBAAO,EAAET,UAAU,CAACtD,IAAX,CAAgByC,EAbd;AAcXN,wBAAQ,EAAEmB,UAAU,CAACrD,KAAX,CAAiBwC,EAdhB;AAeXC,0BAAU,EAAEY,UAAU,CAACpD,OAAX,CAAmBuC,EAfpB;AAgBXuB,0BAAU,EAAC,CAhBA;AAiBXC,6BAAa,EAAE,CAjBJ;AAkBXC,0BAAU,EAAE,KAAKpF,YAAL,CAAkBqE,MAlBnB;AAmBXvE,sBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAnBzB,eAAb;AAsBA,mBAAKN,uBAAL,CAA6B6F,8BAA7B,CAA4DZ,MAA5D,EAAoEhD,SAApE,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,wBAAI,CAACL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBC,iBAAnC,EAAsD,SAAtD,EAAiE;AAAEC,4BAAQ,EAAE;AAAZ,mBAAjE;;AACA,wBAAI,CAAC9F,MAAL,CAAY+F,QAAZ,CAAqB,CAAC,6EAAD,CAArB;AACD,iBAHD,MAGO;AACL,wBAAI,CAAChG,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AACF,eARH,EASE,UAACtD,GAAD,EAAS;AACP,sBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,0BAAQ,EAAE;AAAZ,iBAA5D;AACD,eAXH;AAaD,aAtCD,MAuCK;AACH,qBADG,CAEH;AACD;AAGF;;;0CAEepF,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACyD,GAAL,CAAS,OAAT,EAAkB+B,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHxF,IAAI,CAACyD,GAAL,CAAS,OAAT,EAAkB+B,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;4CAEiBC,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB0E,cAApB,CAAmC,KAAKZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACqE,UAAD,EAAqB;AACnB;AACA,oBAAI,CAACjD,MAAL,GAAciD,UAAd,CAFmB,CAGnB;AACA;;AAEA,oBAAI,CAAChD,kBAAL,GAA0B,MAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,MAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,MAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAdH,EAcK,UAACX,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB+D,iBAApB,CAAsC,KAAKD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB;AACA,oBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,kBAAMC,QAAQ,GAAG,MAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,EAAF,IAAQJ,WAAW,CAAC,CAAD,CAAX,CAAeI,EAA3B;AAAA,eAArB,CAAjB;;AACA,oBAAI,CAACvD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,oBAAI,CAAC5B,qBAAL,GAA6B,MAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,MAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACO,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACaiC,K,EAAO;AACnB,iBAAK4B,iBAAL,CAAuB5B,KAAvB;AACA,iBAAKb,iBAAL,CAAuBa,KAAvB;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;uCACYK,K,EAAO,CAClB;AACD;;;uCAEYA,K,EAAO;AAClB,iBAAKrE,MAAL,GAAcqE,KAAK,CAAC6B,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKlG,MAAxB;AACD;;;uCAES;AAAA;;AACR,gBAAI2E,MAAM,GAAG,EAAb;AAGA,gBAAMyB,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,wGAAjB,EAAqC;AACrDa,mBAAK,EAAE,OAD8C;AAErDC,oBAAM,EAAC,OAF8C;AAGrDlD,kBAAI,EAAEuB;AAH+C,aAArC,CAAlB;AAMAyB,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,kBAAGA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAInD,SAA/B,EAAyC;AACvC,uBAAI,CAAC/C,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BwC,MAAM,CAAC,CAAD,CAAN,CAAU1F,GAAxC;;AACA,uBAAI,CAACR,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BwC,MAAM,CAAC,CAAD,CAAN,CAAUzF,GAAxC;AACD,eAHD,MAGK;AACH,uBAAI,CAACT,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACyC,IAAnC;;AACA,uBAAI,CAACnG,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAAC0C,KAAnC;;AACA,uBAAI,CAAC/G,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBmB,qBAAnC,EAA0D,SAA1D,EAAqE;AAAEjB,0BAAQ,EAAE;AAAZ,iBAArE;AACD;AAEF,aAVD;AAWD;;;;;;;yBA5WUnG,e,EAAe,2H,EAAA,uJ,EAAA,2M,EAAA,wI,EAAA,wH,EAAA,yH,EAAA,oI,EAAA,4J;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;;;;;;;;;;oFAJf,CAAC,wDAAD,C;AAAU,kB;AAAA,gB;AAAA,4tH;AAAA;AAAA;ACjCvB;;AAEE;;AACgC;AAAA,qBAAU,IAAAqH,QAAA,EAAV;AAAoB,aAApB,EAAqB,eAArB,EAAqB;AAAA,qBAAkBC,MAAM,CAACC,cAAP,EAAlB;AAAyC,aAA9D;;AAE9B;;AAEE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAA4E;;AAAa;;AACzF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAA2E;;AAAK;;AAChF;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;AAAA,qBAAS,IAAAA,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AACE;;AAAoF;;AAAI;;AAC1F;;AACA;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACE;;AAAmF;;AAAI;;AACzF;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACA;;AAAwF;;AAAI;;AAC5F;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAoF;;AAAI;;AAG1F;;AAEF;;AAEA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAoF;;AAAI;;AAG1F;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAA6E;AAAA,qBAAU,IAAAC,eAAA,EAAV;AAA2B,aAA3B;;AAA7E;;AAEA;;AAA8E;;AAAS;;AACvF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACA;;AACE;AAAA,qBAAkB,IAAAC,YAAA,qBAAlB;AAAmD,aAAnD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA2E;;AAAa;;AAC1F;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AACE;AAAA,qBAAkB,IAAAC,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAa;;AAC3F;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAa;;AAC7F;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAAW;;AAG3F;;AAEA;;AACE;;AAA4E;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAE1E;;AAAoC;;AACxC;;AAEF;;AAEA;;AACE;;AAAuD;;AAAI;;AAC3D;;AAC2F;;AAAM;;AACnG;;AAEF;;AACF;;;;;;;;;;AAzKQ;;AAAA;;AASY;;AAAA;;AAEA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AAYA;;AAAA;;AACA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AA0BA;;AAAA;;AAEA;;AAAA;;AAMuC;;AAAA;;AACL;;AAAA;;AAEb;;AAAA;;AAQrB;;AAAA;;AAKwC;;AAAA;;AACL;;AAAA;;AAEd;;AAAA;;AAQrB;;AAAA;;AAO6D;;AAAA;;AAExB;;AAAA;;AAEhB;;AAAA;;AAQrB;;AAAA;;AAY6C;;AAAA;;AAEvD;;AAAA;;;;;;;;qBD/HI;;;;;;wEAKD7H,e,EAAe;gBAV3B,uDAU2B;iBAVjB;AACT8H,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE,+DALH;AAMTC,qBAAS,EAAE,CAAC,wDAAD;AANF,W;AAUiB,U;;;;;;;;;;;;;;;;;;;AAcExB,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEnDnkBU;;AAA2D;;AAC3D;;;;;;AACA;;AAA0D;;AAC1D;;;;;;AAOA;;AAA0D;;AAAkB;;;;;;AAC5E;;AAAyD;;AAAwB;;;;;;AAOjF;;AAAwD;;AAAqB;;;;;;AAM7E;;AAAwD;;AAAsB;;;;;;AAY9E;;AAA6D;;AAA2B;;;;;;AACxF;;AAA4D;;AAAuB;;;;;;AAQnF;;AAAiE;;AAA0B;;;;;;AAC3F;;AAAgE;;AAAuB;;;;;;AAOvF;;AAAiE;;AAA+B;;;;;;AAChG;;AAAgE;;AAAuB;;;;;;AA0BvF;;AAA4D;;AAC5D;;;;;;AACA;;AAA2D;;AAC3D;;;;;;AAQE;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAOJ;;AAAyD;;AAAiB;;;;;;AAQxE;;AACE;;AACF;;;;;;AAF+D;;AAC7D;;AAAA;;;;;;AAOJ;;AAA0D;;AAAkB;;;;;;AAW1E;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOJ;;AAA4D;;AAAoB;;;;ADtI1F,eAAS/G,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAED,OAAO,CAACC;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAaYsI,qB;AAmCX,uCAAoBpI,EAApB,EAA6CE,uBAA7C,EACUC,QADV,EACwCF,cADxC,EACgFK,MADhF,EAC2GC,cAD3G,EAESqG,SAFT,EAEyFhD,IAFzF,EAE8G;AAAA;;AAF1F,eAAA5D,EAAA,GAAAA,EAAA;AAAyB,eAAAE,uBAAA,GAAAA,uBAAA;AACnC,eAAAC,QAAA,GAAAA,QAAA;AAA8B,eAAAF,cAAA,GAAAA,cAAA;AAAwC,eAAAK,MAAA,GAAAA,MAAA;AAA2B,eAAAC,cAAA,GAAAA,cAAA;AAClG,eAAAqG,SAAA,GAAAA,SAAA;AAAgF,eAAAhD,IAAA,GAAAA,IAAA;AAjCzF,eAAAyE,UAAA,GAAa,KAAb;AAGA,eAAA7H,MAAA,GAAS,KAAT;AAKA,eAAA8H,WAAA,GAAc,KAAd;AAgBA,eAAAC,OAAA,GAAmB,KAAnB;AACA,eAAAC,cAAA,GAAiB,KAAjB;AAQiH;;;;qCAEtG;AACT,iBAAK/H,UAAL;AACD;;;uCAEY;AAEX,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAK4H,SAAL,GAAiB9H,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACA,iBAAKsE,MAAL,GAAc,KAAKvB,IAAnB;AACA,iBAAKyE,UAAL,GAAkB,KAAKlD,MAAL,CAAYuD,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AACA,iBAAK5H,IAAL,GAAY,KAAKd,EAAL,CAAQe,KAAR,CAAc;AACxBC,mBAAK,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,mCAAnB,CAArB,CAAL,CADgB;AAExBC,oBAAM,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,2BAAnB,CAAtB,CAAL,CAFe;AAGxBE,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,UAAnB,CAArB,CAAL,CAHc;AAIxBG,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,UAAnB,CAArB,CAAL,CAJU;AAKxBI,iBAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CALmB;AAMxBM,iBAAG,EAAC,CAAC,EAAD,EAAI,0DAAWN,QAAf,CANoB;AAOxBO,0BAAY,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWP,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,UAAnB,CAArB,CAAJ,CAPW;AAQxBO,0BAAY,EAAE,CAAC,EAAD,CARU;AASxBC,0BAAY,EAAE,CAAC,EAAD,CATU;AAUxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,oCAAnB,CAAtB,CAAL,CAVe;AAWxBU,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAChC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAXkB;AAYxBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACjC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAZiB;AAaxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAClC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAbe;AAcxBc,sBAAQ,EAAE,CAAC,EAAD,CAdc;AAexBvB,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAfZ,aAAd,CAAZ;;AAkBA,gBAAI,KAAK6H,UAAT,EAAqB;AACnB,mBAAKM,YAAL,CAAkB,KAAKxD,MAAvB;AACD;;AACD,iBAAKnD,WAAL;AACA,iBAAKC,aAAL;AACA,iBAAKC,WAAL,CAAiB,KAAKiD,MAAL,CAAYvB,IAAZ,CAAiBU,UAAlC;AACA,iBAAKsE,UAAL,CAAgB,KAAKzD,MAAL,CAAYvB,IAAZ,CAAiBG,QAAjC;AACD;;;0CACe;AAAA;;AACd,iBAAK9D,cAAL,CAAoBgC,aAApB,GAAoCE,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACC,SAAL,GAAiBD,IAAjB;;AACA,kBAAI,OAAI,CAACiG,UAAT,EAAqB;AACnB,oBAAMnE,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,EAAF,IAAQ,OAAI,CAACc,MAAL,CAAYvB,IAAZ,CAAiBU,UAA7B;AAAA,iBAArB,CAAjB;;AACA,uBAAI,CAACxD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;AACD;;AACD,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aAbH,EAaK,UAACO,GAAD,EAAS,CAEX,CAfH;AAiBD;;;yCACcC,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKV,SAAL,CAAeW,MAAf,CAAsB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;sCAEW+F,S,EAAW;AAAA;;AACrB,iBAAK5I,cAAL,CAAoBwE,iBAApB,CAAsCoE,SAAtC,EAAiD1G,SAAjD,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACe,MAAL,GAAcf,IAAd;;AACA,kBAAI,OAAI,CAACiG,UAAT,EAAqB;AACnB,oBAAMnE,QAAQ,GAAG,OAAI,CAACf,MAAL,CAAYgB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,EAAF,IAAQ,OAAI,CAACc,MAAL,CAAYvB,IAAZ,CAAiBG,QAA7B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAACjD,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCN,QAAhC;AACD;;AACD,qBAAI,CAACd,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;uCACYC,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKI,MAAL,CAAYH,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;qCAEUgG,O,EAAS;AAAA;;AAClB,iBAAK7I,cAAL,CAAoB0E,cAApB,CAAmCmE,OAAnC,EAA4C3G,SAA5C,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACmB,MAAL,GAAcnB,IAAd;;AACA,kBAAG,OAAI,CAACiG,UAAR,EAAmB;AACjB,oBAAMnE,QAAQ,GAAG,OAAI,CAACX,MAAL,CAAYY,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAGA,CAAC,CAACC,EAAF,IAAQ,OAAI,CAACc,MAAL,CAAYvB,IAAZ,CAAiB+B,OAA5B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAAC7E,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BN,QAA/B;AACD;;AACD,qBAAI,CAACV,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aAbH,EAaK,UAACX,GAAD,EAAS,CAEX,CAfH;AAiBD;;;sCACWC,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKQ,MAAL,CAAYP,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;kCAEO;AACN,iBAAK8D,SAAL,CAAemC,KAAf;AACD;;;6CACkB;AACjB,iBAAKnC,SAAL,CAAemC,KAAf;AACD;;;wCACU;AAAA;;AACT,iBAAKxI,cAAL,CAAoByB,WAApB,CAAgC,KAAKtB,YAAL,CAAkBqE,MAAlD,EAA0D5C,SAA1D,CACD,UAACC,IAAD,EAAY;AACP,qBAAI,CAAC4C,QAAL,GAAgB5C,IAAhB,CADO,CAEP;AACA;AACA;AACD,aANH,EAMI,UAACQ,GAAD,EAAO,CAER,CARH;AAUA;;;uCAEW;AAAA;;AACX,gBAAI,KAAK9B,IAAL,CAAUmE,KAAd,EAAqB;AACnB,kBAAIC,UAAU,GAAG,KAAKpE,IAAL,CAAUhB,KAA3B;AAEA,kBAAMqF,MAAM,GAAQ;AAClBhE,sBAAM,EAAE+D,UAAU,CAAC/D,MADD;AAElBiE,uBAAO,EAAE,KAAK1E,YAAL,CAAkBqE,MAFT;AAGlB/D,qBAAK,EAAEkE,UAAU,CAAClE,KAHA;AAIlBqE,iCAAiB,EAAEH,UAAU,CAAC9D,QAAX,IAAuB,EAAvB,GAA4B,CAA5B,GAA+B8D,UAAU,CAAC9D,QAJ3C;AAKlBkE,iCAAiB,EAAEJ,UAAU,CAAC7D,YAAX,IAA2B,EAA3B,GAAgC,CAAhC,GAAmC6D,UAAU,CAAC7D,YAL/C;AAMlBC,mBAAG,EAAE4D,UAAU,CAAC5D,GANE;AAOlBC,mBAAG,EAAE2D,UAAU,CAAC3D,GAPE;AAQlBgE,kCAAkB,EAAEL,UAAU,CAAC1D,YAAX,IAA2B,EAA3B,GAAgC,CAAhC,GAAmC0D,UAAU,CAAC1D,YARhD;AASlBgE,wBAAQ,EAAEN,UAAU,CAACzD,YATH;AAUlBgE,wBAAQ,EAAEP,UAAU,CAACxD,YAVH;AAWlBgE,mBAAG,EAAER,UAAU,CAACvD,OAXE;AAYlBI,wBAAQ,EAAEmD,UAAU,CAACnD,QAZH;AAalB4D,uBAAO,EAAET,UAAU,CAACtD,IAAX,CAAgByC,EAbP;AAclBN,wBAAQ,EAAEmB,UAAU,CAACrD,KAAX,CAAiBwC,EAdT;AAelBC,0BAAU,EAAEY,UAAU,CAACpD,OAAX,CAAmBuC,EAfb;AAgBlBuB,0BAAU,EAAE,KAAKT,MAAL,CAAYvB,IAAZ,CAAiBgC,UAhBX;AAiBlBC,6BAAa,EAAE,KAAKV,MAAL,CAAYvB,IAAZ,CAAiBiC,aAjBd;AAkBlBrF,sBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAlBlB,eAApB;;AAoBA,kBAAI,KAAK6H,UAAT,EAAqB;AACjBlD,sBAAM,CAACd,EAAP,GAAY,KAAKc,MAAL,CAAYvB,IAAZ,CAAiBS,EAA7B,EACAc,MAAM,CAAC6D,SAAP,GAAmB,KAAKtI,YAAL,CAAkBqE,MADrC;AAEH,eAHD,MAGO;AACHI,sBAAM,CAACW,UAAP,GAAoB,KAAKpF,YAAL,CAAkBqE,MAAtC;AACH;;AACD,kBAAI,KAAKsD,UAAT,EAAqB;AACnB,qBAAKnI,uBAAL,CAA6B+I,8BAA7B,CAA4D9D,MAA5D,EAAoEhD,SAApE,CACE,UAACC,IAAD,EAAe;AACb,sBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,2BAAI,CAACL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBkD,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhD,8BAAQ,EAAE;AAAZ,qBAAnE;;AACA,2BAAI,CAACU,SAAL,CAAemC,KAAf;AACD,mBAHD,MAGM;AACJ,2BAAI,CAAC5I,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,8BAAQ,EAAE;AAAZ,qBAA5D;AACD;AACF,iBARH,EASE,UAACtD,GAAD,EAAS;AACP,yBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBAXH;AAaD,eAdD,MAcO;AACL,qBAAKhG,uBAAL,CAA6B6F,8BAA7B,CAA4DZ,MAA5D,EAAoEhD,SAApE,CACE,UAACC,IAAD,EAAe;AACb,sBAAGA,IAAI,CAAC5B,MAAL,IAAe,IAAlB,EAAuB;AACrB,2BAAI,CAACL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBmD,cAAnC,EAAmD,SAAnD,EAA8D;AAAEjD,8BAAQ,EAAE;AAAZ,qBAA9D;;AACA,2BAAI,CAACU,SAAL,CAAemC,KAAf;AACD;AACF,iBANH,EAOE,UAACnG,GAAD,EAAS;AACP,yBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBATH;AAWD;AACF,aAxDD,MAwDK;AACH,qBADG,CAEH;AACD;AAEF;;;0CAEepF,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACyD,GAAL,CAAS,OAAT,EAAkB+B,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHxF,IAAI,CAACyD,GAAL,CAAS,OAAT,EAAkB+B,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEYnB,M,EAAQ;AAEnB,iBAAKrE,IAAL,CAAUyD,GAAV,CAAc,QAAd,EAAwBC,QAAxB,CAAiCW,MAAM,CAACvB,IAAP,CAAYzC,MAA7C;AACA,iBAAKL,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCW,MAAM,CAACvB,IAAP,CAAY5C,KAA5C;AACA,iBAAKF,IAAL,CAAUyD,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCW,MAAM,CAACvB,IAAP,CAAYyB,iBAA/C;AACA,iBAAKvE,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY0B,iBAAnD;AACA,iBAAKxE,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BW,MAAM,CAACvB,IAAP,CAAYtC,GAA1C;AACA,iBAAKR,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BW,MAAM,CAACvB,IAAP,CAAYrC,GAA1C;AACA,iBAAKT,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY2B,kBAAnD;AACA,iBAAKzE,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY4B,QAAnD;AACA,iBAAK1E,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY6B,QAAnD;AACA,iBAAK3E,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCW,MAAM,CAACvB,IAAP,CAAY8B,GAA9C;AACA,iBAAK5E,IAAL,CAAUyD,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCW,MAAM,CAACvB,IAAP,CAAY7B,QAA/C,EAZmB,CAanB;AACA;;AACA,iBAAKvB,MAAL,GAAc2E,MAAM,CAACvB,IAAP,CAAYpD,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAAjD;AACD;;;uCAEYqE,K,EAAO;AAClB,iBAAKrE,MAAL,GAAcqE,KAAK,CAAC6B,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKlG,MAAxB;AACD;;;4CAGiB;AAAA;;AAChB,iBAAKkD,WAAL,GAAmB,KAAK5C,IAAL,CAAUhB,KAAV,CAAgB6B,OAAnC;AACA,iBAAK1B,cAAL,CAAoB0D,oBAApB,CAAyC,KAAKD,WAA9C,EAA2DvB,SAA3D,CACE,UAACyB,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAIC,SAAR,IAAqBD,IAAI,IAAI,IAA7B,IAAqCA,IAAI,CAACE,MAAL,GAAc,CAAvD,EAA0D;AACxD,uBAAI,CAACC,QAAL,GAAgBH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAxB;;AACA,uBAAI,CAAC9D,cAAL,CAAoB+D,iBAApB,CAAsC,OAAI,CAACD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB,yBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,sBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAAC,CAAD,CAAJ,CAAQU,UAApB;AAAA,mBAArB,CAAjB;;AACA,yBAAI,CAACxD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,yBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,2BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,mBAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,2BAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,mBAAR,CAJyB,CAA7B;AAMA,yBAAI,CAACiC,UAAL,GAAkBV,IAAI,CAAC,CAAD,CAAJ,CAAQU,UAA1B;;AACA,yBAAI,CAACrE,cAAL,CAAoBwE,iBAApB,CAAsC,OAAI,CAACH,UAA3C,EAAuDnC,SAAvD,CACE,UAACuC,SAAD,EAAoB;AAClB,2BAAI,CAACvB,MAAL,GAAcuB,SAAd;;AACA,wBAAMR,QAAQ,GAAG,OAAI,CAACf,MAAL,CAAYgB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAApB;AAAA,qBAAlB,CAAjB;;AACA,2BAAI,CAACjD,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCN,QAAhC;;AAEA,2BAAI,CAACd,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,qBAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,qBAAR,CAJuB,CAA3B;AAOD,mBAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;;AAiBA,yBAAI,CAACmB,QAAL,GAAgBH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAxB;;AACA,yBAAI,CAAC9D,cAAL,CAAoB0E,cAApB,CAAmC,OAAI,CAACZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACyC,QAAD,EAAmB;AACjB,2BAAI,CAACrB,MAAL,GAAcqB,QAAd,CADiB,CAEjB;AACA;;AACA,2BAAI,CAACpB,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,qBAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,qBAAR,CAJsB,CAA1B;AAOD,mBAZH,EAYK,UAACX,GAAD,EAAS,CAEX,CAdH;AAgBD,iBA/CH,EA+CK,UAACA,GAAD,EAAS,CAEX,CAjDH;AAmDD,eArDD,MAqDO,CAEN;AACF,aA1DH,EA0DK,UAACA,GAAD,EAAS,CAEX,CA5DH;AA8DD;;;0CACeiC,K,EAAO;AACrB,iBAAKxC,SAAL,GAAiB,EAAjB;AACA,iBAAKJ,aAAL;AACA,iBAAK6C,kBAAL,CAAwBD,KAAxB,EAHqB,CAIrB;;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK1D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CAEkB3C,K,EAAO;AAAA;;AACxB,iBAAKkC,QAAL,GAAgBlC,KAAK,CAACwC,EAAtB;AACA,iBAAKpE,cAAL,CAAoBwE,iBAApB,CAAsC,KAAKV,QAA3C,EAAqD5B,SAArD,CACE,UAACuC,SAAD,EAAoB;AAClB;AACA,qBAAI,CAACvB,MAAL,GAAcuB,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAACtB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;4CAEiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB0E,cAApB,CAAmC,KAAKZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACqE,UAAD,EAAqB;AACnB;AACA,qBAAI,CAACjD,MAAL,GAAciD,UAAd;AACA,qBAAI,CAAChD,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAXH,EAWK,UAACX,GAAD,EAAS,CAEX,CAbH;AAeD;;;4CAEiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB+D,iBAApB,CAAsC,KAAKD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,kBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,EAAF,IAAQJ,WAAW,CAAC,CAAD,CAAX,CAAeI,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAACvD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACO,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACaiC,K,EAAO;AACnB,iBAAK4B,iBAAL,CAAuB5B,KAAvB;AACA,iBAAKb,iBAAL,CAAuBa,KAAvB;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;uCACYK,K,EAAO,CAClB;AACD;;;uCAES;AAAA;;AACR,gBAAIM,MAAM,GAAG,EAAb;AAGA,gBAAMyB,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,wGAAjB,EAAqC;AACrDa,mBAAK,EAAE,OAD8C;AAErDC,oBAAM,EAAC,OAF8C;AAGrDlD,kBAAI,EAAEuB;AAH+C,aAArC,CAAlB;AAKAyB,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,kBAAGA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAInD,SAA/B,EAAyC;AACvC,uBAAI,CAAC/C,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BwC,MAAM,CAAC,CAAD,CAAN,CAAU1F,GAAxC;;AACA,uBAAI,CAACR,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BwC,MAAM,CAAC,CAAD,CAAN,CAAUzF,GAAxC;AACD,eAHD,MAGK;AACH,uBAAI,CAACT,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACyC,IAAnC;;AACA,uBAAI,CAACnG,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAAC0C,KAAnC;;AACA,uBAAI,CAAC/G,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBmB,qBAAnC,EAA0D,SAA1D,EAAqE;AAAEjB,0BAAQ,EAAE;AAAZ,iBAArE;AACD;AAEF,aAVD;AAWD;;;;;;;yBApbUkC,qB,EAAqB,2H,EAAA,2M,EAAA,wI,EAAA,wJ,EAAA,mI,EAAA,4J,EAAA,sI,EAAA,gEAqCiC,wEArCjC,C;AAqCgD,O;;;cArCrEA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;oFAJrB,CAAC,wDAAD,C;AAAU,kB;AAAA,gB;AAAA,s3H;AAAA;AAAA;ACjCvB;;AAA6D;AAAA,qBAAS,IAAAgB,gBAAA,EAAT;AAA2B,aAA3B;;AACQ;;AAAK;;AAE1E;;AAAoC;;AAAoB;;AAExD;;AACE;;AAEE;;AAGE;;AAEE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAA4E;;AAAa;;AACzF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAA2E;;AAAK;;AAChF;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA,qBAAS,IAAA7B,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;AAAA,qBAAS,IAAAA,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AACE;;AAAoF;;AAAc;;AACpG;;AACA;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACE;;AAAmF;;AAAI;;AACzF;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACA;;AAAwF;;AAAK;;AAC7F;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAoF;;AAAI;;AAG1F;;AAEF;;AAEA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAoF;;AAAI;;AAG1F;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAA6E;AAAA,qBAAU,IAAAC,eAAA,EAAV;AAA2B,aAA3B;;AAA7E;;AAEA;;AAA8E;;AAAS;;AACvF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACA;;AACE;AAAA,qBAAkB,IAAAC,YAAA,qBAAlB;AAAmD,aAAnD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA2E;;AAAa;;AAC1F;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AACE;AAAA,qBAAkB,IAAAC,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAa;;AAC3F;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAa;;AAC7F;;AACA;;AAEF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAAW;;AAG3F;;AAEA;;AACE;;AAA4E;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AAE1E;;AAAoC;;AACxC;;AACF;;AAEA;;AACE;;AAAqE;AAAA,qBAAS,IAAAyB,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AACzE;;AACnB;;AAAkE;AAAA,qBAAS,IAAAN,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC5F;;AAEF;;AAEF;;AACF;;;;;;;;;;AAhLoC;;AAAA;;AAK1B;;AAAA;;AASY;;AAAA;;AAEA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AAYA;;AAAA;;AACA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AA0BA;;AAAA;;AAEA;;AAAA;;AAMuC;;AAAA;;AACL;;AAAA;;AAEb;;AAAA;;AAQrB;;AAAA;;AAKwC;;AAAA;;AACL;;AAAA;;AAEd;;AAAA;;AAQrB;;AAAA;;AAO6D;;AAAA;;AAExB;;AAAA;;AAEhB;;AAAA;;AAQrB;;AAAA;;AAa6C;;AAAA;;AAEvD;;AAAA;;AAKwF;;AAAA;;;;;;;;qBD3ItF;;;;;;wEAKDX,qB,EAAqB;gBAVjC,uDAUiC;iBAVvB;AACTP,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE,+DALH;AAMTC,qBAAS,EAAE,CAAC,wDAAD;AANF,W;AAUuB,U;;;;;;;;;;;;;;;;;;oBAqC0B,oD;qBAAO,wE;;;;AAtBrCxB,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE,C;AACH2C,yBAAe,EAAE,CAAF;kBAA5C,uDAA4C;mBAAlC,iB;AAAkC,WAAE;;;;;;;;;;;;;;;;;;;AEtDjD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,UAAMC,UAAU,GAAG,CAAC,kJAAD,EAAwC,wEAAxC,EAAyD,kEAAzD,EAAwE,4FAAxE,EAA8F,gGAA9F,CAAnB;AACA,UAAMC,kBAAkB,GAAG,CAAC,4FAAD,EAAwB,sFAAxB,CAA3B;;UAYaC,8B;;;;;cAAAA;;;;2BAAAA,8B;AAA8B,S;AAAA,kBAT9B,CACL,qEADK,EAEL,iHAFK,EAGL,oEAHK,CAS8B;;;;4HAA9BA,8B,EAA8B;AAAA,yBAbvB,kJAauB,EAbgB,wEAahB,EAbiC,kEAajC,EAbgD,4FAahD,EAbsE,gGAatE,EAZf,4FAYe,EAZQ,sFAYR;AAZ2B,oBAI9D,qEAJ8D,EAK9D,iHAL8D,EAM9D,oEAN8D;AAY3B,S;AANnB,O;;;;;wEAMXA,8B,EAA8B;gBAV1C,sDAU0C;iBAVjC;AACNC,mBAAO,EAAE,CACL,qEADK,EAEL,iHAFK,EAGL,oEAHK,CADH;AAMNC,wBAAY,EAAE,CAACJ,UAAD,EAAaC,kBAAb,CANR;AAONI,2BAAe,EAAE,CAACJ,kBAAD;AAPX,W;AAUiC,U;;;;;;;;;;;;;;;;;;ACzqBwB;;AACI;;AACJ;;;;;;AAFiE;;AAC7D;;AAAA;;;;;;AAQR;;AAA4D;;AAAoB;;;;;;AAQ5E;;AACI;;AACJ;;;;;;AAF+D;;AAC3D;;AAAA;;;;;;AAQR;;AAA0D;;AAAkB;;;;;;AAQxE;;AACI;;AACJ;;;;;;AAF8D;;AAC1D;;AAAA;;;;;;AAQR;;AAAyD;;AAAiB;;;;;;;;AAiBtE;;AAA8E;;AAAS;;AACrE;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAAY;;;;;;;;AACxF;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAxC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH4C;;AAAA;;;;;;AAJhD;;AACI;;AAEA;;AAKJ;;;;;;AAPW;;AAAA;;AAEU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAC7B;;AAAM;;AACd;;;;;;;;AACA;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAN5C;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AACJ;;;;;;;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAA7C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHiD;;AAAA;;;;;;AANrD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA8E;;AAC7D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACrF;;AACJ;;;;;;;;AACA;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAHgD;;AAAA;;;;;;AANpD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA0E;;AACzD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACjF;;AAAY;;;;;;;;AAChB;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAnC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACpE;;AACJ;;;;;;AAHuC;;AAAA;;;;;;AAL3C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AAAY;;;;;;;;AAChB;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAL5C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AACI;;AAAqB;;;;;;AADU;;AAC/B;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AAWI;;AACA;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,QAApB,EAA4B,WAA5B,EAAqC,cAArC;AAAmD,WAAnD;;AAC6C;;AAAsB;;;;;;;;AAZvE;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAKhD;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACrB;;AAAI;;AAAW;;AAEtC;;AAE8E;;AAE9E;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAM;;AACf;;;;;;AAJK;;AAAA;;;;;;AAMT;;;;;;AACA;;;;;;;;ADlMhB,eAAS5J,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAED,OAAO,CAACC;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAEY+J,kB;;;;UAuCAC,sB;AAmCX,wCAAoB5J,uBAApB,EAAqFI,MAArF,EAAgHN,EAAhH,EACUG,QADV,EACyC4J,GADzC,EACwE9J,cADxE,EAC0G;AAAA;;AADtF,eAAAC,uBAAA,GAAAA,uBAAA;AAAiE,eAAAI,MAAA,GAAAA,MAAA;AAA2B,eAAAN,EAAA,GAAAA,EAAA;AACtG,eAAAG,QAAA,GAAAA,QAAA;AAA+B,eAAA4J,GAAA,GAAAA,GAAA;AAA+B,eAAA9J,cAAA,GAAAA,cAAA;AAhCxE,eAAA+J,gBAAA,GAA6B,CAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,EAAiC,mBAAjC,EAAsD,mBAAtD,EAA2E,WAA3E,EAAwF,YAAxF,EAAsG,QAAtG,EAAgH,QAAhH,CAA7B;AACA,eAAAC,IAAA,GAAO,CAAC,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,SAAxC,EAAmD,MAAnD,EAA2D,OAA3D,EAAoE,QAApE,CAAD,CAAP;AAQA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,cAAA,GAAiB,KAAjB;AAkBC;;;;qCAEU;AACT,iBAAK/J,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,IAAL,GAAY,KAAKd,EAAL,CAAQe,KAAR,CAAc;AACxBa,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAChC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL,CADkB;AAExBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACjC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL,CAFiB;AAGxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAClC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL;AAHe,aAAd,CAAZ;AAKA,iBAAKyJ,YAAL,GAAoB,IAAIb,kBAAJ,EAApB;AACA,iBAAKc,UAAL,GAAkB,gEAAeC,QAAjC;AAEA,iBAAK3I,aAAL;AACA,iBAAKC,WAAL;AACD;;;sCAEW2C,K,EAAc;AACxB,gBAAM/B,WAAW,GAAI+B,KAAK,CAACgG,MAAN,CAAkC/K,KAAvD;AACA,iBAAKgL,UAAL,CAAgB9H,MAAhB,GAAyBF,WAAW,CAACiI,IAAZ,GAAmBhI,WAAnB,EAAzB;;AACA,gBAAI,KAAK+H,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BC,SAA1B;AACD;AACF;;;0CAEe;AAAA;;AACd,iBAAKhL,cAAL,CAAoBgC,aAApB,GAAoCE,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACC,SAAL,GAAiBD,IAAjB;AACA,qBAAI,CAACE,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,kEAAU,EAAV,CAFyB,EAGzB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aATH,EASK,UAACO,GAAD,EAAS,CAEX,CAXH;AAaD;;;yCACcC,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKV,SAAL,CAAeW,MAAf,CAAsB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;wCACa;AAAA;;AACZ,iBAAK7C,cAAL,CAAoBiC,WAApB,GAAkCC,SAAlC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACe,MAAL,GAAcf,IAAd;AACA,qBAAI,CAACgB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,kEAAU,EAAV,CAFuB,EAGvB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aATH,EASK,UAACP,GAAD,EAAS,CAEX,CAXH;AAaD;;;uCACYC,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKI,MAAL,CAAYH,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;uCAEY;AAAA;;AACX,iBAAK7C,cAAL,CAAoBqD,YAApB,GAAmCnB,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACmB,MAAL,GAAcnB,IAAd;AACA,qBAAI,CAACoB,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,kEAAU,EAAV,CAFsB,EAGtB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aATH,EASK,UAACX,GAAD,EAAS,CAEX,CAXH;AAaD;;;sCACWC,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKQ,MAAL,CAAYP,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;0CAEe+B,K,EAAO;AACrB,iBAAKxC,SAAL,GAAiB,EAAjB;AACA,iBAAKJ,aAAL;AACA,iBAAK6C,kBAAL,CAAwBD,KAAxB,EAHqB,CAIrB;;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK1D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CACkB3C,K,EAAO;AAAA;;AACxB,iBAAKkC,QAAL,GAAgBlC,KAAK,CAACwC,EAAtB;AACA,iBAAKpE,cAAL,CAAoBwE,iBAApB,CAAsC,KAAKV,QAA3C,EAAqD5B,SAArD,CACE,UAACuC,SAAD,EAAoB;AAClB;AACA,qBAAI,CAACvB,MAAL,GAAcuB,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAACtB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,kEAAU,EAAV,CAFuB,EAGvB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB0E,cAApB,CAAmC,KAAKZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACqE,UAAD,EAAqB;AACnB,qBAAI,CAACjD,MAAL,GAAciD,UAAd;AACA,qBAAI,CAAChD,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,kEAAU,EAAV,CAFsB,EAGtB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAVH,EAUK,UAACX,GAAD,EAAS,CAEX,CAZH;AAcD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB+D,iBAApB,CAAsC,KAAKD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,kBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,EAAF,IAAQJ,WAAW,CAAC,CAAD,CAAX,CAAeI,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAACvD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,kEAAU,EAAV,CAFyB,EAGzB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACO,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACaiC,K,EAAO;AACnB,iBAAK4B,iBAAL,CAAuB5B,KAAvB;AACA,iBAAKb,iBAAL,CAAuBa,KAAvB;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;uCACYK,K,EAAO;AAClB,iBAAKqG,MAAL,GAAcrG,KAAK,CAACR,EAApB;AACA,iBAAK8G,uBAAL,CAA6BtG,KAAK,CAACR,EAAnC;AACD;;;kDAEuB6G,M,EAAQ;AAAA;;AAC9B,iBAAKhL,uBAAL,CAA6BkL,yCAA7B,CAAuE,KAAK1K,YAAL,CAAkBqE,MAAzF,EAAgGmG,MAAhG,EAAwG/I,SAAxG,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,uBAAI,CAAC6K,gBAAL,GAAwBjJ,IAAI,CAACwB,IAA7B,CADuB,CAEvB;;AACE,qBAAK,IAAI0H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACD,gBAAL,CAAsBvH,MAA1C,EAAkDwH,CAAC,EAAnD,EAAuD;AACrD,sBAAI,OAAI,CAACD,gBAAL,CAAsBC,CAAtB,EAAyB9K,MAAzB,IAAmC,GAAvC,EAA4C;AAC1C,2BAAI,CAAC6K,gBAAL,CAAsBC,CAAtB,EAAyBC,YAAzB,GAAwC,UAAxC;AACD,mBAFD,MAEO;AACL,2BAAI,CAACF,gBAAL,CAAsBC,CAAtB,EAAyBC,YAAzB,GAAwC,UAAxC;AACD;AACF;;AACD,uBAAI,CAACT,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACO,gBAA5B,CAAlB;AACA,uBAAI,CAACP,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,uBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,uBAAI,CAACzB,GAAL,CAAS0B,aAAT;AACH,eAdD,MAcO;AACL,uBAAI,CAACtL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgB0F,oBAAnC,EAAyD,SAAzD,EAAoE;AAAExF,0BAAQ,EAAE;AAAZ,iBAApE;;AACA;AACD;AAEF,aArBH,EAqBK,UAACtD,GAAD,EAAS,CACX,CAtBH;AAwBD;;;kCACMyB,E,EAAI;AAAA;;AACT,iBAAKsH,gBAAL,GAAwB,KAAKrL,MAAL,CAAY0F,IAAZ,CAAiB,mHAAjB,EAA6C;AACnE4F,0BAAY,EAAE;AADqD,aAA7C,CAAxB;AAGA,iBAAKD,gBAAL,CAAsB5E,WAAtB,GAAoC5E,SAApC,CAA8C,UAAA6E,MAAM,EAAI;AACtD,kBAAIA,MAAJ,EAAY;AACV,uBAAI,CAAC9G,uBAAL,CAA6B2L,2BAA7B,CAAyDxH,EAAzD,EAA6D,OAAI,CAAC3D,YAAL,CAAkBqE,MAA/E,EAAuF5C,SAAvF,CACE,UAACC,IAAD,EAAe;AACb,sBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,2BAAI,CAAC2K,uBAAL,CAA6B,OAAI,CAACD,MAAlC;;AACA,2BAAI,CAACnB,GAAL,CAAS0B,aAAT;;AACA,2BAAI,CAACtL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgB8F,aAAnC,EAAkD,SAAlD,EAA6D;AAAE5F,8BAAQ,EAAE;AAAZ,qBAA7D;AACD,mBAJD,MAIO;AACL,2BAAI,CAAC/F,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,8BAAQ,EAAE;AAAZ,qBAA5D;AACD;AAEF,iBAVH,EAUK,UAACtD,GAAD,EAAS;AACV,yBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBAZH;AAcD;;AACD,qBAAI,CAACyF,gBAAL,GAAwB,IAAxB;AACD,aAlBD;AAoBD;;;qCAEUjD,M,EAAQ9E,I,EAAMmI,Y,EAAY;AAAA;;AACnC,gBAAI5G,MAAM,GAAG;AACXuD,oBAAM,EAAEA,MADG;AAEX9E,kBAAI,EAAEA,IAFK;AAGXmI,0BAAY,EAAEA;AAHH,aAAb;AAKA,gBAAMnF,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,uFAAjB,EAAsC;AACtDa,mBAAK,EAAE,QAD+C;AAEtDjD,kBAAI,EAAEuB,MAFgD;AAGtD6G,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDL,0BAAY,EAAE;AALwC,aAAtC,CAAlB;AAQAhF,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,qBAAI,CAACmE,uBAAL,CAA6B,OAAI,CAACD,MAAlC;AACD,aAFD;AAGD;;;qCACUxC,M,EAAQ9E,I,EAAI;AAAA;;AACrB,gBAAIuB,MAAM,GAAG;AACXuD,oBAAM,EAAEA,MADG;AAEX9E,kBAAI,EAAEA;AAFK,aAAb;AAIA,gBAAMgD,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,4FAAjB,EAAwC;AACxDa,mBAAK,EAAE,QADiD;AAExDjD,kBAAI,EAAEuB,MAFkD;AAGxD8G,uBAAS,EAAE,KAH6C;AAIxDL,0BAAY,EAAE,IAJ0C;AAKxDI,wBAAU,EAAE;AAL4C,aAAxC,CAAlB;AAOApF,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,qBAAI,CAACmE,uBAAL,CAA6B,OAAI,CAACD,MAAlC;;AACA,qBAAI,CAACnB,GAAL,CAAS0B,aAAT;AACD,aAHD;AAID;;;2CAEgBS,a,EAAeC,E,EAAI;AAClCA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKhC,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKQ,YAAL,CAAkB2B,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIH,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK9B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKM,YAAL,CAAkB1J,KAAlB,GAA0B,EAA1B;AACD;;AACD,gBAAIkL,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAK/B,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKO,YAAL,CAAkBvJ,MAAlB,GAA2B,EAA3B;AACD;;AACD,gBAAI+K,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK7B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKK,YAAL,CAAkBrF,iBAAlB,GAAsC,IAAtC;AACD;;AACD,gBAAI6G,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKzB,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKC,YAAL,CAAkBpF,iBAAlB,GAAsC,IAAtC;AACD;;AACD,gBAAI4G,aAAa,IAAI,YAArB,EAAmC;AACjC,mBAAK5B,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKI,YAAL,CAAkB4B,SAAlB,GAA8B,GAA9B;AACD;;AACD,gBAAIJ,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK3B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKG,YAAL,CAAkB6B,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIL,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAK1B,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKE,YAAL,CAAkBa,YAAlB,GAAiC,GAAjC;AACD;AACF;;;wCAEa;AACZ,iBAAKiB,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,UAAL,CAAgB2B,YAAhB,CAA6B3I,MAAjD,EAAyDwH,CAAC,EAA1D,EAA8D;AAC5D,kBAAIoB,SAAS,GAAG,KAAK5B,UAAL,CAAgB2B,YAAhB,CAA6BnB,CAA7B,CAAhB;AACA,kBAAI1H,IAAI,GAAG;AACT,4BAAY8I,SAAS,CAACL,SADb;AACwB,0BAAUK,SAAS,CAACvL,MAD5C;AACoD,yBAASuL,SAAS,CAAC1L,KADvE;AAET,wBAAQ0L,SAAS,CAAC9G,UAFT;AAEqB,2BAAW8G,SAAS,CAAC7G,aAF1C;AAEyD,wBAAQ6G,SAAS,CAACJ,SAF3E;AAEsF,yBAASI,SAAS,CAACH,UAFzG;AAGT,0BAAUG,SAAS,CAACnB;AAHX,eAAX;AAKA,mBAAKiB,YAAL,CAAkBG,IAAlB,CAAuB/I,IAAvB;AACD;;AACD,gBAAMgJ,SAAS,GAAG,2CAAWC,aAAX,CAAyB,KAAKL,YAA9B,CAAlB;AACA,gBAAMM,QAAQ,GAAkB,2CAAWC,QAAX,EAAhC;AAEA,uDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,kDAAlD;AACA,2DAAeE,QAAf,EAAyB,uDAAzB;AACD;;;sCAEW;AAAA;;AACV,gBAAIG,GAAG,GAAG,IAAI,4CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAGA,iBAAKT,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,UAAL,CAAgB2B,YAAhB,CAA6B3I,MAAjD,EAAyDwH,CAAC,EAA1D,EAA8D;AAC5D,kBAAIoB,SAAS,GAAG,KAAK5B,UAAL,CAAgB2B,YAAhB,CAA6BnB,CAA7B,CAAhB;AAEA,kBAAI1H,IAAI,GAAG,CAAC8I,SAAS,CAACL,SAAX,EAAsBK,SAAS,CAACvL,MAAhC,EAAwCuL,SAAS,CAAC1L,KAAlD,EAAyD0L,SAAS,CAAC9G,UAAnE,EAA+E8G,SAAS,CAAC7G,aAAzF,EAAwG6G,SAAS,CAACJ,SAAlH,EACXI,SAAS,CAACH,UADC,EACWG,SAAS,CAACnB,YADrB,CAAX;AAGA,mBAAKiB,YAAL,CAAkBG,IAAlB,CAAuB/I,IAAvB;AACD;;AACD,gBAAIsJ,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAJ,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AAECT,eAAW,CAACW,SAAZ,CAAsB;AACrB3D,kBAAI,EAAE,KAAKA,IADU;AAErB4D,kBAAI,EAAE,KAAKrB,YAFU;AAGrBsB,mBAAK,EAAE,MAHc;AAIrBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJS;AAKrBC,oBAAM,EAAE;AACNC,2BAAW,EAAE,CADP;AAENC,wBAAQ,EAAE;AAFJ,eALa;AAWrBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXa;AAYrBC,yBAAW,EAAE,qBAAA3K,IAAI,EAAI,CACpB,CAboB;AAcrB4K,yBAAW,EAAE,qBAAA5K,IAAI,EAAI;AACnBqJ,mBAAG,CAACwB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAD,mBAAG,CAACwB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAH,mBAAG,CAACyB,IAAJ,CAAS,yDAAT,EAAoEzB,GAAG,CAAC0B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAAvG,EAA0G,EAA1G,EAA8G;AAAEC,uBAAK,EAAE;AAAT,iBAA9G;AAEA7B,mBAAG,CAACU,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAV,mBAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACyB,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACAzB,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,mBAAG,CAACS,WAAJ,CAAgB,CAAhB;AACAT,mBAAG,CAACyB,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAN,mBAAG,CAACyB,IAAJ,CAAS,kBAAkB,OAAI,CAAChO,YAAL,CAAkBwO,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA7B,mBAAG,GAAG,OAAI,CAACkC,YAAL,CAAkBlC,GAAlB,CAAN;AACD;AA/BoB,aAAtB,EAxBS,CA0DV;;AACAA,eAAG,CAACmC,MAAJ,CAAW,kBAAX,EA3DU,CA4DV;;AACAnC,eAAG,CAACoC,IAAJ,CAAS,6DAAT;AAED;;;uCACYpC,G,EAAK;AAChB,gBAAIqC,OAAO,GAAGrC,GAAG,CAACsC,gBAAJ,EAAd;AACA,gBAAMjE,CAAC,GAAG2B,GAAG,CAAC0B,QAAJ,CAAaY,gBAAb,EAAV;AACAtC,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB,EAJgB,CAKhB;;AAEAT,eAAG,CAACyB,IAAJ,CAAS,UAAUc,MAAM,CAAClE,CAAD,CAAhB,GAAsB,MAAtB,GAA+BkE,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOrC,GAAP;AACD;;;;;;;yBAtaUnD,sB,EAAsB,4M,EAAA,oI,EAAA,4H,EAAA,yI,EAAA,gI,EAAA,wJ;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;4EAStB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACjFtB;;AACI;;AAAqC;AAAA,qBAAS,IAAA2F,WAAA,EAAT;AAAsB,aAAtB;;AACjC;;AAAU;;AAAiB;;AAC/B;;AAAS;;AACT;;AAAqC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACjC;;AAAU;;AAAc;;AAC5B;;AAEJ;;AAEA;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAAW;;AAAO;;AAClB;;AAEA;;AACI;AAAA,qBAAkB,IAAA/H,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAC9E;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAAW;;AAAK;;AAChB;;AAEA;;AACI;AAAA,qBAAkB,IAAAD,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAC5E;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAAW;;AAAI;;AACf;;AAEA;;AACI;AAAA,qBAAkB,IAAAD,YAAA,qBAAlB;AAAmD,aAAnD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA2E;;AAC3E;;AACJ;;AACA;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAEI;;AACI;;AAGI;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AAEJ;;AAEA;;AACI;;AAGA;;AAiBJ;;AACA;;AACA;;AACJ;;AAEA;;AACJ;;AACJ;;AACJ;;;;;;;;;;AAnNc;;AAAA;;AAMU;;AAAA;;AAC6C;;AAAA;;AAEd;;AAAA;;AASvB;;AAAA;;AAIwC;;AAAA;;AAEL;;AAAA;;AAEZ;;AAAA;;AASvB;;AAAA;;AAIuC;;AAAA;;AAEL;;AAAA;;AAEX;;AAAA;;AASvB;;AAAA;;AAYY;;AAAA,mGAAyB,eAAzB,EAAyB,gBAAzB,EAAyB,YAAzB,EAAyB,cAAzB;;AA4IR;;AAAA;;AACa;;AAAA;;AAGtB;;AAAA;;;;;;;;qBDxJb;;;;;;wEAGDqC,sB,EAAsB;gBARlC,uDAQkC;iBARxB;AACTjC,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAQwB,U;;;;;;;;;;;;;;;AASU8C,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBQ,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AEjF9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAgBO,UAAMmE,gBAAgB,GAAW,CACtC;AACGC,YAAI,EAAG,QADV;AACoBC,iBAAS,EAAG,wEADhC;AACgDC,mBAAW,EAAC,CAAC,4EAAD;AAD5D,OADsC,EAItC;AACEF,YAAI,EAAG,8BADT;AACyCC,iBAAS,EAAG,kEADrD;AACqEC,mBAAW,EAAC,CAAC,4EAAD;AADjF,OAJsC,EAOtC;AACEF,YAAI,EAAG,uBADT;AACkCC,iBAAS,EAAG,4FAD9C;AACsEC,mBAAW,EAAC,CAAC,4EAAD;AADlF,OAPsC,EAUtC;AACEF,YAAI,EAAG,gCADT;AAC2CC,iBAAS,EAAG,+FADvD;AACgFC,mBAAW,EAAC,CAAC,4EAAD;AAD5F,OAVsC,EAatC;AACEF,YAAI,EAAE,EADR;AACYG,kBAAU,EAAE,uBADxB;AACiDC,iBAAS,EAAE;AAD5D,OAbsC,CAAjC;;;;;;;;;;;;;;;;AChBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQeC,+B;AAGX,iDAAoBC,IAApB,EAAuC;AAAA;;AAAnB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAAC,OAAA,aAAa,sEAAYC,QAAzB;AAE0C;;;;yDAEXjL,M,EAAM;AACjC,mBAAO,KAAK+K,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,sCAAgEhL,MAAhE,CAAP;AACH;;;yDAC8BA,M,EAAM;AACjC,mBAAO,KAAK+K,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,sCAAgEhL,MAAhE,CAAP;AACH;;;6DACkCA,M,EAAM;AACrC,mBAAO,KAAK+K,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,0CAAoEhL,MAApE,CAAP;AACH;;;yDAE8BC,O,EAAQO,O,EAAO;AAC1C,mBAAO,KAAKuK,IAAL,CAAU3L,GAAV,WAAiB,KAAK4L,OAAtB,qEAAwF/K,OAAxF,cAAmGO,OAAnG,EAAP;AACH;;;2EACgDP,O,EAAQO,O,EAAO;AAC5D,mBAAO,KAAKuK,IAAL,CAAU3L,GAAV,WAAiB,KAAK4L,OAAtB,+DAAkF/K,OAAlF,cAA6FO,OAA7F,EAAP;AACH;;;8DAEmCP,O,EAAQO,O,EAAO;AAC/C,mBAAO,KAAKuK,IAAL,CAAU3L,GAAV,WAAiB,KAAK4L,OAAtB,kDAAqE/K,OAArE,cAAgFO,OAAhF,EAAP;AACH;;;oEACyCP,O,EAAQO,O,EAAO;AACrD,mBAAO,KAAKuK,IAAL,CAAU3L,GAAV,WAAiB,KAAK4L,OAAtB,wDAA2E/K,OAA3E,cAAsFO,OAAtF,EAAP;AACH;;;sDAC2BtB,E,EAAGe,O,EAAO;AAClC,mBAAO,KAAK8K,IAAL,qBAAoB,KAAKC,OAAzB,0CAAgE9L,EAAhE,cAAsEe,OAAtE,EAAP;AACH;;;+CACoBD,M,EAAM;AACvB,mBAAO,KAAK+K,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,0BAAoDhL,MAApD,CAAP;AACH;;;;;;;yBAjCU8K,+B,EAA+B,uH;AAAA,O;;;eAA/BA,+B;AAA+B,iBAA/BA,+BAA+B,K;AAAA,oBAH9B;;;;;wEAGDA,+B,EAA+B;gBAJ7C,wDAI6C;iBAJlC;AACRK,sBAAU,EAAE;AADJ,W;AAIkC,U;;;;;;;;;;;;;;;;;;;;;;ACR9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkBU;;AAA2D;;AAC3D;;;;;;AACA;;AAA0D;;AAC1D;;;;;;AAOA;;AAA0D;;AAAkB;;;;;;AAC5E;;AAAyD;;AAAwB;;;;;;AAOjF;;AAAwD;;AAAqB;;;;;;AAM7E;;AAAwD;;AAAsB;;;;;;AAY9E;;AAA6D;;AAA2B;;;;;;AACxF;;AAA4D;;AAAuB;;;;;;AAQnF;;AAAiE;;AAA0B;;;;;;AAC3F;;AAAgE;;AAAuB;;;;;;AAOvF;;AAAiE;;AAA+B;;;;;;AAChG;;AAAgE;;AAAuB;;;;;;AA0BvF;;AAA4D;;AAC5D;;;;;;AACA;;AAA2D;;AAC3D;;;;;;AAQE;;AACE;;AACF;;;;;;AAF8D;;AAC5D;;AAAA;;;;;;AAOJ;;AAAyD;;AAAiB;;;;;;AAQxE;;AACE;;AACF;;;;;;AAF+D;;AAC7D;;AAAA;;;;;;AAOJ;;AAA0D;;AAAkB;;;;;;AAY1E;;AACE;;AACF;;;;;;AAFiE;;AAC/D;;AAAA;;;;;;AAOJ;;AAA4D;;AAAoB;;;;;;;;AAoBlF;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;;;;;;;AACxH;;AAA6F;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAQ;;;;;;;;AAC5H;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAQ;;;;AD/JhI,eAAS1Q,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAED,OAAO,CAACC;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAWYyQ,mB;AAwBX,qCAAoBvQ,EAApB,EAA6CE,uBAA7C,EACUC,QADV,EACwCF,cADxC,EACgFK,MADhF,EAESsG,SAFT,EAEuFhD,IAFvF,EAE4G;AAAA;;AAFxF,eAAA5D,EAAA,GAAAA,EAAA;AAAyB,eAAAE,uBAAA,GAAAA,uBAAA;AACnC,eAAAC,QAAA,GAAAA,QAAA;AAA8B,eAAAF,cAAA,GAAAA,cAAA;AAAwC,eAAAK,MAAA,GAAAA,MAAA;AACvE,eAAAsG,SAAA,GAAAA,SAAA;AAA8E,eAAAhD,IAAA,GAAAA,IAAA;AAvBvF,eAAAyE,UAAA,GAAa,KAAb;AAGA,eAAA7H,MAAA,GAAS,KAAT;AAYA,eAAAgQ,cAAA,GAA0B,KAA1B;AACA,eAAAC,UAAA,GAAsB,KAAtB;AAO+G;;;;qCAEpG;AACT,iBAAKhQ,UAAL;AACD;;;uCAEY;AACX,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAK4H,SAAL,GAAiB9H,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACA,iBAAKsE,MAAL,GAAc,KAAKvB,IAAnB;AAEA,iBAAKyE,UAAL,GAAkB,KAAKlD,MAAL,CAAYuD,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AACA,iBAAK8H,cAAL,GAAsB,KAAKrL,MAAL,CAAY4G,YAAZ,IAA4B,cAA5B,GAA6C,IAA7C,GAAoD,KAA1E,CANW,CAMsE;;AACjF,iBAAK0E,UAAL,GAAkB,KAAKtL,MAAL,CAAY4G,YAAZ,IAA4B,gBAA5B,GAA+C,IAA/C,GAAsD,KAAxE,CAPW,CAOoE;;AAC/E,iBAAKjL,IAAL,GAAY,KAAKd,EAAL,CAAQe,KAAR,CAAc;AACxBC,mBAAK,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,mCAAnB,CAArB,CAAL,CADgB;AAExBC,oBAAM,EAAG,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,2BAAnB,CAAtB,CAAL,CAFe;AAGxBE,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,UAAnB,CAArB,CAAL,CAHc;AAIxBG,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,UAAnB,CAArB,CAAL,CAJU;AAKxBI,iBAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CALmB;AAMxBM,iBAAG,EAAC,CAAC,EAAD,EAAI,0DAAWN,QAAf,CANoB;AAOxBO,0BAAY,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWP,QAAZ,EAAqB,0DAAWC,OAAX,CAAmB,UAAnB,CAArB,CAAJ,CAPW;AAQxBO,0BAAY,EAAE,CAAC,EAAD,CARU;AASxBC,0BAAY,EAAE,CAAC,EAAD,CATU;AAUxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,oCAAnB,CAAtB,CAAL,CAVe;AAWxBU,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAChC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAXkB;AAYxBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACjC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAZiB;AAaxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAClC,2BAA2B,EAA5B,EAAgC,0DAAWqB,QAA3C,CAAL,CAbe;AAcxBc,sBAAQ,EAAE,CAAC,EAAD,CAdc;AAexBvB,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAfZ,aAAd,CAAZ;;AAkBA,gBAAI,KAAK6H,UAAT,EAAqB;AACnB,mBAAKM,YAAL,CAAkB,KAAKxD,MAAvB;AACD;;AACD,iBAAKlD,aAAL;AACA,iBAAKC,WAAL,CAAiB,KAAKiD,MAAL,CAAYvB,IAAZ,CAAiBU,UAAlC;AACA,iBAAKsE,UAAL,CAAgB,KAAKzD,MAAL,CAAYvB,IAAZ,CAAiBG,QAAjC;AACD;;;0CACe;AAAA;;AACd,iBAAK9D,cAAL,CAAoBgC,aAApB,GAAoCE,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACC,SAAL,GAAiBD,IAAjB;;AACA,kBAAI,OAAI,CAACiG,UAAT,EAAqB;AACnB,oBAAMnE,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,EAAF,IAAQ,OAAI,CAACc,MAAL,CAAYvB,IAAZ,CAAiBU,UAA7B;AAAA,iBAArB,CAAjB;;AACA,uBAAI,CAACxD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;AACD;;AACD,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aAbH,EAaK,UAACO,GAAD,EAAS,CAEX,CAfH;AAiBD;;;yCACcC,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKV,SAAL,CAAeW,MAAf,CAAsB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;sCAEW+F,S,EAAW;AAAA;;AACrB,iBAAK5I,cAAL,CAAoBwE,iBAApB,CAAsCoE,SAAtC,EAAiD1G,SAAjD,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACe,MAAL,GAAcf,IAAd;;AACA,kBAAI,OAAI,CAACiG,UAAT,EAAqB;AACnB,oBAAMnE,QAAQ,GAAG,OAAI,CAACf,MAAL,CAAYgB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,EAAF,IAAQ,OAAI,CAACc,MAAL,CAAYvB,IAAZ,CAAiBG,QAA7B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAACjD,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCN,QAAhC;AACD;;AACD,qBAAI,CAACd,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;uCACYC,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKI,MAAL,CAAYH,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;qCAEUgG,O,EAAS;AAAA;;AAClB,iBAAK7I,cAAL,CAAoB0E,cAApB,CAAmCmE,OAAnC,EAA4C3G,SAA5C,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACmB,MAAL,GAAcnB,IAAd;;AACA,kBAAI,OAAI,CAACiG,UAAT,EAAqB;AACnB,oBAAMnE,QAAQ,GAAG,OAAI,CAACX,MAAL,CAAYY,IAAZ,CAAiB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,EAAF,IAAQ,OAAI,CAACc,MAAL,CAAYvB,IAAZ,CAAiB+B,OAA7B;AAAA,iBAAlB,CAAjB;;AACA,uBAAI,CAAC7E,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+BN,QAA/B;AACD;;AACD,qBAAI,CAACV,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAdH,EAcK,UAACX,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;sCACWC,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKQ,MAAL,CAAYP,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;kCAEO;AACN,iBAAK8D,SAAL,CAAemC,KAAf;AACD;;;6CACkB;AACjB,iBAAKnC,SAAL,CAAemC,KAAf;AACD;;;0CACejI,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACyD,GAAL,CAAS,OAAT,EAAkB+B,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHxF,IAAI,CAACyD,GAAL,CAAS,OAAT,EAAkB+B,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEYnB,M,EAAQ;AACnB,iBAAKrE,IAAL,CAAUyD,GAAV,CAAc,QAAd,EAAwBC,QAAxB,CAAiCW,MAAM,CAACvB,IAAP,CAAYzC,MAA7C;AACA,iBAAKL,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCW,MAAM,CAACvB,IAAP,CAAY5C,KAA5C;AACA,iBAAKF,IAAL,CAAUyD,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCW,MAAM,CAACvB,IAAP,CAAYyB,iBAA/C;AACA,iBAAKvE,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY0B,iBAAnD;AACA,iBAAKxE,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BW,MAAM,CAACvB,IAAP,CAAYtC,GAA1C;AACA,iBAAKR,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BW,MAAM,CAACvB,IAAP,CAAYrC,GAA1C;AACA,iBAAKT,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY2B,kBAAnD;AACA,iBAAKzE,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY4B,QAAnD;AACA,iBAAK1E,IAAL,CAAUyD,GAAV,CAAc,cAAd,EAA8BC,QAA9B,CAAuCW,MAAM,CAACvB,IAAP,CAAY6B,QAAnD;AACA,iBAAK3E,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCW,MAAM,CAACvB,IAAP,CAAY8B,GAA9C;AACA,iBAAK5E,IAAL,CAAUyD,GAAV,CAAc,UAAd,EAA0BC,QAA1B,CAAmCW,MAAM,CAACvB,IAAP,CAAY7B,QAA/C,EAXmB,CAYnB;AACA;;AACA,gBAAG,KAAKsG,UAAR,EAAmB;AACjB,mBAAK7H,MAAL,GAAc2E,MAAM,CAACvB,IAAP,CAAYpD,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAoC2E,MAAM,CAACvB,IAAP,CAAYpD,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAArF;AACD;;AACD,gBAAG,KAAKiQ,UAAR,EAAmB;AACjB,mBAAKjQ,MAAL,GAAc2E,MAAM,CAACvB,IAAP,CAAYpD,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAoC2E,MAAM,CAACvB,IAAP,CAAYpD,MAAZ,IAAsB,GAAtB,GAA4B,IAA5B,GAAmC,KAArF;AACD;AAEF;;;uCAEYqE,K,EAAO;AAClB,iBAAKrE,MAAL,GAAcqE,KAAK,CAAC6B,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKlG,MAAxB;AACD;;;4CAEiB;AAAA;;AAChB,iBAAKkD,WAAL,GAAmB,KAAK5C,IAAL,CAAUhB,KAAV,CAAgB6B,OAAnC;AACA,iBAAK1B,cAAL,CAAoB0D,oBAApB,CAAyC,KAAKD,WAA9C,EAA2DvB,SAA3D,CACE,UAACyB,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAIC,SAAR,IAAqBD,IAAI,IAAI,IAA7B,IAAqCA,IAAI,CAACE,MAAL,GAAc,CAAvD,EAA0D;AACxD,uBAAI,CAACC,QAAL,GAAgBH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAxB;;AACA,uBAAI,CAAC9D,cAAL,CAAoB+D,iBAApB,CAAsC,OAAI,CAACD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB,yBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,sBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAAC,CAAD,CAAJ,CAAQU,UAApB;AAAA,mBAArB,CAAjB;;AACA,yBAAI,CAACxD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,yBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,2BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,mBAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,2BAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,mBAAR,CAJyB,CAA7B;AAMA,yBAAI,CAACiC,UAAL,GAAkBV,IAAI,CAAC,CAAD,CAAJ,CAAQU,UAA1B;;AACA,yBAAI,CAACrE,cAAL,CAAoBwE,iBAApB,CAAsC,OAAI,CAACH,UAA3C,EAAuDnC,SAAvD,CACE,UAACuC,SAAD,EAAoB;AAClB,2BAAI,CAACvB,MAAL,GAAcuB,SAAd;;AACA,wBAAMR,QAAQ,GAAG,OAAI,CAACf,MAAL,CAAYgB,IAAZ,CAAiB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAApB;AAAA,qBAAlB,CAAjB;;AACA,2BAAI,CAACjD,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgCN,QAAhC;;AAEA,2BAAI,CAACd,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,qBAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,qBAAR,CAJuB,CAA3B;AAOD,mBAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;;AAiBA,yBAAI,CAACmB,QAAL,GAAgBH,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAxB;;AACA,yBAAI,CAAC9D,cAAL,CAAoB0E,cAApB,CAAmC,OAAI,CAACZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACyC,QAAD,EAAmB;AACjB,2BAAI,CAACrB,MAAL,GAAcqB,QAAd,CADiB,CAEjB;AACA;;AACA,2BAAI,CAACpB,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,6BAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,qBAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,6BAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,qBAAR,CAJsB,CAA1B;AAOD,mBAZH,EAYK,UAACX,GAAD,EAAS,CAEX,CAdH;AAgBD,iBA/CH,EA+CK,UAACA,GAAD,EAAS,CAEX,CAjDH;AAmDD,eArDD,MAqDO,CAEN;AACF,aA1DH,EA0DK,UAACA,GAAD,EAAS,CAEX,CA5DH;AA8DD;;;0CACeiC,K,EAAO;AACrB,iBAAKxC,SAAL,GAAiB,EAAjB;AACA,iBAAKJ,aAAL;AACA,iBAAK6C,kBAAL,CAAwBD,KAAxB,EAHqB,CAIrB;;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK1D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CACkB3C,K,EAAO;AAAA;;AACxB,iBAAKkC,QAAL,GAAgBlC,KAAK,CAACwC,EAAtB;AACA,iBAAKpE,cAAL,CAAoBwE,iBAApB,CAAsC,KAAKV,QAA3C,EAAqD5B,SAArD,CACE,UAACuC,SAAD,EAAoB;AAClB;AACA,qBAAI,CAACvB,MAAL,GAAcuB,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAACtB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,iEAAU,EAAV,CAFuB,EAGvB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;wCACaiC,K,EAAO;AACnB,iBAAK4B,iBAAL,CAAuB5B,KAAvB;AACA,iBAAKb,iBAAL,CAAuBa,KAAvB;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;4CACiB+B,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB0E,cAApB,CAAmC,KAAKZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACqE,UAAD,EAAqB;AACnB;AACA,qBAAI,CAACjD,MAAL,GAAciD,UAAd;AACA,qBAAI,CAAChD,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,iEAAU,EAAV,CAFsB,EAGtB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAXH,EAWK,UAACX,GAAD,EAAS,CAEX,CAbH;AAeD;;;4CAEiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB+D,iBAApB,CAAsC,KAAKD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,kBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,EAAF,IAAQJ,WAAW,CAAC,CAAD,CAAX,CAAeI,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAACvD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,iEAAU,EAAV,CAFyB,EAGzB,2DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,2DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACO,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;uCAEYiC,K,EAAO,CAClB;AACD;;;uCACS;AAAA;;AACR,gBAAMM,MAAM,GAAQ;AAClBd,gBAAE,EAAG,KAAKc,MAAL,CAAYvB,IAAZ,CAAiBS,EADJ;AAElB7D,oBAAM,EAAE,GAFU;AAGlBwI,uBAAS,EAAE,KAAKtI,YAAL,CAAkBqE;AAHX,aAApB;AAKA,iBAAK7E,uBAAL,CAA6BwQ,kCAA7B,CAAgEvL,MAAhE,EAAwEhD,SAAxE,CACE,UAACC,IAAD,EAAe;AACb,kBAAGA,IAAI,CAAC5B,MAAL,IAAe,IAAlB,EAAuB;AACrB,uBAAI,CAACL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBkD,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhD,0BAAQ,EAAE;AAAZ,iBAAnE;;AACA,uBAAI,CAACU,SAAL,CAAemC,KAAf;AACD,eAHD,MAGK;AACH,uBAAI,CAAC5I,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,0BAAQ,EAAE;AAAZ,iBAA5C;;AACA,uBAAI,CAACU,SAAL,CAAemC,KAAf;AACD;AACF,aATH,EAUE,UAACnG,GAAD,EAAS;AACP,qBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,wBAAQ,EAAE;AAAZ,eAA5D;;AACA,qBAAI,CAACU,SAAL,CAAemC,KAAf;AACD,aAbH;AAeD;;;qCACO;AAAA;;AACN,gBAAM5D,MAAM,GAAQ;AAClBd,gBAAE,EAAG,KAAKc,MAAL,CAAYvB,IAAZ,CAAiBS,EADJ;AAElB7D,oBAAM,EAAE,GAFU;AAGlBwI,uBAAS,EAAE,KAAKtI,YAAL,CAAkBqE;AAHX,aAApB;AAKA,iBAAK7E,uBAAL,CAA6BwQ,kCAA7B,CAAgEvL,MAAhE,EAAwEhD,SAAxE,CACE,UAACC,IAAD,EAAe;AACb,kBAAGA,IAAI,CAAC5B,MAAL,IAAe,IAAlB,EAAuB;AACrB,uBAAI,CAACL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBkD,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhD,0BAAQ,EAAE;AAAZ,iBAAnE;;AACA,uBAAI,CAACU,SAAL,CAAemC,KAAf;AACD,eAHD,MAGK;AACH,uBAAI,CAAC5I,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,0BAAQ,EAAE;AAAZ,iBAA5C;;AACA,uBAAI,CAACU,SAAL,CAAemC,KAAf;AACD;AACF,aATH,EAUE,UAACnG,GAAD,EAAS;AACP,qBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,wBAAQ,EAAE;AAAZ,eAA5D;;AACA,qBAAI,CAACU,SAAL,CAAemC,KAAf;AACD,aAbH;AAeD;;;uCACS;AAAA;;AACR,gBAAG,KAAK0H,UAAR,EAAmB;AACjB,kBAAMtL,MAAM,GAAO;AACjBd,kBAAE,EAAE,KAAKc,MAAL,CAAYvB,IAAZ,CAAiBS,EADJ;AAEjB7D,sBAAM,EAAE,GAFS;AAGjBwI,yBAAS,EAAC,KAAKtI,YAAL,CAAkBqE;AAHX,eAAnB;AAKA,mBAAK7E,uBAAL,CAA6BwQ,kCAA7B,CAAgEvL,MAAhE,EAAwEhD,SAAxE,CACE,UAACC,IAAD,EAAc;AACZ,oBAAGA,IAAI,CAAC5B,MAAL,IAAe,IAAlB,EAAuB;AACrB,yBAAI,CAACL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBkD,mBAAnC,EAAwD,SAAxD,EAAmE;AAAEhD,4BAAQ,EAAE;AAAZ,mBAAnE;;AACA,yBAAI,CAACU,SAAL,CAAemC,KAAf;AACD,iBAHD,MAGK;AACH,yBAAI,CAAC5I,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAgC,SAAhC,EAA0C;AAAEF,4BAAQ,EAAC;AAAX,mBAA1C;;AACA,yBAAI,CAACU,SAAL,CAAemC,KAAf;AACD;AAEF,eAVH,EAUI,UAACnG,GAAD,EAAS;AACT,uBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAgD,SAAhD,EAA0D;AAAEH,0BAAQ,EAAC;AAAX,iBAA1D;;AACA,uBAAI,CAACU,SAAL,CAAemC,KAAf;AACD,eAbH;AAeD;AAEF;;;uCAES;AAAA;;AACR,gBAAI5D,MAAM,GAAG,EAAb;AAGA,gBAAMyB,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,wGAAjB,EAAqC;AACrDa,mBAAK,EAAE,OAD8C;AAErDC,oBAAM,EAAC,OAF8C;AAGrDlD,kBAAI,EAAEuB;AAH+C,aAArC,CAAlB;AAKAyB,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,kBAAGA,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAInD,SAA/B,EAAyC;AACvC,uBAAI,CAAC/C,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BwC,MAAM,CAAC,CAAD,CAAN,CAAU1F,GAAxC;;AACA,uBAAI,CAACR,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8BwC,MAAM,CAAC,CAAD,CAAN,CAAUzF,GAAxC;AACD,eAHD,MAGK;AACH,uBAAI,CAACT,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAACyC,IAAnC;;AACA,uBAAI,CAACnG,IAAL,CAAUyD,GAAV,CAAc,KAAd,EAAqBC,QAArB,CAA8B,OAAI,CAAC0C,KAAnC;;AACA,uBAAI,CAAC/G,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBmB,qBAAnC,EAA0D,SAA1D,EAAqE;AAAEjB,0BAAQ,EAAE;AAAZ,iBAArE;AACD;AAEF,aAVD;AAWD;;;;;;;yBAtaUqK,mB,EAAmB,2H,EAAA,2M,EAAA,wI,EAAA,wJ,EAAA,mI,EAAA,sI,EAAA,gEA0BiC,wEA1BjC,C;AA0BgD,O;;;cA1BnEA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;oFAHnB,CAAC,wDAAD,C;AAAU,kB;AAAA,gB;AAAA,+kI;AAAA;AAAA;AC9BvB;;AAA6D;AAAA,qBAAS,IAAAnH,gBAAA,EAAT;AAA2B,aAA3B;;AACQ;;AAAK;;AAE1E;;AAAoC;;AAAoB;;AAExD;;AACE;;AAEE;;AAGE;;AAEE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAA4E;;AAAa;;AACzF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAA2E;;AAAK;;AAChF;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAAoB;AAAA,qBAAS,IAAA7B,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;AAAA,qBAAS,IAAAA,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAW;;AACtD;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AACE;;AAAoF;;AAAc;;AACpG;;AACA;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACE;;AAAmF;;AAAI;;AACzF;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACA;;AAAwF;;AAAK;;AAC7F;;AACA;;AACF;;AACA;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAoF;;AAAI;;AAG1F;;AAEF;;AAEA;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;;AAAoF;;AAAI;;AAG1F;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAA6E;AAAA,qBAAU,IAAAC,eAAA,EAAV;AAA2B,aAA3B;;AAA7E;;AAEA;;AAA8E;;AAAS;;AACvF;;AAEA;;AAEF;;AAEA;;AACE;;AAAW;;AAAI;;AACf;;AACA;;AACE;AAAA,qBAAkB,IAAAC,YAAA,qBAAlB;AAAmD,aAAnD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA2E;;AAAa;;AAC1F;;AACA;;AACF;;AAEA;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AACE;AAAA,qBAAkB,IAAAC,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAAa;;AAC3F;;AACA;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAO;;AAClB;;AAEA;;AACE;AAAA,qBAAkB,IAAAC,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGF;;AACA;;AACE;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAAa;;AAC7F;;AACA;;AAEF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAA8E;;AAAW;;AAG3F;;AAEA;;AACE;;AACE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AACA;;AAAoC;;AACxC;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACA;;AAAkE;AAAA,qBAAS,IAAAmB,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC5F;;AAEF;;AAEF;;AACF;;;;;;;;;;AAlLoC;;AAAA;;AAK1B;;AAAA;;AASY;;AAAA;;AAEA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AAYA;;AAAA;;AACA;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AA0BA;;AAAA;;AAEA;;AAAA;;AAMuC;;AAAA;;AACL;;AAAA;;AAEb;;AAAA;;AAQrB;;AAAA;;AAKwC;;AAAA;;AACL;;AAAA;;AAEd;;AAAA;;AAQrB;;AAAA;;AAQ6D;;AAAA;;AAExB;;AAAA;;AAEhB;;AAAA;;AAQrB;;AAAA;;AAasD;;AAAA;;AAEhE;;AAAA;;AAKmE;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;qBDjJjE;;;;;;wEAIDwH,mB,EAAmB;gBAT/B,uDAS+B;iBATrB;AACT1I,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE,+DALH;AAMTC,qBAAS,EAAE,CAAC,wDAAD;AANF,W;AASqB,U;;;;;;;;;;;;;;;;oBA0B0B,oD;qBAAO,wE;;;;AAnBnCxB,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEzCnqBwB;;AACI;;AACJ;;;;;;AAFiE;;AAC7D;;AAAA;;;;;;AAQR;;AAA4D;;AAAoB;;;;;;AAQ5E;;AACI;;AACJ;;;;;;AAF+D;;AAC3D;;AAAA;;;;;;AAQR;;AAA0D;;AAAkB;;;;;;AAQxE;;AACI;;AACJ;;;;;;AAF8D;;AAC1D;;AAAA;;;;;;AAQR;;AAAyD;;AAAiB;;;;;;;;AAiBtE;;AAA8E;;AAAS;;AACrE;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAAY;;;;;;;;AACxF;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAxC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH4C;;AAAA;;;;;;AAJhD;;AACI;;AAEA;;AAKJ;;;;;;AAPW;;AAAA;;AAEU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAC7B;;AAAM;;AACd;;;;;;;;AACA;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAN5C;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AACJ;;;;;;;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAA7C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHiD;;AAAA;;;;;;AANrD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA8E;;AAC7D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACrF;;AACJ;;;;;;;;AACA;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAHgD;;AAAA;;;;;;AANpD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA0E;;AACzD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACjF;;AAAY;;;;;;;;AAChB;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAnC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACpE;;AACJ;;;;;;AAHuC;;AAAA;;;;;;AAL3C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AAAY;;;;;;;;AAChB;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAL5C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AACI;;AAAqB;;;;;;AADU;;AAC/B;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AAKI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC4B;;AAAS;;;;;;;;AAEjF;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACyB;;AAAW;;;;;;;;AAEnF;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,UAApB,EAA8B,WAA9B,EAAuC,gBAAvC;AAAuD,WAAvD;;AACwB;;AAAsB;;;;;;;;AAXlG;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAEhD;;AAC4F;;AAE5F;;AAC8F;;AAE9F;;AACyG;;AAC7G;;;;;;AAPgC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAGpC;;;;;;AACA;;;;;;;;AD9LhB,eAAS/G,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAED,OAAO,CAACC;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAEY6Q,8B;;;;UAuCAC,qB;AAqCX,uCAAoB1Q,uBAApB,EAAqFI,MAArF,EAAgHN,EAAhH,EACUG,QADV,EACyC4J,GADzC,EACwE9J,cADxE,EAC0G;AAAA;;AADtF,eAAAC,uBAAA,GAAAA,uBAAA;AAAiE,eAAAI,MAAA,GAAAA,MAAA;AAA2B,eAAAN,EAAA,GAAAA,EAAA;AACtG,eAAAG,QAAA,GAAAA,QAAA;AAA+B,eAAA4J,GAAA,GAAAA,GAAA;AAA+B,eAAA9J,cAAA,GAAAA,cAAA;AAlCxE,eAAA+J,gBAAA,GAA6B,CAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,EAAiC,mBAAjC,EAAsD,mBAAtD,EAA2E,WAA3E,EAAwF,YAAxF,EAAsG,QAAtG,EAAgH,QAAhH,CAA7B;AACA,eAAAC,IAAA,GAAO,CAAC,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,SAAxC,EAAmD,MAAnD,EAA2D,OAA3D,EAAoE,QAApE,CAAD,CAAP;AAQA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,cAAA,GAAiB,KAAjB;AAcA,eAAAoG,QAAA,GAAoB,KAApB;AACA,eAAAC,WAAA,GAAuB,KAAvB;AAKC;;;;qCAEU;AACT,iBAAKpQ,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,IAAL,GAAY,KAAKd,EAAL,CAAQe,KAAR,CAAc;AACxBa,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAChC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL,CADkB;AAExBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACjC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL,CAFiB;AAGxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAClC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL;AAHe,aAAd,CAAZ;AAKA,iBAAKyJ,YAAL,GAAoB,IAAIiG,8BAAJ,EAApB;AACA,iBAAKhG,UAAL,GAAkB,gEAAeC,QAAjC;AAEA,iBAAK3I,aAAL;AACA,iBAAKC,WAAL;AACD;;;sCAEW2C,K,EAAc;AACxB,gBAAM/B,WAAW,GAAI+B,KAAK,CAACgG,MAAN,CAAkC/K,KAAvD;AACA,iBAAKgL,UAAL,CAAgB9H,MAAhB,GAAyBF,WAAW,CAACiI,IAAZ,GAAmBhI,WAAnB,EAAzB;;AACA,gBAAI,KAAK+H,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BC,SAA1B;AACD;AACF;;;0CAEe;AAAA;;AACd,iBAAKhL,cAAL,CAAoBgC,aAApB,GAAoCE,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACC,SAAL,GAAiBD,IAAjB;AACA,qBAAI,CAACE,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,kEAAU,EAAV,CAFyB,EAGzB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aATH,EASK,UAACO,GAAD,EAAS,CAEX,CAXH;AAaD;;;yCACcC,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKV,SAAL,CAAeW,MAAf,CAAsB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;wCACa;AAAA;;AACZ,iBAAK7C,cAAL,CAAoBiC,WAApB,GAAkCC,SAAlC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACe,MAAL,GAAcf,IAAd;AACA,qBAAI,CAACgB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,kEAAU,EAAV,CAFuB,EAGvB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aATH,EASK,UAACP,GAAD,EAAS,CAEX,CAXH;AAaD;;;uCACYC,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKI,MAAL,CAAYH,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;uCAEY;AAAA;;AACX,iBAAK7C,cAAL,CAAoBqD,YAApB,GAAmCnB,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACmB,MAAL,GAAcnB,IAAd;AACA,qBAAI,CAACoB,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,kEAAU,EAAV,CAFsB,EAGtB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aATH,EASK,UAACX,GAAD,EAAS,CAEX,CAXH;AAaD;;;sCACWC,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKQ,MAAL,CAAYP,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;0CAEe+B,K,EAAO;AACrB,iBAAKxC,SAAL,GAAiB,EAAjB;AACA,iBAAKJ,aAAL;AACA,iBAAK6C,kBAAL,CAAwBD,KAAxB,EAHqB,CAIrB;;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK1D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CACkB3C,K,EAAO;AAAA;;AACxB,iBAAKkC,QAAL,GAAgBlC,KAAK,CAACwC,EAAtB;AACA,iBAAKpE,cAAL,CAAoBwE,iBAApB,CAAsC,KAAKV,QAA3C,EAAqD5B,SAArD,CACE,UAACuC,SAAD,EAAoB;AAClB;AACA,qBAAI,CAACvB,MAAL,GAAcuB,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAACtB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,kEAAU,EAAV,CAFuB,EAGvB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB0E,cAApB,CAAmC,KAAKZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACqE,UAAD,EAAqB;AACnB,qBAAI,CAACjD,MAAL,GAAciD,UAAd;AACA,qBAAI,CAAChD,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,kEAAU,EAAV,CAFsB,EAGtB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAVH,EAUK,UAACX,GAAD,EAAS,CAEX,CAZH;AAcD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB+D,iBAApB,CAAsC,KAAKD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,kBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,EAAF,IAAQJ,WAAW,CAAC,CAAD,CAAX,CAAeI,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAACvD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,kEAAU,EAAV,CAFyB,EAGzB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACO,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACaiC,K,EAAO;AACnB,iBAAK4B,iBAAL,CAAuB5B,KAAvB;AACA,iBAAKb,iBAAL,CAAuBa,KAAvB;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAHmB,CAInB;AACD;;;uCACYK,K,EAAO;AAClB,iBAAKqG,MAAL,GAAcrG,KAAK,CAACR,EAApB;AACA,iBAAK0M,4BAAL,CAAkClM,KAAK,CAACR,EAAxC;AACD;;;uDAE4B6G,M,EAAQ;AAAA;;AACnC,gBAAI,KAAKxK,YAAL,CAAkBsQ,SAAlB,IAA+B,UAAnC,EAA+C;AAC7C,mBAAK9Q,uBAAL,CAA6B+Q,8BAA7B,CAA4D,KAAKvQ,YAAL,CAAkBqE,MAA9E,EAAsFmG,MAAtF,EAA8F/I,SAA9F,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,yBAAI,CAAC0Q,eAAL,GAAuB9O,IAAI,CAACwB,IAA5B;;AACA,uBAAK,IAAI0H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAC4F,eAAL,CAAqBpN,MAAzC,EAAiDwH,CAAC,EAAlD,EAAsD;AACpD,wBAAI,OAAI,CAAC4F,eAAL,CAAqB5F,CAArB,EAAwB9K,MAAxB,IAAkC,GAAtC,EAA2C;AACzC,6BAAI,CAAC0Q,eAAL,CAAqB5F,CAArB,EAAwBC,YAAxB,GAAuC,UAAvC;AACD,qBAFD,MAEO;AACL,6BAAI,CAAC2F,eAAL,CAAqB5F,CAArB,EAAwBC,YAAxB,GAAuC,QAAvC;AACD;AACF;;AACD,yBAAI,CAACT,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACoG,eAA5B,CAAlB;AACA,yBAAI,CAACpG,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,yBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,yBAAI,CAACzB,GAAL,CAAS0B,aAAT;AACD,iBAbD,MAaO;AACL,yBAAI,CAACX,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,yBAAI,CAACA,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,yBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,yBAAI,CAACzB,GAAL,CAAS0B,aAAT;;AACA,yBAAI,CAACtL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgB0F,oBAAnC,EAAyD,SAAzD,EAAoE;AAAExF,4BAAQ,EAAE;AAAZ,mBAApE;;AACA;AACD;AAEF,eAxBH,EAwBK,UAACtD,GAAD,EAAS,CACX,CAzBH;AA2BD,aA5BD,MA4BO;AACL,mBAAK1C,uBAAL,CAA6BiR,gDAA7B,CAA8E,KAAKzQ,YAAL,CAAkBqE,MAAhG,EAAwGmG,MAAxG,EAAgH/I,SAAhH,CACE,UAACC,IAAD,EAAe;AACb,oBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,yBAAI,CAAC0Q,eAAL,GAAuB9O,IAAI,CAACwB,IAA5B;;AACA,uBAAK,IAAI0H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAC4F,eAAL,CAAqBpN,MAAzC,EAAiDwH,CAAC,EAAlD,EAAsD;AACpD,wBAAI,OAAI,CAAC4F,eAAL,CAAqB5F,CAArB,EAAwB9K,MAAxB,IAAkC,GAAtC,EAA2C;AACzC,6BAAI,CAAC0Q,eAAL,CAAqB5F,CAArB,EAAwBC,YAAxB,GAAuC,UAAvC;AACD,qBAFD,MAEO;AACL,6BAAI,CAAC2F,eAAL,CAAqB5F,CAArB,EAAwBC,YAAxB,GAAuC,QAAvC;AACD;AACF;;AACD,yBAAI,CAACT,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACoG,eAA5B,CAAlB;AACA,yBAAI,CAACpG,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,yBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,yBAAI,CAACzB,GAAL,CAAS0B,aAAT;AAED,iBAdD,MAcO;AACL,yBAAI,CAACX,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,EAAvB,CAAlB;AACA,yBAAI,CAACA,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,yBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,yBAAI,CAACzB,GAAL,CAAS0B,aAAT;;AACA,yBAAI,CAACtL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgB0F,oBAAnC,EAAyD,SAAzD,EAAoE;AAAExF,4BAAQ,EAAE;AAAZ,mBAApE;;AACA;AACD;AAEF,eAzBH,EAyBK,UAACtD,GAAD,EAAS,CACX,CA1BH;AA4BD;AAEF;;;qCACU8F,M,EAAQ9E,I,EAAMmI,Y,EAAY;AAAA;;AACnC,gBAAI5G,MAAM,GAAG;AACXuD,oBAAM,EAAEA,MADG;AAEX9E,kBAAI,EAAEA,IAFK;AAGXmI,0BAAY,EAAEA;AAHH,aAAb;AAKA,gBAAMnF,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,sFAAjB,EAAsC;AACtDa,mBAAK,EAAE,QAD+C;AAEtDjD,kBAAI,EAAEuB,MAFgD;AAGtD6G,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDL,0BAAY,EAAE;AALwC,aAAtC,CAAlB;AAQAhF,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,qBAAI,CAAC+J,4BAAL,CAAkC,OAAI,CAAC7F,MAAvC;AACD,aAFD;AAGD;;;2CAEgBgB,a,EAAeC,E,EAAI;AAClCA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKhC,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKQ,YAAL,CAAkB2B,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIH,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK9B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKM,YAAL,CAAkB1J,KAAlB,GAA0B,EAA1B;AACD;;AACD,gBAAIkL,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAK/B,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKO,YAAL,CAAkBvJ,MAAlB,GAA2B,EAA3B;AACD;;AACD,gBAAI+K,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK7B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKK,YAAL,CAAkBrF,iBAAlB,GAAsC,IAAtC;AACD;;AACD,gBAAI6G,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKzB,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKC,YAAL,CAAkBpF,iBAAlB,GAAsC,IAAtC;AACD;;AACD,gBAAI4G,aAAa,IAAI,YAArB,EAAmC;AACjC,mBAAK5B,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKI,YAAL,CAAkB4B,SAAlB,GAA8B,GAA9B;AACD;;AACD,gBAAIJ,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK3B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKG,YAAL,CAAkB6B,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIL,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAK1B,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKE,YAAL,CAAkBa,YAAlB,GAAiC,GAAjC;AACD;AACF;;;wCAEa;AACZ,iBAAKiB,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,UAAL,CAAgB2B,YAAhB,CAA6B3I,MAAjD,EAAyDwH,CAAC,EAA1D,EAA8D;AAC5D,kBAAIoB,SAAS,GAAG,KAAK5B,UAAL,CAAgB2B,YAAhB,CAA6BnB,CAA7B,CAAhB;AACA,kBAAI1H,IAAI,GAAG;AACT,4BAAY8I,SAAS,CAACL,SADb;AACwB,0BAAUK,SAAS,CAACvL,MAD5C;AACoD,yBAASuL,SAAS,CAAC1L,KADvE;AAET,wBAAQ0L,SAAS,CAAC9G,UAFT;AAEqB,2BAAW8G,SAAS,CAAC7G,aAF1C;AAEyD,wBAAQ6G,SAAS,CAACJ,SAF3E;AAEsF,yBAASI,SAAS,CAACH,UAFzG;AAGT,0BAAUG,SAAS,CAACnB;AAHX,eAAX;AAKA,mBAAKiB,YAAL,CAAkBG,IAAlB,CAAuB/I,IAAvB;AACD;;AACD,gBAAMgJ,SAAS,GAAG,2CAAWC,aAAX,CAAyB,KAAKL,YAA9B,CAAlB;AACA,gBAAMM,QAAQ,GAAkB,2CAAWC,QAAX,EAAhC;AAEA,uDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,kDAAlD;AACA,2DAAeE,QAAf,EAAyB,uDAAzB;AACD;;;sCAEW;AAAA;;AACV,gBAAIG,GAAG,GAAG,IAAI,2CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAGA,iBAAKT,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,UAAL,CAAgB2B,YAAhB,CAA6B3I,MAAjD,EAAyDwH,CAAC,EAA1D,EAA8D;AAC5D,kBAAIoB,SAAS,GAAG,KAAK5B,UAAL,CAAgB2B,YAAhB,CAA6BnB,CAA7B,CAAhB;AAEA,kBAAI1H,IAAI,GAAG,CAAC8I,SAAS,CAACL,SAAX,EAAsBK,SAAS,CAACvL,MAAhC,EAAwCuL,SAAS,CAAC1L,KAAlD,EAAyD0L,SAAS,CAAC9G,UAAnE,EAA+E8G,SAAS,CAAC7G,aAAzF,EAAwG6G,SAAS,CAACJ,SAAlH,EACXI,SAAS,CAACH,UADC,EACWG,SAAS,CAACnB,YADrB,CAAX;AAGA,mBAAKiB,YAAL,CAAkBG,IAAlB,CAAuB/I,IAAvB;AACD;;AACD,gBAAIsJ,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAJ,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AAECT,eAAW,CAACW,SAAZ,CAAsB;AACrB3D,kBAAI,EAAE,KAAKA,IADU;AAErB4D,kBAAI,EAAE,KAAKrB,YAFU;AAGrBsB,mBAAK,EAAE,MAHc;AAIrBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJS;AAKrBC,oBAAM,EAAE;AACNC,2BAAW,EAAE,CADP;AAENC,wBAAQ,EAAE;AAFJ,eALa;AAWrBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXa;AAYrBC,yBAAW,EAAE,qBAAA3K,IAAI,EAAI,CACpB,CAboB;AAcrB4K,yBAAW,EAAE,qBAAA5K,IAAI,EAAI;AACnBqJ,mBAAG,CAACwB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAD,mBAAG,CAACwB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAH,mBAAG,CAACyB,IAAJ,CAAS,yDAAT,EAAoEzB,GAAG,CAAC0B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAAvG,EAA0G,EAA1G,EAA8G;AAAEC,uBAAK,EAAE;AAAT,iBAA9G;AAEA7B,mBAAG,CAACU,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAV,mBAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACyB,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACAzB,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,mBAAG,CAACS,WAAJ,CAAgB,CAAhB;AACAT,mBAAG,CAACyB,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAN,mBAAG,CAACyB,IAAJ,CAAS,kBAAkB,OAAI,CAAChO,YAAL,CAAkBwO,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA7B,mBAAG,GAAG,OAAI,CAACkC,YAAL,CAAkBlC,GAAlB,CAAN;AACD;AA/BoB,aAAtB,EAxBS,CA0DV;;AACAA,eAAG,CAACmC,MAAJ,CAAW,kBAAX,EA3DU,CA4DV;;AACAnC,eAAG,CAACoC,IAAJ,CAAS,6DAAT;AAED;;;uCACYpC,G,EAAK;AAChB,gBAAIqC,OAAO,GAAGrC,GAAG,CAACsC,gBAAJ,EAAd;AACA,gBAAMjE,CAAC,GAAG2B,GAAG,CAAC0B,QAAJ,CAAaY,gBAAb,EAAV;AACAtC,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB,EAJgB,CAKhB;;AAEAT,eAAG,CAACyB,IAAJ,CAAS,UAAUc,MAAM,CAAClE,CAAD,CAAhB,GAAsB,MAAtB,GAA+BkE,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOrC,GAAP;AACD;;;iCAEMmE,O,EAAS;AAAA;;AAEd,gBAAMjM,MAAM,GAAQ;AAClBd,gBAAE,EAAE+M,OAAO,CAAC/M,EADM;AAElBe,qBAAO,EAAE,KAAK1E,YAAL,CAAkBqE,MAFT;AAGlBsM,0BAAY,EAAE,CAHI;AAIlB7Q,oBAAM,EAAE,GAJU;AAKlBsF,wBAAU,EAAE,KAAKpF,YAAL,CAAkBqE,MALZ;AAMlBiE,uBAAS,EAAE,KAAKtI,YAAL,CAAkBqE;AANX,aAApB;AAQA,iBAAK7E,uBAAL,CAA6BoR,oBAA7B,CAAkDnM,MAAlD,EAA0DhD,SAA1D,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,oBAAG4Q,OAAO,CAACxL,UAAR,IAAsB,CAAzB,EAA2B;AACzB,yBAAI,CAACzF,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBuL,IAAnC,EAAyC,SAAzC,EAAoD;AAAErL,4BAAQ,EAAE;AAAZ,mBAApD;AACD,iBAFD,MAEK;AACH,yBAAI,CAAC/F,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AAEF,eAPD,MAOO;AACL,uBAAI,CAAC/F,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,0BAAQ,EAAE;AAAZ,iBAA5C;AACD;AACF,aAZH,EAYK,UAACtD,GAAD,EAAS;AACV,qBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,wBAAQ,EAAE;AAAZ,eAA5D;AACD,aAdH;AAiBD;;;oCACSkL,O,EAAS;AAAA;;AAEjB,gBAAMjM,MAAM,GAAQ;AAClBd,gBAAE,EAAE+M,OAAO,CAAC/M,EADM;AAElBe,qBAAO,EAAE,KAAK1E,YAAL,CAAkBqE,MAFT;AAGlBsM,0BAAY,EAAE,CAAC,CAHG;AAIlB7Q,oBAAM,EAAE,GAJU;AAKlBsF,wBAAU,EAAE,KAAKpF,YAAL,CAAkBqE,MALZ;AAMlBiE,uBAAS,EAAE,KAAKtI,YAAL,CAAkBqE;AANX,aAApB;AAQA,iBAAK7E,uBAAL,CAA6BoR,oBAA7B,CAAkDnM,MAAlD,EAA0DhD,SAA1D,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,oBAAG4Q,OAAO,CAACvL,aAAR,IAAyB,CAA5B,EAA8B;AAC5B,yBAAI,CAAC1F,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBwL,OAAnC,EAA4C,SAA5C,EAAuD;AAAEtL,4BAAQ,EAAE;AAAZ,mBAAvD;AACD,iBAFD,MAEK;AACH,yBAAI,CAAC/F,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,4BAAQ,EAAE;AAAZ,mBAA5C;AACD;AAEF,eAPD,MAOO;AACL,uBAAI,CAAC/F,QAAL,CAAc6F,IAAd,CAAmB5D,IAAI,CAACgE,OAAxB,EAAiC,SAAjC,EAA4C;AAAEF,0BAAQ,EAAE;AAAZ,iBAA5C;AACD;AACF,aAZH,EAYK,UAACtD,GAAD,EAAS;AACV,qBAAI,CAACzC,QAAL,CAAc6F,IAAd,CAAmB,kFAAgBK,YAAnC,EAAiD,SAAjD,EAA4D;AAAEH,wBAAQ,EAAE;AAAZ,eAA5D;AACD,aAdH;AAiBD;;;;;;;yBAzdU0K,qB,EAAqB,4M,EAAA,oI,EAAA,4H,EAAA,yI,EAAA,gI,EAAA,wJ;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;4EASrB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACjFtB;;AACI;;AAAqC;AAAA,qBAAS,IAAAnB,WAAA,EAAT;AAAsB,aAAtB;;AACjC;;AAAU;;AAAiB;;AAC/B;;AAAS;;AACT;;AAAqC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACjC;;AAAU;;AAAc;;AAC5B;;AAEJ;;AAEA;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAAW;;AAAO;;AAClB;;AAEA;;AACI;AAAA,qBAAkB,IAAA/H,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAC9E;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAAW;;AAAK;;AAChB;;AAEA;;AACI;AAAA,qBAAkB,IAAAD,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAC5E;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAAW;;AAAI;;AACf;;AAEA;;AACI;AAAA,qBAAkB,IAAAD,YAAA,qBAAlB;AAAmD,aAAnD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA2E;;AAC3E;;AACJ;;AACA;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAEI;;AACI;;AAGI;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AAEJ;;AAEA;;AACI;;AAGA;;AAaJ;;AACA;;AACA;;AACJ;;AAEA;;AACJ;;AACJ;;AACJ;;;;;;;;;;AA/Mc;;AAAA;;AAMU;;AAAA;;AAC6C;;AAAA;;AAEd;;AAAA;;AASvB;;AAAA;;AAIwC;;AAAA;;AAEL;;AAAA;;AAEZ;;AAAA;;AASvB;;AAAA;;AAIuC;;AAAA;;AAEL;;AAAA;;AAEX;;AAAA;;AASvB;;AAAA;;AAYY;;AAAA,mGAAyB,eAAzB,EAAyB,gBAAzB,EAAyB,YAAzB,EAAyB,cAAzB;;AAwIR;;AAAA;;AACa;;AAAA;;AAGtB;;AAAA;;;;;;;;qBDpJb;;;;;;wEAGDmJ,qB,EAAqB;gBARjC,uDAQiC;iBARvB;AACT/I,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAQuB,U;;;;;;;;;;;;;;;AASW8C,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBQ,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AEhF9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBI;;AAKE;;AACF;;;;;;;;AAJG,kGAA2B,QAA3B,EAA2B,YAA3B;;AAGD;;AAAA;;;;;;;;;;;;;;;;ADtBN;;;;;UAUaiG,qC;AAcX,uDAAoBrR,MAApB,EAA4C2J,GAA5C,EAA4E2H,eAA5E,EAA6G;AAAA;;AAAzF,eAAAtR,MAAA,GAAAA,MAAA;AAAwB,eAAA2J,GAAA,GAAAA,GAAA;AAAgC,eAAA2H,eAAA,GAAAA,eAAA;AAZ5E,eAAAC,QAAA,GAAW,CACT;AACA;AACA;AACA;AAJS,WAAX;AAUA,eAAAC,SAAA,GAAY,EAAZ;AAIC;;;;4CACiB;AAAA;;AAChB,iBAAKF,eAAL,CAAqBG,gBAArB,CAAsC1P,SAAtC,CAAgD,UAAA2P,eAAe,EAAI;AACjE,qBAAI,CAACrJ,SAAL,GAAiBqJ,eAAjB;;AACA,kBAAI,OAAI,CAACrJ,SAAL,IAAkB,IAAlB,IAA0B,OAAI,CAACA,SAAL,IAAkB5E,SAA5C,IAAyD,OAAI,CAAC4E,SAAL,CAAesJ,KAAf,IAAwB,IAAjF,IAAyF,OAAI,CAACtJ,SAAL,CAAesJ,KAAf,IAAwBlO,SAArH,EAAgI;AAC9H,uBAAI,CAAC4E,SAAL,GAAiB9H,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACD;;AACD,qBAAI,CAACkJ,GAAL,CAAS0B,aAAT;AACD,aAND;AAQD;;;qCAEU;AAAA;;AACT,iBAAK/K,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,gBAAImR,QAAQ,GAAG,KAAKtR,YAAL,CAAkBuR,iBAAjC;AACAD,oBAAQ,CAAChP,MAAT,CAAgB,UAACkP,CAAD,EAAO;AACrB,kBAAIA,CAAC,CAAC7N,EAAF,KAAS,oBAAb,EAAmC;AACjC,uBAAI,CAAC8N,UAAL,GAAkBD,CAAlB;;AACA,oBAAI,OAAI,CAACC,UAAL,CAAgBC,QAAhB,IAA4B,IAA5B,IAAoC,OAAI,CAACD,UAAL,CAAgBC,QAAhB,IAA4BvO,SAApE,EAA+E;AAC7E,yBAAI,CAACsO,UAAL,CAAgBC,QAAhB,CAAyBpP,MAAzB,CAAgC,UAACqP,CAAD,EAAO;AACrC,wBAAIA,CAAC,CAAChO,EAAF,KAAS,qBAAb,EAAoC;AAClC,6BAAI,CAACiO,eAAL,GAAuBD,CAAvB;;AACA,0BAAI,OAAI,CAACC,eAAL,CAAqBF,QAArB,IAAiC,IAAjC,IAAyC,OAAI,CAACE,eAAL,CAAqBF,QAArB,IAAiCvO,SAA9E,EAAyF;AACvF,+BAAI,CAACyO,eAAL,CAAqBF,QAArB,CAA8BpP,MAA9B,CAAqC,UAACuP,CAAD,EAAO;AAC1C,8BAAIC,sBAAsB,GAAG,KAA7B;;AACA,8BAAID,CAAC,CAAClO,EAAF,KAAS,uBAAb,EAAsC;AACpCmO,kDAAsB,GAAG,IAAzB;;AACA,mCAAI,CAACZ,SAAL,CAAejF,IAAf,CAAoB;AAAE8F,mCAAK,EAAE,qBAAT;AAAgCC,kCAAI,EAAE;AAAtC,6BAApB;AACD;;AACD,8BAAIH,CAAC,CAAClO,EAAF,KAAS,gCAAb,EAA+C;AAC7C,mCAAI,CAACuN,SAAL,CAAejF,IAAf,CAAoB;AAAE8F,mCAAK,EAAE,qBAAT;AAAgCC,kCAAI,EAAE;AAAtC,6BAApB;AACD;;AACD,8BAAIH,CAAC,CAAClO,EAAF,KAAS,8BAAb,EAA6C;AAC3C,mCAAI,CAACuN,SAAL,CAAejF,IAAf,CAAoB;AAAE8F,mCAAK,EAAE,mBAAT;AAA8BC,kCAAI,EAAE;AAApC,6BAApB;AACD;;AACD,8BAAIH,CAAC,CAAClO,EAAF,KAAS,QAAb,EAAuB;AACrB,mCAAI,CAACuN,SAAL,CAAejF,IAAf,CAAoB;AAAE8F,mCAAK,EAAE,SAAT;AAAoBC,kCAAI,EAAE;AAA1B,6BAApB;AACD;;AAED,iCAAI,CAACf,QAAL,GAAgB,OAAI,CAACC,SAArB;;AACA,8BAAI,CAACY,sBAAL,EAA6B;AAC3B,mCAAI,CAACpS,MAAL,CAAY+F,QAAZ,CAAqB,CAAC,kDAAkD,OAAI,CAACyL,SAAL,CAAe,CAAf,EAAkBc,IAArE,CAArB;AACD;AAEF,yBArBD;AAsBD;AAEF;AAEF,mBA9BD;AA+BD;AAEF;AACF,aAtCD;AAuCD;;;;;;;yBAtEUjB,qC,EAAqC,uH,EAAA,gI,EAAA,2J;AAAA,O;;;cAArCA,qC;AAAqC,6D;AAAA,iB;AAAA,e;AAAA,+pB;AAAA;AAAA;ACjBlD;;AACE;;AAGE;;AAGI;;AAEI;;AAEI;;AACiD;;AACjD;;AAMJ;;AACF;;AACJ;;AACJ;;AACF;;AACI;;AAOF;;AACA;;AACF;;;;AArBsB;;AAAA;;AAA2C;;AAAA;;AAatC;;AAAA;;;;;;;qBDVb;;;;;;wEAEDA,qC,EAAqC;gBAPjD,uDAOiD;iBAPvC;AACT5J,oBAAQ,EAAE,sCADD;AAETC,uBAAW,EAAE,mDAFJ;AAGTC,qBAAS,EAAE,CAAC,mDAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAOuC,U;;;;;;;;;;;UAmFrCyK,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACT9K,oBAAQ,EAAE,sBADD;AAET+K,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACThL,oBAAQ,EAAE,sBADD;AAET+K,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBE,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTjL,oBAAQ,EAAE,sBADD;AAET+K,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;;;;;;;;;;;;;;;;AE/GrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBwB;;AACI;;AACJ;;;;;;AAFiE;;AAC7D;;AAAA;;;;;;AAQR;;AAA4D;;AAAoB;;;;;;AAQ5E;;AACI;;AACJ;;;;;;AAF+D;;AAC3D;;AAAA;;;;;;AAQR;;AAA0D;;AAAkB;;;;;;AAQxE;;AACI;;AACJ;;;;;;AAF8D;;AAC1D;;AAAA;;;;;;AAQR;;AAAyD;;AAAiB;;;;;;;;AAiBtE;;AAA8E;;AAAU;;AACtE;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAAY;;;;;;;;AACxF;;AACI;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAxC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAH4C;;AAAA;;;;;;AAJhD;;AACI;;AAEA;;AAKJ;;;;;;AAPW;;AAAA;;AAEU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAMhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAe;;;;;;AAAf;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAC7B;;AAAM;;AACd;;;;;;;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHQ;;AAAA;;;;;;AAPZ;;AACI;;AAIA;;AAMJ;;;;;;AAVW;;AAAA;;AAIU;;AAAA;;;;;;AAOrB;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AACJ;;;;;;;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAA7C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHiD;;AAAA;;;;;;AANrD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA8E;;AAC7D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACrF;;AACJ;;;;;;;;AACA;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AACxE;;AACJ;;;;;;AAHgD;;AAAA;;;;;;AANpD;;AACI;;AAIA;;AAKJ;;;;;;AATW;;AAAA;;AAIU;;AAAA;;;;;;AAMrB;;AAAoC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;;;AAKhC;;AAA0E;;AACzD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACjF;;AAAY;;;;;;;;AAChB;;AACI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAnC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACpE;;AACJ;;;;;;AAHuC;;AAAA;;;;;;AAL3C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;;;AAKhC;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AAAY;;;;;;;;AAChB;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AACrE;;AACJ;;;;;;AAHwC;;AAAA;;;;;;AAL5C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAoC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;;;AAKhC;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAChF;;;;;;;;AACA;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AACtE;;AACJ;;;;;;AAHyC;;AAAA;;;;;;AAL7C;;AACI;;AAGA;;AAKJ;;;;;;AARW;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AACI;;AAAqB;;;;;;AADU;;AAC/B;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AAKI;;AACI;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,QAApB,EAA4B,WAA5B,EAAqC,cAArC;AAAmD,WAAnD;;AAC6C;;AAAsB;;;;;;;;AAN3E;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAEhD;;AAEkF;;AAWtF;;;;;;AAXS;;AAAA;;;;;;AAab;;;;;;AACA;;;;;;;;ADrMhB,eAAShT,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACC,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAED,OAAO,CAACC;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAEYiT,uB;;;;UAyCAC,a;AAuCX,+BAAoB9S,uBAApB,EAAqFI,MAArF,EAAgHH,QAAhH,EACU4J,GADV,EACwC9J,cADxC,EACiFD,EADjF,EACkG;AAAA;;AAD9E,eAAAE,uBAAA,GAAAA,uBAAA;AAAiE,eAAAI,MAAA,GAAAA,MAAA;AAA2B,eAAAH,QAAA,GAAAA,QAAA;AACtG,eAAA4J,GAAA,GAAAA,GAAA;AAA8B,eAAA9J,cAAA,GAAAA,cAAA;AAAyC,eAAAD,EAAA,GAAAA,EAAA;AApCjF,eAAAgK,gBAAA,GAA6B,CAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,EAAiC,mBAAjC,EAAqD,mBAArD,EAA0E,WAA1E,EAAuF,YAAvF,EAAqG,QAArG,EAA+G,QAA/G,CAA7B;AACA,eAAAC,IAAA,GAAO,CAAC,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,EAAgC,MAAhC,EAAuC,SAAvC,EAAkD,MAAlD,EAA0D,OAA1D,EAAmE,QAAnE,CAAD,CAAP;AAUA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,cAAA,GAAgB,KAAhB;AAoBC;;;;qCAEU;AACT,iBAAK/J,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,IAAL,GAAY,KAAKd,EAAL,CAAQe,KAAR,CAAc;AACxBa,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAChC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL,CADkB;AAExBY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAACjC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL,CAFiB;AAGxBa,qBAAO,EAAE,CAAC,EAAD,EAAK,CAAClC,2BAA2B,EAA5B,EAAgC,2DAAWqB,QAA3C,CAAL;AAHe,aAAd,CAAZ;AAKA,iBAAKyJ,YAAL,GAAoB,IAAIqI,uBAAJ,EAApB;AACA,iBAAKpI,UAAL,GAAkB,gEAAeC,QAAjC;AACA,iBAAK3I,aAAL;AACA,iBAAKC,WAAL;AACD;;;sCAEW2C,K,EAAc;AACxB,gBAAM/B,WAAW,GAAI+B,KAAK,CAACgG,MAAN,CAAkC/K,KAAvD;AACA,iBAAKgL,UAAL,CAAgB9H,MAAhB,GAAyBF,WAAW,CAACiI,IAAZ,GAAmBhI,WAAnB,EAAzB;;AACA,gBAAI,KAAK+H,UAAL,CAAgBE,SAApB,EAA+B;AAC7B,mBAAKF,UAAL,CAAgBE,SAAhB,CAA0BC,SAA1B;AACD;AACF;;;0CAEe;AAAA;;AACd,iBAAKhL,cAAL,CAAoBgC,aAApB,GAAoCE,SAApC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACC,SAAL,GAAiBD,IAAjB;AACA,qBAAI,CAACE,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,kEAAU,EAAV,CAFyB,EAGzB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAMD,aATH,EASK,UAACO,GAAD,EAAS,CAEX,CAXH;AAaD;;;yCACcC,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;yCACsBA,I,EAAY;AACjC,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKV,SAAL,CAAeW,MAAf,CAAsB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAA5B,CAAP;AACD;;;wCACa;AAAA;;AACZ,iBAAK7C,cAAL,CAAoBiC,WAApB,GAAkCC,SAAlC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACe,MAAL,GAAcf,IAAd;AACA,qBAAI,CAACgB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,kEAAU,EAAV,CAFuB,EAGvB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAMD,aATH,EASK,UAACP,GAAD,EAAS,CAEX,CAXH;AAaD;;;uCACYC,I,EAAS;AACpB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;uCACoBA,I,EAAY;AAC/B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKI,MAAL,CAAYH,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;uCAEY;AAAA;;AACX,iBAAK7C,cAAL,CAAoBqD,YAApB,GAAmCnB,SAAnC,CACE,UAACC,IAAD,EAAe;AACb,qBAAI,CAACmB,MAAL,GAAcnB,IAAd;AACA,qBAAI,CAACoB,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,kEAAU,EAAV,CAFsB,EAGtB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAMD,aATH,EASK,UAACX,GAAD,EAAS,CAEX,CAXH;AAaD;;;sCACWC,I,EAAS;AACnB,mBAAOA,IAAI,IAAIA,IAAI,CAACH,IAAb,GAAoBG,IAAI,CAACH,IAAzB,GAAgC,EAAvC;AACD;;;sCACmBA,I,EAAY;AAC9B,gBAAMI,WAAW,GAAGJ,IAAI,CAACK,WAAL,EAApB;AACA,mBAAO,KAAKQ,MAAL,CAAYP,MAAZ,CAAmB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACP,IAAP,CAAYK,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CAAJ;AAAA,aAAzB,CAAP;AACD;;;0CAEe+B,K,EAAO;AACrB,iBAAKxC,SAAL,GAAiB,EAAjB;AAEA,iBAAKJ,aAAL;AACA,iBAAK6C,kBAAL,CAAwBD,KAAxB,EAJqB,CAKrB;;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,OAAd,EAAuBC,QAAvB,CAAgC,EAAhC;AACA,iBAAK1D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B;AACD;;;6CACkB3C,K,EAAO;AAAA;;AACxB,iBAAKkC,QAAL,GAAgBlC,KAAK,CAACwC,EAAtB;AACA,iBAAKpE,cAAL,CAAoBwE,iBAApB,CAAsC,KAAKV,QAA3C,EAAqD5B,SAArD,CACE,UAACuC,SAAD,EAAoB;AAClB;AACA,qBAAI,CAACvB,MAAL,GAAcuB,SAAd,CAFkB,CAGlB;AACA;;AACA,qBAAI,CAACtB,mBAAL,GAA2B,OAAI,CAACtC,IAAL,CAAUyB,QAAV,CAAmBV,KAAnB,CAAyBW,YAAzB,CACxBC,IADwB,CAEvB,kEAAU,EAAV,CAFuB,EAGvB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHuB,EAIvB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACW,YAAL,CAAkBX,IAAlB,CAAH,GAA6B,OAAI,CAACS,MAA1C;AAAA,eAAR,CAJuB,CAA3B;AAOD,aAbH,EAaK,UAACP,GAAD,EAAS,CAEX,CAfH;AAiBD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB0E,cAApB,CAAmC,KAAKZ,QAAxC,EAAkD5B,SAAlD,CACE,UAACqE,UAAD,EAAqB;AACnB,qBAAI,CAACjD,MAAL,GAAciD,UAAd;AACA,qBAAI,CAAChD,kBAAL,GAA0B,OAAI,CAAC1C,IAAL,CAAUyB,QAAV,CAAmBX,IAAnB,CAAwBY,YAAxB,CACvBC,IADuB,CAEtB,kEAAU,EAAV,CAFsB,EAGtB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHsB,EAItB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACe,WAAL,CAAiBf,IAAjB,CAAH,GAA4B,OAAI,CAACa,MAAzC;AAAA,eAAR,CAJsB,CAA1B;AAOD,aAVH,EAUK,UAACX,GAAD,EAAS,CAEX,CAZH;AAcD;;;4CACiB2D,O,EAAS;AAAA;;AACzB,iBAAKxC,QAAL,GAAgBwC,OAAO,CAAClC,EAAxB;AACA,iBAAKpE,cAAL,CAAoB+D,iBAApB,CAAsC,KAAKD,QAA3C,EAAqD5B,SAArD,CACE,UAAC8B,WAAD,EAAsB;AACpB;AACA,qBAAI,CAAC5B,SAAL,GAAiB4B,WAAjB;;AACA,kBAAMC,QAAQ,GAAG,OAAI,CAAC7B,SAAL,CAAe8B,IAAf,CAAoB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,EAAF,IAAQJ,WAAW,CAAC,CAAD,CAAX,CAAeI,EAA3B;AAAA,eAArB,CAAjB;;AACA,qBAAI,CAACvD,IAAL,CAAUyD,GAAV,CAAc,SAAd,EAAyBC,QAAzB,CAAkCN,QAAlC;;AAEA,qBAAI,CAAC5B,qBAAL,GAA6B,OAAI,CAACxB,IAAL,CAAUyB,QAAV,CAAmBT,OAAnB,CAA2BU,YAA3B,CAC1BC,IAD0B,CAEzB,kEAAU,EAAV,CAFyB,EAGzB,4DAAI,UAAA3C,KAAK;AAAA,uBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC4C,IAA9C;AAAA,eAAT,CAHyB,EAIzB,4DAAI,UAAAA,IAAI;AAAA,uBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACL,SAA5C;AAAA,eAAR,CAJyB,CAA7B;AAOD,aAdH,EAcK,UAACO,GAAD,EAAS,CAEX,CAhBH;AAkBD;;;wCACaiC,K,EAAO;AAEnB,iBAAK4B,iBAAL,CAAuB5B,KAAvB;AACA,iBAAKb,iBAAL,CAAuBa,KAAvB;AACA,iBAAK/D,IAAL,CAAUyD,GAAV,CAAc,MAAd,EAAsBC,QAAtB,CAA+B,EAA/B,EAJmB,CAKnB;AACD;;;uCACYK,K,EAAO;AAClB,iBAAKiG,UAAL,GAAkB,IAAlB;AACA,iBAAKI,MAAL,GAAcrG,KAAK,CAACR,EAApB;AACA,iBAAK4O,+BAAL,CAAqC,KAAK/H,MAA1C;AACD;;;0DAG+BA,M,EAAQ;AAAA;;AAEpC,iBAAKhL,uBAAL,CAA6BgT,mCAA7B,CAAiE,KAAKxS,YAAL,CAAkBqE,MAAnF,EAA0FmG,MAA1F,EAAkG/I,SAAlG,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,CAAC5B,MAAL,IAAe,IAAnB,EAAyB;AACvB,uBAAI,CAAC2S,iBAAL,GAAyB/Q,IAAI,CAACwB,IAA9B,CADuB,CAEvB;;AACE,qBAAK,IAAI0H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAC6H,iBAAL,CAAuBrP,MAA3C,EAAmDwH,CAAC,EAApD,EAAwD;AACtD,sBAAI,OAAI,CAAC6H,iBAAL,CAAuB7H,CAAvB,EAA0B9K,MAA1B,IAAoC,GAAxC,EAA6C;AAC3C,2BAAI,CAAC2S,iBAAL,CAAuB7H,CAAvB,EAA0BC,YAA1B,GAAyC,UAAzC;AACD,mBAFD,MAEO;AACL,2BAAI,CAAC4H,iBAAL,CAAuB7H,CAAvB,EAA0BC,YAA1B,GAAyC,UAAzC;AACD;AACF;;AACD,uBAAI,CAACT,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACqI,iBAA5B,CAAlB;AACA,uBAAI,CAACrI,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,uBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,uBAAI,CAACzB,GAAL,CAAS0B,aAAT;AACH,eAdD,MAcO;AACH,uBAAI,CAACX,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,EAAvB,CAAlB;AACA,uBAAI,CAACA,UAAL,CAAgBE,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,uBAAI,CAACF,UAAL,CAAgBU,IAAhB,GAAuB,OAAI,CAACA,IAA5B;;AACA,uBAAI,CAACzB,GAAL,CAAS0B,aAAT;;AACF,uBAAI,CAACtL,QAAL,CAAc6F,IAAd,CAAmB,kFAAgB0F,oBAAnC,EAAyD,SAAzD,EAAoE;AAAExF,0BAAQ,EAAE;AAAZ,iBAApE;;AACA;AACD;AAEF,aAzBH,EAyBK,UAACtD,GAAD,EAAS,CACX,CA1BH,EAFoC,CA8BtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAED,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;qCAEW8F,M,EAAQ9E,I,EAAMmI,Y,EAAY;AAAA;;AACnC,gBAAI5G,MAAM,GAAG;AACXuD,oBAAM,EAAEA,MADG;AAEX9E,kBAAI,EAAEA,IAFK;AAGXmI,0BAAY,EAAEA;AAHH,aAAb;AAKA,gBAAMnF,SAAS,GAAG,KAAKtG,MAAL,CAAY0F,IAAZ,CAAiB,sFAAjB,EAAsC;AACtDa,mBAAK,EAAE,QAD+C;AAEtDjD,kBAAI,EAAEuB,MAFgD;AAGtD6G,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDL,0BAAY,EAAE;AALwC,aAAtC,CAAlB;AAQAhF,qBAAS,CAACG,WAAV,GAAwB5E,SAAxB,CAAkC,UAAA6E,MAAM,EAAI;AAC1C,qBAAI,CAACiM,+BAAL,CAAqC,OAAI,CAAC/H,MAA1C;AACD,aAFD;AAGD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;2CAEiBgB,a,EAAeC,E,EAAI;AAClCA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKhC,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKQ,YAAL,CAAkB2B,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIH,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAK/B,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKO,YAAL,CAAkBvJ,MAAlB,GAA2B,EAA3B;AACD;;AACD,gBAAI+K,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK9B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKM,YAAL,CAAkB1J,KAAlB,GAA0B,EAA1B;AACD;;AACD,gBAAIkL,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK7B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKK,YAAL,CAAkBrF,iBAAlB,GAAsC,IAAtC;AACD;;AACD,gBAAI6G,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAKzB,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKC,YAAL,CAAkBpF,iBAAlB,GAAsC,IAAtC;AACD;;AACD,gBAAI4G,aAAa,IAAI,YAArB,EAAmC;AACjC,mBAAK5B,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKI,YAAL,CAAkB4B,SAAlB,GAA8B,EAA9B;AACD;;AACD,gBAAIJ,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK3B,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKG,YAAL,CAAkB6B,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIL,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAK1B,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKE,YAAL,CAAkBa,YAAlB,GAAiC,EAAjC;AACD;AACF;;;wCACa;AACZ,iBAAKiB,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,UAAL,CAAgB2B,YAAhB,CAA6B3I,MAAjD,EAAyDwH,CAAC,EAA1D,EAA8D;AAC5D,kBAAI8H,OAAO,GAAG,KAAKtI,UAAL,CAAgB2B,YAAhB,CAA6BnB,CAA7B,CAAd;AACA,kBAAI1H,IAAI,GAAG;AACT,4BAAYwP,OAAO,CAAC/G,SADX;AACsB,0BAAU+G,OAAO,CAACjS,MADxC;AACgD,yBAASiS,OAAO,CAACpS,KADjE;AAET,wBAAQoS,OAAO,CAACxN,UAFP;AAEkB,2BAAWwN,OAAO,CAACvN,aAFrC;AAEoD,wBAAQuN,OAAO,CAAC9G,SAFpE;AAE+E,yBAAS8G,OAAO,CAAC7G,UAFhG;AAGT,0BAAU6G,OAAO,CAAC7H;AAHT,eAAX;AAKA,mBAAKiB,YAAL,CAAkBG,IAAlB,CAAuB/I,IAAvB;AACD;;AACD,gBAAMgJ,SAAS,GAAG,2CAAWC,aAAX,CAAyB,KAAKL,YAA9B,CAAlB;AACA,gBAAMM,QAAQ,GAAkB,2CAAWC,QAAX,EAAhC;AACA,uDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,kCAAlD;AACA,2DAAeE,QAAf,EAAyB,oCAAzB,EAdY,CAeZ;AACA;AACD;;;sCAEW;AAAA;;AACV,gBAAIG,GAAG,GAAG,IAAI,2CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAEA,iBAAKT,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,UAAL,CAAgB2B,YAAhB,CAA6B3I,MAAjD,EAAyDwH,CAAC,EAA1D,EAA8D;AAC5D,kBAAI8H,OAAO,GAAG,KAAKtI,UAAL,CAAgB2B,YAAhB,CAA6BnB,CAA7B,CAAd;AAEA,kBAAI1H,IAAI,GAAG,CAACwP,OAAO,CAAC/G,SAAT,EAAoB+G,OAAO,CAACjS,MAA5B,EAAoCiS,OAAO,CAACpS,KAA5C,EAAmDoS,OAAO,CAACxN,UAA3D,EAAsEwN,OAAO,CAACvN,aAA9E,EAA6FuN,OAAO,CAAC9G,SAArG,EACX8G,OAAO,CAAC7G,UADG,EACS6G,OAAO,CAAC7H,YADjB,CAAX;AAGA,mBAAKiB,YAAL,CAAkBG,IAAlB,CAAuB/I,IAAvB;AACD;;AACD,gBAAIsJ,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAJ,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AAECT,eAAW,CAACW,SAAZ,CAAsB;AACrB3D,kBAAI,EAAE,KAAKA,IADU;AAErB4D,kBAAI,EAAE,KAAKrB,YAFU;AAGrBsB,mBAAK,EAAE,MAHc;AAIrBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJS;AAKrBC,oBAAM,EAAE;AACNC,2BAAW,EAAE,CADP;AAENC,wBAAQ,EAAE;AAFJ,eALa;AAWrBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXa;AAYrBC,yBAAW,EAAE,qBAAA3K,IAAI,EAAI,CACpB,CAboB;AAcrB4K,yBAAW,EAAE,qBAAA5K,IAAI,EAAI;AACnBqJ,mBAAG,CAACwB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAD,mBAAG,CAACwB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAH,mBAAG,CAACyB,IAAJ,CAAS,yCAAT,EAAoDzB,GAAG,CAAC0B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAAvF,EAA0F,EAA1F,EAA8F;AAAEC,uBAAK,EAAE;AAAT,iBAA9F;AAEA7B,mBAAG,CAACU,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAV,mBAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACyB,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACAzB,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,mBAAG,CAACS,WAAJ,CAAgB,CAAhB;AACAT,mBAAG,CAACyB,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAN,mBAAG,CAACyB,IAAJ,CAAS,kBAAkB,OAAI,CAAChO,YAAL,CAAkBwO,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA7B,mBAAG,GAAG,OAAI,CAACkC,YAAL,CAAkBlC,GAAlB,CAAN;AACD;AA/BoB,aAAtB,EAvBS,CAwDV;;AACAA,eAAG,CAACmC,MAAJ,CAAW,kBAAX,EAzDU,CA0DV;;AACAnC,eAAG,CAACoC,IAAJ,CAAS,0CAAT;AAED;;;uCACYpC,G,EAAK;AAChB,gBAAIqC,OAAO,GAAGrC,GAAG,CAACsC,gBAAJ,EAAd;AACA,gBAAMjE,CAAC,GAAG2B,GAAG,CAAC0B,QAAJ,CAAaY,gBAAb,EAAV;AACAtC,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB,EAJgB,CAKhB;;AACAT,eAAG,CAACyB,IAAJ,CAAS,UAAUc,MAAM,CAAClE,CAAD,CAAhB,GAAsB,MAAtB,GAA+BkE,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOrC,GAAP;AAED;;;;;;;yBAjdU+F,a,EAAa,4M,EAAA,oI,EAAA,yI,EAAA,gI,EAAA,wJ,EAAA,4H;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;4EAUb,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACpFtB;;AAGI;;AAAqC;AAAA,qBAAS,IAAAvD,WAAA,EAAT;AAAsB,aAAtB;;AACjC;;AAAU;;AAAiB;;AAC/B;;AAAS;;AACT;;AAAqC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACjC;;AAAU;;AAAc;;AAC5B;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAAW;;AAAO;;AAClB;;AAEA;;AACI;AAAA,qBAAkB,IAAA/H,eAAA,qBAAlB;AAAsD,aAAtD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA8E;;AAC9E;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAAW;;AAAK;;AAChB;;AAEA;;AACI;AAAA,qBAAkB,IAAAD,aAAA,qBAAlB;AAAoD,aAApD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA4E;;AAC5E;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AAAW;;AAAI;;AACf;;AAEA;;AACI;AAAA,qBAAkB,IAAAD,YAAA,qBAAlB;AAAmD,aAAnD;;AACA;;;;AAGJ;;AACA;;AACI;;AAA2C;;AAAW;;AACtD;;AAA2E;;AAC3E;;AACJ;;AACA;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAEI;;AACI;;AAGI;;AACI;;AASA;;AACJ;;AAGA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAYA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AACJ;;AAEA;;AACI;;AAUA;;AAEJ;;AAEA;;AACI;;AAGA;;AAkBJ;;AACA;;AACA;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;;;;;;;;;AArNc;;AAAA;;AAMU;;AAAA;;AAC6C;;AAAA;;AAEd;;AAAA;;AASvB;;AAAA;;AAIwC;;AAAA;;AAEL;;AAAA;;AAEZ;;AAAA;;AASvB;;AAAA;;AAIuC;;AAAA;;AAEL;;AAAA;;AAEX;;AAAA;;AASvB;;AAAA;;AAYY;;AAAA,mGAAyB,eAAzB,EAAyB,gBAAzB,EAAyB,YAAzB,EAAyB,cAAzB;;AA+IR;;AAAA;;AACa;;AAAA;;AAEtB;;AAAA;;;;;;;;qBDzJb;;;;;;wEAIDuL,a,EAAa;gBATzB,uDASyB;iBATf;AACTnL,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AASe,U;;;;;;;;;;;;;;;AAUmB8C,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBQ,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AEpF9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAM6H,MAAM,GAAY,CACpB;AACIzD,YAAI,EAAG,MADX;AACkBC,iBAAS,EAAG,kJAD9B;AACoEC,mBAAW,EAAE,CAAC,4EAAD,CADjF;AAC8FsC,gBAAQ,EAAG;AADzG,OADoB,CAAxB;;UAWakB,qC;;;;;cAAAA;;;;2BAAAA,qC;AAAqC,S;AAAA,kBAJpC,CAAC,6DAAaC,QAAb,CAAsBF,MAAtB,CAAD,CAIoC,EAHnC,4DAGmC;;;;4HAArCC,qC,EAAqC;AAAA;AAAA,oBAHnC,4DAGmC;AAAA,S;AAHvB,O;;;;;wEAGdA,qC,EAAqC;gBALjD,sDAKiD;iBALxC;AACN5J,mBAAO,EAAG,CAAC,6DAAa6J,QAAb,CAAsBF,MAAtB,CAAD,CADJ;AAENG,mBAAO,EAAG,CAAC,4DAAD;AAFJ,W;AAKwC,U","file":"EV-charging-station-request-EV-charging-station-request-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { EVChargingStationRequestService } from 'app/shared/services/customer-management/evCharging-station-request.service';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  mLat: any;\r\n  mLong:any;\r\n  userInfo: any;\r\n\r\n  constructor(private fb: FormBuilder, public countryService: CountriesService,private evCharStationReqService :EVChargingStationRequestService,\r\n    private snackBar: MatSnackBar, private router: Router, private datePipe: DatePipe,public dialog : MatDialog,\r\n    private accountService: AccountService,) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      email : ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]] , \r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      user_vol: ['', [Validators.pattern(/^[0-9]*$/) ]],\r\n      station_spac: ['', [Validators.pattern(/^[0-9]*$/)]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      popu_density:['',[Validators.pattern(/^[0-9]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: ['',],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n    this.getUserInfo();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getUserInfo(){\r\n    this.accountService.getUserInfo(this.localStorage.userId).subscribe(\r\n\t\t\t(resp:any)=>{\r\n        this.userInfo = resp;\r\n        //console.log(this.userInfo)\r\n        this.form.get('email').setValue(this.userInfo[0].email);\r\n        this.form.get('mobile').setValue(this.userInfo[0].mobile);\r\n      },(err)=>{\r\n\r\n      }\r\n\t\t)\r\n   }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n  \r\n      let params = {\r\n        mobile: formValues.mobile,\r\n        user_id: this.localStorage.userId, \r\n        email: formValues.email,\r\n        volume_of_ev_user: formValues.user_vol == '' ? 0: formValues.user_vol,\r\n        space_for_station: formValues.station_spac == '' ? 0: formValues.station_spac,\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        population_density: formValues.popu_density == '' ? 0: formValues.popu_density,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        like_count:0,\r\n        dislike_count: 0,\r\n        created_by: this.localStorage.userId,\r\n        status: this.status == true ? 'M' : 'N',\r\n       \r\n      }\r\n      this.evCharStationReqService.createEvChargingStationRequest(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.evCharhingStation, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/customerManagement/newEvStationRequest/crud/listEVStationMyPendingRequests']);\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" required  style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n        <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Latitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"lat\" required type=\"text\">\r\n        <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter latitude</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Longitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"lng\" required type=\"text\">\r\n        <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter longitude</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>EV User Volume</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"user_vol\" type=\"number\" min=\"0\" autocomplete=\"off\">\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter ev user volume\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('user_vol').hasError('required')\">Please enter ev user volume</mat-error>\r\n        <mat-error *ngIf=\"form.get('user_vol').hasError('pattern')\">Only number are allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Station Space</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"station_spac\" type=\"number\" min=\"0\"  autocomplete=\"off\">\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station space\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('station_spac').hasError('required')\">Please enter station space</mat-error>\r\n        <mat-error *ngIf=\"form.get('station_spac').hasError('pattern')\">Only number are allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Population Density</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"popu_density\" autocomplete=\"off\"  type=\"number\" min=\"0\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter population density\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('popu_density').hasError('required')\">Please enter population density</mat-error>\r\n        <mat-error *ngIf=\"form.get('popu_density').hasError('pattern')\">Only number are allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line 1\">home</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line 2\">home</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\" (change)=\"getStateCountry()\"\r\n          required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Enter valid pin code of 6 digits\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\" required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\" required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <div fxFlex=\"50\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement disabled=\"true\">\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n\r\n    </div>\r\n  \r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/customerManagement/newEvStationRequest/crud/listEVStationMyPendingRequests\">Cancel</button>\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog,MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { EVChargingStationRequestService } from 'app/shared/services/customer-management/evCharging-station-request.service';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  menuArray: any;\r\n  mLat: any;\r\n  mLong:any;\r\n  userInfo: any;\r\n\r\n  constructor(private fb: FormBuilder, private evCharStationReqService :EVChargingStationRequestService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,public dialog : MatDialog,private accountService: AccountService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      email : ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]] , \r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      user_vol: ['', [Validators.required,Validators.pattern(/^[0-9]*$/) ]],\r\n      station_spac: ['', [Validators.required,Validators.pattern(/^[0-9]*$/)]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      popu_density:['',[Validators.required,Validators.pattern(/^[0-9]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: ['',],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getUserInfo();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id); \r\n    this.getAllCity(this.params.data.state_id); \r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c =>c.id == this.params.data.city_id );\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getUserInfo(){\r\n    this.accountService.getUserInfo(this.localStorage.userId).subscribe(\r\n\t\t\t(resp:any)=>{\r\n        this.userInfo = resp;\r\n        //console.log(this.userInfo)\r\n        // this.form.get('email').setValue(this.userInfo[0].email);\r\n        // this.form.get('mobile').setValue(this.userInfo[0].mobile);\r\n      },(err)=>{\r\n\r\n      }\r\n\t\t)\r\n   }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        mobile: formValues.mobile,\r\n        user_id: this.localStorage.userId, \r\n        email: formValues.email,\r\n        volume_of_ev_user: formValues.user_vol == '' ? 0: formValues.user_vol,\r\n        space_for_station: formValues.station_spac == '' ? 0: formValues.station_spac,\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        population_density: formValues.popu_density == '' ? 0: formValues.popu_density,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        like_count: this.params.data.like_count,\r\n        dislike_count: this.params.data.dislike_count,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.evCharStationReqService.updateEvChargingStationRequest(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            } \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      } else {\r\n        this.evCharStationReqService.createEvChargingStationRequest(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }\r\n    }else{\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('user_vol').setValue(params.data.volume_of_ev_user);\r\n    this.form.get('station_spac').setValue(params.data.space_for_station);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('popu_density').setValue(params.data.population_density);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    //this.form.get('like_count').setValue(params.data.like_count);\r\n    //this.form.get('dislike_count').setValue(params.data.dislike_count);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"new-password\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"new-password\" required  style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Latitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lat\" required type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter latitude</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Longitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lng\" required type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter longitude</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>EV User Volume</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"user_vol\" type=\"number\" min=\"0\" autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter ev user volume\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('user_vol').hasError('required')\">Please enter ev user volume</mat-error>\r\n          <mat-error *ngIf=\"form.get('user_vol').hasError('pattern')\">Only number are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Station Space</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"station_spac\" type=\"number\" min=\"0\"  autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station space\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('station_spac').hasError('required')\">Please enter station space</mat-error>\r\n          <mat-error *ngIf=\"form.get('station_spac').hasError('pattern')\">Only number are allowed</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Population Density</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"popu_density\" autocomplete=\"off\"  type=\"number\" min=\"0\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter population density\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('popu_density').hasError('required')\">Please enter population density</mat-error>\r\n          <mat-error *ngIf=\"form.get('popu_density').hasError('pattern')\">Only number are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line 1\">home</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line 2\">home</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\" (change)=\"getStateCountry()\"\r\n            required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Enter valid pin code of 6 digits\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\" required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\" required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n            required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error> -->\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement disabled=\"true\">\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EVChargingStationRequestRoutingModule } from './EV-charging-station-request-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { EVChargingStationRequestCrudComponent } from './EV-charging-station-request-crud/EV-charging-station-request-crud.component';\r\nimport { ApprovedListComponent } from './approved-list/approved-list.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { MyPendingListComponent } from './myPending-list/myPending-list.component';\r\n\r\nconst COMPONENTS = [EVChargingStationRequestCrudComponent, CreateComponent, ListComponent, ApprovedListComponent,MyPendingListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        EVChargingStationRequestRoutingModule,\r\n        FuseSharedModule,\r\n    ],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EVChargingStationRequestModule { }","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { EVChargingStationRequestService } from 'app/shared/services/customer-management/evCharging-station-request.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\nexport class MyEVPendingRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  mobile: string;\r\n  email: string;\r\n  volume_of_ev_user: number;\r\n  space_for_station: number;\r\n  population_density: number;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  like_count: number;\r\n  dislike_count: number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-myPending-list',\r\n  templateUrl: './myPending-list.component.html',\r\n  styleUrls: ['./myPending-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class MyPendingListComponent implements OnInit {\r\n\r\n  filterEntity: MyEVPendingRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'mobile', 'email', 'volume_of_ev_user', 'space_for_station', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['UserName', 'Mobile', 'Email', 'Like', 'Dislike', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<MyEVPendingRequest>;\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  mobileSearch = false;\r\n  emailSearch = false;\r\n  evVolSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  staSpaceSearch = false\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  myPendingCharReq: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  cityId: any;\r\n\r\n  constructor(private evCharStationReqService: EVChargingStationRequestService, public dialog: MatDialog, private fb: FormBuilder,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef, public countryService: CountriesService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n    });\r\n    this.filterEntity = new MyEVPendingRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    this.cityId = event.id;\r\n    this.getMyPendingCharStatReq(event.id);\r\n  }\r\n\r\n  getMyPendingCharStatReq(cityId) {\r\n    this.evCharStationReqService.getEvChargingStationRequestByUserIdCityId(this.localStorage.userId,cityId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.myPendingCharReq = resp.data;\r\n          //console.log(resp.data)\r\n            for (var i = 0; i < this.myPendingCharReq.length; i++) {\r\n              if (this.myPendingCharReq[i].status == 'M') {\r\n                this.myPendingCharReq[i].statusString = 'Moderate';\r\n              } else {\r\n                this.myPendingCharReq[i].statusString = 'InActive';\r\n              }\r\n            }\r\n            this.dataSource = new MatTableDataSource(this.myPendingCharReq);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.cdr.detectChanges();\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    );\r\n  }\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.evCharStationReqService.deleteChargerStationRequest(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.getMyPendingCharStatReq(this.cityId);\r\n              this.cdr.detectChanges();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n            }\r\n\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getMyPendingCharStatReq(this.cityId);\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getMyPendingCharStatReq(this.cityId);\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = \"\";\r\n    }\r\n    if (visibleOption == 'evVolSearch') {\r\n      this.evVolSearch = !this.evVolSearch;\r\n      this.filterEntity.volume_of_ev_user = null;\r\n    }\r\n    if (visibleOption == 'staSpaceSearch') {\r\n      this.staSpaceSearch = !this.staSpaceSearch;\r\n      this.filterEntity.space_for_station = null;\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \" \";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \" \";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'UserName': evDealers.user_name, 'Mobile': evDealers.mobile, 'Email': evDealers.email,\r\n        'Like': evDealers.like_count, 'Dislike': evDealers.dislike_count, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Approved/Reject EV Charging Station Request List');\r\n    XLSX.writeFile(workBook, 'Approved/Reject EV Charging Station Request List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.user_name, evDealers.mobile, evDealers.email, evDealers.like_count, evDealers.dislike_count, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Approved/Reject EV Charging Station Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Approved/Reject EV Charging Station Request List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n\r\n<mat-card style=\"padding:16px  !important;\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n                        (optionSelected)='onCountryChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n                        (optionSelected)='onStateChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n                        (optionSelected)='onCityChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name<mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Mobile\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email\" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"volume_of_ev_user\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!evVolSearch\" class=\"custom_font_size\" style=\"display: flex;\">EV User Volume\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('evVolSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"evVolSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"EV User Volume\" [(ngModel)]=\"filterEntity.volume_of_ev_user\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('evVolSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.volume_of_ev_user}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"space_for_station\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!staSpaceSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Space\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('staSpaceSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"staSpaceSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Space\" [(ngModel)]=\"filterEntity.space_for_station\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('staSpaceSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.space_for_station}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'moderateAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>&nbsp;&nbsp; -->\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"Approved / Reject\"\r\n                        (click)=\"viewDialog('Action',element,'buttonAction')\" style=\"cursor:pointer\"\r\n                        *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\"\r\n                            >delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ApprovedListComponent } from '../approved-list/approved-list.component';\r\nimport { ListComponent } from '../list/list.component';\r\nimport { MyPendingListComponent } from '../myPending-list/myPending-list.component';\r\n\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n     path : 'create', component : CreateComponent,canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listEVStationPendingRequests', component : ListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listEVStationRequests', component : ApprovedListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listEVStationMyPendingRequests', component : MyPendingListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path: '', redirectTo: 'listEVStationRequests', pathMatch: 'full' \r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\n  export class EVChargingStationRequestService {\r\n    apiUrl2 = `${environment.API_URL2}/chargingStation` ;\r\n  \r\n    constructor(private http : HttpClient) { }\r\n\r\n    createEvChargingStationRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/createEvChargingStationRequest`,params);\r\n    }\r\n    updateEvChargingStationRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/updateEvChargingStationRequest`,params);\r\n    }\r\n    approveRejectChargerStationRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/approveRejectChargerStationRequest`,params);\r\n    }\r\n    \r\n    getApproveRejectByUserIdCityId(user_id,city_id){\r\n        return this.http.get(`${this.apiUrl2}/getApproveRejectEvChargingStationRequestByUserIdCityId/${user_id}/${city_id}`);\r\n    }\r\n    getApproveRejectEvChargingStationRequestByCityId(user_id,city_id){\r\n        return this.http.get(`${this.apiUrl2}/getApproveRejectEvChargingStationRequestByCityId/${user_id}/${city_id}`);\r\n    }\r\n    \r\n    getEvChargingStationRequestByCityId(user_id,city_id){\r\n        return this.http.get(`${this.apiUrl2}/getEvChargingStationRequestByCityId/${user_id}/${city_id}`);\r\n    }\r\n    getEvChargingStationRequestByUserIdCityId(user_id,city_id){\r\n        return this.http.get(`${this.apiUrl2}/getEvChargingStationRequestByUserIdCityId/${user_id}/${city_id}`);\r\n    }\r\n    deleteChargerStationRequest(id,user_id){\r\n        return this.http.delete(`${this.apiUrl2}/deleteChargerStationRequest/${id}/${user_id}`);\r\n    }\r\n    onLikeDislikeRequest(params){\r\n        return this.http.post(`${this.apiUrl2}/LikeDislikeRequest`,params);\r\n    }\r\n\r\n\r\n  }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { RegisterChargerRequestService } from 'app/shared/services/customer-management/register-charger-request.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { EVChargingStationRequestService } from 'app/shared/services/customer-management/evCharging-station-request.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isButtonAction: boolean = false;\r\n  isModerate: boolean = false;\r\n  menuArray: any;\r\n  mLat: any;\r\n  mLong:any;\r\n\r\n  constructor(private fb: FormBuilder, private evCharStationReqService :EVChargingStationRequestService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,public dialog : MatDialog,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isButtonAction = this.params.buttonAction == 'buttonAction' ? true : false; //convert moderate to reject\r\n    this.isModerate = this.params.buttonAction == 'moderateAction' ? true : false; //convert publish to approved\r\n    this.form = this.fb.group({\r\n      email : ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]] , \r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      user_vol: ['', [Validators.required,Validators.pattern(/^[0-9]*$/) ]],\r\n      station_spac: ['', [Validators.required,Validators.pattern(/^[0-9]*$/)]],\r\n      lat: ['', [Validators.required,]],\r\n      lng:['',Validators.required],\r\n      popu_density:['',[Validators.required,Validators.pattern(/^[0-9]*$/)]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: ['',],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('user_vol').setValue(params.data.volume_of_ev_user);\r\n    this.form.get('station_spac').setValue(params.data.space_for_station);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('popu_density').setValue(params.data.population_density);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    //this.form.get('like_count').setValue(params.data.like_count);\r\n    //this.form.get('dislike_count').setValue(params.data.dislike_count);\r\n    if(this.isEditMode){\r\n      this.status = params.data.status == 'M' ? true : (params.data.status == 'A' ? true : false);\r\n    }\r\n    if(this.isModerate){\r\n      this.status = params.data.status == 'A' ? true : (params.data.status == 'R' ? true : false);\r\n    }\r\n\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onApproved(){\r\n    const params: any = {\r\n      id : this.params.data.id,\r\n      status: \"A\",//this.params.data.status === \"Y\" ? \"M\" : \"N\",//\r\n      modify_by :this.localStorage.userId\r\n    }\r\n    this.evCharStationReqService.approveRejectChargerStationRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if(resp.status == true){\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } \r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onReject(){\r\n    const params: any = {\r\n      id : this.params.data.id,\r\n      status: \"R\",//this.params.data.status === \"M\" ? \"R\" : \"N\",//\"R\"\r\n      modify_by :this.localStorage.userId\r\n    }\r\n    this.evCharStationReqService.approveRejectChargerStationRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if(resp.status == true){\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } \r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n  onModerate(){\r\n    if(this.isModerate){\r\n      const params:any = {\r\n        id: this.params.data.id,\r\n        status: \"M\",\r\n        modify_by:this.localStorage.userId\r\n      }\r\n      this.evCharStationReqService.approveRejectChargerStationRequest(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(resp.message,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n          \r\n        },(err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n  getLatLong(){\r\n    let params = {\r\n\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"new-password\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"new-password\" readonly  style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Latitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lat\" readonly type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter latitude</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Longitude</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"lng\" readonly type=\"text\">\r\n          <mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n          <mat-error *ngIf=\"form.get('lat').hasError('required')\">Please enter longitude</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>EV User Volume</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"user_vol\" type=\"number\" min=\"0\" autocomplete=\"off\"readonly>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter ev user volume\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('user_vol').hasError('required')\">Please enter ev user volume</mat-error>\r\n          <mat-error *ngIf=\"form.get('user_vol').hasError('pattern')\">Only number are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Station Space</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"station_spac\" type=\"number\" min=\"0\" readonly autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter station space\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('station_spac').hasError('required')\">Please enter station space</mat-error>\r\n          <mat-error *ngIf=\"form.get('station_spac').hasError('pattern')\">Only number are allowed</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Population Density</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"popu_density\" autocomplete=\"off\" readonly type=\"number\" min=\"0\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter population density\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('popu_density').hasError('required')\">Please enter population density</mat-error>\r\n          <mat-error *ngIf=\"form.get('popu_density').hasError('pattern')\">Only number are allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line 1\">home</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n  \r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line 2\">home</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\" (change)=\"getStateCountry()\"\r\n          readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Enter valid pin code of 6 digits\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\" readonly>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\" readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          readonly>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error> -->\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement disabled=\"true\">\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isButtonAction\" (click)=\"onReject()\">Reject</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isButtonAction\" (click)=\"onApproved()\">Approved</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModerate\" (click)=\"onModerate()\">Moderate</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { EVChargingStationRequestService } from 'app/shared/services/customer-management/evCharging-station-request.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\nexport class ApprovEvChargingStationRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  mobile: string;\r\n  email: string;\r\n  volume_of_ev_user: number;\r\n  space_for_station: number;\r\n  population_density: number;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  like_count: number;\r\n  dislike_count: number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-approved-list',\r\n  templateUrl: './approved-list.component.html',\r\n  styleUrls: ['./approved-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class ApprovedListComponent implements OnInit {\r\n\r\n  filterEntity: ApprovEvChargingStationRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'mobile', 'email', 'volume_of_ev_user', 'space_for_station', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['UserName', 'Mobile', 'Email', 'Like', 'Dislike', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<ApprovEvChargingStationRequest>;\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  mobileSearch = false;\r\n  emailSearch = false;\r\n  evVolSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  staSpaceSearch = false\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  approvedCharReq: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  cityId: any;\r\n  likeFlag: boolean = false;\r\n  dislikeFlag: boolean = false;\r\n\r\n  constructor(private evCharStationReqService: EVChargingStationRequestService, public dialog: MatDialog, private fb: FormBuilder,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef, public countryService: CountriesService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n    });\r\n    this.filterEntity = new ApprovEvChargingStationRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    this.cityId = event.id;\r\n    this.getApprovedRejectCharStatReq(event.id);\r\n  }\r\n\r\n  getApprovedRejectCharStatReq(cityId) {\r\n    if (this.localStorage.role_name == \"END USER\") {\r\n      this.evCharStationReqService.getApproveRejectByUserIdCityId(this.localStorage.userId, cityId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.approvedCharReq = resp.data;\r\n            for (var i = 0; i < this.approvedCharReq.length; i++) {\r\n              if (this.approvedCharReq[i].status == 'A') {\r\n                this.approvedCharReq[i].statusString = 'Approved';\r\n              } else {\r\n                this.approvedCharReq[i].statusString = 'Reject';\r\n              }\r\n            }\r\n            this.dataSource = new MatTableDataSource(this.approvedCharReq);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.dataSource = new MatTableDataSource();\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.cdr.detectChanges();\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    } else {\r\n      this.evCharStationReqService.getApproveRejectEvChargingStationRequestByCityId(this.localStorage.userId, cityId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.approvedCharReq = resp.data;\r\n            for (var i = 0; i < this.approvedCharReq.length; i++) {\r\n              if (this.approvedCharReq[i].status == 'A') {\r\n                this.approvedCharReq[i].statusString = 'Approved';\r\n              } else {\r\n                this.approvedCharReq[i].statusString = 'Reject';\r\n              }\r\n            }\r\n            this.dataSource = new MatTableDataSource(this.approvedCharReq);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.cdr.detectChanges();\r\n\r\n          } else {\r\n            this.dataSource = new MatTableDataSource([]);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n            this.cdr.detectChanges();\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getApprovedRejectCharStatReq(this.cityId);\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = \"\";\r\n    }\r\n    if (visibleOption == 'evVolSearch') {\r\n      this.evVolSearch = !this.evVolSearch;\r\n      this.filterEntity.volume_of_ev_user = null;\r\n    }\r\n    if (visibleOption == 'staSpaceSearch') {\r\n      this.staSpaceSearch = !this.staSpaceSearch;\r\n      this.filterEntity.space_for_station = null;\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \" \";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \" \";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'UserName': evDealers.user_name, 'Mobile': evDealers.mobile, 'Email': evDealers.email,\r\n        'Like': evDealers.like_count, 'Dislike': evDealers.dislike_count, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Approved/Reject EV Charging Station Request List');\r\n    XLSX.writeFile(workBook, 'Approved/Reject EV Charging Station Request List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.user_name, evDealers.mobile, evDealers.email, evDealers.like_count, evDealers.dislike_count, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Approved/Reject EV Charging Station Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Approved/Reject EV Charging Station Request List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n  onLike(element) {\r\n    \r\n    const params: any = {\r\n      id: element.id,\r\n      user_id: this.localStorage.userId,\r\n      like_dislike: 1,\r\n      status: \"Y\",\r\n      created_by: this.localStorage.userId,\r\n      modify_by: this.localStorage.userId,\r\n    }\r\n    this.evCharStationReqService.onLikeDislikeRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          if(element.like_count == 0){\r\n            this.snackBar.open(MessageConstant.like, 'Dismiss', { duration: 5000 });\r\n          }else{\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n          \r\n        } else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    );\r\n\r\n  }\r\n  onDislike(element) {\r\n\r\n    const params: any = {\r\n      id: element.id,\r\n      user_id: this.localStorage.userId,\r\n      like_dislike: -1,\r\n      status: \"Y\",\r\n      created_by: this.localStorage.userId,\r\n      modify_by: this.localStorage.userId,\r\n    }\r\n    this.evCharStationReqService.onLikeDislikeRequest(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          if(element.dislike_count == 0){\r\n            this.snackBar.open(MessageConstant.dislike, 'Dismiss', { duration: 5000 });\r\n          }else{\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n          \r\n        } else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n\r\n<mat-card style=\"padding:16px  !important;\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n                        (optionSelected)='onCountryChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n                        (optionSelected)='onStateChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n                        (optionSelected)='onCityChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name<mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Mobile\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email\" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"volume_of_ev_user\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!evVolSearch\" class=\"custom_font_size\" style=\"display: flex;\">EV User Volume\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('evVolSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"evVolSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"EV User Volume\" [(ngModel)]=\"filterEntity.volume_of_ev_user\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('evVolSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.volume_of_ev_user}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"space_for_station\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!staSpaceSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Space\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('staSpaceSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"staSpaceSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Space\" [(ngModel)]=\"filterEntity.space_for_station\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('staSpaceSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.space_for_station}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Like\" (click)=\"onLike(element)\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">thumb_up </mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Dislike\" (click)=\"onDislike(element)\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">thumb_down </mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'moderateAction')\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-EV-charging-station-request-crud',\r\n  templateUrl: './EV-charging-station-request-crud.component.html',\r\n  styleUrls: ['./EV-charging-station-request-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class EVChargingStationRequestCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'EV Station Requests', link: 'listEVStationRequests' },\r\n    // { label: 'My Pending Requests', link: 'listEVStationMyPendingRequests' },\r\n    //{ label: 'Pending Requests ', link: 'listEVStationPendingRequests' }\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"customerManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"newEvStationRequest\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"listEVStationRequests\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'EV Station Requests', link: 'listEVStationRequests' });\r\n                  }\r\n                  if (z.id === \"listEVStationMyPendingRequests\") {\r\n                    this.tempLinks.push({ label: 'My Pending Requests', link: 'listEVStationMyPendingRequests' });\r\n                  }\r\n                  if (z.id === \"listEVStationPendingRequests\") {\r\n                    this.tempLinks.push({ label: 'Pending Requests ', link: 'listEVStationPendingRequests' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/customerManagement/newEvStationRequest/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { EVChargingStationRequestService } from 'app/shared/services/customer-management/evCharging-station-request.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\nexport class EvPendingStationRequest {\r\n  id: number;\r\n  user_id: string;\r\n  user_name: string;\r\n  mobile: string;\r\n  email: string;\r\n  volume_of_ev_user: number;\r\n  space_for_station: number;\r\n  population_density: number;\r\n  lat: number;\r\n  lng: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  like_count: number;\r\n  dislike_count:number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: EvPendingStationRequest;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['user_name', 'mobile', 'email', 'volume_of_ev_user','space_for_station', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['UserName', 'Mobile', 'Email', 'Like','Dislike', 'City', 'State', 'Status']];\r\n  dataSource: MatTableDataSource<EvPendingStationRequest>;\r\n\r\n  pendingChargerReq: EvPendingStationRequest[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  usernameSearch = false;\r\n  mobileSearch = false;\r\n  emailSearch = false;\r\n  evVolSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  staSpaceSearch =false\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  form: FormGroup;\r\n  country_id: any;\r\n  state_id: any;\r\n  cityId: any;\r\n \r\n\r\n\r\n  constructor(private evCharStationReqService :EVChargingStationRequestService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,public countryService: CountriesService,private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n    });\r\n    this.filterEntity = new EvPendingStationRequest();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n   \r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n   \r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    this.dataSource = null;\r\n    this.cityId = event.id;\r\n    this.getEvPendingCharStationByCityId(this.cityId);\r\n  }\r\n\r\n\r\n  getEvPendingCharStationByCityId(cityId) {\r\n    \r\n      this.evCharStationReqService.getEvChargingStationRequestByCityId(this.localStorage.userId,cityId).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.pendingChargerReq = resp.data;\r\n            //console.log(resp.data)\r\n              for (var i = 0; i < this.pendingChargerReq.length; i++) {\r\n                if (this.pendingChargerReq[i].status == 'M') {\r\n                  this.pendingChargerReq[i].statusString = 'Moderate';\r\n                } else {\r\n                  this.pendingChargerReq[i].statusString = 'InActive';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.pendingChargerReq);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n          } else {\r\n              this.dataSource = new MatTableDataSource([]);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.cdr.detectChanges();\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n            return;\r\n          }\r\n\r\n        }, (err) => {\r\n        }\r\n      );\r\n    //  else {\r\n    //   this.evCharStationReqService.getEvChargingStationRequestByUserIdCityId(this.localStorage.userId,cityId).subscribe(\r\n    //     (resp: any) => {\r\n    //       if (resp.status == true) {\r\n    //         this.chargerReq = resp.data;\r\n    //         if (resp.data.length > 0) {\r\n    //           for (var i = 0; i < this.chargerReq.length; i++) {\r\n    //             if (this.chargerReq[i].status == 'A') {\r\n    //               this.chargerReq[i].statusString = 'Approved';\r\n    //             } else {\r\n    //               this.chargerReq[i].statusString = 'Moderate';\r\n    //             }\r\n    //           }\r\n    //           this.dataSource = new MatTableDataSource(this.chargerReq);\r\n    //           this.dataSource.paginator = this.paginator;\r\n    //           this.dataSource.sort = this.sort;\r\n    //           this.cdr.detectChanges();\r\n    //         } else {\r\n    //           this.snackBar.open(resp.message, 'Dismiss', { duration: 3000 })\r\n    //         }\r\n\r\n    //       } else {\r\n    //         this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n    //         return;\r\n    //       }\r\n\r\n    //     }, (err) => {\r\n    //     }\r\n    //   );\r\n    // }\r\n\r\n  }\r\n\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.evCharStationReqService.deleteChargerStationRequest(id, this.localStorage.userId).subscribe(\r\n  //         (resp: any) => {\r\n  //           if (resp.status == true) {\r\n  //             this.getEvPendingCharStationByCityId(this.cityId);\r\n  //             this.cdr.detectChanges();\r\n  //             this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n  //           } else {\r\n  //             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n  //           }\r\n\r\n  //         }, (err) => {\r\n  //           this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  viewDialog(action, data, buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction: buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEvPendingCharStationByCityId(this.cityId);\r\n    });\r\n  }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getEvPendingCharStationByCityId(this.cityId);\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'usernameSearch') {\r\n      this.usernameSearch = !this.usernameSearch;\r\n      this.filterEntity.user_name = \"\";\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'evVolSearch') {\r\n      this.evVolSearch = !this.evVolSearch;\r\n      this.filterEntity.volume_of_ev_user = null;\r\n    }\r\n    if (visibleOption == 'staSpaceSearch') {\r\n      this.staSpaceSearch = !this.staSpaceSearch;\r\n      this.filterEntity.space_for_station = null;\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \"\";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var charReq = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Username': charReq.user_name, 'Mobile': charReq.mobile, 'Email': charReq.email,\r\n        'Like': charReq.like_count,'DisLike': charReq.dislike_count, 'City': charReq.city_name, 'State': charReq.state_name,\r\n        'Status': charReq.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'EV Charging Station Request List');\r\n    XLSX.writeFile(workBook, 'EVChargingStationRequest-List.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var charReq = this.dataSource.filteredData[i];\r\n\r\n      var data = [charReq.user_name, charReq.mobile, charReq.email, charReq.like_count,charReq.dislike_count, charReq.city_name,\r\n      charReq.state_name, charReq.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('EV Charging Station Request List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('EVChargingStationRequest-List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-card style=\"padding:16px  !important;\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Country</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n                        [matAutocomplete]=\"countryAuto\" required>\r\n                    <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n                        (optionSelected)='onCountryChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('country').hasError('required')\">Please enter country</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>State</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n                        required>\r\n                    <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n                        (optionSelected)='onStateChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('state').hasError('required')\">Please enter state</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>City</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n                        required>\r\n                    <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n                        (optionSelected)='onCityChange($event.option.value)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex;\">\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('city').hasError('required')\">Please enter city</mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"user_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!usernameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"usernameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.user_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('usernameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.user_name}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Mobile\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email\"\r\n                                [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"volume_of_ev_user\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!evVolSearch\" class=\"custom_font_size\" style=\"display: flex;\">EV User Volume\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('evVolSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"evVolSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"EV User Volume\" [(ngModel)]=\"filterEntity.volume_of_ev_user\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('evVolSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.volume_of_ev_user}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"space_for_station\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!staSpaceSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Space\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('staSpaceSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"staSpaceSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station Space\" [(ngModel)]=\"filterEntity.space_for_station\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('staSpaceSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.space_for_station}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'A' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Approved / Reject\"\r\n                            (click)=\"viewDialog('Action',element,'buttonAction')\" style=\"cursor:pointer\"\r\n                            *ngIf=\"localStorage.role_name !='END USER' \">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Reject\"\r\n                            (click)=\"viewDialog('Reject',element,'rejectAction')\" style=\"cursor:pointer\"\r\n                            *ngIf=\"localStorage.role_name !='END USER' \">remove_moderator</mat-icon>&nbsp;&nbsp; -->\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\" *ngIf=\"localStorage.role_name =='END USER' \">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\"\r\n                            *ngIf=\"localStorage.role_name =='END USER' \">delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EVChargingStationRequestCrudComponent } from './EV-charging-station-request-crud/EV-charging-station-request-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './EV-charging-station-request-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : EVChargingStationRequestCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class EVChargingStationRequestRoutingModule{}"]}