{"version":3,"sources":["webpack:///src/app/shared/services/callback/callback.service.ts","webpack:///src/app/main/callback-management/callback/callback-routing.module.ts","webpack:///src/app/main/callback-management/callback/action-dialog/action-dialog.component.ts","webpack:///src/app/main/callback-management/callback/action-dialog/action-dialog.component.html","webpack:///src/app/main/callback-management/callback/callback-crud/callback-crud.component.ts","webpack:///src/app/main/callback-management/callback/callback-crud/callback-crud.component.html","webpack:///src/app/main/callback-management/callback/callback.module.ts","webpack:///src/app/main/callback-management/callback/callback-crud/routes.ts","webpack:///src/app/main/callback-management/callback/list/list.component.ts","webpack:///src/app/main/callback-management/callback/list/list.component.html","webpack:///src/app/main/callback-management/callback/closed/closed.component.ts","webpack:///src/app/main/callback-management/callback/closed/closed.component.html"],"names":["CallbackService","http","apiUrl2","API_URL2","params","post","providedIn","routes","path","component","children","CallBackRoutingModule","forChild","imports","exports","ActionDialogComponent","fb","snackBar","callbackService","dialogRef","data","isEditMode","callBackStatus","value","viewValue","initialize","localStorage","JSON","parse","getItem","userID","id","action","form","group","name","question","mobile","date","remarks","agent_remarks","assignValues","close","valid","formValues","closed_by","userId","created_by","closeRequest","subscribe","resp","status","open","recordUpdateMessage","duration","errorMessage","err","get","hasError","setValue","closeActionPanel","onYesClick","selector","templateUrl","styleUrls","encapsulation","None","animations","CallbackCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","undefined","title","detectChanges","nav_list","nav_list_with_tab","filter","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","push","label","link","navigate","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","COMPONENTS","COMPONENTS_DYNAMIC","CallbackModule","declarations","entryComponents","TABS_DEMO_ROUTES","canActivate","redirectTo","pathMatch","CallBack","ListComponent","dialog","datePipe","displayedColumns","head","nameSearch","questionSearch","mobileSearch","dateSearch","remarkSearch","getCallbackRequest","filterEntity","filterType","ANYWHERE","event","filterValue","target","dataSource","trim","toLowerCase","paginator","firstPage","getCallHistory","callBacks","i","length","dateString","transform","sort","NoRecordFoundMessage","width","autoFocus","disableClose","panelClass","afterClosed","result","visibleOption","exportedData","filteredData","callbackModel","email","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","providers","ClosedComponent","aRemarkSearch"],"mappings":"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","file":"callback-callback-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CallbackService {\r\n  apiUrl2 = `${environment.API_URL2}/cbr` ;\r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  getCallHistory(params){\r\n    return this.http.post(`${this.apiUrl2}/getCallHistory/`,params);\r\n  }\r\n  closeRequest(params){\r\n    return this.http.post(`${this.apiUrl2}/closeRequest/`,params);\r\n  }\r\n \r\n  \r\n\r\n  \r\n}\r\n","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CallbackCrudComponent } from './callback-crud/callback-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './callback-crud/routes';\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : CallbackCrudComponent, children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class CallBackRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { CallbackService } from 'app/shared/services/callback/callback.service';\r\nimport { formatDate } from '@angular/common' \r\ninterface CallBackStatus {\r\n  value: string;\r\n  viewValue: string;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  userID:any;\r\n  callBackStatus: CallBackStatus[] = [\r\n    {value: 'resolved', viewValue: 'Resolved'},\r\n    {value: 'pending', viewValue: 'Pending'},\r\n    {value: 'disputed', viewValue: 'Disputed'},\r\n  ];\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar,private callbackService:CallbackService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.userID = this.params.data.id;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['',],\r\n      question: [''],\r\n      mobile: [''],\r\n      date:[''],\r\n      remarks:[''],\r\n      agent_remarks:['']\r\n     \r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n   \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        agent_remarks: formValues.agent_remarks,\r\n         remarks : formValues.remarks ,\r\n\r\n       \r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.closed_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.callbackService.closeRequest(params).subscribe(\r\n           (resp: any) => {\r\n             if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n             }else{\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n             }\r\n            \r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } \r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('question').setValue(params.data.question);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('date').setValue((formatDate(params.data.date,'yyyy-MM-dd','en')));\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n\r\n\r\n    \r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Callback Request</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" readonly>\r\n\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Question</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"question\" readonly>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" readonly>\r\n\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Date</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"date\" readonly>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Agent Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"agent_remarks\" autocomplete=\"off\">\r\n        </mat-form-field>\r\n      </div>\r\n      <!-- <mat-divider></mat-divider>\r\n      <h5 style=\"margin-top:1rem;margin-bottom:1rem\">Agent -Call Back Response</h5>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n       \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Status</mat-label>\r\n          <mat-select>\r\n            <mat-option *ngFor=\"let status of callBackStatus \" [value]=\"status.value\">\r\n              {{status.viewValue}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div> -->\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">Close</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import {ChangeDetectorRef, Component,OnInit,ViewEncapsulation} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-callback-crud',\r\n  templateUrl: './callback-crud.component.html',\r\n  styleUrls: ['./callback-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class CallbackCrudComponent implements OnInit {\r\n   \r\n   tabLinks = [\r\n    // { label: 'Open Request', link: 'list' },\r\n    // { label: 'Close Request', link: 'closed' }\r\n  ];\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  menuArray:any;\r\n  \r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"mangeCallback\") {\r\n        //this.menuArray = x;\r\n        this.objectData = x;\r\n        if(this.objectData.children != null && this.objectData.children != undefined){\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"callback\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if(this.objectChildData.children != null && this.objectChildData.children!= undefined){\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"openRequest\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Open Request', link: 'list' });\r\n                  }\r\n                  if (z.id === \"closeRequest\") {\r\n                    this.tempLinks.push({ label: 'Close Request', link: 'closed' });\r\n                  }\r\n                });\r\n              }\r\n             \r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/mangeCallback/callback/crud/' + this.tempLinks[0].link]);\r\n              }\r\n  \r\n            }\r\n  \r\n          });\r\n        }\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CallbackCrudComponent } from './callback-crud/callback-crud.component';\r\nimport { ClosedComponent } from './closed/closed.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CallBackRoutingModule } from './callback-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS =[CallbackCrudComponent, ClosedComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, CallBackRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class CallbackModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { ClosedComponent } from '../closed/closed.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'closed', component : ClosedComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent ,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport {Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { CallbackService } from 'app/shared/services/callback/callback.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\n\r\nexport class CallBack {\r\n  id: string;\r\n  name: string;\r\n  question: string;\r\n  mobile: string;\r\n  date:string;\r\n  email:string;\r\n  dateString:string;\r\n  remarks: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: CallBack;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'name', 'question','mobile','date','remarks','action'];\r\n  head = [['Name', 'Question','Mobile','Email','Remark']];\r\n  dataSource: MatTableDataSource<CallBack>;\r\n\r\n  callBacks : CallBack[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  nameSearch = false;\r\n  questionSearch = false;\r\n  mobileSearch = false;\r\n  dateSearch = false;\r\n  remarkSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private callbackService : CallbackService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,private datePipe:DatePipe) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getCallbackRequest();\r\n    this.filterEntity = new CallBack();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getCallbackRequest(){\r\n    let params = {\r\n      \"status\" : \"O\",    \r\n      \"user_id\" : 0,//this.localStorage.userId ,   \r\n      \"mobile\" : \"\"\r\n    }\r\n    this.callbackService.getCallHistory(params).subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true){\r\n          this.callBacks = resp.data;\r\n          for(var i =0; i<this.callBacks.length;i++){\r\n            this.callBacks[i].dateString = this.datePipe.transform(this.callBacks[i].date, 'dd/MM/yyyy');\r\n          }\r\n          // for(var i=0; i < this.callBacks.length;i++){\r\n          //   if(this.callBacks[i].status == 'N'){\r\n          //     this.callBacks[i].statusString = 'Inactive';\r\n          //   }else{\r\n          //     this.callBacks[i].statusString = 'Active';\r\n          //   }\r\n            \r\n           \r\n          // }\r\n        this.dataSource = new MatTableDataSource(this.callBacks);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n        \r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true, \r\n      panelClass: 'app-action-dialog',  \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      \r\n      this.getCallbackRequest();\r\n    });\r\n  }\r\n  \r\n  changeVisibility(visibleOption){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    \r\n    if(visibleOption == 'questionSearch'){\r\n      this.questionSearch = !this.questionSearch;\r\n      this.filterEntity.question = '';\r\n    }\r\n    if(visibleOption == 'mobileSearch'){\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if(visibleOption == 'dateSearch'){\r\n      this.dateSearch = !this.dateSearch;\r\n      this.filterEntity.dateString = '';\r\n    }\r\n   \r\n    if(visibleOption == 'remarkSearch'){\r\n      this.remarkSearch = !this.remarkSearch;\r\n      this.filterEntity.remarks = '';\r\n    }\r\n   }\r\n   tableExport()\r\n   {\r\n    \r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var callbackModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Name':callbackModel.name,'Question': callbackModel.question,\r\n        'Mobile':callbackModel.mobile,'Email':callbackModel.email,'Remarks':callbackModel.remarks};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Callback Open Request');\r\n       XLSX.writeFile(workBook, 'Callback Open Request.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n   \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.question,chrger.mobile,chrger.email,chrger.remarks] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Callback Open Request Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Callback Open Request report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\");\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","\r\n<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>              \r\n       <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\"  class=\"page-layout simple fullwidth\"  style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n       \r\n            <mat-table class=\"orders-table\" [exampleEntity]=\"filterEntity\"\r\n                             [filterType]=\"filterType\"   \r\n                       #table [dataSource]=\"dataSource\"\r\n                       matSort\r\n                       matTableFilter>\r\n\r\n                 <!-- Name Column -->\r\n                 <ng-container matColumnDef=\"name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!nameSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span> \r\n                        <mat-form-field  *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Name \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>  \r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"question\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!questionSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Question&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('questionSearch')\">search</mat-icon> </span> \r\n                        <mat-form-field  *ngIf=\"questionSearch\"  appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Question \" [(ngModel)]=\"filterEntity.question\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('questionSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.question}} </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!mobileSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Mobile &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch')\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.remarks\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('MobileSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.mobile}} </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!dateSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Date &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('dateSearch')\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"dateSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Date\" [(ngModel)]=\"filterEntity.dateString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateString}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"remarks\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!remarkSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Remarks &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('remarkSearch')\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"remarkSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Remarks\" [(ngModel)]=\"filterEntity.remarks\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('remarkSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.remarks}} </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef  >\r\n                        <span class=\"custom_font_size\">Action</span> \r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let element\">\r\n                         <mat-icon color=\"primary\" matTooltip=\"Edit\"\r\n                                  (click)=\"openDialog('EDIT',element)\"\r\n                                  style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n                    </mat-cell>\r\n                </ng-container>\r\n                \r\n               \r\n                <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n                <mat-header-row mat-header-row  *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n              \r\n                <!-- <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row> -->\r\n\r\n               \r\n            </mat-table>\r\n\r\n            <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n\r\n        </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","\r\nimport {Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport * as XLSX from 'xlsx';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CallbackService } from 'app/shared/services/callback/callback.service';\r\nexport class CallBack {\r\n  id: string;\r\n  name: string;\r\n  question: string;\r\n  mobile: string;\r\n  date:string;\r\n  email:string;\r\n  dateString:string;\r\n  remarks: string;\r\n  agent_remarks:string;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-closed',\r\n  templateUrl: './closed.component.html',\r\n  styleUrls: ['./closed.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ClosedComponent implements OnInit {\r\n  filterEntity: CallBack;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'name', 'question','mobile','date','remarks','agent_remarks'];\r\n  dataSource: MatTableDataSource<CallBack>;\r\n\r\n  callBacks : CallBack[];\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  dialogRef: any;\r\n  nameSearch = false;\r\n  questionSearch = false;\r\n  mobileSearch = false;\r\n  dateSearch = false;\r\n  remarkSearch = false;\r\n  aRemarkSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private callbackService : CallbackService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar,private datePipe:DatePipe) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getCallbackRequest();\r\n    this.filterEntity = new CallBack();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n  \r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getCallbackRequest(){\r\n    let params = {\r\n      \"status\" : \"C\",    \r\n      \"user_id\" : 0,//this.localStorage.userId ,   \r\n      \"mobile\" : \"\"\r\n    }\r\n    this.callbackService.getCallHistory(params).subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true){\r\n          this.callBacks = resp.data;\r\n          for(var i =0; i<this.callBacks.length;i++){\r\n            this.callBacks[i].dateString = this.datePipe.transform(this.callBacks[i].date, 'dd/MM/yyyy');\r\n          }\r\n          // for(var i=0; i < this.callBacks.length;i++){\r\n          //   if(this.callBacks[i].status == 'N'){\r\n          //     this.callBacks[i].statusString = 'Inactive';\r\n          //   }else{\r\n          //     this.callBacks[i].statusString = 'Active';\r\n          //   }\r\n            \r\n           \r\n          // }\r\n        this.dataSource = new MatTableDataSource(this.callBacks);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n        \r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n \r\n\r\n\r\n  \r\n  \r\n  changeVisibility(visibleOption){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    \r\n    if(visibleOption == 'questionSearch'){\r\n      this.questionSearch = !this.questionSearch;\r\n      this.filterEntity.question = '';\r\n    }\r\n    if(visibleOption == 'mobileSearch'){\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if(visibleOption == 'dateSearch'){\r\n      this.dateSearch = !this.dateSearch;\r\n      this.filterEntity.dateString = '';\r\n    }\r\n   \r\n    if(visibleOption == 'remarkSearch'){\r\n      this.remarkSearch = !this.remarkSearch;\r\n      this.filterEntity.remarks = '';\r\n    }\r\n    if(visibleOption == 'aRemarkSearch'){\r\n      this.aRemarkSearch = !this.aRemarkSearch;\r\n      this.filterEntity.agent_remarks = '';\r\n    }\r\n   }\r\n   tableExport()\r\n   {\r\n    \r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var callbackModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Name':callbackModel.name,'Question': callbackModel.question,\r\n        'Mobile':callbackModel.mobile,'Email':callbackModel.email,'Remarks':callbackModel.remarks};\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n     \r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Callback Closed Request');\r\n       XLSX.writeFile(workBook, 'Callback Closed Request.xlsx');\r\n      \r\n      \r\n   \r\n   }\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"tableExport()\">\r\n        <mat-icon>downloading</mat-icon> &nbsp;&nbsp;Export Excel\r\n    </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <mat-table class=\"orders-table\" [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table\r\n            [dataSource]=\"dataSource\" matSort matTableFilter>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                        <input matInput placeholder=\" Name \" [(ngModel)]=\"filterEntity.name\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"question\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span *ngIf=\"!questionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Question&nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('questionSearch')\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"questionSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                        <input matInput placeholder=\" Question \" [(ngModel)]=\"filterEntity.question\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('questionSearch')\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\"> {{row.question}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"mobile\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Mobile &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch')\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                        <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.remarks\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('MobileSearch')\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\"> {{row.mobile}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"date\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span *ngIf=\"!dateSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('dateSearch')\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"dateSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                        <input matInput placeholder=\"Date\" [(ngModel)]=\"filterEntity.dateString\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('dateSearch')\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\"> {{row.dateString}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span *ngIf=\"!remarkSearch\" class=\"custom_font_size\" style=\"display: flex;\">Remarks &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('remarkSearch')\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"remarkSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                        <input matInput placeholder=\"Remarks\" [(ngModel)]=\"filterEntity.remarks\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('remarkSearch')\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\"> {{row.remarks}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"agent_remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    <span *ngIf=\"!aRemarkSearch\" class=\"custom_font_size\" style=\"display: flex;\">Agent Remarks &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('aRemarkSearch')\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"aRemarkSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                        <input matInput placeholder=\"Agent Remarks\" [(ngModel)]=\"filterEntity.agent_remarks\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('aRemarkSearch')\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\"> {{row.agent_remarks}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n            <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\r\n            <!-- <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row> -->\r\n\r\n\r\n        </mat-table>\r\n\r\n        <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>"]}