{"version":3,"sources":["./src/app/main/manage-geographics/manage-city/manage-city-crud/routes.ts","./src/app/main/manage-geographics/manage-city/manage-city.module.ts","./src/app/main/manage-geographics/manage-city/create/create.component.ts","./src/app/main/manage-geographics/manage-city/create/create.component.html","./src/app/main/manage-geographics/manage-city/manage-city-routing.module.ts","./src/app/main/manage-geographics/manage-city/view-dialog/view-dialog.component.ts","./src/app/main/manage-geographics/manage-city/view-dialog/view-dialog.component.html","./src/app/main/manage-geographics/manage-city/manage-city-crud/manage-city-crud.component.ts","./src/app/main/manage-geographics/manage-city/manage-city-crud/manage-city-crud.component.html","./src/app/main/manage-geographics/manage-city/list/list.component.ts","./src/app/main/manage-geographics/manage-city/list/list.component.html","./src/app/main/manage-geographics/manage-city/action-dialog/action-dialog.component.ts","./src/app/main/manage-geographics/manage-city/action-dialog/action-dialog.component.html"],"names":[],"mappings":"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","file":"manage-city-manage-city-module-es2015.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ManageCityCrudComponent } from './manage-city-crud/manage-city-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ManageCityRoutingModule } from './manage-city-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ManageCityCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ManageCityRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ManageCityModule{}","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport{StateService} from 'app/shared/services/geographics/state.service';\r\nimport {CountryService} from 'app/shared/services/geographics/country.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  states :any;\r\n  filteredOptionState: Observable<any[]>;\r\n  countries :any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  countrty_id:any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  constructor(private fb: FormBuilder,\r\n    private snackBar: MatSnackBar,\r\n    private router : Router,public cityService: CityService,public stateService:StateService,public countryService:CountryService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    // this.getState();\r\n   this.getCountry();\r\n   \r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      state :['',[autocompleteObjectValidator(),Validators.required]],\r\n      country :['',[autocompleteObjectValidator(),Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n  \r\n   \r\n \r\n  }\r\n \r\n  onSubmit(){\r\n    if (this.form.invalid){\r\n      return;\r\n    }else{\r\n      let formValues = this.form.value;\r\n      ////\r\n  \r\n      \r\n      let params = {\r\n        name :formValues.name, \r\n        description :formValues.description, \r\n        state_id:formValues.state.id,\r\n        status :  this.status == true ? 'Y' : 'N', \r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n      \r\n      this.cityService.create(params).subscribe(\r\n        (cityData:any )=>{\r\n         if(cityData.status == true){\r\n          this.snackBar.open('City Created!', 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/manageGeographics/manageCity/list']);\r\n\r\n         } else{\r\n          if(cityData.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n            this. errorMsg = cityData.message;\r\n            var index=  this. errorMsg.lastIndexOf(\" \");\r\n           \r\n            this.splitted = this. errorMsg.substring(index+1); \r\n            if(this.splitted == \"'state_id'\" ){\r\n              this.snackBar.open(MessageConstant.nameDuplicateCity, 'Dismiss', { duration: 5000 });\r\n            }\r\n           \r\n          }else{\r\n            this.snackBar.open(cityData.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n         // this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n         }\r\n        \r\n  \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  // getState(){\r\n  //   this.stateService.getAllState().subscribe(\r\n  //     (data:any)=>{\r\n  //       this.states = data;\r\n  //        this.filteredOptionState = this.form.controls.state.valueChanges\r\n  //          .pipe(\r\n  //            startWith(''),\r\n  //            map(value => typeof value === 'string' ? value : value.name),\r\n  //            map(name => name ? this._filterState(name) : this.states)\r\n  //          );\r\n  //        },(err)=>{\r\n           \r\n  //        }\r\n  //   )\r\n  // }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStatesByCountry(country){\r\n    this.countrty_id = country.id;\r\n    this.stateService.getStateByCountry(this.countrty_id).subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  onCountryChange(event){\r\n   this.getStatesByCountry(event);\r\n   this.states=[];\r\n   this.form.get('state').setValue( \"\");\r\n  }\r\n  getCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label> Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"description\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t</mat-slide-toggle>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/manageGeographics/manageCity/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageCityCrudComponent } from './manage-city-crud/manage-city-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './manage-city-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : ManageCityCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ManageCityRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport{StateService} from 'app/shared/services/geographics/state.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  states :any;\r\n  filteredOptionState: Observable<any[]>;\r\n  constructor(private fb: FormBuilder,private cityService: CityService, private stateService:StateService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getState();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      state :['',[autocompleteObjectValidator(),Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      state_id:formValues.state.id,\r\n      status :  this.status == true ? 'Y' : 'N', \r\n      modify_by : this.localStorage.userId,\r\n     \r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.cityService.update(params).subscribe(\r\n      (cityData: any ) => {\r\n        if(cityData.status == true){\r\n          this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }\r\n       \r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.cityService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getState(){\r\n    this.stateService.getAllState().subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n        }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage City</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label> Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"100\" autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"description\">\r\n          <mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\">\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" disabled=\"true\" class=\"example-margin\" color=\"primary\"\r\n          [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-city-crud',\r\n  templateUrl: './manage-city-crud.component.html',\r\n  styleUrls: ['./manage-city-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ManageCityCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Manage City', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"manageGeographics\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"manageCity\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"manageCity\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Manage City', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/manageGeographics/manageCity/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\n\r\n\r\nexport class ManageCity {\r\n name:string;\r\n description:string;\r\n state:string;\r\n status:string;\r\n statusString:string;\r\n state_name:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n  \r\n})\r\nexport class ListComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'name', 'description','state','status','action'];\r\n  head = [['City Name','Description','State','Status ']];\r\n  dataSource: MatTableDataSource<ManageCity>;\r\n\r\n  manageCity : ManageCity[];\r\n  filterEntity: ManageCity;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  nameSearch = false;\r\n  descriptionSearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private cityService : CityService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllCity();\r\n    this.filterEntity = new ManageCity();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails')); \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCity(){\r\n    this.cityService.getAllCity().subscribe(\r\n      (cityData:any)=>{\r\n        this.manageCity = cityData;\r\n        for(var i=0; i < this.manageCity.length;i++){\r\n          if(this.manageCity[i].status == 'N'){\r\n            this.manageCity[i].statusString = 'Inactive';\r\n          }else{\r\n            this.manageCity[i].statusString = 'Active';\r\n          }\r\n          \r\n         \r\n        }\r\n        this.dataSource = new MatTableDataSource(this.manageCity);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    \r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.cityService.delete(id, this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n              if(data.status = true){\r\n                this.getAllCity();\r\n            this.snackBar.open('Deleted successfully','Dismiss',{duration:2000});\r\n              }else{\r\n                this.getAllCity();\r\n                this.snackBar.open('Error while saving data','Dismiss',{duration:2000});\r\n              }\r\n            \r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n  }\r\n\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true  \r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true      \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getAllCity();\r\n    });\r\n  }\r\n  viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getAllCity();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption){\r\n   \r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    \r\n    \r\n    if(visibleOption == 'descriptionSearch'){\r\n      this.descriptionSearch = !this.descriptionSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n     if(visibleOption == 'stateSearch'){\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n   \r\n   }\r\n   \r\n   tableExport()\r\n   {\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var cityModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'City Name':cityModel.name,'Description':cityModel.description,\r\n                  'State': cityModel.state_name,'Status ':cityModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Manage City');\r\n       XLSX.writeFile(workBook, 'Manage City.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n   }\r\n\r\n   pdfExport(){\r\n   \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.description,chrger.state_name,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Manage City Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Manage City report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\");\r\n    return doc;\r\n  \r\n  }\r\n\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n     <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\"> City Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descriptionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descriptionSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport{StateService} from 'app/shared/services/geographics/state.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  states :any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  filteredOptionState: Observable<any[]>;\r\n  constructor(private fb: FormBuilder,private cityService: CityService, private stateService:StateService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getState();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      state :['',[autocompleteObjectValidator(),Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      state_id:formValues.state.id,\r\n      status :  this.status == true ? 'Y' : 'N', \r\n      modify_by : this.localStorage.userId,\r\n     \r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.cityService.update(params).subscribe(\r\n      (cityData: any ) => {\r\n        if(cityData.status == true){\r\n          this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          if(cityData.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n            this. errorMsg = cityData.message;\r\n            var index=  this. errorMsg.lastIndexOf(\" \");\r\n            \r\n            this.splitted = this. errorMsg.substring(index+1); \r\n            if(this.splitted == \"'state_id'\" ){\r\n              this.snackBar.open(MessageConstant.nameDuplicateCity, 'Dismiss', { duration: 5000 });\r\n            }\r\n           \r\n          }else{\r\n            this.snackBar.open(cityData.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        }\r\n       \r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.cityService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getState(){\r\n    this.stateService.getAllState().subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n        }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage City</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label> Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"description\">\r\n          <mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"],"sourceRoot":"webpack:///"}