{"version":3,"sources":["./src/app/main/coprate-mgmt/coprate-user/coprate-user-routing.module.ts","./src/app/main/coprate-mgmt/coprate-user/create/create.component.ts","./src/app/main/coprate-mgmt/coprate-user/create/create.component.html","./src/app/main/coprate-mgmt/coprate-user/coprate-user-crud/coprate-user-crud.component.ts","./src/app/main/coprate-mgmt/coprate-user/coprate-user-crud/coprate-user-crud.component.html","./src/app/shared/services/corporate/corporate.service.ts","./src/app/shared/services/rfid/rfid.service.ts","./src/app/main/coprate-mgmt/coprate-user/coprate-user.module.ts","./src/app/main/coprate-mgmt/coprate-user/action-dialog/action-dialog.component.ts","./src/app/main/coprate-mgmt/coprate-user/action-dialog/action-dialog.component.html","./src/app/main/coprate-mgmt/coprate-user/coprate-user-crud/routes.ts","./src/app/main/coprate-mgmt/coprate-user/list/list.component.ts","./src/app/main/coprate-mgmt/coprate-user/list/list.component.html"],"names":[],"mappings":"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","file":"coprate-user-coprate-user-module-es2015.js","sourcesContent":["import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CoprateUserCrudComponent } from './coprate-user-crud/coprate-user-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './coprate-user-crud/routes';\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : CoprateUserCrudComponent, children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class CoprateUserRoutingModule{}","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  chargerTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  role_types:any;\r\n  cpo_types:any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private userService : UserService,private snackBar: MatSnackBar,\r\n    private router : Router,private datePipe: DatePipe,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n   //this.getCountry();\r\n   this.getAllCountry();\r\n   this.getAllState();\r\n   //this.getAllCity();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      coprate_code:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      register_number:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      phone_number:['',[Validators.required,Validators.min(10000000000), Validators.max(999999999999)]],\r\n      cin_number:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      date_of_incorporation:['',[Validators.required]],\r\n      contract_period_from:['',[Validators.required]],\r\n      contract_period_to:['',[Validators.required]],\r\n      gstin:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      addressline1: ['', [Validators.required]],\r\n      addressline2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required]],\r\n      landmark: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      country: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      city: ['', [Validators.required]],\r\n\r\n     \r\n\r\n\r\n    \r\n     \r\n    });\r\n   //this.filteredOptions();\r\n   \r\n   this.getCpoTypes();\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getCpoTypes(){\r\n    \r\n    this.cpo_types = this.userService.getCPOTypes();\r\n    this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n    );\r\n   \r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType(){\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType(){\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  onSubmit(){\r\n    if (this.form.invalid){\r\n      return;\r\n    }else{\r\n      let formValues = this.form.value;\r\n      ////\r\n  \r\n      \r\n      let params = {\r\n        name :formValues.rf_name, \r\n        description :formValues.rfid_description, \r\n        rfid_no :formValues.rfid_number,\r\n        expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        status :'Y' ,\r\n        created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n      \r\n      this.userService.create(params).subscribe(\r\n        (data:any )=>{\r\n          \r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.router.navigate(['/rfidManagement/crud/list']);\r\n  \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n    \r\n    \r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n // this.form.get('pincode').setValue( \"\");\r\n}\r\nonCityChange(event){\r\n  \r\n  //this.form.get('pincode').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label> Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Corporate Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"coprate_code\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('coprate_code').hasError('required')\">Corporate code required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('coprate_code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"email\" required>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Register Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"register_number\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('register_number').hasError('required')\">Register number required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('register_number').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"phone_number\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('phone_number').hasError('required')\">Please enter mobile</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('phone_number').hasError('max')\">Mobile number not be greater then 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('phone_number').hasError('min')\">Mobile number not be less then 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>CIN Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"cin_number\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cin_number').hasError('required')\">CIN number required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cin_number').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Date of Incorporation</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp1\" formControlName=\"date_of_incorporation\" disabled>\r\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('date_of_incorporation').invalid\">Please enter date of incorporation\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>GSTIN</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"gstin\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('gstin').hasError('required')\">GST number required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('gstin').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Contract Period From</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp2\" formControlName=\"contract_period_from\" disabled>\r\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp2\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp2 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('contract_period_from').invalid\">Please enter date of contract period from\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Contract Period To</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp3\" formControlName=\"contract_period_to\" disabled>\r\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('contract_period_to').invalid\">Please enter date of contract period to\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<mat-divider></mat-divider>\r\n\t\t<h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressline1\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('addressline1').invalid\">Please enter address line</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressline2\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('addressline2').invalid\">Please enter address line </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\">\r\n\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\">\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"countryAuto\">\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"49.5\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" maxlength=\"50\" formControlName=\"landmark\" autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('landmark').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"coprateUserManagement/coprate-user/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-coprate-user-crud',\r\n  templateUrl: './coprate-user-crud.component.html',\r\n  styleUrls: ['./coprate-user-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CoprateUserCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Corporate User', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"coprateUserManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"coprateUser\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"corporateUser\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Corporate User', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/coprateUserManagement/coprate-user/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CorporateService {\r\n  apiUrl2 = `${environment.API_URL2}/chargingStation` ;\r\n  apiUrl3 = `${environment.API_URL3}` ;\r\n  apiUrl4 = `${environment.API_URL2}` ;\r\n  constructor(private http : HttpClient) { }\r\n\r\n  create(params){\r\n    return this.http.post(`${this.apiUrl2}/create/`,params);\r\n  }\r\n  update(params){\r\n    return this.http.post(`${this.apiUrl2}/update/`,params);\r\n  }\r\n  getAllCorporate(){\r\n    return this.http.get(`${this.apiUrl2}/getAllCorporate`);\r\n  }\r\n \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CoprateUserCrudComponent } from './coprate-user-crud/coprate-user-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CoprateUserRoutingModule } from './coprate-user-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS =[CoprateUserCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, CoprateUserRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class CoprateUserModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder,private rfidService: RfidService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      description : ['', [Validators.required]] ,\r\n      rfid_no: ['', [Validators.required]],\r\n      rfid_expDate : ['', [Validators.required]]   \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      rfid_no :formValues.rfid_no,\r\n      expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n      created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_by : this.localStorage.userId,\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.update(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('rfid_no').setValue(params.data.rf_id_no);\r\n    this.form.get('rfid_expDate').setValue(params.data.expiry_date);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n\r\n      <form [formGroup]=\"form\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Name</mat-label>\r\n              <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"name\" required>\r\n              <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Description</mat-label>\r\n              <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"description\" required>\r\n              <mat-error *ngIf=\"form.get('description').invalid\">Please enter description\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>RFID Number</mat-label>\r\n              <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"rfid_no\" required>\r\n              <mat-error *ngIf=\"form.get('rfid_no').invalid\">Please enter RFID number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Expiry Date</mat-label>\r\n              <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n              <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n              <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n              <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n              #toggleElement>\r\n              {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"m-t-8\" (click)=\"close()\"\r\n          style=\"margin-left: 1%;\">Cancel</button>\r\n\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CorporateService } from 'app/shared/services/corporate/corporate.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport class CoprateUsers {\r\n  name: string;\r\n  coprate_code: string;\r\n  cin_number: string;\r\n  register_number: string;\r\n  phone_number: string;\r\n  date_of_Incopration: string;\r\n  contract_end_date: string;\r\n  product: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['name', 'coprate_code', 'cin_number', 'register_number', 'phone_number', 'date_of_Incopration',\r\n    'contract_end_date', 'product', 'action'];\r\n  head = [['Name','Coprate Code','CIN Number','Register Number','Phone Number','Date Of Incopration','Contract End Date','Product']];\r\n  dataSource: MatTableDataSource<CoprateUsers>;\r\n\r\n  coprateUsers: CoprateUsers[];\r\n  filterEntity: CoprateUsers;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  nameSearch = false;\r\n  coprateCodeSearch = false;\r\n  cinNumberSearch = false;\r\n  registerNumberSearch = false;\r\n  phoneNumberSearch = false;\r\n  dateOfIncoprationSearch = false;\r\n  contractEndDateSearch = false;\r\n  productSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  constructor(private corporateService: CorporateService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = localStorage.getItem('userDetails');\r\n    this.getAllCoprateUsers();\r\n    this.filterEntity = new CoprateUsers();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCoprateUsers() {\r\n    this.corporateService.getAllCorporate().subscribe(\r\n      (data: any) => {\r\n        this.coprateUsers = data;\r\n        this.dataSource = new MatTableDataSource(this.coprateUsers);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n\r\n    // this.rfidService.delete(id).subscribe(\r\n    //   (data:any)=>{\r\n\r\n    //     this.getRFids();\r\n    //     this.snackBar.open('Deleted successfully','Dismiss',{duration:2000});\r\n    //   },(err)=>{\r\n\r\n    //   }\r\n    // )\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getAllCoprateUsers();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n\r\n    if (visibleOption == 'coprateCodeSearch') {\r\n      this.coprateCodeSearch = !this.coprateCodeSearch;\r\n      this.filterEntity.coprate_code = '';\r\n    }\r\n\r\n    if (visibleOption == 'cinNumberSearch') {\r\n      this.cinNumberSearch = !this.cinNumberSearch;\r\n      this.filterEntity.cin_number = '';\r\n    }\r\n    if (visibleOption == 'registerNumberSearch') {\r\n      this.registerNumberSearch = !this.registerNumberSearch;\r\n      this.filterEntity.register_number = '';\r\n    }\r\n    if (visibleOption == 'phoneNumberSearch') {\r\n      this.phoneNumberSearch = !this.phoneNumberSearch;\r\n      this.filterEntity.phone_number = '';\r\n    }\r\n    if (visibleOption == 'dateOfIncoprationSearch') {\r\n      this.dateOfIncoprationSearch = !this.dateOfIncoprationSearch;\r\n      this.filterEntity.date_of_Incopration = '';\r\n    }\r\n    if (visibleOption == 'contractEndDateSearch') {\r\n      this.contractEndDateSearch = !this.contractEndDateSearch;\r\n      this.filterEntity.contract_end_date = '';\r\n    }\r\n    if (visibleOption == 'productSearch') {\r\n      this.productSearch = !this.productSearch;\r\n      this.filterEntity.product = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var coprateUsersModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Name': coprateUsersModel.name, 'Coprate Code': coprateUsersModel.coprate_code, 'CIN Number': coprateUsersModel.cin_number,\r\n        'Register Number': coprateUsersModel.register_number, 'Phone Number ': coprateUsersModel.phone_number, 'Date Of Incopration ': coprateUsersModel.date_of_Incopration,\r\n        'Contract End Date ': coprateUsersModel.contract_end_date, 'Product ': coprateUsersModel.product\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Coprate Users');\r\n    XLSX.writeFile(workBook, 'Corporate Users.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.name, chrger.coprate_code, chrger.cin_number, chrger.register_number, chrger.phone_number, chrger.date_of_Incopration, chrger.contract_end_date,\r\n        chrger.product,];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Corporate Users Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('Corporate Users  report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n  }\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"coprate_code\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Corporate Code\" [(ngModel)]=\"filterEntity.coprate_code\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.coprate_code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"cin_number\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"CIN Number\" [(ngModel)]=\"filterEntity.cin_number\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cin_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"register_number\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Register Number\" [(ngModel)]=\"filterEntity.register_number\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.register_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"phone_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Phone Number\" [(ngModel)]=\"filterEntity.phone_number\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.phone_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date_of_Incopration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Date Of INcopration\"\r\n                                [(ngModel)]=\"filterEntity.date_of_Incopration\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.date_of_Incopration}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"contract_end_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Contract End Date\"\r\n                                [(ngModel)]=\"filterEntity.contract_end_date\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.contract_end_date}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"product\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Product\" [(ngModel)]=\"filterEntity.product\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.product}} </td>\r\n                </ng-container>\r\n                <!-- <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 250px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"\r\n                        [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container> -->\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 250px\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_coprate_code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!coprateCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Corporate Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('coprateCodeSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"coprateCodeSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Corporate Code\" [(ngModel)]=\"filterEntity.coprate_code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('coprateCodeSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_cin_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cinNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">CIN Number\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('cinNumberSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"cinNumberSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"CIN Number\" [(ngModel)]=\"filterEntity.cin_number\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cinNumberSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_register_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!registerNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">Register\r\n                            Number &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('registerNumberSearch')\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"registerNumberSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Register Number\" [(ngModel)]=\"filterEntity.register_number\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('registerNumberSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_phone_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!phoneNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">Phone Number\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('phoneNumberSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"phoneNumberSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Phone Number\" [(ngModel)]=\"filterEntity.phone_number\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('phoneNumberSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_date_of_incopration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dateOfIncoprationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Date of\r\n                            Incopration &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('dateOfIncoprationSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dateOfIncoprationSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Date of Incopration\"\r\n                                [(ngModel)]=\"filterEntity.date_of_Incopration\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dateOfIncoprationSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_contract_end_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!contractEndDateSearch\" class=\"custom_font_size\" style=\"display: flex;\">Contract\r\n                            End Date &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('contractEndDateSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"contractEndDateSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Contract End Date\"\r\n                                [(ngModel)]=\"filterEntity.contract_end_date\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('contractEndDateSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_product\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!productSearch\" class=\"custom_font_size\" style=\"display: flex;\">Product\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('productSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"productSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Product\" [(ngModel)]=\"filterEntity.product\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('productSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"lable_Active\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                </ng-container>\r\n                <tr mat-header-row\r\n                    *matHeaderRowDef=\"['lable_name','lable_coprate_code', 'lable_cin_number','lable_register_number','lable_phone_number','lable_date_of_incopration','lable_contract_end_date','lable_product','lable_Active']\">\r\n                </tr>\r\n\r\n\r\n                <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"],"sourceRoot":"webpack:///"}