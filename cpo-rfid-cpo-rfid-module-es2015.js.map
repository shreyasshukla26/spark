{"version":3,"sources":["./src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-crud/cpo-rfid-crud.component.ts","./src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-crud/cpo-rfid-crud.component.html","./src/app/main/asset/rfid-management/cpo-rfid/action-dialog/action-dialog.component.ts","./src/app/main/asset/rfid-management/cpo-rfid/action-dialog/action-dialog.component.html","./src/app/main/asset/rfid-management/cpo-rfid/create/create.component.ts","./src/app/main/asset/rfid-management/cpo-rfid/create/create.component.html","./src/app/shared/services/rfid/rfid.service.ts","./src/app/main/asset/rfid-management/cpo-rfid/view-dialog/view-dialog.component.ts","./src/app/main/asset/rfid-management/cpo-rfid/view-dialog/view-dialog.component.html","./src/app/main/asset/rfid-management/cpo-rfid/list/list.component.ts","./src/app/main/asset/rfid-management/cpo-rfid/list/list.component.html","./src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-crud/routes.ts","./src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid.module.ts","./src/app/main/asset/rfid-management/cpo-rfid/cpo-rfid-routing.module.ts"],"names":[],"mappings":"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","file":"cpo-rfid-cpo-rfid-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-cpo-rfid-crud',\r\n  templateUrl: './cpo-rfid-crud.component.html',\r\n  styleUrls: ['./cpo-rfid-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CpoRfidCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'CPO-RFID', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"rfidManagement\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"cpo-rfid\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if (this.childData.children != undefined && this.childData.children != null) {\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"cpo-rfId\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'CPO-RFID', link: 'list' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/rfidManagement/cpo-rfid/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  client_name:any;\r\n  cposName:any;\r\n  filteredOptionsClient:Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n // ListRFID: string[] = ['RFID-1', 'RFID-2', 'RFID-3', 'RFID-4', 'RFID-5', 'RFID-6'];\r\n ListRFID:any;\r\n selectedRFID:any;\r\n unSelectedRFID:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  \r\n\r\n  rfidList:any;\r\n  constructor(private fb: FormBuilder,private clientService: ClientService, private snackBar: MatSnackBar,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cpoService: CpoService,private rfidService:RfidService) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClientName();\r\n   // this.getAllRfid();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.rfidList = this.params.rfidData;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name : ['', [Validators.required]] ,\r\n      rfidlist: ['', [Validators.required]] ,\r\n      status : this.status == true ? 'Y' : 'N'  \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n      this.getClientName();\r\n      this.getAllRfid(this.params.data.cpo_id);\r\n      this.getCpoByclient(this.params.data.CLIENT_ID)\r\n    //  this.getAllRfidbyCPOid(this.params.data.cpo_id);\r\n    }\r\n   \r\n  }\r\n  getClientName(){\r\n    //;\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.client_name = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.client_name.find(c => c.id == this.params.data.CLIENT_ID);\r\n            this.form.get('client_name').setValue(toSelect);\r\n          \r\n        this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClient(name) : this.client_name)\r\n        );\r\n        }\r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  displayClientName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCPOName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.client_name.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClientCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(event){\r\n\t\tthis.getCpoByclient(event);\r\n    this.form.get('cpo_name').setValue(\"\");\r\n  }\r\n  \r\n  getCpoByclient(id){\r\n\r\n    this.cpoService.getCpoByClientId(id).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.cposName = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n            this.form.get('cpo_name').setValue(toSelect);\r\n        this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n        );\r\n        }\r\n      },(err)=>{}\r\n\t\t)\r\n   \r\n   }\r\n   getAllRfid(id){\r\n    this.rfidService.getAllRFidsWithMappedCPOs(id).subscribe(\r\n      (data:any)=>{\r\n        this.ListRFID = data.data;\r\n        var selectedList = [];\r\n        for (let i = 0; i < this.ListRFID.length; i++) {\r\n          var rfid = this.ListRFID[i];\r\n          if(rfid.id != null && rfid.id != undefined){\r\n            selectedList.push(rfid);\r\n          }\r\n      }\r\n        // for (let i = 0; i < this.ListRFID.length; i++) {\r\n        //     var rfid = this.ListRFID[i];\r\n        //   for (let k = 0; k < this.rfidList.length; k++){\r\n        //     var cpoRfID = this.rfidList[k];\r\n        //     if(rfid.id +'' == cpoRfID.id+''){\r\n        //       selectedList.push(rfid);\r\n        //     }\r\n        //   }\r\n\r\n        //   //const toSelect = this.ListRFID.find(c => c.id == this.params.data.rfid_id);\r\n        //   //this.form.get('rfidlist').setValue([toSelect]);\r\n        // }\r\n\r\n\r\n        this.form.get('rfidlist').setValue(selectedList);\r\n        \r\n       // this.getAllRfidbyCPOid(this.params.data.cpo_id)\r\n        // if(this.isEditMode){\r\n        //   this.form.get('rfidlist').setValue(this.ListRFID);\r\n        // }\r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n   getAllRfidbyCPOid(id){\r\n    this.rfidService.getRFidsByCpoId(id).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.selectedRFID = data.data;\r\n          // for (let i = 0; i < this.ListRFID.length; i++){\r\n          //   const toSelect = this.ListRFID.find(c => c.id == this.params.data.cpo_id);\r\n          //   this.form.get('rfidlist').setValue(toSelect);\r\n          // }\r\n\r\n         // this.form.get('rfidlist').setValue(this.selectedRFID);\r\n        \r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      client_id : formValues.client_name.id,\r\n      cpo_id : formValues.cpo_name.id,\r\n     // rfid_data  : formValues.rfidlist,\r\n      rfid_data :formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.updatecpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.createCpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('CPO-Rfid  created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    //this.form.get('client_name').setValue(params.data.client_name);\r\n    //this.form.get('cpo_name').setValue(params.data.cpo_name);\r\n    this.form.get('rfidlist').setValue(params.data.rfidlist);\r\n   \r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n     style=\"cursor:pointer;color:white\"  class=\"material-icons-outlined\">clear</mat-icon>\r\n     \r\n\r\n<mat-toolbar class=\"action_toolbar\">CPO-RFID Mapping</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client Name</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n          <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n            (optionSelected)='onClientChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>CPO Name</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n          <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter cpo name\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"49\" class=\"pr-4\">\r\n          <mat-label>RFID List</mat-label>\r\n          <mat-select formControlName=\"rfidlist\" multiple>\r\n            <mat-option *ngFor=\"let option of ListRFID\" [value]=\"option\">\r\n              {{option.rfid_no}}\r\n            </mat-option>\r\n\r\n          </mat-select>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter rfid list\">help</mat-icon>\r\n        </mat-form-field>\r\n        <div fxFlex=\"50\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { identity, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  form: FormGroup;\r\n  client_name: any;\r\n  cposName: any;\r\n  localStorage: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n  // ListRFID: string[] = ['RFID-1', 'RFID-2', 'RFID-3', 'RFID-4', 'RFID-5', 'RFID-6'];\r\n  ListRFID: any;\r\n  rfidList: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private masterService: MasterService,\r\n    private clientService: ClientService, \r\n    private snackBar: MatSnackBar,\r\n    private router: Router, \r\n    private cpoService: CpoService, \r\n    private rfidService: RfidService\r\n    ) {  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name: ['', [Validators.required]],\r\n      rfidlist: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.filteredOptions();\r\n    this.getClientName();\r\n    //this.getAllRfid();\r\n\r\n  }\r\n  // get rfidlist(): FormControl {\r\n\r\n  //   return this.form.get('rfidlist') as FormControl;\r\n  // }\r\n  onCPOChange(id) {\r\n    //this.getSelectedRFIDbyCPO(id);\r\n    this.getAllRfidByCPO(id);\r\n\r\n  }\r\n  // getSelectedRFIDbyCPO(id){\r\n  //   this.rfidService.getRFidsByCpoId(id).subscribe(\r\n  //     (data:any)=>{\r\n  //       //;\r\n  //       this.rfidList = data.data;\r\n  //        },(err)=>{\r\n  //       //;\r\n  //     }\r\n  //   )\r\n  // }\r\n  getAllRfidByCPO(id) {\r\n    //;\r\n    this.rfidService.getAllRFidsWithMappedCPOs(id).subscribe(\r\n      (data: any) => {\r\n\r\n        this.ListRFID = data.data;\r\n        // this.rfidList = data.data;\r\n        var selectedList = [];\r\n        for (let i = 0; i < this.ListRFID.length; i++) {\r\n          var rfid = this.ListRFID[i];\r\n          if (rfid.id != null && rfid.id != undefined) {\r\n            selectedList.push(rfid);\r\n          }\r\n        }\r\n\r\n\r\n        this.form.get('rfidlist').setValue(selectedList);\r\n\r\n      }, (err) => {\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  getClientName() {\r\n    //;\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.client_name = data;\r\n        const toSelect = this.client_name.find(c => c.id == this.localStorage.client_id);\r\n        this.form.get('client_name').setValue(toSelect);\r\n        this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClient(name) : this.client_name)\r\n          );\r\n        this.getCpoByclient(toSelect.id);\r\n      }, (err) => {\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  filteredOptions() {\r\n    this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterClient(name) : this.client_name)\r\n      );\r\n    this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n      );\r\n  }\r\n  displayClientName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCPOName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.client_name.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClientCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(event) {\r\n    this.getCpoByclient(event);\r\n    this.form.get('cpo_name').setValue(\"\");\r\n  }\r\n\r\n  getCpoByclient(id) {\r\n\r\n    this.cpoService.getCpoByClientId(id).subscribe(\r\n      (data: any) => {\r\n        this.cposName = data;\r\n        this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n          );\r\n      }, (err) => { }\r\n    )\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    let formValues = this.form.value;\r\n    ////\r\n\r\n    //;\r\n    let params = {\r\n      client_id: formValues.client_name.id,\r\n      cpo_id: formValues.cpo_name.id,\r\n      //rfid_data :formValues.rfidlist.map(v => v.rfid_id),\r\n      //rfid_data :formValues.rfidlist,\r\n      rfid_data: formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n      status: this.status == true ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n    this.rfidService.createCpoRfidMapping(params).subscribe(\r\n      (data: any) => {\r\n        // \r\n        this.snackBar.open('CPO-RFID mapped!', 'Dismiss', { duration: 5000 });\r\n        this.router.navigate(['/assetManagement/rfidManagement/cpo-rfid/crud/list']);\r\n\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  // onRFIDRemoved(rfid: string) {\r\n  //   const rfids = this.form.controls.rfidlist.value as string[];\r\n  //   this.removeFirst(rfids, rfid);\r\n  //   this.form.controls.rfidlist.setValue(rfids); // To trigger change detection\r\n  // }\r\n  // private removeFirst<T>(array: T[], toRemove: T): void {\r\n  //   const index = array.indexOf(toRemove);\r\n  //   if (index !== -1) {\r\n  //     array.splice(index, 1);\r\n  //   }\r\n  // }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  onRfidChange(event) {\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client Name</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n        <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n          (optionSelected)='onClientChange($event.option.value.id)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client name\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>CPO Name</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n        <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\"\r\n          (optionSelected)='onCPOChange($event.option.value.id)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter cpo name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>RFID List</mat-label>\r\n        <mat-select formControlName=\"rfidlist\" multiple (selectionChange)=\"onRfidChange($event)\">\r\n          <mat-option *ngFor=\"let option of ListRFID\" [value]=\"option\">\r\n            {{option.rfid_no}}\r\n          </mat-option>\r\n\r\n        </mat-select>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter rfid list\">help</mat-icon>\r\n      </mat-form-field>\r\n      <div fxFlex=\"50\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/rfidManagement/cpo-rfid/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  client_name:any;\r\n  cposName:any;\r\n  filteredOptionsClient:Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n // ListRFID: string[] = ['RFID-1', 'RFID-2', 'RFID-3', 'RFID-4', 'RFID-5', 'RFID-6'];\r\n ListRFID:any;\r\n selectedRFID:any;\r\n unSelectedRFID:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  \r\n\r\n  rfidList:any;\r\n  constructor(private fb: FormBuilder,private clientService: ClientService, private snackBar: MatSnackBar,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,private cpoService: CpoService,private rfidService:RfidService) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClientName();\r\n   // this.getAllRfid();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.rfidList = this.params.rfidData;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name : ['', [Validators.required]] ,\r\n      rfidlist: ['', [Validators.required]]  \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n      this.getClientName();\r\n      this.getAllRfid(this.params.data.cpo_id);\r\n      this.getCpoByclient(this.params.data.CLIENT_ID)\r\n    //  this.getAllRfidbyCPOid(this.params.data.cpo_id);\r\n    }\r\n   \r\n  }\r\n  getClientName(){\r\n    //;\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.client_name = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.client_name.find(c => c.id == this.params.data.CLIENT_ID);\r\n            this.form.get('client_name').setValue(toSelect);\r\n          \r\n        this.filteredOptionsClient = this.form.controls.client_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClient(name) : this.client_name)\r\n        );\r\n        }\r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n  }\r\n  displayClientName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCPOName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.client_name.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterClientCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(event){\r\n\t\tthis.getCpoByclient(event);\r\n  }\r\n  \r\n  getCpoByclient(id){\r\n\r\n    this.cpoService.getCpoByClientId(id).subscribe(\r\n\t\t\t(data:any)=>{\r\n        this.cposName = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n            this.form.get('cpo_name').setValue(toSelect);\r\n        this.filteredOptionsClientCPO = this.form.controls.cpo_name.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientCPO(name) : this.cposName)\r\n        );\r\n        }\r\n      },(err)=>{}\r\n\t\t)\r\n   \r\n   }\r\n   getAllRfid(id){\r\n    this.rfidService.getAllRFidsWithMappedCPOs(id).subscribe(\r\n      (data:any)=>{\r\n        this.ListRFID = data.data;\r\n        var selectedList = [];\r\n        for (let i = 0; i < this.ListRFID.length; i++) {\r\n          var rfid = this.ListRFID[i];\r\n          if(rfid.id != null && rfid.id != undefined){\r\n            selectedList.push(rfid);\r\n          }\r\n      }\r\n        // for (let i = 0; i < this.ListRFID.length; i++) {\r\n        //     var rfid = this.ListRFID[i];\r\n        //   for (let k = 0; k < this.rfidList.length; k++){\r\n        //     var cpoRfID = this.rfidList[k];\r\n        //     if(rfid.id +'' == cpoRfID.id+''){\r\n        //       selectedList.push(rfid);\r\n        //     }\r\n        //   }\r\n\r\n        //   //const toSelect = this.ListRFID.find(c => c.id == this.params.data.rfid_id);\r\n        //   //this.form.get('rfidlist').setValue([toSelect]);\r\n        // }\r\n\r\n\r\n        this.form.get('rfidlist').setValue(selectedList);\r\n        \r\n       // this.getAllRfidbyCPOid(this.params.data.cpo_id)\r\n        // if(this.isEditMode){\r\n        //   this.form.get('rfidlist').setValue(this.ListRFID);\r\n        // }\r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n   getAllRfidbyCPOid(id){\r\n    this.rfidService.getRFidsByCpoId(id).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.selectedRFID = data.data;\r\n          // for (let i = 0; i < this.ListRFID.length; i++){\r\n          //   const toSelect = this.ListRFID.find(c => c.id == this.params.data.cpo_id);\r\n          //   this.form.get('rfidlist').setValue(toSelect);\r\n          // }\r\n\r\n         // this.form.get('rfidlist').setValue(this.selectedRFID);\r\n        \r\n        \r\n        \r\n      },(err)=>{\r\n        //;\r\n      }\r\n    )\r\n   }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      client_id : formValues.client_name.id,\r\n      cpo_id : formValues.cpo_name.id,\r\n     // rfid_data  : formValues.rfidlist,\r\n      rfid_data :formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n      status : this.status == true ? 'Y' : 'N'\r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.rfidService.updatecpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.rfidService.createCpoRfidMapping(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('CPO-Rfid  created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n   // this.form.get('client_name').setValue(params.data.client_name);\r\n    //this.form.get('cpo_name').setValue(params.data.cpo_name);\r\n    this.form.get('rfidlist').setValue(params.data.rfidlist);\r\n   \r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">CPO-RFID Mapping</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client Name</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n          <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n            (optionSelected)='onClientChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>CPO Name</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n          <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"49\" class=\"pr-4\">\r\n          <mat-label>RFID List</mat-label>\r\n          <mat-select disabled formControlName=\"rfidlist\" multiple>\r\n            <mat-option *ngFor=\"let option of ListRFID\" [value]=\"option\">\r\n              {{option.rfid_no}}\r\n            </mat-option>\r\n\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <div fxFlex=\"50\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" disabled\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nexport class RFID {\r\n    id: string;\r\n    client_name: string;\r\n    cpo_name: string;\r\n    rfid_no: string;\r\n    status: string;\r\n    created_date: string;\r\n    createdby: number;\r\n    modify_date: string;\r\n    modifyby: number;\r\n    action: string;\r\n    statusString: string;\r\n}\r\n\r\nexport class Group {\r\n    level = 0;\r\n    expanded = false;\r\n    totalCounts = 0;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n    selector: 'app-list',\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: RFID;\r\n    filterType: MatTableFilter;\r\n    //displayedColumns: string[] = [ 'client_name', 'cpo_name','rfid_no','status','action'];\r\n    //dataSource: MatTableDataSource<RFID>;\r\n    head = [['Client Name', 'CPO Name', 'RFID Number', 'Status']];\r\n    public dataSource = new MatTableDataSource<any | Group>([]);\r\n    // clients : RFID[];\r\n    localStorage: any;\r\n    form: FormGroup;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    cposName: any;\r\n    clientName: any;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    rfid: RFID[];\r\n    localCpoid: any;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n    groupByColumns: string[] = [];\r\n    allData: any[];\r\n    _allGroup: any[];\r\n\r\n    expandedRfid: any[] = [];\r\n    expandedSubRfid: RFID[] = [];\r\n    Row: any;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientSearch = false;\r\n    cpoSearch = false;\r\n    rfidSearch = false;\r\n    statusSearch = false;\r\n    selectedCpo_id:any;\r\n    exportedData: any[];\r\n    cpoRfid: any;\r\n    constructor(private clientService: ClientService, public dialog: MatDialog,\r\n        private snackBar: MatSnackBar, private fb: FormBuilder, private cpoService: CpoService, private rfidService: RfidService)  {\r\n        // Create 100 users\r\n        // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n        // Assign the data to the data source for the table to render\r\n        this.form = this.fb.group({\r\n            client: [''],\r\n            CPO: [\"\", Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n        // this.getClients();\r\n        // this.getClient();\r\n        // this.getCPOS();\r\n        this.columns = [{\r\n            field: 'client_name'\r\n        }, {\r\n            field: 'cpo_name'\r\n        }, {\r\n            field: 'rfid_no'\r\n        }, {\r\n            field: 'status'\r\n        }, {\r\n            field: 'action'\r\n        }];\r\n        this.displayedColumns = this.columns.map(column => column.field);\r\n        this.groupByColumns = ['cpo_name'];\r\n\r\n        this.getactivecposcw(this.localStorage.userId)\r\n        this.filterEntity = new RFID();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n        this.getCpoRFidMappingCW();\r\n        \r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    // getClients(){\r\n    //   this.clientService.getClients().subscribe(\r\n    //     (data:any)=>{\r\n    //       this.clients = data;\r\n    //       this.dataSource = new MatTableDataSource(this.clients);\r\n    //       this.dataSource.paginator = this.paginator;\r\n    //       this.dataSource.sort = this.sort;\r\n    //     },(err)=>{\r\n    //     }\r\n    //   )\r\n    // }\r\n    // getClient() {\r\n    //   //;\r\n    //   this.clientService.getClientById(this.localStorage.client_id).subscribe(\r\n    //     (data: any) => {\r\n    //      // ;\r\n    //       this.clientName = data;\r\n\r\n    //       this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n    //         .pipe(\r\n    //           startWith(''),\r\n    //           map(value => typeof value === 'string' ? value : value.name),\r\n    //           map(name => name ? this._filterClient(name) : this.clientName)\r\n    //         );\r\n    //     }, (err) => { }\r\n    //   )\r\n    // }\r\n\r\n    // onClientChange(id){\r\n    //   this.getactivecposcw(id);\r\n    // }\r\n\r\n    getCpoRFidMappingCW() {\r\n        this.rfidService.getCpoRFidMappingCW(this.localStorage.userId).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status == true) {\r\n                    // this.cpoRfid = resp;\r\n                    this.allData = resp.data;\r\n                    for (var i = 0; i < this.allData.length; i++) {\r\n                        if (this.allData[i].status == 'N') {\r\n                            this.allData[i].statusString = 'Inactive';\r\n                        } else {\r\n                            this.allData[i].statusString = 'Active';\r\n                        }\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(this.allData);\r\n                    //this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    // this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n                    return;\r\n                }\r\n            }, (err) => { }\r\n        )\r\n    }\r\n\r\n\r\n    getactivecposcw(id) {\r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n\r\n                        this.selectedCpo_id = toSelect.id;\r\n                        this.form.get(\"CPO\").setValue(toSelect);\r\n                        \r\n\r\n                        if (this.localStorage.role_code == \"CPO\") {\r\n                            this.form.get(\"CPO\").disable();\r\n                        }\r\n\r\n                        this.getRfidbyCpoid(this.selectedCpo_id);\r\n                    }\r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    onCPOChange(id) {\r\n        this.getRfidbyCpoid(id);\r\n        this.dataSource.data = [];\r\n        //this.getCpoRFidMappingCW();\r\n        this.localCpoid = id;\r\n    }\r\n\r\n    getRfidbyCpoid(id) {\r\n\r\n        this.rfidService.getRFidsByCpoId(id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status == true) {\r\n                    this.rfid = resp.data;\r\n                    this.allData = resp.data;\r\n                    for (var i = 0; i < this.allData.length; i++) {\r\n                        if (this.allData[i].status == 'N') {\r\n                            this.allData[i].statusString = 'Inactive';\r\n                        } else {\r\n                            this.allData[i].statusString = 'Active';\r\n                        }\r\n\r\n\r\n                    }\r\n                    this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n                    //this.dataSource = new MatTableDataSource(this.rfid);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    // this.dataSource._pageData = (data: any[]) => {\r\n                    //   const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n                    //   // find start/end index with groups excluded\r\n                    //   const filter = data.filter(r => !r.isGroup).splice(startIndex, this.paginator.pageSize);\r\n                    //   const start = filter[0];\r\n                    //   const end = filter[filter.length - 1];\r\n                    //   // return all data between first and last item (including groups)\r\n                    //   return data.slice().splice(data.indexOf(start), data.indexOf(end));\r\n                    // }\r\n                } else {\r\n                    //this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n                }\r\n            }, (err) => {\r\n                //;\r\n            }\r\n        )\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    private _filterClient(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    delete(element) {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: true\r\n        });\r\n\r\n        //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.rfidService.unMapRFidCpoID(element.map_id, this.localStorage.userId).subscribe(\r\n                    (data: any) => {\r\n                        this.getRfidbyCpoid(this.localCpoid);\r\n                        this.getCpoRFidMappingCW();\r\n                        //this.getClient();\r\n                        this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n                    }, (err) => {\r\n\r\n                    }\r\n                )\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n            rfidData: this.rfid\r\n        }\r\n\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: '800px',\r\n            data: params,\r\n            panelClass: 'app-action-dialog',\r\n            autoFocus: false,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.getRfidbyCpoid(this.localCpoid);\r\n            // this.moderate(result);\r\n            // this.getClients();\r\n        });\r\n    }\r\n\r\n    viewDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data\r\n        }\r\n\r\n        const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n            width: '800px',\r\n            data: params,\r\n            panelClass: 'app-action-dialog',\r\n            autoFocus: false,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n            // this.moderate(result);\r\n            this.getRfidbyCpoid(this.localCpoid);\r\n        });\r\n    }\r\n\r\n    groupHeaderClick(row) {\r\n        if (row.expanded) {\r\n            row.expanded = false;\r\n            this.dataSource.data = this.getGroups(this.allData, this.groupByColumns);\r\n        } else {\r\n            row.expanded = true;\r\n            this.expandedRfid = row;\r\n            this.dataSource.data = this.addGroupsNew(this._allGroup, this.allData, this.groupByColumns, row);\r\n        }\r\n    }\r\n\r\n    getGroups(data: any[], groupByColumns: string[]): any[] {\r\n        const rootGroup = new Group();\r\n        rootGroup.expanded = false;\r\n        return this.getGroupList(data, 0, groupByColumns, rootGroup);\r\n    }\r\n\r\n    getGroupList(data: any[], level: number = 0, groupByColumns: string[], parent: Group): any[] {\r\n        if (level >= groupByColumns.length) {\r\n            return data;\r\n        }\r\n        let groups = this.uniqueBy(\r\n            data.map(\r\n                row => {\r\n                    const result = new Group();\r\n                    result.level = level + 1;\r\n                    for (let i = 0; i <= level; i++) {\r\n                        result[groupByColumns[i]] = row[groupByColumns[i]];\r\n                    }\r\n                    return result;\r\n                }\r\n            ),\r\n            JSON.stringify);\r\n\r\n        const currentColumn = groupByColumns[level];\r\n        let subGroups = [];\r\n        groups.forEach(group => {\r\n            const rowsInGroup = data.filter(row => group[currentColumn] === row[currentColumn]);\r\n            group.totalCounts = rowsInGroup.length;\r\n            this.expandedSubRfid = [];\r\n        });\r\n        groups = groups.sort((a: RFID, b: RFID) => {\r\n            const isAsc = 'asc';\r\n            return this.compare(a.cpo_name, b.cpo_name, isAsc);\r\n\r\n        });\r\n        this._allGroup = groups;\r\n        return groups;\r\n    }\r\n\r\n    addGroupsNew(allGroup: any[], data: any[], groupByColumns: string[], dataRow: any): any[] {\r\n        const rootGroup = new Group();\r\n        rootGroup.expanded = true;\r\n        return this.getSublevelNew(allGroup, data, 0, groupByColumns, rootGroup, dataRow);\r\n    }\r\n\r\n    getSublevelNew(allGroup: any[], data: any[], level: number, groupByColumns: string[], parent: Group, dataRow: any): any[] {\r\n        if (level >= groupByColumns.length) {\r\n            return data;\r\n        }\r\n        const currentColumn = groupByColumns[level];\r\n        let subGroups = [];\r\n        allGroup.forEach(group => {\r\n            const rowsInGroup = data.filter(row => group[currentColumn] === row[currentColumn]);\r\n            group.totalCounts = rowsInGroup.length;\r\n\r\n            if (group.cpo_name == dataRow.cpo_name.toString()) {\r\n                group.expanded = dataRow.expanded;\r\n                const subGroup = this.getSublevelNew(allGroup, rowsInGroup, level + 1, groupByColumns, group, dataRow.cpo_name.toString());\r\n                this.expandedSubRfid = subGroup;\r\n                subGroup.unshift(group);\r\n                subGroups = subGroups.concat(subGroup);\r\n            } else {\r\n                subGroups = subGroups.concat(group);\r\n            }\r\n        });\r\n        return subGroups;\r\n    }\r\n\r\n    uniqueBy(a, key) {\r\n        const seen = {};\r\n        return a.filter((item) => {\r\n            const k = key(item);\r\n            return seen.hasOwnProperty(k) ? false : (seen[k] = true);\r\n        });\r\n    }\r\n\r\n    isGroup(index, item): boolean {\r\n        return item.level;\r\n    }\r\n\r\n    onSortData(sort: MatSort) {\r\n        let data = this.allData;\r\n        const index = data.findIndex(x => x['level'] == 1);\r\n        if (sort.active && sort.direction !== '') {\r\n            if (index > -1) {\r\n                data.splice(index, 1);\r\n            }\r\n\r\n            data = data.sort((a: RFID, b: RFID) => {\r\n                const isAsc = sort.direction === 'asc';\r\n                switch (sort.active) {\r\n                    case 'client_name':\r\n                        return this.compare(a.client_name, b.client_name, isAsc);\r\n                    case 'cpo_name':\r\n                        return this.compare(a.cpo_name, b.cpo_name, isAsc);\r\n                    case 'rfid_no':\r\n                        return this.compare(a.rfid_no, b.rfid_no, isAsc);\r\n                    case 'status':\r\n                        return this.compare(a.status, b.status, isAsc);\r\n\r\n                    case 'action':\r\n                        return this.compare(a.action, b.action, isAsc);\r\n                    default:\r\n                        return 0;\r\n                }\r\n            });\r\n        }\r\n        this.dataSource.data = this.addGroupsNew(this._allGroup, data, this.groupByColumns, this.expandedRfid);\r\n    }\r\n\r\n    private compare(a, b, isAsc) {\r\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        // visibleOption = !visibleOption;\r\n        //nameSearch = false;\r\n        //descSearch = false;\r\n        ev.stopPropagation();\r\n        if (visibleOption == 'clientSearch') {\r\n            this.clientSearch = !this.clientSearch;\r\n            this.filterEntity.client_name = \"\";\r\n        }\r\n\r\n        if (visibleOption == 'cpoSearch') {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n\r\n        }\r\n        if (visibleOption == 'rfidSearch') {\r\n            this.rfidSearch = !this.rfidSearch;\r\n            this.filterEntity.rfid_no = \"\";\r\n\r\n        }\r\n        if (visibleOption == 'statusSearch') {\r\n            this.statusSearch = !this.statusSearch;\r\n            this.filterEntity.statusString = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chargerModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                'Client Name ': chargerModel.client_name, 'CPO Name': chargerModel.cpo_name, 'RFID No': chargerModel.rf_id_no,\r\n                'Status': chargerModel.statusString\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n\r\n\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, 'CPO-Rfid List');\r\n        XLSX.writeFile(workBook, 'CPO-Rfid List.xlsx');\r\n    }\r\n\r\n    pdfExport() {\r\n        //this.preloader.open();\r\n        var doc = new jsPDF({ // set needed dimensions for any element\r\n\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chrger = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [chrger.client_name, chrger.cpo_name, chrger.rf_id_no, chrger.statusString];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = 'assets/images/logos/logo_sparkev_main.png';\r\n        var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(('en-GB'));\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: 'grid',\r\n            headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {\r\n            },\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img , 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text('CPO-Rfid List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text('Date:' + createdDate, 15, 18);\r\n\r\n                doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n                doc = this.addWaterMark(doc);\r\n            }\r\n        })\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output('dataurlnewwindow')\r\n        //this.preloader.close();\r\n        // below line for Download PDF document  \r\n        doc.save('CPO-Rfid List report.pdf');\r\n\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n        return doc;\r\n\r\n    }\r\n}\r\n\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <div style=\"text-align: left ;margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n            <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n                <mat-icon>sim_card_download</mat-icon> \r\n              </button>&nbsp;&nbsp;\r\n              <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n                <mat-icon>picture_as_pdf</mat-icon> \r\n              </button>\r\n            <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n        </div>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" class=\"form-field-full\">\r\n                    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"50\">\r\n                            <mat-label>Select CPO </mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"CPO\" [matAutocomplete]=\"auto2\">\r\n                            <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                                (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                                <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                                    {{option.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <div matSuffix style=\"display: flex;\">\r\n                                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter cpo name\">account_circle\r\n                                </mat-icon>\r\n                            </div>\r\n                            <mat-error *ngIf=\"form.get('CPO').invalid\">Please select cpo</mat-error>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div class=\"\">\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n            <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.client_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rfid_no\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!rfidSearch\" class=\"custom_font_size\" style=\"display: flex;\">RFID No &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"rfidSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Rfid No.\" [(ngModel)]=\"filterEntity.rfid_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.rf_id_no}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 110px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n                <ng-container matColumnDef=\"groupHeader\">\r\n                    <mat-cell colspan=\"999\" *matCellDef=\"let group\">\r\n                        <mat-icon *ngIf=\"group.expanded\">expand_less</mat-icon>\r\n                        <mat-icon *ngIf=\"!group.expanded\">expand_more</mat-icon>\r\n                        <strong>{{group[groupByColumns[group.level-1]]}} ({{group.totalCounts}})</strong>\r\n                    </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-row *matRowDef=\"let row; columns: ['groupHeader']; when: isGroup;\" (click)=\"groupHeaderClick(row)\">\r\n                </mat-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\n import { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent, canActivate:[AuthGuard]},\r\n  { path : 'list', component : ListComponent , canActivate :[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CpoRfidCrudComponent } from './cpo-rfid-crud/cpo-rfid-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CpoRfidRoutingModule } from './cpo-rfid-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[CpoRfidCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, CpoRfidRoutingModule,MatChipsModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class CpoRfidModule{}","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CpoRfidCrudComponent } from './cpo-rfid-crud/cpo-rfid-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './cpo-rfid-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : CpoRfidCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class CpoRfidRoutingModule{}"],"sourceRoot":"webpack:///"}