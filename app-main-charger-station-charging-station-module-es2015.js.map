{"version":3,"sources":["./src/app/main/charger-station/add-charger-dialog/add-charger-dialog.component.ts","./src/app/main/charger-station/add-charger-dialog/add-charger-dialog.component.html","./src/app/main/charger-station/view-details/view-details.component.ts","./src/app/main/charger-station/view-details/view-details.component.html","./src/app/main/charger-station/create/create.component.ts","./src/app/main/charger-station/create/create.component.html","./src/app/main/charger-station/charging-station-crud/routes.ts","./src/app/main/charger-station/list/list.component.ts","./src/app/main/charger-station/list/list.component.html","./src/app/main/charger-station/multi-charger-dialog/multi-charger-dialog.component.ts","./src/app/main/charger-station/multi-charger-dialog/multi-charger-dialog.component.html","./src/app/main/charger-station/action-dialog/action-dialog.component.ts","./src/app/main/charger-station/action-dialog/action-dialog.component.html","./src/app/main/charger-station/manage-chargers/routes.ts","./src/app/main/charger-station/charging-station-routing.module.ts","./src/app/main/charger-station/manage-chargers/list-chargers/list-chargers.component.ts","./src/app/main/charger-station/manage-chargers/list-chargers/list-chargers.component.html","./src/app/main/charger-station/manage-chargers/map-charger/map-charger.component.ts","./src/app/main/charger-station/manage-chargers/map-charger/map-charger.component.html","./src/app/main/charger-station/manage-chargers/manage-chargers.component.ts","./src/app/main/charger-station/manage-chargers/manage-chargers.component.html","./src/app/main/charger-station/charging-station.module.ts","./src/app/main/charger-station/charging-station-crud/charging-station-crud.component.ts","./src/app/main/charger-station/charging-station-crud/charging-station-crud.component.html","./src/app/main/charger-station/view-dialog/view-dialog.component.ts","./src/app/main/charger-station/view-dialog/view-dialog.component.html","./src/app/main/charger-station/manage-chargers/map-charger-dialog/map-charger-dialog.component.ts","./src/app/main/charger-station/manage-chargers/map-charger-dialog/map-charger-dialog.component.html"],"names":[],"mappings":"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","file":"app-main-charger-station-charging-station-module-es2015.js","sourcesContent":["// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-add-charger-dialog',\r\n//   templateUrl: './add-charger-dialog.component.html',\r\n//   styleUrls: ['./add-charger-dialog.component.scss']\r\n// })\r\n// export class AddChargerDialogComponent implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit(): void {\r\n//   }\r\n\r\n// }\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class Charger {\r\n  id: string;\r\n  name : string;\r\n  serial_no : string;\r\n  station_id : number;\r\n   \r\n  }\r\n\r\n@Component({\r\n  selector: 'app-add-charger-dialog',\r\n  templateUrl: './add-charger-dialog.component.html',\r\n  styleUrls: ['./add-charger-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[GeoLocationService]\r\n})\r\nexport class AddChargerDialogComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  status = false;\r\n  stationDetails : any;\r\n  isEditMode = false; \r\n  mapDetails : any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  mLat: any;\r\n  mLong:any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  selectedChargerSerial  = [];\r\n   public chipSelectedSerialNo: Charger[] = [];\r\n   public filteredSerial: Observable<String[]>;\r\n   filteredOptionSerial: Observable<any[]>;\r\n   chargerSerials:any;\r\n  chargerSerialsOrg:any;\r\n  selectedSerialNo = [];\r\n  unitType:any;\r\n  removable = true;\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<AddChargerDialogComponent>,\r\n    private router : Router,public dialog : MatDialog,public geoLocationService:GeoLocationService,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.stationDetails = JSON.parse( localStorage.getItem('station'));\r\n    // this.stationDetails = this.route.snapshot.paramMap.get('station');\r\n\r\n    this.form = this.fb.group({\r\n     \r\n      name: ['', ],\r\n      serialNo: ['', [Validators.required]],\r\n      station: [{value : '',disabled:true}, ],\r\n      noOfGuns: ['', [Validators.required]],\r\n      \r\n      lat: ['', ],\r\n      long: ['', ],\r\n      isAvailable: [''],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],\r\n     // address: ['', [Validators.required]],\r\n    });\r\n   \r\n    this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n   \r\n   // this.getLocationTypes();\r\n    //this.getCountry();\r\n    //this.getAllCountry();\r\n    //this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n\r\n\r\n  getBatches(){\r\n    this.chargerBatchService.getChargerBatches().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.batches = data;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        this.stations = data.data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getChargerBySerialNo(){\r\n    let params = {\r\n      srNo : this.form.value.serialNo.trim(),\r\n      station_id : this.stationDetails.id\r\n    }\r\n    // let srNo = this.form.value.serialNo.trim();\r\n//;\r\n    this.chargerService.getChargerBySerialNo(params).subscribe(\r\n      (data:any)=>{\r\n        this.form.reset();\r\n        if(data.length>0){\r\n          this.mapDetails = data[0];\r\n          \r\n          if(this.mapDetails.map_id > 0 && this.mapDetails.map_status != 'D' ){\r\n            this.isEditMode=true;\r\n            this.snackBar.open(MessageConstant.chargerAlMapped, 'Dismiss', { duration: 3000 });\r\n\r\n          }else{\r\n            this.isEditMode=false;\r\n            this.assignValues(this.mapDetails);\r\n            this.getAllCountry();\r\n            this.getAllState();\r\n            this.getAllCity();\r\n          }\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.stationDetails.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.countries = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.stationDetails.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.states = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.stationDetails.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.cities = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.name);\r\n    this.form.get('serialNo').setValue(params.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.no_of_guns); \r\n    this.form.get('addressLine1').setValue(this.stationDetails.address1); \r\n    this.form.get('addressLine2').setValue(this.stationDetails.address2); \r\n    this.form.get('pincode').setValue(this.stationDetails.PIN);\r\n    this.form.get('landmark').setValue(this.stationDetails.landmark);\r\n    this.form.get('city').setValue(this.stationDetails.city_id);\r\n    this.form.get('state').setValue(this.stationDetails.state_id);\r\n    this.form.get('country').setValue(this.stationDetails.country_id);\r\n    this.form.get('lat').setValue(this.stationDetails.lat); \r\n    this.form.get('long').setValue(this.stationDetails.lng); \r\n    this.form.get('station').setValue(this.stationDetails.name);\r\n    // const toSelect = this.stations.find(c => c.id == this.stationDetails.id);\r\n    // this.form.get('station').setValue(toSelect);\r\n  \r\n    this.status = params.status == 'Y' ? true : false;\r\n    this.isAvailable = params.is_available == 1 ? true : false;\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n    let params:any = {\r\n      charger_id : this.mapDetails.id , \r\n      station_id : this.stationDetails.id , \r\n      name :formValues.name, \r\n      Lat :formValues.lat, \r\n      Lng :formValues.long,\r\n      is_available :this.isAvailable,\r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      landmark:formValues.landmark,\r\n      country:formValues.country.id,\r\n      state:formValues.state.id,\r\n      city:formValues.city.id,\r\n      PIN :formValues.pincode , \r\n      status :'Y' ,\r\n    }\r\n\r\n    if (this.isEditMode){\r\n      params.id = this.stationDetails.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n    \r\n    \r\n\r\n    if(this.isEditMode){\r\n\r\n    }else{\r\n      \r\n      this.chargerService.addChargerToStation(params).subscribe(\r\n        (data:any )=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n          this.router.navigate(['/chargingStation/crud/list']);\r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n    }else{\r\n      return;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    this.onSubmit();\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude); \r\n          // this.coordinates = {\r\n          //   latitude:  +(pos.coords.latitude),\r\n          //   longitude: +(pos.coords.longitude)\r\n          // };\r\n         // this.form.get('lat').setValue( this.mLat);\r\n         // this.form.get('lng').setValue(this.mLong);\r\n      });\r\n     \r\n   \r\n  }\r\n \r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n // this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('long').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('long').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>   \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Add Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\t\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\"  style=\"display: block  !important;padding-bottom: 10px;\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-chip-list aria-label=\"Fish selection\">\r\n\t\t\t  <mat-chip\r\n\t\t\t  *ngFor=\"let option of selectedSerialNo;let i = index;\"\r\n\t\t\t  [selectable]=\"selectable\"\r\n\t\t\t  [removable]=\"removable\"\r\n\t\t\t  (removed)=\"removeSerial(i)\">\r\n\t\t\t  {{option?.serial_no}}\r\n\t\t\t  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n\t\t\t</mat-chip>\r\n\t\t\t</mat-chip-list>\r\n\t\t  </div>\r\n\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n\t\t\t  <mat-label>Serial No</mat-label>\r\n\t\t\t  <input type=\"text\" #trigger=\"matAutocompleteTrigger\" matInput formControlName=\"serialNumber\" type=\"search\"\r\n\t\t\t\tautocomplete=\"off\" [matAutocomplete]=\"seialAuto\">\r\n\t\t\t  <mat-autocomplete #seialAuto=\"matAutocomplete\" [displayWith]=\"displaySerial\"\r\n\t\t\t\t(optionSelected)='onSerialSelected($event)'>\r\n\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionSerial | async\" [value]=\"option\"\r\n\t\t\t\t  (click)=\"selectionMade($event, trigger)\">\r\n\t\t\t\t  {{option.serial_no}}\r\n\t\t\t\t</mat-option>\r\n\t\t\t  </mat-autocomplete>\r\n\t\t\t  <mat-error *ngIf=\"form.get('serialNumber').invalid\">Please select part number </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t  </div> -->\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"serialNo\" required (change)=\"getChargerBySerialNo()\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('serialNo').invalid\">Please enter serial number\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Station</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"station\" readonly autocomplete=\"off\">\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>No Of Guns</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" readonly>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"long\" readonly>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"landmark\" readonly>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<div fxFlex=\"67\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateAvailable($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { GeoLocationService } from 'app/shared/services/map/geo-location.service'\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ChargerLogSharedDialogComponent } from 'app/shared/components/charger-log-shared-dialog/charger-log-shared-dialog.component';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-details',\r\n  templateUrl: './view-details.component.html',\r\n  styleUrls: ['./view-details.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe, GeoLocationService]\r\n})\r\nexport class ViewDetailsComponent implements OnInit {\r\n  chargingStation: any;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  chargers: any;\r\n  localStorage: any;\r\n  currentlyOpenedItemIndex = -1;\r\n  previousTabIndex: any;\r\n  // messageConstant = MessageConstant;\r\n  constructor(public dialog: MatDialog, private fb: FormBuilder, private cpoService: CpoService,\r\n    private chargingStationService: ChargingStationService, private snackBar: MatSnackBar, private chargerService: ChargerService,\r\n    private router: Router, private dateService: DateService, private datePipe: DatePipe, public geoLocationService: GeoLocationService, public countryService: CountriesService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chargingStation = this.chargingStationService.chargerDetail;\r\n    this.previousTabIndex = this.chargingStationService.tabIndex;\r\n    //this.chargers = this.chargingStationService.chargerDetail.chargers;\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    if (this.chargingStation == null || this.chargingStation == undefined) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    this.getChargers(this.chargingStation.id);\r\n  }\r\n  getChargers(station_id) {\r\n    this.chargerService.getChargersByMappedStationId(station_id).subscribe(\r\n      (chargerData: any) => {\r\n        console.log(\"chargerData\");\r\n        console.log(chargerData);\r\n        \r\n        if (chargerData.status == true) {\r\n          this.chargers = chargerData.data;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  setOpened(itemIndex) {\r\n    this.currentlyOpenedItemIndex = itemIndex;\r\n  }\r\n\r\n  setClosed(itemIndex) {\r\n    if (this.currentlyOpenedItemIndex === itemIndex) {\r\n      this.currentlyOpenedItemIndex = -1;\r\n    }\r\n  }\r\n  openDialogChargerDetails(data) {\r\n    event.stopPropagation();\r\n    let params = {\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ChargerLogSharedDialogComponent, {\r\n      width: '1800px',\r\n      height: '900px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      //this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n  manageChargerLog(data) {\r\n\r\n\r\n    //localStorage.setItem('station', JSON.stringify( data));\r\n    this.chargerService.chargerDetail = data;\r\n    // const url = this.router.serializeUrl(\r\n    //   this.router.createUrlTree(['/logsandHistory/viewChargerLog'])\r\n    // );\r\n    this.router.navigate([]).then(result => { window.open(`/#/logsandHistory/viewChargerLog/${data.name}`, '_blank'); });\r\n    // window.open(url, '_blank');\r\n    //  this.router.navigate([]).then(result => {  window.open(url, '_blank'); });\r\n    //this.router.navigate(['/logsandHistory/viewChargerLog']);\r\n  }\r\n  backButton() {\r\n    if (this.previousTabIndex != null || this.previousTabIndex != undefined) {\r\n      // this.previousTabIndex = null;\r\n      this.router.navigate(['/home', this.previousTabIndex]);\r\n\r\n    } else {\r\n      this.router.navigate(['/chargingStation/crud/list']);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  removeChargerFromStation(data) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result) {\r\n        let params: any = {\r\n\r\n          id: data.map_id,\r\n          modify_by: this.localStorage.userId\r\n        }\r\n        this.chargerService.removeChargerFromStation(params).subscribe(\r\n\r\n          (resp: any) => {\r\n            //\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.ChargerRemoved, 'Dismiss', { duration: 5000 });\r\n              this.getChargers(this.chargingStation.id);\r\n              // this.router.navigate(['/chargingStation/manageChargers/list']);\r\n              // this.getChargersByMappedStationId(this.stationDetails.id);\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            ////\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n}\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div style=\"display: block;width: 100%;\">\r\n\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\t\t<div class=\"center\" fusePerfectScrollbar>\r\n\t\t\t<div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\t\t\t\t\t<span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">\r\n\t\t\t\t\t\t<mat-icon matTooltip=\"Back to home\" (click)=\"backButton()\" style=\"cursor:pointer;color:white\">\r\n\t\t\t\t\t\t\tarrow_back</mat-icon>\r\n\t\t\t\t\t\t&nbsp;&nbsp;Manage Charging Station\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<div class=\"mat-card mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\"\r\n\t\t\t\tstyle=\"padding-bottom: 10px;\">\r\n\t\t\t\t<mat-card fxFlex=\"100\">\r\n\t\t\t\t\t<div class=\"card-border \">\r\n\t\t\t\t\t\t<div class=\"section-hero-header-title-description\">\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"station_name\"> {{chargingStation?.name}} </div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"station_address\"> {{chargingStation?.email}}</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"station_address\"> {{chargingStation?.mobile}}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\" style=\"text-align: end;padding-right: 20px;\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"charger_counts\">{{chargingStation?.total_chargers}}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\"\r\n\t\t\t\t\t\t\t\tstyle=\"align-items: center;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"text-align: end;padding-right: 20px;\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"chipicon\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t<img style=\"margin-right: 5px;\"\r\n\t\t\t\t\t\t\t\t\t\t\t*ngFor=\"let amenite of chargingStation?.amenities; let i = index;\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"{{amenite.icon_url}}\" width=\"24px\" height=\"24px;\"\r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltip=\"{{amenite.amenity_name}}\" class=\"emenite_icon\">\r\n\t\t\t\t\t\t\t\t\t\t<!-- <img src=\"{{amenite.icon_url}}\" width=\"32px;\"height=\"32px\"  class=\"avatar\"> -->\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"details-section\">\r\n\t\t\t\t\t\t\t<div fxLayout=\"row wrap\" fxLayoutGap=\"0px grid\" class=\"tab-content\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">person_pin</span>\r\n\t\t\t\t\t\t\t\t\t\t{{chargingStation?.cp_name}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">person_pin</span>\r\n\t\t\t\t\t\t\t\t\t\t{{chargingStation?.cpo_name}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">ev_station</span>\r\n\t\t\t\t\t\t\t\t\t\tLocation Type: {{chargingStation?.location_type}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">location_on</span>\r\n\t\t\t\t\t\t\t\t\t\tCommissioned Date: {{chargingStation?.commissioned_dt | date}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">call</span>\r\n\t\t\t\t\t\t\t\t\t\tRegister As: {{chargingStation?.register_as}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label_txt\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons icon-middle\">ev_station</span>\r\n\t\t\t\t\t\t\t\t\t\tElectricity Line: {{chargingStation?.electricity_line}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"100\">\r\n\t\t\t\t<mat-accordion class=\"example-headers-align\">\r\n\t\t\t\t\t<mat-expansion-panel *ngFor=\"let charger of chargers; let i = index;\" (opened)=\"setOpened(i)\"\r\n\t\t\t\t\t\t(closed)=\"setClosed(i)\">\r\n\t\t\t\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\t\t\t\t{{charger?.serial_no}} ({{charger?.charger_nick_name}})\r\n\t\t\t\t\t\t\t</mat-panel-title>\r\n\t\t\t\t\t\t\t<mat-panel-description>\r\n\t\t\t\t\t\t\t\t{{charger?.charger_batch_name}}\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"(charger.heartbeat_interval != null)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'green'}\" matTooltip=\"Charger Online\">public\r\n\t\t\t\t\t\t\t\t\t</mat-icon>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'green'}\" matTooltip=\"Book now\">menu_book</mat-icon>\r\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"(charger.heartbeat_interval == null)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'red'}\" matTooltip=\"Charger Offline\">public_off\r\n\t\t\t\t\t\t\t\t\t</mat-icon>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"(previousTabIndex == null)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon color=\"warn\" matTooltip=\"Charger Logs\" (click)=\"manageChargerLog(charger)\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"cursor:pointer\">assessment</mat-icon>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-icon [ngStyle]=\"{'color':'red'}\" matTooltip=\"delete\"\r\n\t\t\t\t\t\t\t\t\t\t(click)=\"removeChargerFromStation(charger)\">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</mat-panel-description>\r\n\t\t\t\t\t\t</mat-expansion-panel-header>\r\n\t\t\t\t\t</mat-expansion-panel>\r\n\t\t\t\t</mat-accordion>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","\r\n\r\nimport { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup ,ValidatorFn,FormControl,AbstractControl} from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service'\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe,GeoLocationService]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  cpos:any;\r\n  location_types:any;\r\n  register_types:any;\r\n  electricity_lines:any;\r\n  localStorage : any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsLocationType: Observable<any[]>;\r\n  filteredOptionsElectricityLine: Observable<any[]>;\r\n  filteredOptionsRegisterAs: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  status = false;\r\n  mLat: any;\r\n  mLong:any;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n // messageConstant = MessageConstant;\r\n @ViewChild(\"toggleElement\") ref: any;\r\n errorMsg:String;\r\n  splitted:String;\r\n  constructor(public dialog : MatDialog,private fb: FormBuilder, private cpoService : CpoService,\r\n    private chargingStationService : ChargingStationService,private snackBar: MatSnackBar,\r\n    private router : Router, private dateService : DateService,private datePipe: DatePipe,public geoLocationService:GeoLocationService,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n     \r\n      lat: ['', [Validators.required]],\r\n      lng: ['', [Validators.required]],\r\n      location_type: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      commissioned_dt: [''],\r\n      register_as: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      electricity_line: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      oTime: ['', [Validators.required]],\r\n      cTime: ['', [this.confirmValidator,Validators.required]],\r\n      addressLine1:['', [Validators.required]],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:['',[autocompleteObjectValidator(),Validators.required]],\r\n      state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n    //  address: ['', [Validators.required]],\r\n     // pin: ['', [Validators.required]],\r\n     oppo_start_time: ['', [Validators.required]],\r\n     oppo_end_time: ['', [this.confirmOValidator,Validators.required]],\r\n     night_start_time: ['', [Validators.required]],\r\n     night_end_time: ['', [this.confirmNValidator,Validators.required]],\r\n      \r\n    });\r\n   \r\n\r\n    this.getCpos();\r\n    this.getLocationTypes();\r\n    this.getRegisterTypes();\r\n    this.getElectricityLines();\r\n    this.filteredOption();\r\n      //this.getCountry();\r\n      this.getAllCountry();\r\n      this.getAllState();\r\n      //this.getAllCity();\r\n   \r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        this.states = data;\r\n      \r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        this.cities = data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude); \r\n          // this.coordinates = {\r\n          //   latitude:  +(pos.coords.latitude),\r\n          //   longitude: +(pos.coords.longitude)\r\n          // };\r\n          this.form.get('lat').setValue( this.mLat);\r\n          this.form.get('lng').setValue(this.mLong);\r\n      });\r\n     \r\n   \r\n  }\r\n \r\n  getCpos(){\r\n    \r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n      this.cpos = data;\r\n      this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCPO(name) : this.cpos)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n  getLocationTypes(){\r\n    \r\n    this.chargingStationService.getLocationTypes().subscribe(\r\n      (data:any)=>{\r\n      this.location_types = data;\r\n      this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterLocationType(name) : this.location_types)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n    // this.location_types = this.chargingStationService.getLocationTypes();\r\n    // this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    // );\r\n   \r\n  }\r\n  getRegisterTypes(){\r\n    this.chargingStationService.getRegisterTypes().subscribe(\r\n      (data:any)=>{\r\n      this.register_types = data;\r\n      this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n    // this.register_types =  this.chargingStationService.getRegisterTypes();\r\n    // this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n    // );\r\n\r\n  }\r\n  getElectricityLines(){\r\n    this.chargingStationService.getElectricityLines().subscribe(\r\n      (data:any)=>{\r\n      this.electricity_lines = data;\r\n      this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n    //this.electricity_lines = this.chargingStationService.getElectricityLines();\r\n    \r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let params = {\r\n        cpo_id : formValues.cpo.id,\r\n        name :formValues.name, \r\n        code :formValues.code, \r\n        description :formValues.description, \r\n        address1 :formValues.addressLine1,\r\n        lat :formValues.lat ,\r\n        lng :formValues.lng ,\r\n        location_type_id :formValues.location_type.id ,\r\n        cp_name :formValues.cp_name ,\r\n        mobile :formValues.mobile ,\r\n        email :formValues.email ,\r\n        commissioned_dt : this.datePipe.transform(formValues.commissioned_dt,\"yyyy-MM-dd\")  ,\r\n        register_as :formValues.register_as.id ,\r\n        electricity_line_id :formValues.electricity_line.id ,\r\n        o_time :formValues.oTime ,\r\n        c_time :formValues.cTime ,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        address2 :formValues.addressLine2,\r\n        landmark:formValues.landmark,\r\n        country_id:formValues.country.id,\r\n        state_id:formValues.state.id,\r\n        city_id:formValues.city.id,\r\n        PIN :formValues.pincode ,\r\n        opportunityTime_from: formValues.oppo_start_time,\r\n        opportunityTime_to: formValues.oppo_end_time,\r\n        nightTime_from: formValues.night_start_time,\r\n        nightTime_to: formValues.night_end_time,\r\n        created_by : this.localStorage.userId \r\n      }\r\n\r\n      this.chargingStationService.create(params).subscribe(\r\n        (resp:any )=>{\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/chargingStation/crud/list']);\r\n          }else{\r\n            if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = resp.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'name'\" ){\r\n                this.snackBar.open(MessageConstant.chargingStationDuplicate, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'mobile'\"){\r\n                this.snackBar.open(MessageConstant.mobileDuplicate, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n           \r\n          }\r\n          \r\n  \r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  filteredOption(){\r\n    this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCPO(name) : this.cpos)\r\n    );\r\n    this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    );\r\n    this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n        );\r\n        this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayLocationType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayRegisterAs(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayElectricityLine(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterLocationType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.register_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterRegisterAs(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.location_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterElectrictyLine(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.electricity_lines.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n \r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\t\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n // this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n  //this.form.get('pincode').setValue(\"\");\r\n}\r\nonCityChange(event){\r\n  \r\n //this.form.get('pincode').setValue(\"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\nupdateStatus(event){\r\n  this.status = event.checked;\r\n  this.ref.checked = this.status;\r\n}\r\nconfirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n  if (!control.value) {\r\n    return { error: true, required: true };\r\n  } else if (control.value < this.form.controls.oTime.value) {\r\n    return { error: true, confirm: true };\r\n  }\r\n}\r\nconfirmOValidator = (control: FormControl): { [s: string]: boolean } => {\r\n  if (!control.value) {\r\n    return { error: true, required: true };\r\n  } else if (control.value < this.form.controls.oppo_start_time.value) {\r\n    return { error: true, confirm: true };\r\n  }\r\n}\r\nconfirmNValidator = (control: FormControl): { [s: string]: boolean } => {\r\n  if (!control.value) {\r\n    return { error: true, required: true };\r\n  } else if (control.value < this.form.controls.night_start_time.value) {\r\n    return { error: true, confirm: true };\r\n  }\r\n}\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n\t\t\t\t<mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter CPO name\">account_circle</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" maxlength=\"50\" formControlName=\"name\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter  name\">account_circle</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"20\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character is not allowed </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" required>\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required>\r\n\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Location Type</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"location_type\" [matAutocomplete]=\"locationTypeAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #locationTypeAuto=\"matAutocomplete\" [displayWith]=\"displayLocationType\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsLocationType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter location type\">share_location\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('location_type').invalid\">Please select location type\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Contact Person Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person name</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"email\" required style=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email id</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email id </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" required>\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please select country\">location_city</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" required>\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" required>\r\n\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"landmark\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Commissioned Date</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp3\" formControlName=\"commissioned_dt\" disabled>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('commissioned_dt').invalid\">Please enter commissioned date\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Register As</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"register_as\" [matAutocomplete]=\"registerAsAuto\" required>\r\n\t\t\t\t<mat-autocomplete #registerAsAuto=\"matAutocomplete\" [displayWith]=\"displayRegisterAs\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRegisterAs | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter register as\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('register_as').invalid\">Please select register as\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Electricity Line</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"electricity_line\" [matAutocomplete]=\"electricityLineAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #electricityLineAuto=\"matAutocomplete\" [displayWith]=\"displayElectricityLine\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsElectricityLine | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter electricity line\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('electricity_line').invalid\">Please select electricity line\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t<mat-label>Open Time</mat-label>\r\n\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"oTime\"\r\n\t\t\t\t\t\trequired> -->\r\n\t\t\t\t<!-- <input matInput [ngxTimepicker]=\"picker\">\r\n\t\t\t\t<ngx-material-timepicker #picker></ngx-material-timepicker> -->\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oTime').invalid\">Please enter open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Close Time</mat-label>\r\n\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"cTime\"\r\n\t\t\t\t\t\trequired> -->\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('required')\">Please enter close time\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('confirm')\">Close time is not be less then Open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t<mat-label>Opportunity Start Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_start_time\" readonly\r\n\t\t\t\t\tformControlName=\"oppo_start_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #oppo_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter occp open time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oppo_start_time').invalid\">Please enter opportunity start time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Opportunity Close Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_end_time\" readonly\r\n\t\t\t\t\tformControlName=\"oppo_end_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #oppo_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter occp close time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('required')\">Please enter occp close time\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('confirm')\">opportunity close time is not be less\r\n\t\t\t\t\tthen Open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t<mat-label>Night Start Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_start_time\" readonly\r\n\t\t\t\t\tformControlName=\"night_start_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #night_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('night_start_time').invalid\">Please enter night open time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Night Close Time</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_end_time\" readonly\r\n\t\t\t\t\tformControlName=\"night_end_time\" [format]=\"24\" required>\r\n\t\t\t\t<ngx-material-timepicker #night_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('required')\">Please enter night close time\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('confirm')\">Night close time is not be less then\r\n\t\t\t\t\tOpen time\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/chargingStation/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\r\n\t</form>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate:[AuthGuard]},\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { AddChargerDialogComponent } from '../add-charger-dialog/add-charger-dialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { nullSafeIsEquivalent } from '@angular/compiler/src/output/output_ast';\r\nimport { MultiChargerDialogComponent } from '../multi-charger-dialog/multi-charger-dialog.component';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { eventNames } from 'process';\r\nimport { SetCpoStationService } from 'app/shared/services/setCPOStation.service';\r\n\r\n\r\nexport class ChargingStation {\r\n  id: number;\r\n  cpo_id: number;\r\n  cpo_name: string;\r\n  name: string;\r\n  code: string;\r\n  description: string;\r\n  address: string;\r\n  pin: number;\r\n  lat: number;\r\n  lng: number;\r\n  location_type_id: number;\r\n  cp_name: string;\r\n  mobile: number;\r\n  email: string;\r\n  commissioned_dt: string;\r\n  register_as: number;\r\n  electricity_line_id: number;\r\n  o_time: string;\r\n  c_time: string;\r\n  status: string;\r\n  created_date: string;\r\n  created_by: number;\r\n  modify_date: string;\r\n  modify_by: number;\r\n  statusString: string;\r\n  address1: string;\r\n  total_chargers: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: ChargingStation;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['name', 'cp_name', 'cpo_name', 'code', 'total_chargers', 'address1', 'status', 'action'];\r\n  head = [['CPO Name', 'Station Code', 'Station Name', 'Charger Count', 'Contact Person Name', 'Mobile', 'Address', 'Status']];\r\n  dataSource: MatTableDataSource<ChargingStation>;\r\n\r\n  chargingStations: ChargingStation[];\r\n  localStorage: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  //messageConstant = MessageConstant;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  cpoSearch = false;\r\n  stationCodeSearch = false;\r\n  nameSearch = false;\r\n  contactPersonSearch = false;\r\n  mobileSearch = false;\r\n  addressSearch = false;\r\n  statusSearch = false;\r\n  countSearch = false;\r\n  exportedData: any[];\r\n  previousTabIndex = null;\r\n  cposName: any;\r\n  clientName: any;\r\n  form: FormGroup;\r\n  chargingStationName: any;\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any[];\r\n  selectedClient_id: any;\r\n  selectedCpo_id: any;\r\n  selectedStation_id: any;\r\n  localClient: any;\r\n  constructor(\r\n    private chargingStationService: ChargingStationService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private setCpoStationService: SetCpoStationService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      charClient: ['', Validators.required],\r\n      charCPO: ['', Validators.required],\r\n      charStat: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'))\r\n    this.getClients();\r\n    if (this.localStorage.role_code == 'SC' || this.localStorage.role_code == 'SO') {\r\n      this.form.get('charClient').disable();\r\n      this.form.get('charCPO').disable();\r\n    } else if (this.localStorage.role_code == 'CPO' || this.localStorage.role_code == 'ADMIN') {\r\n      this.form.get('charClient').disable();\r\n    }\r\n    this.filterEntity = new ChargingStation();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getChargingStations() {\r\n    let params = {\r\n\r\n    }\r\n\r\n    this.chargingStationService.getAllChargingStationsWithChargersAndConnectorsCCS(this.localStorage.userId,\r\n      this.selectedClient_id, this.selectedCpo_id, this.selectedStation_id, params).subscribe(\r\n        (data: any) => {\r\n          if (data != null) {\r\n            this.chargingStations = data.data;\r\n            for (var i = 0; i < this.chargingStations.length; i++) {\r\n              if (this.chargingStations[i].status == 'N') {\r\n                this.chargingStations[i].statusString = 'Inactive';\r\n              } else {\r\n                this.chargingStations[i].statusString = 'Active';\r\n              }\r\n            }\r\n            this.dataSource = new MatTableDataSource(this.chargingStations);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          } else {\r\n            return;\r\n          }\r\n        }, (err) => {\r\n\r\n        }\r\n      )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargingStationService.delete(id).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getChargingStations();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  addChargerDialog(data) {\r\n    localStorage.setItem('station', JSON.stringify(data));\r\n    let params = {\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(AddChargerDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  multiChargerDialog(data) {\r\n    localStorage.setItem('station', JSON.stringify(data));\r\n    let params = {\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(MultiChargerDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getChargingStations();\r\n    });\r\n  }\r\n\r\n  manageCharger(data) {\r\n    this.previousTabIndex = null;\r\n    //localStorage.setItem('station', JSON.stringify( data));\r\n    this.chargingStationService.chargerDetail = data;\r\n    this.chargingStationService.tabIndex = null;\r\n    this.router.navigate(['/chargingStation/viewDetails']);\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'cpoSearch') {\r\n      this.cpoSearch = !this.cpoSearch;\r\n      this.filterEntity.cpo_name = '';\r\n    }\r\n    if (visibleOption == 'contactPersonSearch') {\r\n      this.contactPersonSearch = !this.contactPersonSearch;\r\n      this.filterEntity.cp_name = '';\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = null;\r\n    }\r\n    if (visibleOption == 'stationCodeSearch') {\r\n      this.stationCodeSearch = !this.stationCodeSearch;\r\n      this.filterEntity.code = '';\r\n    }\r\n    if (visibleOption == 'countSearch') {\r\n      this.countSearch = !this.countSearch;\r\n      this.filterEntity.total_chargers = '';\r\n    }\r\n    if (visibleOption == 'addressSearch') {\r\n      this.addressSearch = !this.addressSearch;\r\n      this.filterEntity.address1 = '';\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'CPO Name': chargerModel.cpo_name, 'Station Code': chargerModel.code, 'Station Name': chargerModel.name,\r\n        'Charger Count': chargerModel.total_chargers, 'Contact Person Name': chargerModel.cp_name, 'Mobile': chargerModel.mobile,\r\n        'Address': chargerModel.address1, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n    XLSX.writeFile(workBook, 'Charging Station.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.cpo_name, chrger.code, chrger.name, chrger.total_chargers, chrger.cp_name, chrger.mobile, chrger.address1, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Charging Station Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Charging Station report.pdf');\r\n\r\n  }\r\n\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n  getClients() {\r\n    let selectedClient;\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n\r\n    this.localClient = localStorage.getItem('selectedClient');\r\n\r\n    if (this.localStorage.role_code != 'END') {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n\r\n        if (this.localClient != null || this.localClient != undefined) {\r\n          selectedClient = this.clientList.filter(\r\n            client => client.client_id === Number(this.localClient));\r\n          const toSelect = selectedClient[0];\r\n          this.selectedClient_id = toSelect.client_id;\r\n          this.form.get('charClient').setValue(toSelect);\r\n          //this.cdr.detectChanges();\r\n          this.getCPOByClient(toSelect.client_id);\r\n        } else {\r\n          const toSelect = this.clientList[0];\r\n          this.selectedClient_id = toSelect.client_id;\r\n          this.form.get('charClient').setValue(toSelect);\r\n          //this.cdr.detectChanges();\r\n          this.getCPOByClient(toSelect.client_id);\r\n        }\r\n\r\n\r\n        // const toSelect = this.clientList[0];\r\n        // this.selectedClient_id = toSelect.client_id;\r\n        // this.form.get('charClient').setValue(toSelect);\r\n        // this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n\r\n  onClientChange(client_id) {\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.selectedClient_id = client_id;\r\n    this.setCPOStation(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        \r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.selectedCpo_id = toSelect.cpo_id;\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    }\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n\r\n  onCPOChange(id) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.selectedCpo_id = id;\r\n    this.getStationByCPO(id);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station = [];\r\n    if (this.localStorage.role_code != 'END') {\r\n      for (var i = 0; i < this.stationList.length; i++) {\r\n        if (id == this.stationList[i].cpo_id) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n        if (this.stationList[i].station_id == -1 && id != -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        //const toSelect = this.station[0];\r\n        // const toSelect = this.station.length == 1 ? this.station[0] : this.station[1];\r\n        let toSelect\r\n        if (this.selectedCpo_id == -1) {\r\n          toSelect = this.station[0];\r\n        } else {\r\n          toSelect = this.station.length == 1 ? this.station[0] : this.station[1];\r\n        }\r\n        this.selectedStation_id = toSelect.station_id;\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getChargingStations();\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    }\r\n  }\r\n\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n\r\n  onStationChange(event) {\r\n    this.selectedStation_id = event;\r\n    this.getChargingStations();\r\n    //this.getAllClientChargers(event);\r\n  }\r\n\r\n  setCPOStation(client_id) {\r\n\r\n    this.setCpoStationService.setCpoStationDetails(client_id);\r\n    setTimeout(() => {\r\n      this.getCPOByClient(client_id);\r\n\r\n    }, 700);\r\n  }\r\n}\r\n\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n\r\n<mat-card style=\"padding:16px  !important;\" *ngIf=\"localStorage.role_code != 'END' \">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\" \r\n                        (optionSelected)='onClientChange($event.option.value.client_id)' >\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.client_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.cpo_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select  CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.station_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>    \r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Station Name \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cp_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!contactPersonSearch\" class=\"custom_font_size\" style=\"display: flex;\">Contact\r\n                            Person &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('contactPersonSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"contactPersonSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Contact Person \" [(ngModel)]=\"filterEntity.cp_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('contactPersonSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cp_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"  CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stationCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stationCodeSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stationCodeSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Station Code  \" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stationCodeSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"total_chargers\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!countSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charger Count\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('countSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"countSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Charger Count  \" [(ngModel)]=\"filterEntity.total_chargers\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('countSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.total_chargers}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Mobile \" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"address1\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!addressSearch\" class=\"custom_font_size\" style=\"display: flex;\">Address\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('addressSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"addressSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Address \" [(ngModel)]=\"filterEntity.address1\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('addressSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.address1}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 140px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\" >\r\n                        <div style=\"display: flex;\">\r\n                            <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Add Charger\" (click)=\"multiChargerDialog(element)\"\r\n                            style=\"cursor:pointer\">add_circle</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Manage Chargers\" (click)=\"manageCharger(element)\"\r\n                            style=\"cursor:pointer\">preview</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                        </div>\r\n                       \r\n                    </td>\r\n\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-add-charger-dialog',\r\n//   templateUrl: './add-charger-dialog.component.html',\r\n//   styleUrls: ['./add-charger-dialog.component.scss']\r\n// })\r\n// export class AddChargerDialogComponent implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit(): void {\r\n//   }\r\n\r\n// }\r\n\r\nimport { Component, OnInit, ViewChild, Inject } from \"@angular/core\";\r\nimport {\r\n    Validators,\r\n    FormBuilder,\r\n    FormGroup,\r\n    ValidatorFn,\r\n    AbstractControl,\r\n} from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ChargerService } from \"app/shared/services/charger/charger.service\";\r\nimport { ChargingStationService } from \"app/shared/services/charging-station/charging-station.service\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatAutocompleteTrigger } from \"@angular/material/autocomplete\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { MtxDialogData } from \"@ng-matero/extensions\";\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === \"string\") {\r\n            return { invalidAutocompleteObject: { value: control.value } };\r\n        }\r\n        return null; /* valid option selected */\r\n    };\r\n}\r\nexport class Charger {\r\n    id: string;\r\n    name: string;\r\n    serial_no: string;\r\n    station_id: number;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-multi-charger-dialog\",\r\n    templateUrl: \"./multi-charger-dialog.component.html\",\r\n    styleUrls: [\"./multi-charger-dialog.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class MultiChargerDialogComponent implements OnInit {\r\n    params: any;\r\n    form: FormGroup;\r\n    stations: any;\r\n    localStorage: any;\r\n    status = false;\r\n    stationDetails: any;\r\n    isEditMode = false;\r\n    client_id: any;\r\n    @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    selectedChargerSerial = [];\r\n    public chipSelectedSerialNo: Charger[] = [];\r\n    chargerSerials: any;\r\n    chargerSerialsOrg: any;\r\n    selectedSerialNo = [];\r\n    unitType: any;\r\n    removable = true;\r\n    isAvailable = false;\r\n    public filteredSerial: Observable<String[]>;\r\n    filteredOptionSerial: Observable<any[]>;\r\n    // messageConstant = MessageConstant;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private chargerService: ChargerService,\r\n        private snackBar: MatSnackBar,\r\n        public dialogRef: MatDialogRef<MultiChargerDialogComponent>,\r\n        private router: Router,\r\n        public dialog: MatDialog,\r\n        @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.stationDetails = JSON.parse(localStorage.getItem(\"station\"));\r\n\r\n        this.form = this.fb.group({\r\n            serialNumber: [\"\"],\r\n            name: [\"\"],\r\n            station: [{ value: \"\", disabled: true }],\r\n            cpo_name: [{ value: \"\", disabled: true }],\r\n            noOfGuns: [{ value: \"\", disabled: true }],\r\n            addressLine1: [{ value: \"\", disabled: true }],\r\n            addressLine2: [{ value: \"\", disabled: true }],\r\n            city: [{ value: \"\", disabled: true }],\r\n            state: [{ value: \"\", disabled: true }],\r\n            country: [{ value: \"\", disabled: true }],\r\n            status: this.status == true ? \"Y\" : \"N\",\r\n        });\r\n        this.params = this.data;\r\n        this.client_id = this.params.data.client_id;\r\n        this.getMultipleChargerSerial();\r\n\r\n        this.assignValues(this.params);\r\n    }\r\n\r\n    assignValues(params) {\r\n        this.form.get(\"station\").setValue(params.data.name);\r\n        this.form.get(\"cpo_name\").setValue(params.data.cpo_name);\r\n        this.form.get(\"noOfGuns\").setValue(params.data.no_of_guns);\r\n        this.form.get(\"addressLine1\").setValue(params.data.address1);\r\n        this.form.get(\"addressLine2\").setValue(params.data.address2);\r\n        this.form.get(\"city\").setValue(params.data.city_name);\r\n        this.form.get(\"state\").setValue(params.data.state_name);\r\n        this.form.get(\"country\").setValue(params.data.country_name);\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            let params: any = {\r\n                station_id: this.stationDetails.id,\r\n                charger_data: this.selectedSerialNo.map((v) => ({\r\n                    charger_id: v.charger_id,\r\n                    serial_no: v.serial_no,\r\n                })),\r\n\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n            };\r\n\r\n            if (this.isEditMode) {\r\n                (params.id = this.stationDetails.id),\r\n                    (params.modify_by = this.localStorage.userId);\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n            } else {\r\n                this.chargerService\r\n                    .addChargerToStationMultiple(params)\r\n                    .subscribe(\r\n                        (data: any) => {\r\n                            //\r\n                            if (data.status == true) {\r\n                                this.snackBar.open(\r\n                                    MessageConstant.chargerMappedWithStation,\r\n                                    \"Dismiss\",\r\n                                    { duration: 5000 }\r\n                                );\r\n                                this.dialogRef.close();\r\n                                this.router.navigate([\r\n                                    \"/chargingStation/crud/list\",\r\n                                ]);\r\n                            } else {\r\n                                this.snackBar.open(\r\n                                    MessageConstant.errorMessage,\r\n                                    \"Dismiss\",\r\n                                    { duration: 5000 }\r\n                                );\r\n                                this.dialogRef.close();\r\n                            }\r\n                        },\r\n                        (err) => {\r\n                            ////\r\n                            this.snackBar.open(\r\n                                MessageConstant.errorMessage,\r\n                                \"Dismiss\",\r\n                                { duration: 5000 }\r\n                            );\r\n                        }\r\n                    );\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get(\"email\").hasError(\"required\")\r\n            ? \"You must enter a value\"\r\n            : form.get(\"email\").hasError(\"email\")\r\n            ? \"Not a valid email\"\r\n            : \"\";\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    onYesClick() {\r\n        this.onSubmit();\r\n    }\r\n\r\n    getMultipleChargerSerial() {\r\n        this.chargerService\r\n            .getClientChargersNotMappedToAnyStation(this.client_id)\r\n            .subscribe(\r\n                (multiChargerData: any) => {\r\n                    //this.form.reset();\r\n                    if (multiChargerData.status == true) {\r\n                        this.chargerSerials = multiChargerData.data;\r\n                        this.chargerSerialsOrg = [...this.chargerSerials];\r\n                        this.filteredOptionSerial =\r\n                            this.form.controls.serialNumber.valueChanges.pipe(\r\n                                startWith(\"\"),\r\n                                map((value) =>\r\n                                    typeof value === \"string\"\r\n                                        ? value\r\n                                        : value.serial_no\r\n                                ),\r\n                                map((serial_no) =>\r\n                                    serial_no\r\n                                        ? this._filterSerial(serial_no)\r\n                                        : this.chargerSerials\r\n                                )\r\n                            );\r\n                    } else {\r\n                        this.snackBar.open(\r\n                            \"All charger are mapped with other station\",\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                    }\r\n                },\r\n                (err) => {}\r\n            );\r\n        // this.chargerSerials =  this.chargingStationService.getMultipleChargerSerial();\r\n        // this.chargerSerialsOrg = [...this.chargerSerials];\r\n    }\r\n    displaySerial(item: any): string {\r\n        return item && item.serial_no ? item.serial_no : \"\";\r\n    }\r\n    private _filterSerial(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        this.chargerSerials = this.resetChrgerList();\r\n\r\n        return this.chargerSerials.filter((option) =>\r\n            option.serial_no.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n    resetChrgerList(): any[] {\r\n        var chargerSerials = [];\r\n        if (\r\n            this.selectedSerialNo != undefined &&\r\n            this.selectedSerialNo.length > 0\r\n        ) {\r\n            var isExist = true;\r\n\r\n            for (var k = 0; k < this.chargerSerialsOrg.length; k++) {\r\n                var serialNo = this.chargerSerialsOrg[k];\r\n                isExist = false;\r\n                for (var i = 0; i < this.selectedSerialNo.length; i++) {\r\n                    var selectedSerialNo = this.selectedSerialNo[i];\r\n                    if (selectedSerialNo.serial_no == serialNo.serial_no) {\r\n                        isExist = true;\r\n                    }\r\n                }\r\n\r\n                if (!isExist) {\r\n                    chargerSerials.push(serialNo);\r\n                }\r\n            }\r\n        } else {\r\n            chargerSerials = [...this.chargerSerialsOrg];\r\n        }\r\n        return chargerSerials;\r\n    }\r\n    onSerialSelected(event) {\r\n        this.selectedSerialNo.push(event.option.value);\r\n        //this.form.controls['serialNumber'].setValue('');\r\n        this.form.get(\"serialNumber\").setValue(\"\");\r\n        this.chargerSerials = this.resetChrgerList();\r\n        this.unitType += 1;\r\n        this.filteredOptionSerial =\r\n            this.form.controls.serialNumber.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.serial_no\r\n                ),\r\n                map((serial_no) =>\r\n                    serial_no\r\n                        ? this._filterSerial(serial_no)\r\n                        : this.chargerSerials\r\n                )\r\n            );\r\n    }\r\n    public removeSerial(i): void {\r\n        this.selectedSerialNo.splice(i, 1);\r\n        this.chargerSerials = this.resetChrgerList();\r\n        this.unitType - 1;\r\n        this.filteredOptionSerial =\r\n            this.form.controls.serialNumber.valueChanges.pipe(\r\n                startWith(\"\"),\r\n                map((value) =>\r\n                    typeof value === \"string\" ? value : value.serial_no\r\n                ),\r\n                map((serial_no) =>\r\n                    serial_no\r\n                        ? this._filterSerial(serial_no)\r\n                        : this.chargerSerials\r\n                )\r\n            );\r\n    }\r\n    selectionMade(event: Event, trigger: MatAutocompleteTrigger) {\r\n        event.stopPropagation();\r\n        trigger.openPanel();\r\n    }\r\n    updateAvailable(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n    closeActionPanel() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>   \r\n<mat-toolbar class=\"action_toolbar\">Add Charger</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Station</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"station\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>CPO Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cpo_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<!-- <mat-form-field  appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>No Of Guns</mat-label>\r\n\t\t   \t\t<input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly autocomplete=\"off\">\r\n\t\t\t</mat-form-field> -->\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"city\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"state\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"country\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateAvailable($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"display: block  !important;padding-bottom: 10px;\"\r\n\t\t\t\tfxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-chip-list aria-label=\"Fish selection\">\r\n\t\t\t\t\t<mat-chip *ngFor=\"let option of selectedSerialNo;let i = index;\" [selectable]=\"selectable\"\r\n\t\t\t\t\t\t[removable]=\"removable\" (removed)=\"removeSerial(i)\">\r\n\t\t\t\t\t\t{{option?.serial_no}}\r\n\t\t\t\t\t\t<mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n\t\t\t\t\t</mat-chip>\r\n\t\t\t\t</mat-chip-list>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No</mat-label>\r\n\t\t\t\t\t<input type=\"text\" #trigger=\"matAutocompleteTrigger\" matInput formControlName=\"serialNumber\"\r\n\t\t\t\t\t\ttype=\"search\" autocomplete=\"off\" [matAutocomplete]=\"seialAuto\">\r\n\t\t\t\t\t<mat-autocomplete #seialAuto=\"matAutocomplete\" [displayWith]=\"displaySerial\"\r\n\t\t\t\t\t\t(optionSelected)='onSerialSelected($event)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionSerial | async\" [value]=\"option\"\r\n\t\t\t\t\t\t\t(click)=\"selectionMade($event, trigger)\">\r\n\t\t\t\t\t\t\t<span>{{option?.charger_display_id}}</span> |\r\n\t\t\t\t\t\t\t<small> {{option?.serial_no}}</small>\r\n\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('serialNumber').invalid\">Please select part number </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\n\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { GeoLocationService } from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe, GeoLocationService]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  cpos: any;\r\n  location_types: any;\r\n  register_types: any;\r\n  electricity_lines: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsLocationType: Observable<any[]>;\r\n  filteredOptionsElectricityLine: Observable<any[]>;\r\n  filteredOptionsRegisterAs: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  mLat: any;\r\n  mLong: any;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private dateService: DateService, private snackBar: MatSnackBar,\r\n    private cpoService: CpoService, private chargingStationService: ChargingStationService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public dialog: MatDialog,\r\n    private datePipe: DatePipe, public geoLocationService: GeoLocationService, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n\r\n      lat: ['', [Validators.required]],\r\n      lng: ['', [Validators.required]],\r\n      location_type: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cp_name: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      commissioned_dt: [''],\r\n      register_as: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      electricity_line: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      oTime: ['', [Validators.required]],\r\n      cTime: ['', [this.confirmValidator, Validators.required]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      oppo_start_time: ['', [Validators.required]],\r\n      oppo_end_time: ['', [this.confirmOValidator, Validators.required]],\r\n      night_start_time: ['', [Validators.required]],\r\n      night_end_time: ['', [this.confirmNValidator, Validators.required]],\r\n\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getLocationTypes();\r\n    this.getRegisterTypes();\r\n    this.getElectricityLines();\r\n    //this.getRegisterTypes();\r\n    //this.filteredOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude);\r\n        // this.coordinates = {\r\n        //   latitude:  +(pos.coords.latitude),\r\n        //   longitude: +(pos.coords.longitude)\r\n        // };\r\n        // this.form.get('lat').setValue( this.mLat);\r\n        // this.form.get('lng').setValue(this.mLong);\r\n      });\r\n\r\n\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.states = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllCity(stateID) {\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cities = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCity(name) : this.cities)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCpos() {\r\n\r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n\r\n        this.cpos = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCPO(name) : this.cpos)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  getLocationTypes() {\r\n\r\n    this.chargingStationService.getLocationTypes().subscribe(\r\n      (data: any) => {\r\n        this.location_types = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.location_types.find(c => c.id == this.params.data.location_type_id);\r\n          this.form.get('location_type').setValue(toSelect);\r\n          this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterLocationType(name) : this.location_types)\r\n            );\r\n        }\r\n      }\r\n    )\r\n    // this.location_types = this.chargingStationService.getLocationTypes();\r\n    // this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    // );\r\n\r\n  }\r\n  getRegisterTypes() {\r\n    this.chargingStationService.getRegisterTypes().subscribe(\r\n      (data: any) => {\r\n        this.register_types = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.register_types.find(c => c.id == this.params.data.register_as_id);\r\n          this.form.get('register_as').setValue(toSelect);\r\n          this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n            );\r\n        }\r\n\r\n      }\r\n    )\r\n    // this.register_types =  this.chargingStationService.getRegisterTypes();\r\n    // this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n    // );\r\n\r\n  }\r\n  getElectricityLines() {\r\n    this.chargingStationService.getElectricityLines().subscribe(\r\n      (data: any) => {\r\n        this.electricity_lines = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.electricity_lines.find(c => c.id == this.params.data.electricity_line_id);\r\n          this.form.get('electricity_line').setValue(toSelect);\r\n          this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n            );\r\n        }\r\n      }\r\n    )\r\n    //this.electricity_lines = this.chargingStationService.getElectricityLines();\r\n\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params: any = {\r\n        cpo_id: formValues.cpo.id,\r\n        name: formValues.name,\r\n        code: formValues.code,\r\n        description: formValues.description,\r\n\r\n        lat: formValues.lat,\r\n        lng: formValues.lng,\r\n        location_type_id: formValues.location_type.id,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        commissioned_dt: this.datePipe.transform(formValues.commissioned_dt, \"yyyy-MM-dd\"),\r\n        register_as: formValues.register_as.id,\r\n        electricity_line_id: formValues.electricity_line.id,\r\n        o_time: formValues.oTime,\r\n        c_time: formValues.cTime,\r\n        opportunityTime_from: formValues.oppo_start_time,\r\n        opportunityTime_to: formValues.oppo_end_time,\r\n        nightTime_from: formValues.night_start_time,\r\n        nightTime_to: formValues.night_end_time,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n\r\n      // tslint:disable-next-line: no-//\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.chargingStationService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n                this.errorMsg = resp.message;\r\n                var index = this.errorMsg.lastIndexOf(\" \");\r\n                this.splitted = this.errorMsg.substring(index + 1);\r\n                if (this.splitted == \"'name'\") {\r\n                  this.snackBar.open(MessageConstant.chargingStationDuplicate, 'Dismiss', { duration: 5000 });\r\n                } if (this.splitted == \"'mobile'\") {\r\n                  this.snackBar.open(MessageConstant.mobileDuplicate, 'Dismiss', { duration: 5000 });\r\n                }\r\n              } else {\r\n                this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }\r\n\r\n\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.chargingStationService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n\r\n      this.dialogRef.close(params);\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    let tempOppStart = params.data.oppo_start_time.substring(0, 5);\r\n    let tempOppEnd = params.data.oppo_end_time.substring(0, 5);\r\n\r\n    let tempNightStart = params.data.night_start_time.substring(0, 5);\r\n    let tempNightEnd = params.data.night_end_time.substring(0, 5);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('commissioned_dt').setValue(params.data.commissioned_dt);\r\n    this.form.get('oTime').setValue(params.data.o_time);\r\n    this.form.get('cTime').setValue(params.data.c_time);\r\n\r\n    this.form.get('oppo_start_time').setValue(tempOppStart);\r\n    this.form.get('oppo_end_time').setValue(tempOppEnd);\r\n\r\n\r\n    this.form.get('night_start_time').setValue(tempNightStart);\r\n    this.form.get('night_end_time').setValue(tempNightEnd);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  filteredOption() {\r\n    this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCPO(name) : this.cpos)\r\n      );\r\n    this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterLocationType(name) : this.location_types)\r\n      );\r\n    this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n      );\r\n    this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n      );\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayLocationType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayRegisterAs(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayElectricityLine(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterLocationType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.register_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterRegisterAs(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.location_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterElectrictyLine(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.electricity_lines.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    // this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  \r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getLatLong() {\r\n    let params = {\r\n    }\r\n\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height: '410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null || result != undefined) {\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      } else {\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    });\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.oTime.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  confirmOValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.oppo_start_time.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  confirmNValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.night_start_time.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Charging Station</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter CPO name\">account_circle\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" maxlength=\"50\" formControlName=\"name\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter  name\">account_circle</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"20\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lat\" required>\r\n\t\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required>\r\n\t\t\t\t\t<mat-icon matSuffix (click)=\"getLatLong()\">location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Location Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"location_type\" [matAutocomplete]=\"locationTypeAuto\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-autocomplete #locationTypeAuto=\"matAutocomplete\" [displayWith]=\"displayLocationType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsLocationType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please enter location type\">share_location\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('location_type').invalid\">Please select location type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Contact Person Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">\r\n\t\t\t\t\t\taccount_circle</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person name\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"email\" required style=\"text-transform: none;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email id </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine1\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"addressLine2\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please select state\">location_city</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please select city\">location_city</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\" \" formControlName=\"landmark\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Commissioned Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" formControlName=\"commissioned_dt\">\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">\r\n\t\t\t\t\t\t\thelp</mat-icon>\r\n\t\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('commissioned_dt').invalid\">Please enter commissioned date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Register As</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"register_as\" [matAutocomplete]=\"registerAsAuto\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-autocomplete #registerAsAuto=\"matAutocomplete\" [displayWith]=\"displayRegisterAs\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRegisterAs | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter register as\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('register_as').invalid\">Please select register as\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Electricity Line</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"electricity_line\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"electricityLineAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #electricityLineAuto=\"matAutocomplete\" [displayWith]=\"displayElectricityLine\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsElectricityLine | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please enter electricity line\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('electricity_line').invalid\">Please select electricity line\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Open Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"oTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<!-- <input matInput [ngxTimepicker]=\"picker\">\r\n\t\t\t\t\t<ngx-material-timepicker #picker></ngx-material-timepicker> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oTime').invalid\">Please enter open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Close Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"cTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('required')\">Please enter close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('confirm')\">Close time is not be less then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Opportunity Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_start_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_start_time').invalid\">Please enter opportunity start time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Opportunity Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('required')\">Please enter occp close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('confirm')\">Opportunity close time is not be\r\n\t\t\t\t\t\tless then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Night Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_start_time\"\r\n\t\t\t\t\t\treadonly formControlName=\"night_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_start_time').invalid\">Please enter night open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Night Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"night_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('required')\">Please enter night close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('confirm')\">Night close time is not be less\r\n\t\t\t\t\t\tthen Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { ListChargersComponent } from './list-chargers/list-chargers.component';\r\n\r\nimport { MapChargerComponent } from './map-charger/map-charger.component';\r\nimport { MapChargerDialogComponent } from './map-charger-dialog/map-charger-dialog.component';\r\nexport const TABS_MANAGE_CHARGER_ROUTES: Routes = [\r\n  { path: 'map', component: MapChargerComponent },\r\n  { path: 'list', component: ListChargersComponent },\r\n  { path: 'map-charger-dialog', component: MapChargerDialogComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargingStationCrudComponent } from './charging-station-crud/charging-station-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './charging-station-crud/routes';\r\nimport { ManageChargersComponent } from './manage-chargers/manage-chargers.component';\r\nimport { TABS_MANAGE_CHARGER_ROUTES } from './manage-chargers/routes';\r\nimport { ViewDetailsComponent } from './view-details/view-details.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes: Routes = [\r\n    // { path : 'create', component : CreateComponent},\r\n    // { path : 'edit/:id', component : EditComponent},\r\n    // { path : 'list', component : ListComponent},\r\n    // { path : '', redirectTo : 'list',pathMatch:'full'},\r\n    { path: 'crud', component: ChargingStationCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES },\r\n    { path: 'manageChargers', component: ManageChargersComponent, children: TABS_MANAGE_CHARGER_ROUTES },\r\n    { path: 'viewDetails', component: ViewDetailsComponent },\r\n    { path: '', redirectTo: 'crud', pathMatch: 'full' }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ChargingStationRoutingModule { }","\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../../action-dialog/action-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { AddChargerDialogComponent } from '../../add-charger-dialog/add-charger-dialog.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerLogSharedDialogComponent } from 'app/shared/components/charger-log-shared-dialog/charger-log-shared-dialog.component';\r\nimport { MapChargerDialogComponent } from '../map-charger-dialog/map-charger-dialog.component';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport class Charger {\r\n  id: string;\r\n  name: string;\r\n  serial_no: string;\r\n  batch_id: number;\r\n  station_id: number;\r\n  current_version_id: number;\r\n  no_of_guns: number;\r\n  Address: string;\r\n  Lat: number;\r\n  Lng: number;\r\n  OTA_Config: string;\r\n  Periodic_Check_Ref_Time: string;\r\n  Periodicity_in_hours: number;\r\n  When_to_Upgrade: string;\r\n  Upgrade_Specific_Time: number;\r\n  is_available: number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  availableString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list-chargers',\r\n  templateUrl: './list-chargers.component.html',\r\n  styleUrls: ['./list-chargers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListChargersComponent implements OnInit {\r\n  filterEntity: Charger;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [\r\n    'serial_no',\r\n    'name',\r\n    'station_name',\r\n    'version_name',\r\n    'no_of_guns',\r\n    'Address',\r\n    'Lat',\r\n    'Lng',\r\n    'is_available',\r\n    'status',\r\n    'action'\r\n  ];\r\n  dataSource: MatTableDataSource<Charger>;\r\n\r\n  chargers: Charger[];\r\n  stationDetails: any;\r\n  localStorage: any;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  selection = new SelectionModel<Charger>(true, []);\r\n  station: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private chargerService: ChargerService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.station = JSON.parse(this.route.snapshot.paramMap.get('station'));\r\n    this.stationDetails = JSON.parse(localStorage.getItem('station'));\r\n\r\n\r\n    this.getChargersByMappedStationId(this.stationDetails.id);\r\n    this.filterEntity = new Charger();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = !!this.dataSource ? this.dataSource.data.length : 0;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Charger): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\r\n  }\r\n\r\n  getChargersByMappedStationId(stationId) {\r\n    //\r\n    this.chargerService.getChargersByMappedStationId(stationId).subscribe(\r\n      (data: any) => {\r\n        \r\n        if (data != null) {\r\n          this.chargers = data.data;\r\n          for (var i = 0; i < this.chargers.length; i++) {\r\n            if (this.chargers[i].status == 'N') {\r\n              this.chargers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.chargers[i].statusString = 'Active';\r\n            }\r\n            if (this.chargers[i].is_available == 0) {\r\n              this.chargers[i].availableString = 'No';\r\n            } else {\r\n              this.chargers[i].availableString = 'yes';\r\n            }\r\n\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.chargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n\r\n    this.chargerService.delete(id).subscribe(\r\n      (data: any) => {\r\n\r\n        this.getChargersByMappedStationId(this.stationDetails.id);\r\n        this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  removeChargerFromStation(data) {\r\n\r\n    let params: any = {\r\n      id: data.map_id,\r\n      charger_id: data.charger_id,\r\n      station_id: this.stationDetails.id,\r\n      modify_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n\r\n    // if(this.isEditMode){\r\n\r\n    // }else{\r\n    //   \r\n    //;\r\n    this.chargerService.removeChargerFromStation(params).subscribe(\r\n      (data: any) => {\r\n        //\r\n        this.snackBar.open(MessageConstant.ChargerRemoved, 'Dismiss', { duration: 5000 });\r\n        // this.router.navigate(['/chargingStation/manageChargers/list']);\r\n        this.getChargersByMappedStationId(this.stationDetails.id);\r\n      },\r\n      (err) => {\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n    // }\r\n\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(MapChargerDialogComponent, {\r\n      width: '1200px',\r\n\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n\r\n  addChargerDialog(data) {\r\n\r\n\r\n    let params = {\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddChargerDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n\r\n  manageCharger(data) {\r\n\r\n    this.router.navigate(['/chargingStation/manageChargers', { station: data }]);\r\n  }\r\n\r\n  openDialogChargerDetails(data) {\r\n\r\n\r\n    let params = {\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ChargerLogSharedDialogComponent, {\r\n      width: '1600px',\r\n      height: '500px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      //this.getChargersByMappedStationId(this.stationDetails.id);\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" matSort>\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Serial No\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Station\" [(ngModel)]=\"filterEntity.station_name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.station_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"version_name\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Current Version \" [(ngModel)]=\"filterEntity.version_name\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.version_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"no_of_guns\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"No Of Guns \" [(ngModel)]=\"filterEntity.no_of_guns\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.no_of_guns}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Address\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Address\" [(ngModel)]=\"filterEntity.address1\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.address1}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Lat\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Lat\" [(ngModel)]=\"filterEntity.Lat\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Lat}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Lng\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Lng\" [(ngModel)]=\"filterEntity.Lng\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Lng}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"is_available\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Available\" [(ngModel)]=\"filterEntity.availableString\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.availableString}}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix>search</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Charger Logs\" (click)=\"openDialogChargerDetails(element)\"\r\n                            style=\"cursor:pointer\">assessment</mat-icon>\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"removeChargerFromStation(element)\"\r\n                            style=\"cursor:pointer\">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"label_serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Serial No </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_charger_batch_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Batch </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Station </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_version_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Current Version </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_no_of_guns\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> No Of Guns </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_Address\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_Lat\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Lat </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_Lng\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Lng </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_is_available\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Available </th>\r\n\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"label_status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\r\n\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"label_action\">\r\n                    <th mat-header-cell *matHeaderCellDef > Action </th>\r\n\r\n                </ng-container>\r\n                <tr mat-header-row\r\n                    *matHeaderRowDef=\"['label_serial_no','label_name','label_station_name','label_version_name', 'label_no_of_guns','label_Address','label_Lat','label_Lng','label_is_available','label_status','label_action']\">\r\n                </tr>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-map-charger',\r\n  templateUrl: './map-charger.component.html',\r\n  styleUrls: ['./map-charger.component.scss'],\r\n  providers:[GeoLocationService]\r\n})\r\nexport class MapChargerComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  status = false;\r\n  stationDetails : any;\r\n  isEditMode = false; \r\n  mapDetails : any;\r\n  \r\n  mLat: any;\r\n  mLong:any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private snackBar: MatSnackBar,public dialog : MatDialog,private router : Router,\r\n    public geoLocationService:GeoLocationService,public countryService: CountriesService) {  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.stationDetails = JSON.parse( localStorage.getItem('station'));\r\n    \r\n    // this.stationDetails = this.route.snapshot.paramMap.get('station');\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', ],\r\n      serialNo: ['', [Validators.required]],\r\n      station: [{value : '',disabled:true}, ],\r\n      noOfGuns: ['', [Validators.required]],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:[''],\r\n      lat: ['', ],\r\n      long: ['', ],\r\n      isAvailable: ['', [Validators.required]],\r\n    });\r\n   \r\n    this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n     //this.getCountry();\r\n    // this.getAllCountry();\r\n    // this.getAllState();\r\n     //this.getAllCity();\r\n  }\r\n\r\n\r\n\r\n  getBatches(){\r\n    this.chargerBatchService.getChargerBatches().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.batches = data;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getStations(){\r\n    \r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        // \r\n        this.stations = data.data;\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getChargerBySerialNo(){\r\n    let params = {\r\n      srNo : this.form.value.serialNo.trim(),\r\n      station_id : this.stationDetails.id\r\n    }\r\n    // let srNo = this.form.value.serialNo.trim();\r\n//\r\n    this.chargerService.getChargerBySerialNo(params).subscribe(\r\n      (data:any)=>{\r\n        //\r\n        this.form.reset();\r\n        if(data.length>0){\r\n          this.mapDetails = data[0];\r\n          \r\n          if(this.mapDetails.map_id > 0 && this.mapDetails.map_status != 'D' ){\r\n            this.isEditMode=true;\r\n            this.snackBar.open(MessageConstant.chargerAlMapped, 'Dismiss', { duration: 3000 });\r\n\r\n          }else{\r\n            this.isEditMode=false;\r\n            this.assignValues(this.mapDetails);\r\n            this.getAllCountry();\r\n            this.getAllState();\r\n            this.getAllCity();\r\n          }\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.name);\r\n    this.form.get('serialNo').setValue(params.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.no_of_guns); \r\n  \r\n    this.form.get('lat').setValue(this.stationDetails.lat); \r\n    this.form.get('long').setValue(this.stationDetails.lng); \r\n    this.form.get('addressLine1').setValue(this.stationDetails.address1); \r\n    this.form.get('addressLine2').setValue(this.stationDetails.address2); \r\n    this.form.get('pincode').setValue(this.stationDetails.PIN);\r\n    this.form.get('landmark').setValue(this.stationDetails.landmark);\r\n    this.form.get('city').setValue(this.stationDetails.city_name);\r\n    this.form.get('state').setValue(this.stationDetails.state_name);\r\n    this.form.get('country').setValue(this.stationDetails.country_name);\r\n    const toSelect = this.stations.find(c => c.id == this.stationDetails.id);\r\n    this.form.get('station').setValue(toSelect.id);\r\n  \r\n    this.status = params.status == 'Y' ? true : false;\r\n    this.isAvailable = params.is_available == 1 ? true : false;\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    let formValues = this.form.value;\r\n    \r\n    let params:any = {\r\n      charger_id : this.mapDetails.id , \r\n      station_id : this.stationDetails.id , \r\n      name :formValues.name, \r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      landmark:formValues.landmark,\r\n      country:formValues.country.id,\r\n      state:formValues.state.id,\r\n      city:formValues.city.id,\r\n      PIN :formValues.pincode ,\r\n      lat :formValues.lat, \r\n      lang :formValues.long,\r\n      is_available :this.isAvailable, \r\n      status :'Y' ,\r\n    }\r\n\r\n    if (this.isEditMode){\r\n      params.id = this.stationDetails.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n    \r\n    \r\n\r\n    if(this.isEditMode){\r\n\r\n    }else{\r\n      \r\n      this.chargerService.addChargerToStation(params).subscribe(\r\n        (data:any )=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/chargingStation/crud/list']);\r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.stationDetails.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.countries = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.stationDetails.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.states = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(!this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.stationDetails.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.cities = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n    \r\n    \r\n  \r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n \r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\t\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('long').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('long').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Serial No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"serialNo\" (change)=\"getChargerBySerialNo()\" required\r\n          autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('serialNo').invalid\">Please enter serial no\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" required autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Station</mat-label>\r\n        <mat-select formControlName=\"station\" readonly>\r\n          <mat-option *ngFor=\"let option of stations\" [value]=\"option.id\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>No Of Guns</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly>\r\n        <mat-error *ngIf=\"form.get('noOfGuns').invalid\">Please enter no of guns\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n        <mat-label>Latitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"lat\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"17\" class=\"pr-4\">\r\n        <mat-label>Longitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"long\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('long').invalid\">Please enter longitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly>\r\n        <mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" readonly>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" readonly>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" readonly>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" readonly>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div fxFlex=\"67\" fxFlex.lt-sm=\"100\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n          (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n          {{isAvailable ? 'Available' : 'Unavailable'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n        routerLink=\"/chargingStation/manageChargers/list\">Cancel</button>\r\n\r\n    </div>\r\n\r\n  </form>\r\n</div>","import {Component,OnInit} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-chargers',\r\n  templateUrl: './manage-chargers.component.html',\r\n  styleUrls: ['./manage-chargers.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ManageChargersComponent implements OnInit {\r\n   // Nav bar demo\r\n   tabLinks = [\r\n    { label: 'Chargers', link: 'list'},\r\n    { label: 'Add New', link: 'map' }\r\n  ];\r\n\r\n  constructor(private route : ActivatedRoute){\r\n    this.route;\r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n    \r\n  }\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">Manage Charger\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ChargingStationRoutingModule } from './charging-station-routing.module';\r\nimport { ChargingStationCrudComponent } from './charging-station-crud/charging-station-crud.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { AddChargerDialogComponent } from './add-charger-dialog/add-charger-dialog.component';\r\nimport { ManageChargersComponent } from './manage-chargers/manage-chargers.component';\r\n// import { ListComponent } from './manage-chargers/list/list.component';\r\nimport { MapChargerComponent } from './manage-chargers/map-charger/map-charger.component';\r\nimport { ListChargersComponent } from './manage-chargers/list-chargers/list-chargers.component';\r\nimport{MapChargerDialogComponent} from './manage-chargers/map-charger-dialog/map-charger-dialog.component';\r\nimport{ViewDetailsComponent} from './view-details/view-details.component';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { MultiChargerDialogComponent } from './multi-charger-dialog/multi-charger-dialog.component';\r\nconst COMPONENTS =[CreateComponent,ListComponent,ChargingStationCrudComponent,ViewDetailsComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,AddChargerDialogComponent,MapChargerDialogComponent,ViewDialogComponent,MultiChargerDialogComponent];\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\n@NgModule({\r\n    imports:[SharedModule, ChargingStationRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC, ManageChargersComponent, ListComponent, MapChargerComponent, ListChargersComponent],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargingStationModule{}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n//import { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charging-station-crud',\r\n  templateUrl: './charging-station-crud.component.html',\r\n  styleUrls: ['./charging-station-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargingStationCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Charging Stations', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n    //\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"chargingStation\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"chargingStations\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Charging Stations', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/chargingStation/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\n\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe,GeoLocationService]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  cpos:any;\r\n  location_types:any;\r\n  register_types:any;\r\n  electricity_lines:any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  filteredOptionsLocationType: Observable<any[]>;\r\n  filteredOptionsElectricityLine: Observable<any[]>;\r\n  filteredOptionsRegisterAs: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  mLat: any;\r\n  mLong:any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder,private dateService: DateService, private snackBar: MatSnackBar,\r\n    private cpoService : CpoService,private chargingStationService : ChargingStationService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,public dialog : MatDialog,\r\n    private datePipe: DatePipe,public geoLocationService:GeoLocationService,public countryService: CountriesService) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.setCurrentLocation();\r\n   \r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      cpo: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      code: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n     \r\n      lat: ['', [Validators.required]],\r\n      lng: ['', [Validators.required]],\r\n      location_type: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      cp_name: ['', [Validators.required]],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      commissioned_dt: ['', [Validators.required]],\r\n      register_as: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      electricity_line: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      oTime: ['', [Validators.required]],\r\n      cTime: ['', [Validators.required]],\r\n      addressLine1:['', [Validators.required]],\r\n      addressLine2:['', [Validators.required]],\r\n      landmark:['', [Validators.required]],\r\n      city:['',[autocompleteObjectValidator(),Validators.required]],\r\n      state:['',[autocompleteObjectValidator(),Validators.required]],\r\n      country:['',[autocompleteObjectValidator(),Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      oppo_start_time: ['', [Validators.required]],\r\n      oppo_end_time: ['', [Validators.required]],\r\n      night_start_time: ['', [Validators.required]],\r\n      night_end_time: ['', [Validators.required]],\r\n    });\r\n\r\n    this.getCpos();\r\n    this.getLocationTypes();\r\n    this.getRegisterTypes();\r\n    this.getElectricityLines();\r\n    //this.getRegisterTypes();\r\n    //this.filteredOption();\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n     this.getAllCity(this.params.data.state_id);\r\n  \r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n  private setCurrentLocation() {\r\n    this.geoLocationService.getPosition().subscribe(\r\n      (pos: any) => {\r\n        this.mLat = +(pos.coords.latitude);\r\n        this.mLong = +(pos.coords.longitude); \r\n          // this.coordinates = {\r\n          //   latitude:  +(pos.coords.latitude),\r\n          //   longitude: +(pos.coords.longitude)\r\n          // };\r\n         // this.form.get('lat').setValue( this.mLat);\r\n         // this.form.get('lng').setValue(this.mLong);\r\n      });\r\n     \r\n   \r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getCpos(){\r\n    \r\n    this.cpoService.getactivecposcw(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        \r\n\r\n        this.cpos = data;\r\n\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.cpos.find(c => c.id == this.params.data.cpo_id);\r\n          this.form.get('cpo').setValue(toSelect);\r\n          this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCPO(name) : this.cpos)\r\n          );\r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n  getLocationTypes(){\r\n    \r\n    this.chargingStationService.getLocationTypes().subscribe(\r\n      (data:any)=>{\r\n        this.location_types = data;\r\n          if(this.isEditMode){\r\n            const toSelect = this.location_types.find(c => c.id == this.params.data.location_type_id);\r\n              this.form.get('location_type').setValue(toSelect);\r\n              this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n              .pipe(\r\n                startWith(''),\r\n                map(value => typeof value === 'string' ? value : value.name),\r\n                map(name => name ? this._filterLocationType(name) : this.location_types)\r\n             );\r\n            }\r\n        }\r\n    )\r\n    // this.location_types = this.chargingStationService.getLocationTypes();\r\n    // this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    // );\r\n   \r\n  }\r\n  getRegisterTypes(){\r\n    this.chargingStationService.getRegisterTypes().subscribe(\r\n      (data:any)=>{\r\n      this.register_types = data;\r\n      if(this.isEditMode){\r\n      \r\n        const toSelect = this.register_types.find(c => c.id == this.params.data.register_as_id);\r\n        this.form.get('register_as').setValue(toSelect);\r\n        this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n      }\r\n  \r\n    }\r\n    )\r\n    // this.register_types =  this.chargingStationService.getRegisterTypes();\r\n    // this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n    // .pipe(\r\n    //   startWith(''),\r\n    //   map(value => typeof value === 'string' ? value : value.name),\r\n    //   map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n    // );\r\n\r\n  }\r\n  getElectricityLines(){\r\n    this.chargingStationService.getElectricityLines().subscribe(\r\n      (data:any)=>{\r\n      this.electricity_lines = data;\r\n      if(this.isEditMode){\r\n      \r\n        const toSelect = this.electricity_lines.find(c => c.id == this.params.data.electricity_line_id);\r\n        this.form.get('electricity_line').setValue(toSelect);\r\n        this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n          );\r\n      }\r\n    }\r\n    )\r\n    //this.electricity_lines = this.chargingStationService.getElectricityLines();\r\n    \r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n  let params : any = {\r\n    cpo_id : formValues.cpo.id,\r\n    name :formValues.name, \r\n    code :formValues.code, \r\n    description :formValues.description, \r\n  \r\n    lat :formValues.lat ,\r\n    lng :formValues.lng ,\r\n    location_type_id :formValues.location_type.id ,\r\n    cp_name :formValues.cp_name ,\r\n    mobile :formValues.mobile ,\r\n    email :formValues.email ,\r\n    address1 :formValues.addressLine1,\r\n    address2 :formValues.addressLine2,\r\n    PIN: formValues.pincode,\r\n    landmark: formValues.landmark,\r\n    city_id : formValues.city.id,\r\n    state_id : formValues.state.id,\r\n    country_id : formValues.country.id, \r\n    commissioned_dt : this.datePipe.transform(formValues.commissioned_dt,\"yyyy-MM-dd\")  ,\r\n    register_as :formValues.register_as.id ,\r\n    electricity_line_id :formValues.electricity_line.id,\r\n    o_time :formValues.oTime ,\r\n    c_time :formValues.cTime ,\r\n\r\n    status : this.status == true ? 'Y' : 'N'\r\n  }\r\n\r\n// tslint:disable-next-line: no-//\r\n\r\n  if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n  if (this.isEditMode){\r\n    this.chargingStationService.update(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.chargingStationService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open(MessageConstant.chargerStationCreate, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    let tempOppStart = params.data.oppo_start_time.substring(0,5);\r\n    let tempOppEnd = params.data.oppo_end_time.substring(0,5);\r\n    \r\n    let tempNightStart = params.data.night_start_time.substring(0,5);\r\n    let tempNightEnd = params.data.night_end_time.substring(0,5);\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('lat').setValue(params.data.lat);\r\n    this.form.get('lng').setValue(params.data.lng);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('commissioned_dt').setValue(params.data.commissioned_dt);\r\n    this.form.get('oTime').setValue(params.data.o_time);\r\n    this.form.get('cTime').setValue(params.data.c_time);\r\n    this.form.get('oppo_start_time').setValue(tempOppStart);\r\n    this.form.get('oppo_end_time').setValue(tempOppEnd);\r\n    \r\n\r\n    this.form.get('night_start_time').setValue(tempNightStart);\r\n    this.form.get('night_end_time').setValue(tempNightEnd);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  filteredOption(){\r\n    this.filteredOptionsCPO = this.form.controls.cpo.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCPO(name) : this.cpos)\r\n    );\r\n    this.filteredOptionsLocationType = this.form.controls.location_type.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterLocationType(name) : this.location_types)\r\n    );\r\n    this.filteredOptionsElectricityLine = this.form.controls.electricity_line.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterElectrictyLine(name) : this.electricity_lines)\r\n        );\r\n        this.filteredOptionsRegisterAs = this.form.controls.register_as.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRegisterAs(name) : this.register_types)\r\n        );\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayLocationType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayRegisterAs(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayElectricityLine(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpos.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterLocationType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.register_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterRegisterAs(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.location_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterElectrictyLine(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.electricity_lines.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n\t\r\n\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('lng').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('lng').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Charging Station</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t\t<input type=\"text\" readonly matInput formControlName=\"cpo\" [matAutocomplete]=\"cpoAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cpoAuto=\"matAutocomplete\" [displayWith]=\"displayCPO\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cpo').invalid\">Please select CPO</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly autocomplete=\"off\" maxlength=\"50\" formControlName=\"name\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"code\" maxlength=\"20\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"description\" maxlength=\"200\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Latitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"lat\" required>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Longitude</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"lng\" required>\r\n\t\t\t\t\t<mat-icon matSuffix>location_on</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('lng').invalid\">Please enter longitude</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Location Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"location_type\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"locationTypeAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #locationTypeAuto=\"matAutocomplete\" [displayWith]=\"displayLocationType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsLocationType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('location_type').invalid\">Please select location type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Contact Person Name</mat-label>\r\n\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person name\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character is not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"mobile\" type=\"number\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"email\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email id</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email id </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"addressLine1\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"addressLine2\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line </mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\r\n\t\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\t\trequired>\r\n\t\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t\t<input readonly matInput placeholder=\" \" formControlName=\"landmark\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Commissioned Date</mat-label>\r\n\t\t\t\t\t<input readonly matInput [matDatepicker]=\"dp3\" formControlName=\"commissioned_dt\" disabled required>\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('commissioned_dt').invalid\">Please enter commissioned date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Register As</mat-label>\r\n\t\t\t\t\t<input readonly type=\"text\" matInput formControlName=\"register_as\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"registerAsAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #registerAsAuto=\"matAutocomplete\" [displayWith]=\"displayRegisterAs\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRegisterAs | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('register_as').invalid\">Please select register as\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Electricity Line</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"electricity_line\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"electricityLineAuto\" required>\r\n\t\t\t\t\t<mat-autocomplete #electricityLineAuto=\"matAutocomplete\" [displayWith]=\"displayElectricityLine\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsElectricityLine | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\t\tmatTooltip=\"Please enter electricity line\">help</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('electricity_line').invalid\">Please select electricity line\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Open Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"oTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<!-- <input matInput [ngxTimepicker]=\"picker\">\r\n\t\t\t\t\t<ngx-material-timepicker #picker></ngx-material-timepicker> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"oTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oTime').invalid\">Please enter open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Close Time</mat-label>\r\n\t\t\t\t\t<!-- <input matInput placeholder=\"\" formControlName=\"cTime\"\r\n\t\t\t\t\t\t\trequired> -->\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"cTime\" readonly\r\n\t\t\t\t\t\tformControlName=\"cTime\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #cTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('required')\">Please enter close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cTime').hasError('confirm')\">Close time is not be less then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Opportunity Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_start_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_start_time').invalid\">Please enter opportunity start time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Opportunity Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"oppo_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"oppo_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #oppo_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\"\r\n\t\t\t\t\t\tmatTooltip=\"Please enter occp close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('required')\">Please enter occp close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('oppo_end_time').hasError('confirm')\">Opportunity close time is not be\r\n\t\t\t\t\t\tless then Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"15\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Night Start Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_start_time\"\r\n\t\t\t\t\t\treadonly formControlName=\"night_start_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_start_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter open time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_start_time').invalid\">Please enter night open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Night Close Time</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" aria-label=\"Editable dial\" [ngxTimepicker]=\"night_end_time\" readonly\r\n\t\t\t\t\t\tformControlName=\"night_end_time\" [format]=\"24\" required>\r\n\t\t\t\t\t<ngx-material-timepicker #night_end_time [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('required')\">Please enter night close time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('night_end_time').hasError('confirm')\">Night close time is not be less\r\n\t\t\t\t\t\tthen Open time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, ViewChild,Inject } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ChargerBatchService } from 'app/shared/services/charger-batch/charger-batch.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { VersionService } from 'app/shared/services/version/version.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport{GeoLocationService} from 'app/shared/services/map/geo-location.service';\r\nimport { MapDialogComponent } from 'app/shared/components/map-dialog/map-dialog.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-map-charger-dialog',\r\n  templateUrl: './map-charger-dialog.component.html',\r\n  styleUrls: ['./map-charger-dialog.component.scss'],\r\n  providers:[GeoLocationService]\r\n})\r\nexport class MapChargerDialogComponent implements OnInit {\r\n \r\n  params: any;\r\n  form: FormGroup;\r\n  batches:any;\r\n  stations:any;\r\n  versions :any;\r\n  isAvailable = false;\r\n  localStorage : any;\r\n  status = false;\r\n  stationDetails : any;\r\n  isEditMode = false; \r\n  mapDetails : any;\r\n  mLat: any;\r\n  mLong:any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  stateName:any;\r\n  cities:any;\r\n  countries:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n  constructor(private fb: FormBuilder, \r\n    private chargerBatchService : ChargerBatchService, private chargingStationService : ChargingStationService, \r\n    private versionService : VersionService, private chargerService : ChargerService,\r\n    private snackBar: MatSnackBar, public dialogRef: MatDialogRef<MapChargerDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,public dialog : MatDialog,\r\n    private router : Router,private route : ActivatedRoute,public geoLocationService:GeoLocationService,public countryService: CountriesService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.stationDetails = JSON.parse( localStorage.getItem('station'));\r\n    // this.stationDetails = this.route.snapshot.paramMap.get('station');\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', ],\r\n      serialNo: ['', [Validators.required]],\r\n      station: [{value : '',disabled:true}, ],\r\n      noOfGuns: ['', [Validators.required]],\r\n      \r\n      lat: ['', ],\r\n      long: ['', ],\r\n      isAvailable: ['', [Validators.required]],\r\n      addressLine1:[''],\r\n      addressLine2:[''],\r\n      landmark:[''],\r\n      city:[''],\r\n      state:[''],\r\n      country:[''],\r\n      pincode:['']\r\n    });\r\n   \r\n    this.getBatches();\r\n    this.getStations();\r\n    this.getVersions();\r\n    //this.getCountry();\r\n    //this.getAllCountry();\r\n    //this.getAllState();\r\n    //this.getAllCity();\r\n   // this.mapDetails = this.params.data.map_id;\r\n    this.getChargerBySerialNo();\r\n    // if (this.isEditMode){\r\n    //   this.assignValues(this.params);\r\n    // }\r\n   \r\n  }\r\n\r\n\r\n\r\n  getBatches(){\r\n    this.chargerBatchService.getChargerBatches().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.batches = data;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getStations(){\r\n    this.chargingStationService.getChargingStations().subscribe(\r\n      (data:any)=>{\r\n        // \r\n        this.stations = data.data;\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getVersions(){\r\n    this.versionService.getVersions().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.versions = data;\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getChargerBySerialNo(){\r\n    let params = {\r\n      srNo : this.params.data.serial_no,\r\n      station_id : this.stationDetails.id\r\n    }\r\n    // let srNo = this.form.value.serialNo.trim();\r\n\r\n    this.chargerService.getChargerBySerialNo(params).subscribe(\r\n      (data:any)=>{\r\n        this.form.reset();\r\n        if(data.length>0){\r\n          this.mapDetails = data[0];\r\n            this.isEditMode=true;\r\n            this.getAllCountry(); \r\n            this.getAllState();\r\n            this.getAllCity();\r\n           \r\n          \r\n            this.assignValues(this.mapDetails);\r\n           \r\n         \r\n        }\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.name);\r\n    this.form.get('serialNo').setValue(params.serial_no); \r\n    this.form.get('noOfGuns').setValue(params.no_of_guns); \r\n    this.form.get('addressLine1').setValue(params.address1); \r\n    this.form.get('addressLine2').setValue(params.address2); \r\n    this.form.get('pincode').setValue(params.PIN);\r\n    this.form.get('landmark').setValue(params.landmark);\r\n    this.form.get('city').setValue(params.city);\r\n    this.form.get('state').setValue(params.state);\r\n    this.form.get('country').setValue(params.country);\r\n    this.form.get('lat').setValue(params.Lat); \r\n    this.form.get('long').setValue(params.Lng); \r\n\r\n    //const toSelect = this.stations.find(c => c.id == this.stationDetails.id);\r\n    this.form.get('station').setValue( this.stationDetails.id);\r\n  \r\n    this.status = params.status == 'Y' ? true : false;\r\n    this.isAvailable = params.is_available == 1 ? true : false;\r\n  }\r\n  onYesClick(){\r\n    this.onSubmit();\r\n  }\r\n\r\n  onSubmit(){\r\n    let formValues = this.form.value;\r\n    \r\n    let params:any = {\r\n      charger_id : this.mapDetails , \r\n      station_id : this.stationDetails.id , \r\n      name :formValues.name, \r\n      address1 :formValues.addressLine1,\r\n      address2 :formValues.addressLine2,\r\n      landmark:formValues.landmark,\r\n      country:formValues.country.id,\r\n      state:formValues.state.id,\r\n      city:formValues.city.id,\r\n      PIN :formValues.pincode ,\r\n      Lat :formValues.lat, \r\n      Lng :formValues.long,\r\n      is_available :this.isAvailable, \r\n      status :'Y' ,\r\n    }\r\n\r\n    if (this.isEditMode){\r\n      params.id = this.stationDetails.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n    \r\n    \r\n\r\n    if(this.isEditMode){\r\n      this.router.navigate(['/chargingStation/manageChargers/list']);\r\n    }else{\r\n      \r\n      this.chargerService.addChargerToStation(params).subscribe(\r\n        (data:any )=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/chargingStation/manageChargers/list']);\r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  updateAvailable(event){\r\n    this.isAvailable = event.checked;\r\n    this.toggleAvailable.checked = this.isAvailable;\r\n  }\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.countries = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.mapDetails.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n         \r\n          this.countries = this.form.controls.country.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.mapDetails.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.states = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n      \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.mapDetails.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.cities = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n       \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonCountryChange(event){\r\n  this.countries = [];\r\n  this.getAllCountry();\r\n  this.getStatesByCountry(event);\r\n  \r\n \r\n  //this.form.get('pincode').setValue( \"\");\r\n  this.form.get('state').setValue( \"\");\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetStatesByCountry(state){\r\n   this.state_id = state.id;\r\n   this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n    (statedata:any)=>{\r\n      //this.form.reset();\r\n      this.states = statedata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionState = this.form.controls.state.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterState(name) : this.states)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\nonStateChange(event){\r\n  this.getCitiesByStates(event);\r\n  this.getCountryByState(event);\r\n  this.form.get('city').setValue( \"\");\r\n}\r\ngetCitiesByStates(stateId){\r\n  this.state_id = stateId.id;\r\n   this.countryService.getCityByState(this.state_id ).subscribe(\r\n    (citiesdata:any)=>{\r\n      //this.form.reset();\r\n      this.cities = citiesdata;\r\n     // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n     // this.form.get('state').setValue(toSelect);\r\n      \r\n      this.filteredOptionCity = this.form.controls.city.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCity(name) : this.cities)\r\n      );\r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n  )\r\n}\r\ngetCountryByState(stateId){\r\n  this.state_id = stateId.id;\r\n  this.countryService.getCountryByState(this.state_id ).subscribe(\r\n    (countrydata:any)=>{\r\n      //this.form.reset();\r\n      this.countries = countrydata;\r\n      const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n      this.form.get('country').setValue(toSelect);\r\n      \r\n      this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCountry(name) : this.countries)\r\n      );\r\n     \r\n   },(err)=>{\r\n     \r\n   }\r\n )\r\n}\r\ndisplayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\ndisplayState(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterState(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n\r\ndisplayCity(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n}\r\nprivate _filterCity(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n}\r\n \r\n  getLatLong(){\r\n    let params = {\r\n    }\r\n    const dialogRef = this.dialog.open(MapDialogComponent, {\r\n      width: '700px',\r\n      height:'410px',\r\n      data: params\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != null || result != undefined){\r\n        this.form.get('lat').setValue(result[0].lat);\r\n        this.form.get('long').setValue(result[0].lng);\r\n      }else{\r\n        this.form.get('lat').setValue(this.mLat);\r\n        this.form.get('long').setValue(this.mLong);\r\n        this.snackBar.open(MessageConstant.customLocationMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n     \r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n    name=\"form\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Serial No</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"serialNo\" (change)=\"getChargerBySerialNo()\" required\r\n          autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('serialNo').invalid\">Please enter serial no\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" required autocomplete=\"off\">\r\n        <mat-error *ngIf=\"form.get('name').invalid\">Please enter name\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Station</mat-label>\r\n        <mat-select formControlName=\"station\" readonly>\r\n          <mat-option *ngFor=\"let option of stations\" [value]=\"option.id\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>No Of Guns</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"noOfGuns\" readonly>\r\n        <mat-error *ngIf=\"form.get('noOfGuns').invalid\">Please enter no of guns\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"16\" class=\"pr-4\">\r\n        <mat-label>Latitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"lat\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('lat').invalid\">Please enter latitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"17\" class=\"pr-4\">\r\n        <mat-label>Longitude</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"long\" readonly>\r\n        <mat-icon matSuffix>location_on</mat-icon>\r\n        <mat-error *ngIf=\"form.get('long').invalid\">Please enter longitude\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" readonly>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly>\r\n        <mat-error *ngIf=\"form.get('pincode').invalid\">Please enter pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" readonly>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" readonly>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" [matAutocomplete]=\"countryAuto\" readonly>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" readonly>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div fxFlex=\"67\" fxFlex.lt-sm=\"100\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"isAvailable\"\r\n          (change)=\"updateAvailable($event)\" #toggleAvailable>\r\n          {{isAvailable ? 'Available' : 'Unavailable'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button> -->\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\r\n    </div>\r\n\r\n  </form>\r\n</div>"],"sourceRoot":"webpack:///"}