{"version":3,"sources":["webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/EV-dealership-franchise-provider-routing.module.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/action-dialog/action-dialog.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/action-dialog/action-dialog.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/view-dialog/view-dialog.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/view-dialog/view-dialog.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/list/list.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/list/list.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/moderate-list/moderate-list.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/moderate-list/moderate-list.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/create/create.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/create/create.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/EV-dealership-franchise-provider.module.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/EV-dealership-franchise-provider-crud/routes.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/EV-dealership-franchise-provider-crud/EV-dealership-franchise-provider-crud.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-dealership-franchise-provider/EV-dealership-franchise-provider-crud/EV-dealership-franchise-provider-crud.component.html"],"names":["routes","path","component","canActivate","children","EVDealershipFranchiseProviderRoutingModule","forChild","imports","exports","autocompleteObjectValidator","control","value","ActionDialogComponent","fb","evDelarsService","snackBar","countryService","evBatteriesService","dialogRef","data","isEditMode","status","isAvailable","isDirty","validatingForm","initialize","localStorage","JSON","parse","getItem","menuArray","params","action","form","group","company_name","required","pattern","deal_id","website","cp_name","email","mobile","addressLine1","addressLine2","pincode","city","state","country","landmark","remarks","assignValues","getAllCountry","getAllState","country_id","getAllCity","state_id","getFranchaise","subscribe","resp","franchise","toSelect","find","c","id","get","setValue","filteredOptionFranchaise","controls","valueChanges","pipe","_filterFranchise","err","item","filterValue","toLowerCase","filter","option","includes","countries","filteredOptionCountry","name","_filterCountry","countryID","getStateByCountry","states","filteredOptionState","_filterState","stateID","getCityByState","cities","city_id","filteredOptionCity","_filterCity","close","valid","formValues","deal_type_id","address1","address2","PIN","modifyby","userId","createdby","updateEvDealer","open","recordUpdateMessage","duration","errorMessage","createEvDealers","chargerNCreate","hasError","event","checked","ref","pin_code_id","getCountryStateByPIN","undefined","length","getCountryByState","countrydata","statedata","Citydata","getStatesByCountry","stateId","citiesdata","getCitiesByStates","closeActionPanel","getStateCountry","onCityChange","onStateChange","onCountryChange","updateStatus","onYesClick","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","toggleAvailable","ViewDialogComponent","isPublish","isModrate","buttonAction","publishEvDealer","message","modify_by","moderateEvDealer","EVDealerShip","ListComponent","evDealersService","dialog","cdr","displayedColumns","head","dealIdSearch","compNameSearch","websiteSearch","emailSearch","citySearch","stateSearch","statusSearch","getAllDealerShip","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","getPublishEvDealerListByKeys","evDealership","i","statusString","sort","detectChanges","NoRecordFoundMessage","width","panelClass","autoFocus","disableClose","afterClosed","result","visibleOption","ev","stopPropagation","city_name","state_name","exportedData","filteredData","evDealers","deal_type","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","ModerateListComponent","getAllModEvDealerShip","getModerateEvDealershipListByKeys","evModDealership","confirmDialogRef","deleteEvDealer","deleteMessage","CreateComponent","router","datePipe","getAllCities","navigate","onSubmit","$event","preventDefault","COMPONENTS","COMPONENTS_DYNAMIC","EVChargingStationFranchiseModule","declarations","entryComponents","TABS_DEMO_ROUTES","redirectTo","pathMatch","EVDealershipFranchiseProviderCrudComponent","_utilityService","tabLinks","label","link","tempLinks","activeMenuItems$","menuItemSelecte","title","nav_list","nav_list_with_tab","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent"],"mappings":"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","file":"EV-dealership-franchise-provider-EV-dealership-franchise-provider-module-es5.js","sourcesContent":["import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EVDealershipFranchiseProviderCrudComponent } from './EV-dealership-franchise-provider-crud/EV-dealership-franchise-provider-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './EV-dealership-franchise-provider-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : EVDealershipFranchiseProviderCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class EVDealershipFranchiseProviderRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  menuArray: any;\r\n  filteredOptionFranchaise: Observable<any[]>;\r\n  franchise: any;\r\n  constructor(private fb: FormBuilder, private evDelarsService: EVDealersService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService, private evBatteriesService: EVBatteriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\-+ ]*$/)]],\r\n      deal_id: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      website: [''],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n    this.getFranchaise();\r\n  }\r\n  getFranchaise() {\r\n    this.evBatteriesService.getFranchaise().subscribe(\r\n      (resp: any) => {\r\n        this.franchise = resp.data;\r\n        const toSelect = this.franchise.find(c => c.id == '107');\r\n        this.form.get('deal_id').setValue(toSelect);\r\n        this.filteredOptionFranchaise = this.form.controls.deal_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(value => value ? this._filterFranchise(value) : this.franchise)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayFrancise(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  private _filterFranchise(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.franchise.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        company_name: formValues.company_name,\r\n        deal_type_id: formValues.deal_id.id,\r\n        website: formValues.website,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks: formValues.remarks,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modifyby = this.localStorage.userId;\r\n      } else {\r\n        params.createdby = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.evDelarsService.updateEvDealer(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      } else {\r\n        this.evDelarsService.createEvDealers(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('deal_id').setValue(params.data.deal_type_id);\r\n    this.form.get('company_name').setValue(params.data.company_name);\r\n    this.form.get('website').setValue(params.data.website);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\" autocomplete=\"off\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Id</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"deal_id\" type=\"number\" autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter deal id\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('deal_id').invalid\">Please enter deal id </mat-error>\r\n        </mat-form-field> -->\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"deal_id\" readonly [matAutocomplete]=\"franciseAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #franciseAuto=\"matAutocomplete\" [displayWith]=\"displayFrancise\">\r\n            <mat-option *ngFor=\"let option of filteredOptionFranchaise | async\" [value]=\"option\">\r\n              {{option.value}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          \r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Company Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" required autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"website\" autocomplete=\"off\" style=\"text-transform:none\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">account_circle\r\n          </mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" \r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isPublish: boolean = false;\r\n  isModrate: boolean = false;\r\n  menuArray: any;\r\n  filteredOptionFranchaise: Observable<any[]>;\r\n  franchise: any;\r\n  constructor(private fb: FormBuilder, private evDelarsService: EVDealersService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService, private evBatteriesService: EVBatteriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isPublish = this.params.buttonAction == 'publishAction' ? true : false; //convert moderate to publish\r\n    this.isModrate = this.params.buttonAction == 'modrateAction' ? true : false; //convert publish to moderate\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      deal_id: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      website: ['',],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n    this.getFranchaise();\r\n  }\r\n  getFranchaise() {\r\n    this.evBatteriesService.getFranchaise().subscribe(\r\n      (resp: any) => {\r\n        this.franchise = resp.data;\r\n        const toSelect = this.franchise.find(c => c.id == '107');\r\n        this.form.get('deal_id').setValue(toSelect);\r\n        this.filteredOptionFranchaise = this.form.controls.deal_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(value => value ? this._filterFranchise(value) : this.franchise)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayFrancise(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  private _filterFranchise(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.franchise.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('deal_id').setValue(params.data.deal_type_id);\r\n    this.form.get('company_name').setValue(params.data.company_name);\r\n    this.form.get('website').setValue(params.data.website);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    if (this.isPublish || this.isEditMode) {\r\n      this.status = params.data.status == 'M' ? true : false;\r\n    }\r\n    if (this.isModrate) {\r\n      this.status = params.data.status == 'Y' ? true : false;\r\n    }\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  onPublish() {\r\n    const params: any = {\r\n      id: this.params.data.id,\r\n      status: \"Y\",//this.params.data.status === \"M\" ? \"Y\" : \"N\",\r\n      modifyby: this.localStorage.userId\r\n    }\r\n    this.evDelarsService.publishEvDealer(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n\r\n  onModrate() {\r\n    const params: any = {\r\n      id: this.params.data.id,\r\n      status: \"M\",//this.params.data.status === \"Y\" ? \"M\" : \"N\",//\r\n      modify_by: this.localStorage.userId\r\n    }\r\n    this.evDelarsService.moderateEvDealer(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        } else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\" autocomplete=\"off\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Id</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"deal_id\" type=\"number\" autocomplete=\"off\" readonly>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter deal id\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('deal_id').invalid\">Please enter deal id </mat-error>\r\n        </mat-form-field> -->\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"deal_id\" readonly [matAutocomplete]=\"franciseAuto\" autocomplete=\"new-password\"\r\n            required>\r\n          <mat-autocomplete #franciseAuto=\"matAutocomplete\" [displayWith]=\"displayFrancise\">\r\n            <mat-option *ngFor=\"let option of filteredOptionFranchaise | async\" [value]=\"option\">\r\n              {{option.value}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          \r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Company Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" readonly autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"website\" autocomplete=\"off\" style=\"text-transform:none\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">account_circle\r\n          </mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" readonly\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" readonly>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isPublish\" (click)=\"onPublish()\">Publish</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModrate\" (click)=\"onModrate()\">Moderate</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\n\r\nexport class EVDealerShip {\r\n  id: string;\r\n  company_name: string;\r\n  deal_type_id: number;\r\n  deal_type:string;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: EVDealerShip;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['deal_type', 'company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Deal Type', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EVDealerShip>;\r\n\r\n  evDealership: EVDealerShip[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  dealIdSearch = false;\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n\r\n\r\n  constructor(private evDealersService: EVDealersService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllDealerShip();\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EVDealerShip();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllDealerShip() {\r\n    this.evDealersService.getPublishEvDealerListByKeys().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evDealership = resp.data;\r\n          for (var i = 0; i < this.evDealership.length; i++) {\r\n            if (this.evDealership[i].status == 'N') {\r\n              this.evDealership[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evDealership[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evDealership);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.evDealersService.deleteEvDealer(id, this.localStorage.useId).subscribe(\r\n  //         (data: any) => {\r\n  //           this.getAllDealers();\r\n  //           this.cdr.detectChanges();\r\n  //           this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n  //         }, (err) => {\r\n\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllDealerShip();\r\n    });\r\n  }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getAllDealers();\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'dealIdSearch') {\r\n      this.dealIdSearch = !this.dealIdSearch;\r\n      this.filterEntity.deal_type_id = null;\r\n    }\r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \"\";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \"\";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Deal Type': evDealers.deal_type, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Charging Station Franchise List');\r\n    XLSX.writeFile(workBook, 'EvChargingStationFranchise.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.deal_type, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Ev Charging Station Franchise List', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('EvChargingStationFranchise.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"deal_type\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dealIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Deal Type <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dealIdSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Deal Type\" [(ngModel)]=\"filterEntity.deal_type\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.deal_type}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'modrateAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\nexport class EVDealerShip {\r\n  id: string;\r\n  company_name: string;\r\n  deal_type_id: number;\r\n  deal_type:string;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-moderate-list',\r\n  templateUrl: './moderate-list.component.html',\r\n  styleUrls: ['./moderate-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class ModerateListComponent implements OnInit {\r\n\r\n  filterEntity: EVDealerShip;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['deal_type', 'company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Deal Type', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EVDealerShip>;\r\n\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  dealIdSearch = false;\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  evModDealership: any;\r\n  \r\n  constructor(private evDealersService: EVDealersService, public dialog: MatDialog,private fb: FormBuilder,private snackBar: MatSnackBar,\r\n      private cdr: ChangeDetectorRef) {\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EVDealerShip();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllModEvDealerShip();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllModEvDealerShip() {\r\n    this.evDealersService.getModerateEvDealershipListByKeys().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evModDealership = resp.data;\r\n          for (var i = 0; i < this.evModDealership.length; i++) {\r\n            if (this.evModDealership[i].status == 'N') {\r\n              this.evModDealership[i].statusString = 'InActive';\r\n            } else {\r\n              this.evModDealership[i].statusString = 'Moderate';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evModDealership);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.evDealersService.deleteEvDealer(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.getAllModEvDealerShip();\r\n              this.cdr.detectChanges();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 2000 });\r\n            }\r\n            \r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModEvDealerShip();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.cdr.detectChanges();\r\n      this.getAllModEvDealerShip();\r\n      \r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'dealIdSearch') {\r\n      this.dealIdSearch = !this.dealIdSearch;\r\n      this.filterEntity.deal_type_id = null;\r\n    }\r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \"\";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \"\";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Deal Type': evDealers.deal_type, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Dealership Franchise ModerateList');\r\n    XLSX.writeFile(workBook, 'Ev Dealership Franchise ModerateList.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.deal_type, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Ev Dealership Franchise ModerateList Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Ev Dealership Franchise ModerateList report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"deal_type\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dealIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Deal Type <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dealIdSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Deal Type\" [(ngModel)]=\"filterEntity.deal_type\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.deal_type}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Publish\" (click)=\"viewDialog('Publish',element,'publishAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  filteredOptionFranchaise: Observable<any[]>;\r\n  franchise: any;\r\n  constructor(private fb: FormBuilder, public countryService: CountriesService, private evDealersService: EVDealersService, private evBatteriesService: EVBatteriesService,\r\n    private snackBar: MatSnackBar, private router: Router, private datePipe: DatePipe,) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\-+ ]*$/)]],\r\n      deal_id: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      website: ['',],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n    this.getFranchaise();\r\n  }\r\n  getFranchaise() {\r\n    this.evBatteriesService.getFranchaise().subscribe(\r\n      (resp: any) => {\r\n        this.franchise = resp.data;\r\n        //console.log(this.franchise)\r\n        const toSelect = this.franchise.find(c => c.id == '107');\r\n        this.form.get('deal_id').setValue(toSelect);\r\n        this.filteredOptionFranchaise = this.form.controls.deal_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(value => value ? this._filterFranchise(value) : this.franchise)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayFrancise(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  private _filterFranchise(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.franchise.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        company_name: formValues.company_name,\r\n        deal_type_id: formValues.deal_id.id,\r\n        website: formValues.website,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks: formValues.remarks,\r\n        status: this.status == true ? 'M' : 'N',\r\n        createdby: this.localStorage.userId,\r\n      }\r\n      this.evDealersService.createEvDealers(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/evSpace/evDealer/evChargingStationFranchise/crud/listModerate']);\r\n          } else {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\" autocomplete=\"off\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Deal Id</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"deal_id\" type=\"number\"  autocomplete=\"off\" required>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter deal id\">model_training</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('deal_id').invalid\">Please enter deal id </mat-error>\r\n      </mat-form-field> -->\r\n    \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"deal_id\" readonly [matAutocomplete]=\"franciseAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #franciseAuto=\"matAutocomplete\" [displayWith]=\"displayFrancise\">\r\n            <mat-option *ngFor=\"let option of filteredOptionFranchaise | async\" [value]=\"option\">\r\n              {{option.value}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          \r\n        </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Company Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" required autocomplete=\"off\">\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n        <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Website</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"website\"  autocomplete=\"off\" style=\"text-transform:none\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">account_circle\r\n        </mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Contact Person Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\"   style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n          (change)=\"getStateCountry()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n        (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n         <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"countryAuto\" required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Remarks</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <div fxFlex=\"33\">\r\n        <mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement >\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/evSpace/evDealer/evChargingStationFranchise/crud/listFranchise\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EVDealershipFranchiseProviderRoutingModule } from './EV-dealership-franchise-provider-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { EVDealershipFranchiseProviderCrudComponent } from './EV-dealership-franchise-provider-crud/EV-dealership-franchise-provider-crud.component';\r\nimport { ModerateListComponent } from './moderate-list/moderate-list.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\n\r\nconst COMPONENTS = [EVDealershipFranchiseProviderCrudComponent, CreateComponent, ListComponent, ModerateListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        EVDealershipFranchiseProviderRoutingModule,\r\n        FuseSharedModule,\r\n    ],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EVChargingStationFranchiseModule { }","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ModerateListComponent } from '../moderate-list/moderate-list.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n     path : 'create', component : CreateComponent,canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listFranchise', component : ListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path : 'listModerate', component : ModerateListComponent , canActivate:[AuthGuard] \r\n  },\r\n  { \r\n    path: '', redirectTo: 'listFranchise', pathMatch: 'full' \r\n  },\r\n];\r\n","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-EV-dealership-franchise-provider-crud',\r\n  templateUrl: './EV-dealership-franchise-provider-crud.component.html',\r\n  styleUrls: ['./EV-dealership-franchise-provider-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class EVDealershipFranchiseProviderCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    { label: 'Franchise List', link: 'listFranchise' },\r\n    { label: 'Moderate List', link: 'listModerate' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    // nav_list.filter((x) => {\r\n    //   if (x.id === \"evSpace\") {\r\n    //     this.objectData = x;\r\n    //     this.objectData.children.filter((y) => {\r\n    //       if (y.id === \"evDealers\") {\r\n    //         this.objectChildData = y;\r\n    //         this.objectChildData.children.filter((z) => {\r\n    //           this.childData = z;\r\n    //           if (z.id === \"evChargingStationFranchise\") {\r\n    //             let isDefaultRoutePermeted = false;\r\n    //             this.childData.children.filter((t) => {\r\n    //               if (t.id === \"franchise\") {\r\n    //                 isDefaultRoutePermeted = true;\r\n    //                 this.tempLinks.push({ label: 'Franchise List', link: 'listFranchise' });\r\n    //               }\r\n    //               if(t.id === \"moderate\"){\r\n    //                 this.tempLinks.push({ label: 'Moderate List', link: 'listModerate' });\r\n    //               }\r\n    //               if (t.id === \"create\") {\r\n    //                 this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n    //               }\r\n    //             });\r\n    //             this.tabLinks = this.tempLinks;\r\n    //             if (!isDefaultRoutePermeted) {\r\n    //               this.router.navigate(['/evSpace/evDealer/evChargingStationFranchise/crud/' + this.tempLinks[0].link]);\r\n    //             }\r\n    //           }\r\n    //         });\r\n\r\n    //       }\r\n\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"]}