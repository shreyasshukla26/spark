{"version":3,"sources":["./src/app/main/user-management/user-role/user-role-crud/user-role-crud.component.ts","./src/app/main/user-management/user-role/user-role-crud/user-role-crud.component.html","./src/app/main/user-management/user-role/view-dialog/view-dialog.component.ts","./src/app/main/user-management/user-role/view-dialog/view-dialog.component.html","./src/app/shared/services/user/user-role.service.ts","./src/app/main/user-management/user-role/user-role.module.ts","./src/app/main/user-management/user-role/user-role-crud/routes.ts","./src/app/main/user-management/user-role/action-dialog/action-dialog.component.ts","./src/app/main/user-management/user-role/action-dialog/action-dialog.component.html","./src/app/main/user-management/user-role/create/create.component.ts","./src/app/main/user-management/user-role/create/create.component.html","./src/app/main/user-management/user-role/list/list.component.ts","./src/app/main/user-management/user-role/list/list.component.html","./src/app/main/user-management/user-role/user-role-routing.module.ts"],"names":[],"mappings":"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","file":"user-role-user-role-module-es2015.js","sourcesContent":["\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-user-role-crud',\r\n  templateUrl: './user-role-crud.component.html',\r\n  styleUrls: ['./user-role-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class UserRoleCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'List', link: 'list' },\r\n    // { label: 'Assign Role', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"userRole\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'User Role', link: 'list' });\r\n                  }\r\n                  if (z.id === \"assignRole\") {\r\n                    this.tempLinks.push({ label: 'Assign Role', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/user-role/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0 \" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\"> {{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { UserRoleService } from 'app/shared/services/user/user-role.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === 'string') {\r\n            return { 'invalidAutocompleteObject': { value: control.value } }\r\n        }\r\n        return null  /* valid option selected */\r\n    }\r\n}\r\n@Component({\r\n    selector: 'app-view-dialog',\r\n    templateUrl: './view-dialog.component.html',\r\n    styleUrls: ['./view-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n    params: any;\r\n    isEditMode = false;\r\n    form: FormGroup;\r\n    localStorage: any;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsUser: Observable<any[]>;\r\n    filteredOptionsRole: Observable<any[]>;\r\n    clients: any;\r\n    users: any;\r\n    roles: any;\r\n    default_role: any;\r\n    status = false;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    messageConstant: MessageConstant;\r\n    radiobuttonList: any;\r\n    constructor(private fb: FormBuilder, private roleService: RoleService, private snackBar: MatSnackBar, private clientService: ClientService,\r\n        public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n        private userService: UserService, private userRoleService: UserRoleService) { }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n        this.params = this.data;\r\n        this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n        this.form = this.fb.group({\r\n            client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            roleList: ['', [Validators.required]],\r\n            defaultRole: ['', [Validators.required]],\r\n        });\r\n        this.getClients();\r\n        this.getUserList(this.params.data.client_id);\r\n        // this.getRoleList();\r\n        this.getDefaultRole();\r\n\r\n        if (this.isEditMode) {\r\n            this.assignValues(this.params);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    closeActionPanel(){\r\n        this.dialogRef.close();\r\n      }\r\n    \r\n\r\n    onYesClick() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n            const params: any = {\r\n                user_id: formValues.userList.id,\r\n                //roles: formValues.roleList,\r\n                //defaultrole: formValues.defaultRole,\r\n                // roles:formValues.roleList.map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : v.default_role })),\r\n                roles: this.radiobuttonList.map(v => ({ role_id: v.id, map_id: v.map_id, create_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_role: v.default_role })),\r\n                status: this.status == true ? 'Y' : 'N',\r\n                // tslint:disable-next-line: semicolon\r\n            }\r\n            // tslint:disable-next-line: no-//\r\n\r\n            if (this.isEditMode) {\r\n                params.id = this.params.data.id,\r\n                    params.modify_by = this.localStorage.userId;\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n\r\n                this.userRoleService.userRoleMapping(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n                )\r\n            } else {\r\n                this.roleService.create(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n                        this.dialogRef.close();\r\n                    }, (err) => {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n                )\r\n            }\r\n            this.dialogRef.close(params);\r\n        }\r\n        return;\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get('email').hasError('required')\r\n            ? 'You must enter a value'\r\n            : form.get('email').hasError('email')\r\n                ? 'Not a valid email'\r\n                : '';\r\n    }\r\n\r\n    assignValues(params) {\r\n        //this.form.get('client').setValue(params.data.client_id);\r\n        // this.form.get('userList').setValue(params.data.userlist);\r\n        // this.form.get('roleList').setValue(params.data.roleList);\r\n        this.status = params.data.map_status == 'Y' ? true : false;\r\n    }\r\n\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n            (data: any) => {\r\n                this.clients = data;\r\n                if (this.isEditMode) {\r\n                    const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n                    this.form.get('client').setValue(toSelect);\r\n                }\r\n                this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterClientModels(name) : this.clients)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterClientModels(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n    onClientChange(client){\r\n        this.getUserList(client.id);\r\n    }\r\n    getUserList(id) {\r\n        this.userRoleService.getActiveUsersByClient(id).subscribe(\r\n            (resp: any) => {\r\n                this.users = resp.data;\r\n                if (this.isEditMode) {\r\n                    const toSelect = this.users.find(c => c.id == this.params.data.user_id);\r\n                    this.form.get('userList').setValue(toSelect);\r\n                }\r\n                this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.username),\r\n                        map(username => username ? this._filterUserModels(username) : this.users)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    private _filterUserModels(username: string): any[] {\r\n        const filterValue = username.toLowerCase();\r\n        return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    displayUser(item: any): string {\r\n        return item && item.username ? item.username : '';\r\n    }\r\n\r\n    // getRoleList() {\r\n    //   this.roleService.getActiveRoles(this.params.user_id, this.localStorage.project_id).subscribe(\r\n    //     (resp: any) => {\r\n    //       this.roles = resp.data;\r\n    //       if(this.isEditMode){\r\n    //         const toSelect= this.roles.find(c=> c.id == this.params.data.rolelist);\r\n    //         var selectedList = [];\r\n    //         for (let i = 0; i < this.roles.length; i++) {\r\n    //           var role = this.roles[i];\r\n    //           if (role.id != null && role.id != undefined) {\r\n    //           selectedList.push(role);\r\n    //          }\r\n    //       }\r\n    //       this.form.get('roleList').setValue(role);\r\n    //       }\r\n\r\n    //     }, (err) => {\r\n\r\n    //     }\r\n    //   )\r\n    // }\r\n    onRoleChange(event) {\r\n        this.radiobuttonList = event.value;\r\n    }\r\n\r\n    radioChange(e) {\r\n        for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n            if (e.value == this.radiobuttonList[i].id) {\r\n                this.radiobuttonList[i].default_role = 'Y'\r\n                //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'Y' }))\r\n            } else {\r\n                this.radiobuttonList[i].default_role = 'N'\r\n                //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'N' }))\r\n            }\r\n        }\r\n    }\r\n    onUserChange(user) {\r\n        this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.roles = resp.data;\r\n                    // for (var k = 0; k < this.roles.length; k++) {\r\n                    //     if (this.roles[k].default_role == 'Y') {\r\n                    //         this.roles[k].selected_role == true\r\n                    //         //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'Y' }))\r\n                    //     } else {\r\n                    //         this.roles[k].selected_role == false\r\n                    //         //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'N' }))\r\n                    //     }\r\n                    // }\r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.roles.length; i++) {\r\n\r\n                        var userRole = this.roles[i];\r\n                        if (userRole.map_id != null && userRole.map_id != undefined) {\r\n                            selectedList.push(userRole);\r\n                        }\r\n\r\n                    }\r\n                    this.form.get('roleList').setValue(selectedList);\r\n                    // for (var k = 0; k < selectedList.length; k++) {\r\n                    //     // if (selectedList[k].default_role == 'Y') {\r\n                    //     //     selectedList[k].default_role = true\r\n                    //     //     //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'Y' }))\r\n                    //     // } else {\r\n                    //     //     selectedList[k].default_role = false\r\n                    //     //     //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'N' }))\r\n                    //     // }\r\n                    // }\r\n                    this.radiobuttonList = selectedList;\r\n                    // this.onRoleChange(selectedList);\r\n                    // this.roles = resp.data;\r\n                    // var selectedList = [];\r\n                    // for (var i = 0; i < this.roles.length; i++) {\r\n                    //     if (this.roles[i].map_id != null && this.roles[i].map_id != undefined) {\r\n                    //         selectedList.push(this.roles);\r\n                    //     }\r\n                    // }\r\n                    // this.form.get('roleList').setValue(selectedList);\r\n                    // //this.roles.setValue(selectedList);\r\n                }\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    getDefaultRole() {\r\n        this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.params.data.client_id, this.params.data.user_id, this.localStorage.project_id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.roles = resp.data;\r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.roles.length; i++) {\r\n                        var userRole = this.roles[i];\r\n                        if (userRole.map_id != null && userRole.map_id != undefined) {\r\n                            selectedList.push(userRole);\r\n                        }\r\n                    }\r\n                    this.form.get('roleList').setValue(selectedList);\r\n                    this.radiobuttonList = selectedList;\r\n\r\n                }\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage User Role</mat-toolbar>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" style=\"padding-top:8px;\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\"  autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" readonly>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n        (optionSelected)='onClientChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Client Name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Username</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\" [matAutocomplete]=\"userListAuto\"\r\n        readonly style=\"text-transform: none;\">\r\n        <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n        (optionSelected)='onUserChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n            {{option.username}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n        <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Role</mat-label>\r\n        <mat-select formControlName=\"roleList\" multiple (selectionChange)=\"onRoleChange($event)\" disabled = \"true\">\r\n            <mat-option *ngFor=\"let option of roles\" [value]=\"option\">\r\n                {{option.role_name}}\r\n            </mat-option>\r\n        </mat-select>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Role\">help</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('rolelist').hasError('required')\">Please Select Role</mat-error> -->\r\n    </mat-form-field>\r\n\r\n      <div  fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-radio-group aria-label=\"defaultRole\" formControlName=\"defaultRole\">\r\n            <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.id\" disabled=\"true\"\r\n                name=\"roleRadio\" (change)=\"radioChange($event)\" [checked]=\"'Y' == radioButton.default_role ? true : false\">\r\n                {{radioButton.role_name}}&nbsp;&nbsp;\r\n            </mat-radio-button>\r\n        </mat-radio-group>\r\n    </div>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"padding-bottom:3.24\" style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\"\r\n        class=\"example-margin\" color=\"primary\" [checked]=\"status\"  disabled =\"true\" (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"accent\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      <!-- <button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">Save</button> -->\r\n    </div>\r\n\r\n  </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\n\r\nexport class UserRoleService {\r\n\r\n    apiUrl2 = `${environment.API_URL2}/user`;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // getUserRole(){\r\n    //   return this.http.get(`${this.apiUrl2}/getUserRoles`);\r\n    // }\r\n    userRoleMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/userRoleMapping/`, params);\r\n    }\r\n    udpate(params) {\r\n        return this.http.post(`${this.apiUrl2}/update/`, params);\r\n    }\r\n    deleteUserRoleMapping(id, userId) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${userId}`)\r\n    }\r\n\r\n    getUserRoleMappingCW(id, project_id) {\r\n        return this.http.get(`${this.apiUrl2}/gtUserRoleMappingCW/${id}/${project_id}`);\r\n    }\r\n\r\n    getActiveUsersByClient(client_id) {\r\n        return this.http.get(`${this.apiUrl2}/gtActiveUsersByClient/${client_id}`);\r\n    }\r\n    getRoleListWithRolesAssignedToUserCW(client_id, user_id, project_id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRoleListWithRolesAssignedToUserCW/${client_id}/${user_id}/${project_id}`);\r\n    }\r\n\r\n\r\n}","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\n// import { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { UserRoleCrudComponent } from './user-role-crud/user-role-crud.component';\r\nimport { UserRoleRoutingModule } from './user-role-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[UserRoleCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, UserRoleRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class UserRoleModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { UserRoleService } from 'app/shared/services/user/user-role.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === 'string') {\r\n            return { 'invalidAutocompleteObject': { value: control.value } }\r\n        }\r\n        return null  /* valid option selected */\r\n    }\r\n}\r\n@Component({\r\n    selector: 'app-action-dialog',\r\n    templateUrl: './action-dialog.component.html',\r\n    styleUrls: ['./action-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n    params: any;\r\n    isEditMode = false;\r\n    form: FormGroup;\r\n    localStorage: any;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsUser: Observable<any[]>;\r\n    filteredOptionsRole: Observable<any[]>;\r\n    clients: any;\r\n    users: any;\r\n    roles: any;\r\n    default_role: any;\r\n    status = false;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    messageConstant: MessageConstant;\r\n    radiobuttonList: any;\r\n    constructor(private fb: FormBuilder, private roleService: RoleService, private snackBar: MatSnackBar, private clientService: ClientService,\r\n        public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData,\r\n        private userService: UserService, private userRoleService: UserRoleService) { }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n        // this.getClients();\r\n        this.params = this.data;\r\n        this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n        this.form = this.fb.group({\r\n            client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            roleList: ['', [Validators.required]],\r\n            defaultRole: ['', [Validators.required]],\r\n        });\r\n        this.getClients();\r\n        this.getUserList(this.params.data.client_id);\r\n        // this.getRoleList();\r\n        this.getDefaultRole();\r\n\r\n        if (this.isEditMode) {\r\n            this.assignValues(this.params);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    closeActionPanel(){\r\n        this.dialogRef.close();\r\n      }\r\n    \r\n\r\n    onYesClick() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n            const params: any = {\r\n                user_id: formValues.userList.id,\r\n                //roles: formValues.roleList,\r\n                //defaultrole: formValues.defaultRole,\r\n                // roles:formValues.roleList.map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : v.default_role })),\r\n                roles: this.radiobuttonList.map(v => ({\r\n                    role_id: v.id, map_id: v.map_id, create_date: v.created_date, create_by: v.createdby,\r\n                    modify_date: v.modify_date, modify_by: v.modifyby, default_role: v.default_role\r\n                })),\r\n                status: this.status == true ? 'Y' : 'N',\r\n                // tslint:disable-next-line: semicolon\r\n            }\r\n            // tslint:disable-next-line: no-//\r\n\r\n            if (this.isEditMode) {\r\n                params.id = this.params.data.id\r\n                \r\n            } \r\n            params.modify_by = this.localStorage.userId;\r\n            params.created_by = this.localStorage.userId;\r\n\r\n            if (this.isEditMode) {\r\n\r\n                this.userRoleService.userRoleMapping(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n                )\r\n            } else {\r\n                this.userRoleService.userRoleMapping(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n                        this.dialogRef.close();\r\n                    }, (err) => {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n                )\r\n            }\r\n            this.dialogRef.close(params);\r\n        }\r\n        return;\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get('email').hasError('required')\r\n            ? 'You must enter a value'\r\n            : form.get('email').hasError('email')\r\n                ? 'Not a valid email'\r\n                : '';\r\n    }\r\n\r\n    assignValues(params) {\r\n        //this.form.get('client').setValue(params.data.client_id);\r\n        // this.form.get('userList').setValue(params.data.userlist);\r\n        // this.form.get('roleList').setValue(params.data.roleList);\r\n        this.status = params.data.map_status == 'Y' ? true : false;\r\n    }\r\n\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n            (data: any) => {\r\n                this.clients = data;\r\n                if (this.isEditMode) {\r\n                    const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n                    this.form.get('client').setValue(toSelect);\r\n                }\r\n                this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterClientModels(name) : this.clients)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n onClientChange(client){\r\n        this.getUserList(client.id);\r\n        this.form.get('userList').setValue('');\r\n        this.form.get('roleList').setValue('');\r\n        this.form.get('defaultRole').setValue('');\r\n    }\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterClientModels(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getUserList(id) {\r\n        this.userRoleService.getActiveUsersByClient(id).subscribe(\r\n            (resp: any) => {\r\n                this.users = resp.data;\r\n                if (this.isEditMode) {\r\n                    const toSelect = this.users.find(c => c.id == this.params.data.user_id);\r\n                    this.form.get('userList').setValue(toSelect);\r\n                }\r\n                this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.username),\r\n                        map(username => username ? this._filterUserModels(username) : this.users)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    private _filterUserModels(username: string): any[] {\r\n        const filterValue = username.toLowerCase();\r\n        return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    displayUser(item: any): string {\r\n        return item && item.username ? item.username : '';\r\n    }\r\n\r\n    // getRoleList() {\r\n    //   this.roleService.getActiveRoles(this.params.user_id, this.localStorage.project_id).subscribe(\r\n    //     (resp: any) => {\r\n    //       this.roles = resp.data;\r\n    //       if(this.isEditMode){\r\n    //         const toSelect= this.roles.find(c=> c.id == this.params.data.rolelist);\r\n    //         var selectedList = [];\r\n    //         for (let i = 0; i < this.roles.length; i++) {\r\n    //           var role = this.roles[i];\r\n    //           if (role.id != null && role.id != undefined) {\r\n    //           selectedList.push(role);\r\n    //          }\r\n    //       }\r\n    //       this.form.get('roleList').setValue(role);\r\n    //       }\r\n\r\n    //     }, (err) => {\r\n\r\n    //     }\r\n    //   )\r\n    // }\r\n    onRoleChange(event) {\r\n        this.radiobuttonList = event.value;\r\n    }\r\n\r\n    radioChange(e) {\r\n        for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n            if (e.value == this.radiobuttonList[i].id) {\r\n                this.radiobuttonList[i].default_role = 'Y'\r\n                //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'Y' }))\r\n            } else {\r\n                this.radiobuttonList[i].default_role = 'N'\r\n                //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'N' }))\r\n            }\r\n        }\r\n    }\r\n    onUserChange(user) {\r\n        // this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n        this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.form.controls.client.value.id, user.id, this.localStorage.project_id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.roles = resp.data;\r\n                    // for (var k = 0; k < this.roles.length; k++) {\r\n                    //     if (this.roles[k].default_role == 'Y') {\r\n                    //         this.roles[k].selected_role == true\r\n                    //         //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'Y' }))\r\n                    //     } else {\r\n                    //         this.roles[k].selected_role == false\r\n                    //         //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'N' }))\r\n                    //     }\r\n                    // }\r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.roles.length; i++) {\r\n                        if(this.roles[i].default_role == 'Y'){\r\n                            this.form.get('defaultRole').setValue(this.roles[i]);\r\n                        }\r\n                        var userRole = this.roles[i];\r\n                        if (userRole.map_id != null && userRole.map_id != undefined) {\r\n                            selectedList.push(userRole);\r\n                        }\r\n\r\n                    }\r\n                    this.form.get('roleList').setValue(selectedList);\r\n                    // for (var k = 0; k < selectedList.length; k++) {\r\n                    //     // if (selectedList[k].default_role == 'Y') {\r\n                    //     //     selectedList[k].default_role = true\r\n                    //     //     //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'Y' }))\r\n                    //     // } else {\r\n                    //     //     selectedList[k].default_role = false\r\n                    //     //     //this.radiobuttonList[i].map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : 'N' }))\r\n                    //     // }\r\n                    // }\r\n                    this.radiobuttonList = selectedList;\r\n\r\n                    // this.onRoleChange(selectedList);\r\n                    // this.roles = resp.data;\r\n                    // var selectedList = [];\r\n                    // for (var i = 0; i < this.roles.length; i++) {\r\n                    //     if (this.roles[i].map_id != null && this.roles[i].map_id != undefined) {\r\n                    //         selectedList.push(this.roles);\r\n                    //     }\r\n                    // }\r\n                    // this.form.get('roleList').setValue(selectedList);\r\n                    // //this.roles.setValue(selectedList);\r\n                }\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    getDefaultRole() {\r\n        this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.params.data.client_id, this.params.data.user_id, this.localStorage.project_id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.roles = resp.data;\r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.roles.length; i++) {\r\n                        var userRole = this.roles[i];\r\n                        if(this.roles[i].default_role == 'Y'){\r\n                            this.form.get('defaultRole').setValue(this.roles[i]);\r\n                        }\r\n                        if (userRole.map_id != null && userRole.map_id != undefined) {\r\n                            selectedList.push(userRole);\r\n                        }\r\n                    }\r\n                    this.form.get('roleList').setValue(selectedList);\r\n                    this.radiobuttonList = selectedList;\r\n                    for (var k = 0; k < this.radiobuttonList; k++) {\r\n                        if (this.radiobuttonList[k].default_role == 'Y') {\r\n                            this.form.get('defaultRole').setValue((this.radiobuttonList[k]));\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage User Role</mat-toolbar>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0 auto\" name=\"form\" style=\"padding-top:8px;\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Client</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n                    required>\r\n                <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n                    (optionSelected)='onClientChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Client Name\">account_circle\r\n                    </mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Username</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\"\r\n                    [matAutocomplete]=\"userListAuto\" required style=\"text-transform: none;\">\r\n                <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n                    (optionSelected)='onUserChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n                        {{option.username}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please Select User</mat-error>\r\n                <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n            </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Role</mat-label>\r\n                <mat-select formControlName=\"roleList\" multiple (selectionChange)=\"onRoleChange($event)\">\r\n                    <mat-option *ngFor=\"let option of roles\" [value]=\"option\">\r\n                        {{option.role_name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Role\">help</mat-icon>\r\n                <!-- <mat-error *ngIf=\"form.get('rolelist').hasError('required')\">Please Select Role</mat-error> -->\r\n            </mat-form-field>\r\n\r\n            <div fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-radio-group aria-label=\"defaultRole\" formControlName=\"defaultRole\">\r\n                    <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.id\"\r\n                        name=\"roleRadio\" (change)=\"radioChange($event)\"\r\n                        [checked]=\"'Y' == radioButton.default_role ? true : false\">\r\n                        {{radioButton.role_name}}&nbsp;&nbsp;\r\n                    </mat-radio-button>\r\n                    <mat-error *ngIf=\"form.get('defaultRole').hasError('required')\">Please select default role\r\n                    </mat-error>\r\n                </mat-radio-group>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"padding-bottom:3.24\" style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\"\r\n                class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n                #toggleElement>\r\n                {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n            <button mat-raised-button color=\"accent\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">Save</button>\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { Component, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserRoleService } from 'app/shared/services/user/user-role.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n        if (typeof control.value === 'string') {\r\n            return { 'invalidAutocompleteObject': { value: control.value } }\r\n        }\r\n        return null  /* valid option selected */\r\n    }\r\n}\r\n@Component({\r\n    selector: 'app-create',\r\n    templateUrl: './create.component.html',\r\n    styleUrls: ['./create.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n    form: FormGroup;\r\n    filteredOptionsClient: Observable<any[]>;\r\n    filteredOptionsUser: Observable<any[]>;\r\n    filteredOptionsRole: Observable<any[]>;\r\n    clients: any;\r\n    users: any;\r\n    roles: any;\r\n    role_id: any;\r\n    default_role: any;\r\n    localStorage: any;\r\n    radiobuttonList: any;\r\n    currentCheckedValue = null;\r\n    messageConstant: MessageConstant;\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n    status = true;\r\n    selectedRoles: any;\r\n    defaultSelectedRoles: any;\r\n    default_checkedRoles: any;\r\n    constructor(private fb: FormBuilder, private userRoleService: UserRoleService, private snackBar: MatSnackBar, private router: Router,\r\n        private clientService: ClientService, private userService: UserService, private roleService: RoleService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n        this.getClients();\r\n       // this.getUserList();\r\n        //this.getRoleList();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n        this.form = this.fb.group({\r\n            client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            userList: ['', [autocompleteObjectValidator(), Validators.required]],\r\n            roleList: ['', [Validators.required]],\r\n            defaultRole: ['', [Validators.required]],\r\n            status: [{ value: false }, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            let params = {\r\n                user_id: formValues.userList.id,\r\n                //roles: formValues.roleList,\r\n                //defaultrole: formValues.defaultRole,\r\n                // roles:formValues.roleList.map(v => ({ role_id: v.id,map_id:null,create_date:null,create_by:null,modify_date:null,modify_by:null,default_role : v.default_role })),\r\n                roles: this.radiobuttonList.map(v => ({ role_id: v.id, map_id: v.map_id, create_date: v.created_date, create_by: v.createdby, modify_date: v.modify_date, modify_by: v.modifyby, default_role: v.default_role })),\r\n                status: this.status == true ? 'Y' : 'N',\r\n                created_by: this.localStorage.userId,\r\n                modify_by :this.localStorage.userId\r\n            }\r\n\r\n            this.userRoleService.userRoleMapping(params).subscribe(\r\n                (resp: any) => {\r\n                    if (resp.status == true) {\r\n                        this.snackBar.open(MessageConstant.userRoleAssign, 'Dismiss', { duration: 5000 });\r\n                        this.router.navigate(['/userManagement/user-role/crud/list']);\r\n                    } else {\r\n                        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                    }\r\n\r\n                },\r\n                (err) => {\r\n                    this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n                }\r\n            )\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get('email').hasError('required')\r\n            ? 'You must enter a value'\r\n            : form.get('email').hasError('email')\r\n                ? 'Not a valid email'\r\n                : '';\r\n    }\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n\r\n    getClients() {\r\n        this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n            (data: any) => {\r\n                this.clients = data;\r\n                const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n                this.form.get('client').setValue(toSelect);\r\n                this.getUserList(toSelect.id);\r\n                this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.name),\r\n                        map(name => name ? this._filterClientModels(name) : this.clients)\r\n                    );\r\n            }, (err) => {\r\n\r\n            }\r\n        )\r\n    }\r\n    onClientChange(client){\r\n        this.getUserList(client.id);\r\n        this.form.get('userList').setValue('');\r\n        this.form.get('roleList').setValue('');\r\n        this.form.get('defaultRole').setValue('');\r\n    }\r\n    displayClient(item: any): string {\r\n        return item && item.name ? item.name : '';\r\n    }\r\n\r\n    private _filterClientModels(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getUserList(id) {\r\n        this.userRoleService.getActiveUsersByClient(id).subscribe(\r\n            (resp: any) => {\r\n                this.users = resp.data;\r\n                this.filteredOptionsUser = this.form.controls.userList.valueChanges\r\n                    .pipe(\r\n                        startWith(''),\r\n                        map(value => typeof value === 'string' ? value : value.username),\r\n                        map(username => username ? this._filterUserModels(username) : this.users)\r\n                    );\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    displayUser(item: any): string {\r\n        return item && item.username ? item.username : '';\r\n    }\r\n\r\n    private _filterUserModels(username: string): any[] {\r\n        const filterValue = username.toLowerCase();\r\n        return this.users.filter(option => option.username.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n   \r\n\r\n    onRoleChange(event) {\r\n        this.radiobuttonList = event.value;\r\n    }\r\n\r\n    radioChange(e) {\r\n        for (var i = 0; i < this.radiobuttonList.length; i++) {\r\n            if (e.value == this.radiobuttonList[i].id) {\r\n                this.radiobuttonList[i].default_role = 'Y'\r\n               \r\n            } else {\r\n                this.radiobuttonList[i].default_role = 'N'\r\n               \r\n            }\r\n        }\r\n    }\r\n    onUserChange(user) {\r\n        // this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.localStorage.client_id, user.id, this.localStorage.project_id).subscribe(\r\n        this.userRoleService.getRoleListWithRolesAssignedToUserCW(this.form.controls.client.value.id, user.id, this.localStorage.project_id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status != 'false') {\r\n                    this.roles = resp.data;\r\n                    \r\n                    var selectedList = [];\r\n                    for (let i = 0; i < this.roles.length; i++) {\r\n                        if(this.roles[i].default_role == 'Y'){\r\n                            this.form.get('defaultRole').setValue(this.roles[i]);\r\n                        }\r\n                        var userRole = this.roles[i];\r\n                        if (userRole.map_id != null && userRole.map_id != undefined) {\r\n                            selectedList.push(userRole);\r\n                        }\r\n\r\n                    }\r\n                    this.form.get('roleList').setValue(selectedList);\r\n                   \r\n                    this.radiobuttonList = selectedList;\r\n                  \r\n                }\r\n            }, (err) => {\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n                <mat-label>Client</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n                    required>\r\n                <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n                    (optionSelected)='onClientChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n                    </mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>User</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"userList\" autocomplete=\"off\"\r\n                    [matAutocomplete]=\"userListAuto\" required style=\"text-transform: none;\">\r\n                <mat-autocomplete #userListAuto=\"matAutocomplete\" [displayWith]=\"displayUser\"\r\n                    (optionSelected)='onUserChange($event.option.value)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsUser | async\" [value]=\"option\">\r\n                        {{option.username}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select User\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('userList').hasError('required')\">Please select user</mat-error>\r\n                <!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special Character are not allowed</mat-error> -->\r\n            </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Role</mat-label>\r\n                <mat-select formControlName=\"roleList\" multiple (selectionChange)=\"onRoleChange($event)\">\r\n                    <mat-option *ngFor=\"let option of roles\" [value]=\"option\">\r\n                        {{option.role_name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please Select Role\">help</mat-icon>\r\n                <!-- <mat-error *ngIf=\"form.get('rolelist').hasError('required')\">Please Select Role</mat-error> -->\r\n            </mat-form-field>\r\n\r\n            <div fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-radio-group aria-label=\"defaultRole\" formControlName=\"defaultRole\">\r\n                    <mat-radio-button *ngFor=\"let radioButton of radiobuttonList\" [value]=\"radioButton.id\"\r\n                        name=\"roleRadio\" (change)=\"radioChange($event)\"\r\n                        [checked]=\"'Y' == radioButton.default_role ? true : false\">\r\n                        {{radioButton.role_name}}&nbsp;&nbsp;\r\n                    </mat-radio-button>\r\n                    <mat-error *ngIf=\"form.get('defaultRole').hasError('required')\">Please select default role\r\n                    </mat-error>\r\n                </mat-radio-group>\r\n            </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n                color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n                {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n            <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n                routerLink=\"/userManagement/user-role/crud/list\">Cancel</button>\r\n        </div>\r\n\r\n    </form>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { UserRoleService } from 'app/shared/services/user/user-role.service';\r\n\r\nexport class Role {\r\n    id: string;\r\n    name: string;\r\n    status: string;\r\n    client: string;\r\n    role: string;\r\n    client_name: string;\r\n    default_role: string;\r\n    created_date: string;\r\n    createdby: number;\r\n    modify_date: string;\r\n    modifyby: number;\r\n    statusString: string;\r\n    roleString: string;\r\n    username :string;\r\n    role_name :any;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n    selector: 'app-list',\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: Role;\r\n    filterType: MatTableFilter;\r\n    displayedColumns: string[] = ['name', 'client', 'role', 'defaultRole', 'status', 'action'];\r\n    head = [['User Name', 'Client', 'Role', 'Default Role', 'Status']];\r\n    dataSource: MatTableDataSource<Role>;\r\n\r\n    roles: Role[];\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    dialogRef: any;\r\n    clientSearch = false;\r\n    roleSearch = false;\r\n    nameSearch = false;\r\n    defaultSearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    localStorage: any;\r\n    userRole: any;\r\n    activeUserbyClient: any;\r\n    activeUserList: any;\r\n    previousUserID = 0;\r\n    constructor(public dialog: MatDialog, private snackBar: MatSnackBar, private userRoleService: UserRoleService) {\r\n        // Create 100 users\r\n        // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n        // Assign the data to the data source for the table to render\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n        this.getUserRoleMappingCW();\r\n        this.filterEntity = new Role();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    getUserRoleMappingCW() {\r\n        this.userRoleService.getUserRoleMappingCW(this.localStorage.userId, this.localStorage.project_id).subscribe(\r\n            (resp: any) => {\r\n                if (resp.data != null) {\r\n                    this.userRole = resp.data;\r\n                    for (var i = 0; i < this.userRole.length; i++) {\r\n                        if (this.userRole[i].map_status == 'N') {\r\n                            this.userRole[i].statusString = 'Inactive';\r\n                        } else {\r\n                            this.userRole[i].statusString = 'Active';\r\n                        }\r\n                        if (this.userRole[i].default_role == 'Y') {\r\n                            this.userRole[i].roleString = this.userRole[i].role_name;\r\n                        }\r\n                    }\r\n                    //const result = [];\r\n                    // const map = new Map();\r\n                    // for (const item of this.userRole) {\r\n                    //     if(!map.has(item.user_id)){\r\n                    //         map.set(item.user_id, true);    // set any value to Map\r\n                    //         result.push({\r\n                    //             id: item.user_id,\r\n                    //             name: item.role_name,\r\n                    //         });\r\n                    //     }\r\n                    // }\r\n                    const result = (arr, props = []) => [...new Map(arr.map(entry => [props.map(k => entry[k]).join('|'), entry])).values()];\r\n                    const newArr = result(this.userRole, ['user_id', 'role_id']);\r\n\r\n                    this.dataSource = new MatTableDataSource(this.userRole);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 5000 })\r\n                    return;\r\n                }\r\n            }, (err) => { }\r\n        )\r\n    }\r\n\r\n    deleteUserRoleMapping(id) {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: true\r\n        });\r\n        //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n        this.confirmDialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.userRoleService.deleteUserRoleMapping(id, this.localStorage.userId).subscribe(\r\n                    (data: any) => {\r\n                        if (data.status == false) {\r\n                            this.getUserRoleMappingCW();\r\n                            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n                        } else {\r\n                            this.snackBar.open(data.message, 'Dismiss', { duration: 5000 });\r\n                        }\r\n\r\n                    }, (err) => {\r\n                    }\r\n                )\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n    }\r\n\r\n    viewDialog(data): void {\r\n        let params = {\r\n            action: 'View',\r\n            data: data\r\n        }\r\n        const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n            width: '800px',\r\n            data: params,\r\n            autoFocus: false,\r\n            panelClass: 'app-action-dialog',\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.getUserRoleMappingCW();\r\n        });\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        }\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: '800px',\r\n            data: params,\r\n            autoFocus: false,\r\n            disableClose: true,\r\n            panelClass: 'app-action-dialog'\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            // this.moderate(result);\r\n            this.getUserRoleMappingCW();\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        // visibleOption = !visibleOption;\r\n        //nameSearch = false;\r\n        //descSearch = false;\r\n        ev.stopPropagation();\r\n        if (visibleOption == 'clientSearch') {\r\n            this.clientSearch = !this.clientSearch;\r\n            this.filterEntity.client_name = \"\";\r\n        }\r\n        if (visibleOption == 'roleSearch') {\r\n            this.roleSearch = !this.roleSearch;\r\n            this.filterEntity.role = \"\";\r\n        }\r\n        if (visibleOption == 'nameSearch') {\r\n            this.nameSearch = !this.nameSearch;\r\n            this.filterEntity.name = \"\";\r\n        }\r\n\r\n        if (visibleOption == 'defaultSearch') {\r\n            this.defaultSearch = !this.defaultSearch;\r\n            this.filterEntity.default_role = \"\";\r\n        }\r\n        if (visibleOption == 'statusSearch') {\r\n            this.statusSearch = !this.statusSearch;\r\n            this.filterEntity.statusString = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.userRole.length; i++) {\r\n            var userRole = this.userRole[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = { 'User Name': userRole.username, 'Client': userRole.client_name, 'Role': userRole.role_name, 'Default_Role': userRole.default_role, 'Status': userRole.statusString };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n        XLSX.writeFile(workBook, 'User role assign.xlsx');\r\n        //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n        //this.preloader.close();\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({ // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chrger = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [chrger.username, chrger.client_name, chrger.role_name, chrger.default_role, chrger.statusString,];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = 'assets/images/logos/logo_sparkev_main.png';\r\n        var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(('en-GB'));\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: 'grid',\r\n            headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n            margin: { top: 22 },\r\n            didDrawCell: data => {\r\n            },\r\n            didDrawPage: data => {\r\n                doc.addImage(img , 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n                doc.text('User Role Assign Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text('Date:' + createdDate, 15, 18);\r\n                doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n                doc = this.addWaterMark(doc);\r\n            }\r\n        })\r\n        // below line for Open PDF document in new tab\r\n        doc.output('dataurlnewwindow')\r\n        // below line for Download PDF document  \r\n        doc.save('User Role Assign report.pdf');\r\n    }\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n        return doc;\r\n    }\r\n\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n        <div>\r\n\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.username\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"client\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Client\" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"role\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!roleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Role &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"roleSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Role\" [(ngModel)]=\"filterEntity.role\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('roleSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.role_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"defaultRole\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!defaultSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Default Role\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('defaultSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"defaultSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Default Role\" [(ngModel)]=\"filterEntity.default_role\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('defaultSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.roleString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.map_status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"deleteUserRoleMapping(element.map_id)\"\r\n                            style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <button  (click)=\"tableExport()\" mat-fab color=\"primary\" matTooltip=\"export to excel\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;position:fixed;bottom:30px;right:20px\">\r\n    <mat-icon>downloading</mat-icon>\r\n  </button> -->\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TABS_DEMO_ROUTES } from './user-role-crud/routes';\r\nimport { UserRoleCrudComponent } from './user-role-crud/user-role-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : UserRoleCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class UserRoleRoutingModule{}"],"sourceRoot":"webpack:///"}