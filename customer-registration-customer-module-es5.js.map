{"version":3,"sources":["webpack:///src/app/main/registrationModule/customer-registration/customer-routing.module.ts","webpack:///src/app/main/registrationModule/customer-registration/create/create.component.ts","webpack:///src/app/main/registrationModule/customer-registration/create/create.component.html","webpack:///src/app/main/registrationModule/customer-registration/customer.module.ts","webpack:///src/app/main/registrationModule/customer-registration/list/list.component.ts","webpack:///src/app/main/registrationModule/customer-registration/list/list.component.html"],"names":["routes","path","component","data","title","redirectTo","pathMatch","CustomerRoutingModule","forChild","imports","exports","CreateComponent","fb","q","username","email","gender","reactiveForm2","group","CPO","required","dob","name","loginId","password","mobile","confirmPassword","vehicleNo","address","VINNo","connectorType","aadhar","manufacturer","model","form","get","hasError","selector","templateUrl","styleUrls","COMPONENTS","COMPONENTS_DYNAMIC","CustomerModule","declarations","entryComponents","ListComponent"],"mappings":"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","file":"customer-registration-customer-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'create', component: CreateComponent, data: { title: 'CPO Registration' } },\r\n  { path: 'list', component: ListComponent, data: { title: 'CPO List' } },\r\n  { path: '', redirectTo : 'create', pathMatch:'full' },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CustomerRoutingModule {}\r\n","\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  q = {\r\n    username: '',\r\n    email: '',\r\n    gender: '',\r\n  };\r\n\r\n  reactiveForm1: FormGroup;\r\n  reactiveForm2: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n   \r\n    this.reactiveForm2 = this.fb.group({\r\n      CPO: ['', [Validators.required]],     \r\n      dob: ['', [Validators.required]],\r\n      name: ['', [Validators.required]],\r\n      loginId: ['', [Validators.required]],\r\n      email: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      confirmPassword: ['', [Validators.required]],\r\n      vehicleNo: ['', [Validators.required]],\r\n      address: ['', [Validators.required]],\r\n      VINNo: ['', [Validators.required]],\r\n      connectorType: ['', [Validators.required]],\r\n      aadhar: ['', [Validators.required]],\r\n      manufacturer: ['', [Validators.required]],\r\n      model: ['', [Validators.required]],\r\n       \r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <!-- <mat-card-title>Form Horizontal</mat-card-title> -->\r\n\r\n      <form [formGroup]=\"reactiveForm2\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>CPO</mat-label>\r\n              <mat-select required formControlName=\"CPO\" required>\r\n                <mat-option>-- Select --</mat-option>\r\n                <mat-option value=\"1\">Spark EV</mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('CPO').invalid\">Please select cpo\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"Date Of Birth\" formControlName=\"dob\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n              <mat-error *ngIf=\"reactiveForm2.get('dob').invalid\">Please enter date of birth\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Full Name</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"name\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('name').invalid\">Please enter name\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Login Id</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"loginId\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('loginId').invalid\">Please enter login id\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Email</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('email').invalid\">Please enter email\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Password</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"password\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('password').invalid\">Please enter password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Mobile No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"mobile\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('mobile').invalid\">Please enter mobile number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Confirm Password</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"confirmPassword\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('confirmPassword').invalid\">Please enter confirm password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Vehicle No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"vehicleNo\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('vehicleNo').invalid\">Please enter vehicle number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Address</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"address\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('address').invalid\">Please enter address\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>VIN No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"VINNo\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('VINNo').invalid\">Please enter VIN number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Connector Type</mat-label>\r\n              <mat-select required formControlName=\"connectorType\" required>\r\n                <mat-option>-- Select --</mat-option>\r\n                <mat-option value=\"1\">TYPE - 1 (AC)</mat-option>\r\n                <mat-option value=\"2\">TYPE - 2 (AC)</mat-option>\r\n                <mat-option value=\"3\">TYPE - 2 (DC)</mat-option>\r\n                <mat-option value=\"4\">GB/T (DC)</mat-option>\r\n                <mat-option value=\"6\">CCS (DC)</mat-option>\r\n                <mat-option value=\"7\">CCS (AC)</mat-option>\r\n                <mat-option value=\"8\">CHAdeMO (DC)</mat-option>\r\n                <mat-option value=\"9\">Ac Dc master</mat-option>\r\n                <mat-option value=\"10\">BEVC - AC001</mat-option>\r\n                <mat-option value=\"11\">BEVC - DC001</mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('connectorType').invalid\">Please select connector type\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Aadhar No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"aadhar\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('aadhar').invalid\">Please enter aadhar number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Manufacturer</mat-label>\r\n              <mat-select required formControlName=\"manufacturer\" required>\r\n                <mat-option>-- Select --</mat-option>\r\n                <mat-option value=\"1\">Mahindra</mat-option>\r\n                <mat-option value=\"2\">Tata</mat-option>\r\n\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('manufacturer').invalid\">Please select manufacturer\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Model</mat-label>\r\n              <mat-select required formControlName=\"model\" required>\r\n                <mat-option>-- Select --</mat-option>\r\n                <mat-option value=\"1\">E2O</mat-option>\r\n\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('model').invalid\">Please select model\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n\r\n      </form>\r\n\r\n      <!-- <div class=\"m-t-16\">{{reactiveForm2.value|json}}</div> -->\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CustomerRoutingModule } from './customer-routing.module';\r\n\r\n\r\n\r\nconst COMPONENTS = [CreateComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, CustomerRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC, ListComponent, CreateComponent],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class CustomerModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>list works!</p>\r\n"]}