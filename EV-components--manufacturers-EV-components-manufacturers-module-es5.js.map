{"version":3,"sources":["webpack:///src/app/main/EV-space/EV-components -manufacturers/EV-components-manufacturers-crud/routes.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/create/create.component.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/create/create.component.html","webpack:///src/app/main/EV-space/EV-components -manufacturers/view-dialog/view-dialog.component.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/view-dialog/view-dialog.component.html","webpack:///src/app/main/EV-space/EV-components -manufacturers/moderate-list/moderate-list.component.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/moderate-list/moderate-list.component.html","webpack:///src/app/main/EV-space/EV-components -manufacturers/list/list.component.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/list/list.component.html","webpack:///src/app/main/EV-space/EV-components -manufacturers/EV-components-manufacturers-routing.module.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/EV-components-manufacturers.module.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/action-dialog/action-dialog.component.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/action-dialog/action-dialog.component.html","webpack:///src/app/main/EV-space/EV-components -manufacturers/EV-components-manufacturers-crud/EV-components-manufacturers-crud.component.ts","webpack:///src/app/main/EV-space/EV-components -manufacturers/EV-components-manufacturers-crud/EV-components-manufacturers-crud.component.html"],"names":["TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","autocompleteObjectValidator","control","value","CreateComponent","fb","countryService","evDealersService","snackBar","router","datePipe","status","initialize","localStorage","JSON","parse","getItem","form","group","company_name","required","pattern","ev_compont","website","cp_name","email","mobile","addressLine1","addressLine2","pincode","city","state","country","landmark","remarks","getAllCountry","getAllState","subscribe","resp","countries","filteredOptionCountry","controls","valueChanges","pipe","name","_filterCountry","err","item","filterValue","toLowerCase","filter","option","includes","states","filteredOptionState","_filterState","getAllCities","cities","filteredOptionCity","_filterCity","pin_code_id","getCountryStateByPIN","data","undefined","length","state_id","getCountryByState","countrydata","toSelect","find","c","id","country_id","get","setValue","getStateByCountry","statedata","getCityByState","Citydata","event","getStatesByCountry","valid","formValues","params","ev_components","address1","address2","PIN","city_id","createdby","userId","createComponent","open","message","duration","navigate","errorMessage","hasError","stateId","citiesdata","getCitiesByStates","checked","ref","onSubmit","$event","preventDefault","getStateCountry","onCityChange","onStateChange","onCountryChange","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","ViewDialogComponent","evDelarsService","dialogRef","isEditMode","isPublish","isModrate","menuArray","action","buttonAction","assignValues","getAllCity","countryID","stateID","close","modifyby","publishComponentDealer","recordUpdateMessage","modify_by","moderateComponentDealer","closeActionPanel","EvComponentDealers","ModerateListComponent","dialog","cpoService","chargingStationService","clientService","cdr","displayedColumns","head","compNameSearch","websiteSearch","emailSearch","citySearch","stateSearch","statusSearch","filterEntity","filterType","ANYWHERE","getAllModComptDealers","target","dataSource","trim","paginator","firstPage","getAllModerateComponentDealer","evCompDealers","i","statusString","sort","detectChanges","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteComponentDealer","deleteMessage","width","autoFocus","panelClass","visibleOption","ev","stopPropagation","city_name","state_name","exportedData","filteredData","evDealers","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","ListComponent","evCompSearch","getAllComptDealers","getAllComponentDealer","evComptDealers","routes","children","EVComponentsManufacturersRoutingModule","forChild","imports","exports","COMPONENTS","COMPONENTS_DYNAMIC","EVComponentsManufacturersModule","declarations","entryComponents","ActionDialogComponent","isAvailable","isDirty","validatingForm","updateComponentDealer","onYesClick","toggleAvailable","EVComponentsManufacturersCrudComponent","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","title","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent"],"mappings":"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","file":"EV-components--manufacturers-EV-components-manufacturers-module-es5.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ModerateListComponent } from '../moderate-list/moderate-list.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n    path: 'create', component: CreateComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'listManufacturers', component: ListComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'listModerate', component: ModerateListComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '', redirectTo: 'listManufacturers', pathMatch: 'full'\r\n  },\r\n];\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n\r\n  constructor(private fb: FormBuilder, public countryService: CountriesService,private evDealersService:EVDealersService,\r\n    private snackBar: MatSnackBar, private router: Router, private datePipe: DatePipe,) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\-+ ]*$/)]],\r\n      ev_compont: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      website: ['',  ],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [ Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks:[''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n  \r\n      let params = {\r\n        company_name: formValues.company_name,\r\n        ev_components: formValues.ev_compont, \r\n        website: formValues.website,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks:formValues.remarks,\r\n        status: this.status == true ? 'M' : 'N',\r\n        createdby: this.localStorage.userId,\r\n      }\r\n      this.evDealersService.createComponent(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/evSpace/evComponentsManufactures/crud/listModerate']);\r\n          } else {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      return;\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Company Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" required autocomplete=\"off\">\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n        <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>EV Component</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"ev_compont\" type=\"text\"  autocomplete=\"off\" required>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Ev component\">model_training</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('ev_compont').hasError('required')\">Please enter Ev component</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Website</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"website\"  autocomplete=\"off\" style=\"text-transform:none\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">web\r\n        </mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Contact Person Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\"   style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n     \r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n          (change)=\"getStateCountry()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n        (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n         <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"countryAuto\" required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Remarks</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <div fxFlex=\"16\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement >\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/evSpace/evComponentsManufactures/crud/listManufacturers\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isPublish: boolean = false;\r\n  isModrate: boolean= false;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder,private evDelarsService:EVDealersService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isPublish = this.params.buttonAction == 'publishAction' ? true : false; //convert moderate to publish\r\n    this.isModrate = this.params.buttonAction == 'modrateAction' ? true : false; //convert publish to moderate\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      ev_compont: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      website: ['',],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('ev_compont').setValue(params.data.ev_components);\r\n    this.form.get('company_name').setValue(params.data.company_name);\r\n    this.form.get('website').setValue(params.data.website);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    if(this.isPublish ||this.isEditMode){\r\n      this.status = params.data.status == 'M' ? true : false;\r\n     }\r\n    if(this.isModrate){\r\n      this.status = params.data.status == 'Y' ? true : false;\r\n    }\r\n      \r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  onPublish(){\r\n    if(this.isPublish){\r\n      const params :any = {\r\n        id: this.params.data.id,    \r\n        status: \"Y\",//this.params.data.status === \"M\" ? \"Y\" :\"N\",\r\n        modifyby:this.localStorage.userId\r\n      }\r\n      this.evDelarsService.publishComponentDealer(params).subscribe(\r\n        (resp:any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(resp.message,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n        }, (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  onModrate(){\r\n    if(this.isModrate){\r\n      const params:any = {\r\n        id: this.params.data.id,\r\n        status: \"M\",//this.params.data.status === \"Y\" ? \"M\" : \"N\",//\r\n        modify_by:this.localStorage.userId\r\n      }\r\n      this.evDelarsService.moderateComponentDealer(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(resp.message,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n          \r\n        },(err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\" autocomplete=\"off\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Company Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" readonly autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>EV Component</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"ev_compont\" type=\"text\"  autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Ev component\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('ev_compont').hasError('required')\">Please enter Ev component</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"website\" autocomplete=\"off\" style=\"text-transform:none\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">web\r\n          </mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" readonly\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" readonly>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isPublish\" (click)=\"onPublish()\">Publish</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModrate\" (click)=\"onModrate()\">Moderate</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\nexport class EvComponentDealers {\r\n  id: string;\r\n  company_name: string;\r\n  ev_components: string;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-moderate-list',\r\n  templateUrl: './moderate-list.component.html',\r\n  styleUrls: ['./moderate-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class ModerateListComponent implements OnInit {\r\n\r\n  filterEntity: EvComponentDealers;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Ev Component', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EvComponentDealers>;\r\n\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  evCompDealers: EvComponentDealers[];\r\n  \r\n  constructor(private evDealersService: EVDealersService, public dialog: MatDialog,private cpoService: CpoService,private fb: FormBuilder, \r\n    private chargingStationService: ChargingStationService,private clientService:ClientService,private snackBar: MatSnackBar, \r\n    private cdr: ChangeDetectorRef) {\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EvComponentDealers();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllModComptDealers();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllModComptDealers() {\r\n    this.evDealersService.getAllModerateComponentDealer().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evCompDealers = resp.data;\r\n          for (var i = 0; i < this.evCompDealers.length; i++) {\r\n            if (this.evCompDealers[i].status == 'N') {\r\n              this.evCompDealers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evCompDealers[i].statusString = 'Moderate';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evCompDealers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.evDealersService.deleteComponentDealer(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.getAllModComptDealers();\r\n              this.cdr.detectChanges();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n            }else{\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n            }\r\n            \r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModComptDealers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModComptDealers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    \r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \" \";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \" \";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \" \";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \" \";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \" \";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Ev Component': evDealers.ev_components, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Component Moderate List');\r\n    XLSX.writeFile(workBook, 'Ev Component ModerateLists.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.ev_components, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Ev Component ModerateList Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Ev-Component-ModerateList report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n      \r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Publish\" (click)=\"viewDialog('Publish',element,'publishAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\n\r\nexport class EvComponentDealers {\r\n  id: string;\r\n  company_name: string;\r\n  ev_components: string;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: EvComponentDealers;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Ev Component', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EvComponentDealers>;\r\n\r\n  evComptDealers: EvComponentDealers[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  evCompSearch = false;\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n\r\n\r\n  constructor(private evDealersService: EVDealersService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EvComponentDealers();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllComptDealers();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllComptDealers() {\r\n    this.evDealersService.getAllComponentDealer().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evComptDealers = resp.data;\r\n          for (var i = 0; i < this.evComptDealers.length; i++) {\r\n            if (this.evComptDealers[i].status == 'N') {\r\n              this.evComptDealers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evComptDealers[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evComptDealers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.evDealersService.deleteComponentDealer(id, this.localStorage.useId).subscribe(\r\n  //         (data: any) => {\r\n  //           this.getAllComptDealers();\r\n  //           this.cdr.detectChanges();\r\n  //           this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n  //         }, (err) => {\r\n\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllComptDealers();\r\n    });\r\n  }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getAllComptDealers();\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'evCompSearch') {\r\n      this.evCompSearch = !this.evCompSearch;\r\n      this.filterEntity.ev_components = \" \";\r\n    }\r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \" \";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \" \";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \" \";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \" \";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \" \";\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Ev Component': evDealers.ev_components, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Component Manufacturers List');\r\n    XLSX.writeFile(workBook, 'EvComponentManufacturers.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.ev_components, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Ev Component Manufacturers List', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('EvComponentManufacturersList.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <!-- <ng-container matColumnDef=\"ev_components\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!evCompSearch\" class=\"custom_font_size\" style=\"display: flex;\">Deal Id <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('evCompSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"evCompSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Deal Id\" [(ngModel)]=\"filterEntity.ev_components\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('evCompSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.ev_components}} </td>\r\n                </ng-container> -->\r\n\r\n\r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'modrateAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EVComponentsManufacturersCrudComponent } from './EV-components-manufacturers-crud/EV-components-manufacturers-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './EV-components-manufacturers-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes: Routes = [\r\n    {\r\n        path: 'crud', component: EVComponentsManufacturersCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class EVComponentsManufacturersRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EVComponentsManufacturersRoutingModule } from './EV-components-manufacturers-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { EVComponentsManufacturersCrudComponent } from './EV-components-manufacturers-crud/EV-components-manufacturers-crud.component';\r\nimport { ModerateListComponent } from './moderate-list/moderate-list.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS = [EVComponentsManufacturersCrudComponent, CreateComponent, ListComponent, ModerateListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        EVComponentsManufacturersRoutingModule,\r\n        FuseSharedModule,\r\n    ],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EVComponentsManufacturersModule { }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder, private evDelarsService:EVDealersService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\-+ ]*$/)]],\r\n      ev_compont: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9#]*$/)]],\r\n      website: ['',],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [ Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id); \r\n    this.getAllCity(this.params.data.state_id); \r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c =>c.id == this.params.data.city_id );\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        company_name: formValues.company_name,\r\n        ev_components: formValues.ev_compont, \r\n        website: formValues.website,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks:formValues.remarks,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modifyby = this.localStorage.userId;\r\n      } else {\r\n          params.createdby = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.evDelarsService.updateComponentDealer(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            } \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      } else {\r\n        this.evDelarsService.createComponent(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }\r\n    }else{\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('ev_compont').setValue(params.data.ev_components);\r\n    this.form.get('company_name').setValue(params.data.company_name);\r\n    this.form.get('website').setValue(params.data.website);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Company Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" required autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>EV Component</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"ev_compont\" type=\"text\"  autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Ev component\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('ev_compont').hasError('required')\">Please enter Ev component</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"website\" autocomplete=\"off\" style=\"text-transform:none\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">web\r\n          </mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" required\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n       \r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-EV-charging-station-franchise-crud',\r\n  templateUrl: './EV-components-manufacturers-crud.component.html',\r\n  styleUrls: ['./EV-components-manufacturers-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class EVComponentsManufacturersCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Manufacturer List', link: 'listManufacturers' },\r\n    // { label: 'Moderate List', link: 'listModerate' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"evSpace\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"evComponentsManufactures\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"manufacturers\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Manufacturer List', link: 'listManufacturers' });\r\n                  }\r\n                  if (z.id === \"moderate\") {\r\n                    this.tempLinks.push({ label: 'Moderate List', link: 'listModerate' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/evSpace/evComponentsManufactures/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"]}