{"version":3,"sources":["./src/app/main/user-management/role/create/create.component.ts","./src/app/main/user-management/role/create/create.component.html","./src/app/main/user-management/role/role-crud/role-crud.component.ts","./src/app/main/user-management/role/role-crud/role-crud.component.html","./src/app/main/user-management/role/role.module.ts","./src/app/main/user-management/role/view-dialog/view-dialog.component.ts","./src/app/main/user-management/role/view-dialog/view-dialog.component.html","./src/app/main/user-management/role/role-routing.module.ts","./src/app/main/user-management/role/action-dialog/action-dialog.component.ts","./src/app/main/user-management/role/action-dialog/action-dialog.component.html","./src/app/main/user-management/role/role-crud/routes.ts","./src/app/main/user-management/role/list/list.component.ts","./src/app/main/user-management/role/list/list.component.html","./src/app/main/user-management/role-menu/role-menu.component.ts","./src/app/main/user-management/role-menu/role-menu.component.html"],"names":[],"mappings":"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","file":"role-role-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n// import { ChargerService } from '@shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  clients: any;\r\n  localStorage: any;\r\n  messageConstant: MessageConstant;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n  constructor(private fb: FormBuilder,\r\n    private roleService: RoleService, private snackBar: MatSnackBar,\r\n    private router: Router, private clientService: ClientService,) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getClients();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      code: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      status: [{ value: false }, [Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        client_id: formValues.client.id,\r\n        code: formValues.code,\r\n        name: formValues.name,\r\n        project_id: this.localStorage.project_id,\r\n        description: formValues.description,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      this.roleService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.roleCreated, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/userManagement/role/crud/list']);\r\n          } else if (resp.status == false) {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          } else {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getClients() {\r\n\r\n\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n        this.form.get('client').setValue(toSelect);\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n        <mat-label>Code</mat-label>\r\n        <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"code\" maxlength=\"20\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter code</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">account_circle</mat-icon>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\"\r\n        [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\" routerLink=\"/userManagement/role/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","\r\nimport {ChangeDetectorRef, Component,OnInit} from '@angular/core';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-role-crud',\r\n  templateUrl: './role-crud.component.html',\r\n  styleUrls: ['./role-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class RoleCrudComponent implements OnInit {\r\n   // Nav bar demo\r\n   tabLinks = [\r\n    // { label: 'List', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray:any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"mangeRole\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                    if (z.id === \"list\") {\r\n                      isDefaultRoutePermeted = true;\r\n                      this.tempLinks.push({ label: 'Manage Role', link: 'list' });\r\n                    }\r\n                    if (z.id === \"addNew\") {\r\n                      this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                    }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/role/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n    \r\n              }\r\n             \r\n            }\r\n  \r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n    \r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent {}\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0 \" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\"> {{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\n// import { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { RoleCrudComponent } from './role-crud/role-crud.component';\r\nimport { RoleRoutingModule } from './role-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { RoleMenuComponent } from '../role-menu/role-menu.component';\r\nconst COMPONENTS =[RoleCrudComponent, CreateComponent, ListComponent,RoleMenuComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, RoleRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RoleModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  messageConstant:MessageConstant;\r\n  constructor(private fb: FormBuilder,private roleService: RoleService, private snackBar: MatSnackBar,private clientService: ClientService,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    this.getClients();\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      code : ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9]*$/)]] ,\r\n      name: ['',  [Validators.required,Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      description: ['',  [Validators.pattern(/^[a-zA-Z0-9]*$/)]]\r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n  \r\n        name : formValues.name,\r\n        description : formValues.description,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.roleService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.roleService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n    this.dialogRef.close(params);\r\n    }\r\n    return;\r\n   \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('code').setValue(params.data.name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage Role</mat-toolbar>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" style=\"padding-top:8px;\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" readonly autocomplete=\"off\" [matAutocomplete]=\"clientAuto\">\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n        <mat-label>Code</mat-label>\r\n        <input matInput placeholder=\"\" autocomplete=\"off\" readonly formControlName=\"code\" maxlength=\"200\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('code').hasError('required')\">Please enter code</mat-error>\r\n        <mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" readonly autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\" readonly>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">account_circle</mat-icon>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"padding-bottom:3.24\" disabled=\"true\" style=\"margin-bottom: 10px;\" fxFlex=\"50\"\r\n        class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n        #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"accent\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      <!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"\r\n    (click)=\"onYesClick()\">Save</button> -->\r\n\r\n    </div>\r\n  </form>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TABS_DEMO_ROUTES } from './role-crud/routes';\r\nimport { RoleCrudComponent } from './role-crud/role-crud.component';\r\nimport { RoleMenuComponent } from '../role-menu/role-menu.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RoleCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n    {\r\n        path : 'roleMenuMappings',component : RoleMenuComponent,canActivate: [AuthGuard]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RoleRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  clients: any;\r\n  messageConstant:MessageConstant;\r\n  constructor(private fb: FormBuilder,private roleService: RoleService, private snackBar: MatSnackBar,private clientService: ClientService,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getClients();\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      code : ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]] ,\r\n      name: ['',  [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',  [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]]\r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        client_id : formValues.client.id,\r\n        code:formValues.code,\r\n        name : formValues.name,\r\n        project_id:this.localStorage.project_id ,\r\n        description : formValues.description,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.roleService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.roleService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n    this.dialogRef.close(params);\r\n    }\r\n    return;\r\n   \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage Role</mat-toolbar>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" style=\"padding-top:8px;\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Code</mat-label>\r\n        <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"code\" maxlength=\"200\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('code').hasError('required')\">Please enter code</mat-error>\r\n        <mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"padding-bottom:3.24\" style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\"\r\n        class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"accent\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">Save</button>\r\n\r\n    </div>\r\n  </form>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent , canActivate: [AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\n\r\nexport class Role {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  client:string;\r\n  code:string;\r\n  client_name:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Role;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'name', 'client','code', 'description','status','action'];\r\n  head = [['Role Name', 'Client','Code','Description','Status']];\r\n  dataSource: MatTableDataSource<Role>;\r\n\r\n  roles : Role[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  codeSearch = false;\r\n  nameSearch = false;\r\n  descSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private roleService : RoleService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getRolesCW();\r\n    this.filterEntity = new Role();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getRolesCW(){\r\n    this.roleService.getRolesCW(this.localStorage.userId,this.localStorage.project_id).subscribe(\r\n      (resp:any)=>{\r\n        if(resp.data != null){\r\n          this.roles = resp.data;\r\n          for(var i=0; i < this.roles.length;i++){\r\n            if(this.roles[i].status == 'N'){\r\n              this.roles[i].statusString = 'Inactive';\r\n            }else{\r\n              this.roles[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.roles);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 5000 })\r\n          return;\r\n        }  \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.roleService.delete(id,this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n            if(data.status == true){\r\n              this.getRolesCW();\r\n            this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:5000});\r\n            }else{\r\n              this.snackBar.open(data.message,'Dismiss',{duration:5000});\r\n            }\r\n\r\n          },(err)=>{\r\n        } \r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n    \r\n  }\r\n  viewDialog(data):void{\r\n    let params = {\r\n      action : 'View',\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getRolesCW();\r\n          \r\n    });\r\n  }\r\n\r\n  openDialog(action,data): void {\r\n    let params = {\r\n      action : action,\r\n      data : data, \r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getRolesCW();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n      if(visibleOption == 'clientSearch'){\r\n        this.clientSearch = !this.clientSearch;\r\n        this.filterEntity.client_name = \"\";\r\n      }\r\n      if(visibleOption == 'codeSearch'){\r\n        this.codeSearch = !this.codeSearch;\r\n        this.filterEntity.code = \"\";\r\n      }\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    \r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = \"\";\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString= \"\";\r\n    }\r\n   }\r\n\r\n   tableExport()\r\n   {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.roles.length; i++) {\r\n       var role = this.roles[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Role Name':role.name,'Client': role.client_name,'Code': role.code,'Description':role.description,'Status':role.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n      \r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n       XLSX.writeFile(workBook, 'Role.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n   }\r\n\r\n   pdfExport(){\r\n   \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.client_name,chrger.code,chrger.description,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Role Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    \r\n    // below line for Download PDF document  \r\n    doc.save('Role report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n\r\n        <div>\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Role Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Role Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"client\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Client\" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!codeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Code &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"codeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Code\" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('codeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <button  (click)=\"tableExport()\" mat-fab color=\"primary\" matTooltip=\"export to excel\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;position:fixed;bottom:30px;right:20px\">\r\n    <mat-icon>downloading</mat-icon>\r\n  </button> -->\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Injectable, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MenuConfigService } from 'app/shared/services/menu-config/menu-config.service';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class TodoItemNodeTest {\r\n  children: TodoItemNodeTest[];\r\n  item: string;\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  isSelected: boolean = false;\r\n  parent_id: string;\r\n  rm_map_id: string;\r\n}\r\nexport class ActionNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n  actionAll: ActionMenuNode[];\r\n  children: TodoItemFlatNode[];\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  map_id: string;\r\n  parent_id: string;\r\n  rm_map_id: string;\r\n  isSelected: boolean = false;\r\n}\r\nexport class ActionMenuNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n  selectAll: boolean;\r\n}\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemFlatNode[]>([]);\r\n  localStorage: any;\r\n  get data(): TodoItemFlatNode[] { return this.dataChange.value; }\r\n\r\n  constructor(private _menuConfigService: MenuConfigService, private changeDetectorRef: ChangeDetectorRef) {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.getRoleMenuList(this.localStorage.project_id, this.localStorage.client_id, this.localStorage.role_id);\r\n\r\n\r\n  }\r\n  getRoleMenuList(project_id, client_id, role_id) {\r\n    this._menuConfigService.getMenusByClientIdWithAlreadyMappedToRole(project_id, client_id, role_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          let menuConfigLit = [];\r\n          let menuChildList = [];\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            let menuCfg = resp.data[index];\r\n            if (menuCfg.parent_id == null) {\r\n              menuConfigLit.push(menuCfg);\r\n            } else {\r\n              let parentMenu = this.getParentMenu(menuConfigLit, menuCfg.parent_id);\r\n              menuChildList = parentMenu.children;\r\n              if (undefined == menuChildList) {\r\n                menuChildList = [];\r\n                parentMenu.children = menuChildList;\r\n              }\r\n              menuChildList.push(menuCfg);\r\n            }\r\n          }\r\n          this.changeDetectorRef.detectChanges();\r\n          const data = this.buildFileTree(menuConfigLit, 0);\r\n          this.dataChange.next(data);\r\n\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getParentMenu(menuConfigList, parent_id) {\r\n    let parentMenu;\r\n    for (let index = 0; index < menuConfigList.length; index++) {\r\n      let menuConfig = menuConfigList[index];\r\n      if (menuConfig.menu_id == parent_id) {\r\n        parentMenu = menuConfig;\r\n        break;\r\n      } else {\r\n        let menuChildList = menuConfig.children;\r\n        if (undefined != menuChildList) {\r\n          parentMenu = this.getParentMenu(menuChildList, parent_id);\r\n          if (parentMenu != undefined) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return parentMenu;\r\n  }\r\n  buildFileTree(menudata, level: number): TodoItemFlatNode[] {\r\n    let todoItemList = [];\r\n    for (let index = 0; index < menudata.length; index++) {\r\n      let menuCfg = menudata[index];\r\n      const node = new TodoItemFlatNode();\r\n      node.item = menuCfg.title;\r\n      node.id = menuCfg.id;\r\n      node.title = menuCfg.title;\r\n      node.menu_id = menuCfg.menu_id;\r\n      node.map_id = menuCfg.map_id;\r\n      node.parent_id = menuCfg.parent_id;\r\n      node.rm_map_id = menuCfg.rm_map_id;\r\n      this.changeDetectorRef.detectChanges();\r\n      if (menuCfg.children != undefined)\r\n        node.children = this.buildFileTree(menuCfg.children, level + 1);\r\n      todoItemList.push(node);\r\n\r\n    }\r\n    return todoItemList;\r\n  }\r\n\r\n  insertItem(parent: TodoItemFlatNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({ item: name } as TodoItemFlatNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemFlatNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\nexport interface MenuAction {\r\n  name: string;\r\n  completed: boolean;\r\n  subMenu?: MenuAction[];\r\n}\r\n@Component({\r\n  selector: 'app-role-menu',\r\n  templateUrl: './role-menu.component.html',\r\n  styleUrls: ['./role-menu.component.scss'],\r\n  providers: [ChecklistDatabase, DatePipe],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class RoleMenuComponent implements OnInit {\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  roles: any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  roleMenuForm: FormGroup;\r\n  actionMenu = false;\r\n  menuNode = false;\r\n  localStorage: any;\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  menuAction: MenuAction = {\r\n    name: 'select All',\r\n    completed: false,\r\n    subMenu: [\r\n      { name: 'Add/Update', completed: false },\r\n      { name: 'Delete', completed: false },\r\n      { name: 'Download', completed: false }\r\n    ]\r\n  };\r\n  selectedClientID: any;\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  TREE_DATA: any;\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n  @ViewChild('tree') tree;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleCollasped\") collaspedRef: any;\r\n  selectChange = false;\r\n  collaspedChange = false;\r\n  selectedMenus = [];\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private menuConfigService: MenuConfigService, private changeDetectorRef: ChangeDetectorRef, private fb: FormBuilder, private clientService: ClientService, private _database: ChecklistDatabase,\r\n    private roleService: RoleService,private _utilityService:UtilityService) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n    this.getMenuListClientWise();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.changeDetectorRef.detectChanges();\r\n    })\r\n    this.treeControl.expandAll();\r\n  }\r\n  \r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.roleMenuForm = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      role: ['', [autocompleteObjectValidator(), Validators.required]],\r\n    });\r\n    this.getClients();\r\n    this.getRolesList(this.localStorage.client_id);\r\n  }\r\n  getMenuListClientWise() {\r\n    this._database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n      this.treeControl.expandAll()\r\n\r\n    });\r\n  }\r\n\r\n\r\n  nodeSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants, node)\r\n      : this.checklistSelection.deselect(...descendants, node);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  checkParentIsSelected(data) {\r\n    for (var k = 0; k < data.length; k++) {\r\n      let node = data[k];\r\n      if (node.children != undefined) {\r\n        const children = node.children;\r\n        this.checkParentIsSelected(children);\r\n        let result = false;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          const isSelected = this.selectedMenus.filter(t => { return children[i].menu_id == t.menu_id });\r\n          if (isSelected != null && isSelected.length > 0) {\r\n            result = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (result == true) {\r\n          const isAlreadyPush = this.selectedMenus.filter(t => { return node.menu_id == t.menu_id });\r\n          if (isAlreadyPush == null || isAlreadyPush.length == 0) {\r\n            this.selectedMenus.push(node);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  openSubmit() {\r\n    let formValues = this.roleMenuForm.value;\r\n    ////\r\n    this.selectedMenus = [];\r\n    this.selectedMenus = [...this.checklistSelection.selected];\r\n\r\n    this.checkParentIsSelected(this.dataSource.data);\r\n\r\n    //;\r\n    let params = {\r\n      role_id: formValues.role.id,\r\n      menus: this.selectedMenus.map(v => ({ menu_id: v.menu_id })),\r\n      status: \"Y\",\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n    this.menuConfigService.setRoleMenuMapping(params).subscribe(\r\n      (resp: any) => {\r\n        // \r\n        if (resp.status = true) {\r\n          this.snackBar.open(MessageConstant.roleMenuMappedSucess, 'Dismiss', { duration: 5000 });\r\n          this._database.getRoleMenuList(this.localStorage.project_id, formValues.client.id, formValues.role.id)\r\n        } else {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n\r\n\r\n\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n        this.roleMenuForm.get('client').setValue(toSelect);\r\n        this.selectedClientID = toSelect.id;\r\n        this.filteredOptionsClient = this.roleMenuForm.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value) {\r\n    //this.dataSource.data =[];\r\n    //this._database.dataChange.next(null);\r\n    //this.checklistSelection.clear();\r\n    //this.descendantsAllSelected( this.checklistSelection.);\r\n    //this._database.getRoleMenuList(this.localStorage.project_id,value.id);\r\n    this.getRolesList(value.id);\r\n    this.roleMenuForm.get('role').setValue('');\r\n    this.selectedClientID = value.id;\r\n    //this.getMenuListClientWise();\r\n  }\r\n\r\n  getRolesList(client_id) {\r\n    this.roles = [];\r\n    this.roleService.getActiveRolesByClientId(this.localStorage.project_id, client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status = true) {\r\n          this.roles = resp.data;\r\n\r\n          const toSelect = this.roles.find(c => c.id == this.localStorage.role_id);\r\n          if (toSelect != null) {\r\n            if (toSelect.id = this.localStorage.role_id) {\r\n              this.roleMenuForm.get('role').setValue(toSelect);\r\n            }\r\n\r\n          }\r\n\r\n\r\n          this.filteredOptionsRole = this.roleMenuForm.controls.role.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterRoleModels(name) : this.roles)\r\n            );\r\n          //this._database.getRoleMenuList(this.localStorage.project_id,client_id,toSelect.id); \r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterRoleModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.roles.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onRoleChange(value) {\r\n\r\n    this.checklistSelection.clear();\r\n    this._database.getRoleMenuList(this.localStorage.project_id, this.selectedClientID, value.id);\r\n  }\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n  menu_id = (node: TodoItemFlatNode) => node.menu_id;\r\n  parent_id = (node: TodoItemFlatNode) => node.parent_id;\r\n  getChildren = (node: TodoItemFlatNode): TodoItemFlatNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemFlatNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n      ? existingNode\r\n      : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.menu_id = node.menu_id;\r\n    flatNode.parent_id = node.parent_id;\r\n    flatNode.expandable = !!node.children?.length;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    if (node.rm_map_id != null) {\r\n      this.nodeSelectionToggle(flatNode);\r\n    }\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  // descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n  //   const descendants = this.treeControl.getDescendants(node);\r\n\r\n  //   if (!descendants.length) {\r\n  //     return this.checklistSelection.isSelected(node);\r\n  //   }\r\n  //   const selected = this.checklistSelection.isSelected(node);\r\n  //   const allSelected = descendants.every(child => this.checklistSelection.isSelected(child));\r\n  //   if (!selected && allSelected) {\r\n  //     this.checklistSelection.select(node);\r\n\r\n  //   }\r\n  //   return allSelected;\r\n  // }\r\n\r\n\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      this.changeDetectorRef.markForCheck();\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n    this.actionMenu = true;\r\n    this.menuNode = true;\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\r\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n    this.actionMenu = true;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this._database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this._database.updateItem(nestedNode!, itemValue);\r\n  }\r\n  allComplete: boolean = false;\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.menuAction.subMenu != null && this.menuAction.subMenu.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(node: any): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n    // if (node.this.menuAction.subMenu == null) {\r\n    // return false;\r\n    // }\r\n    //return node.this.menuAction.subMenu.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.menuAction.subMenu == null) {\r\n      return;\r\n    }\r\n    this.menuAction.subMenu.forEach(t => t.completed = completed);\r\n  }\r\n  updateSelectChange(event) {\r\n    this.selectChange = event.checked;\r\n    this.ref.checked = this.selectChange;\r\n    if (this.selectChange == true) {\r\n      this.checklistSelection.clear();\r\n      this.selectAll();\r\n\r\n      // this.treeControl.collapseAll();\r\n    } else {\r\n      this.unSelectAll();\r\n      this.checklistSelection.clear();\r\n      //this.checklistSelection.selected\r\n      //this.treeControl.expandAll();\r\n    }\r\n  }\r\n  updatecollaspedChange(event) {\r\n    this.collaspedChange = event.checked;\r\n    this.collaspedRef.checked = this.collaspedChange;\r\n    if (this.collaspedChange == true) {\r\n      this.treeControl.collapseAll();\r\n    } else {\r\n      this.treeControl.expandAll();\r\n    }\r\n  }\r\n  selectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n  unSelectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n\t  <!-- CENTER -->\r\n\t  <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n\t\t  <!-- HEADER -->\r\n\t\t  <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n\t\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n\t\t\t\t  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n\t\t\t\t  </span>\r\n  \r\n\t\t\t\t  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n\t\t\t\t\t\t  (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n\t\t\t\t\t  <mat-icon>menu</mat-icon>\r\n\t\t\t\t  </button-->\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"roleMenuForm\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"roleMenuForm\" >\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"30\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t(optionSelected)='onClientChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"roleMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"30\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"role\" autocomplete=\"off\" [matAutocomplete]=\"roleAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #roleAuto=\"matAutocomplete\" [displayWith]=\"displayRole\"\r\n\t\t\t\t(optionSelected)='onRoleChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter role name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"roleMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"20\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: 18px;\" >\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"selectChange\"(change)=\"updateSelectChange($event)\" #toggleElement>\r\n\t\t\t\t\t{{selectChange ? 'Select All' : 'Un Select All'}}</mat-slide-toggle> &nbsp;&nbsp;\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"collaspedChange\"(change)=\"updatecollaspedChange($event)\" #toggleCollasped>\r\n\t\t\t\t\t\t{{collaspedChange ? 'Collasped' : 'Un Collasped'}}</mat-slide-toggle>\r\n\t\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" routerLink=\"/chargingStation/crud/list\">Cancel</button> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"20\" style=\"margin-bottom: 18px;\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" style=\"float: right;\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t\t</div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"margin-top:20px ;\">\r\n        <mat-toolbar  style=\"background-color: #00acc1 !important;color:white\" class=\"connector-toolbar\">\r\n          <!-- sidebar toggle button -->\r\n          <h6 class=\"m-0 pl-16 font-normal fz-1\"> \r\n            <button mat-icon-button [style.alignSelf]=\"'center'\"  class=\"mr-16\">\r\n              <mat-icon>list</mat-icon>\r\n            </button> &nbsp;Menu List\r\n          </h6>\r\n        </mat-toolbar>\r\n      </div>\r\n\t</div>\r\n\t<div fxLayout=\"row wrap\"  style=\"padding-top:20px;\">\r\n\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t  <mat-tree #tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t  <mat-checkbox class=\"checklist-leaf-node\"\r\n\t\t\t\t\t\t\t[checked]=\"checklistSelection.isSelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"checklistSelection.isSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t  <div fxLayout=\"row wrap\" style=\"padding-right: 10px;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectAdd\">Add/Update</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDelete\">Delete</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDownload\">Download</mat-checkbox>\r\n\t\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t  </div>           -->\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\t\t\t  \r\n\t\t\t  <button mat-icon-button matTreeNodeToggle\r\n\t\t\t\t\t  [attr.aria-label]=\"'Toggle ' + node.item\">\r\n\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t</mat-icon>\r\n\t\t\t  </button>\r\n\t\t\t  <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n\t\t\t\t\t\t\t[indeterminate]=\"descendantsPartiallySelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t  <!-- <div *ngIf=\"descendantsAllSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t<div class=\"cb-wrapper\" [ngClass]=\"{'cb-vertival': !tmp }\">\r\n\t\t\t\t\t\t\t  <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"allComplete\"  [indeterminate]=\"someComplete(node)\" (change)=\"setAll($event.checked)\" > {{menuAction.name}}</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  <div *ngFor=\"let subMenu of menuAction.subMenu\">\r\n\t\t\t\t\t\t\t\t<mat-checkbox [(ngModel)]=\"subMenu.completed\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"updateAllComplete()\">\r\n\t\t\t\t\t\t\t\t  {{subMenu.name}}\r\n\t\t\t\t\t\t\t\t</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>                   -->\r\n\t\t\t  <!--button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button-->\r\n\t\t\t</mat-tree-node>\r\n\t\t\t\r\n\t\t  </mat-tree>\r\n\t\t  </div>\r\n\t\t \r\n\t\t</div>\r\n\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start start\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t</div> -->\r\n  </form>\r\n</div> \r\n"],"sourceRoot":"webpack:///"}