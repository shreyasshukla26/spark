{"version":3,"sources":["./src/app/main/user-management/user/list/list.component.ts","./src/app/main/user-management/user/list/list.component.html","./src/app/main/user-management/user/action-dialog/action-dialog.component.ts","./src/app/main/user-management/user/action-dialog/action-dialog.component.html","./src/app/main/user-management/user/user-crud/routes.ts","./src/app/main/user-management/user/view-dialog/view-dialog.component.ts","./src/app/main/user-management/user/view-dialog/view-dialog.component.html","./src/app/main/user-management/user/user.module.ts","./src/app/main/user-management/user/user-crud/user-crud.component.ts","./src/app/main/user-management/user/user-crud/user-crud.component.html","./src/app/main/user-management/user/user-routing.module.ts","./src/app/main/user-management/user/create/create.component.ts","./src/app/main/user-management/user/create/create.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACF;AACV;AACY;AACsB;AAEjC;AACE;AACA;AAEkB;AAEgC;AACvE;AACC;AACL;AACkD;;;;;;;;;;;;;;;;;;;ICMnD,2EAA4E;IAAA,mFAC3D;IAAA,+EAA+D;IAA3C,gUAA0B,cAAc,KAAE;IAAC,kEAC5E;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EACA;IADyC,4WAAiC;IAA1E,4DACA;IAAA,+EAA+D;IAA3C,0UAA0B,cAAc,KAAE;IAAC,wEAAa;IAAA,4DAAW;IAC3F,4DAAiB;;;IAF4B,0DAAiC;IAAjC,gGAAiC;;;IANlF,yEACI;IAAA,kHAEuB;IACvB,sIAIiB;IACrB,4DAAK;;;IARM,0DAAmB;IAAnB,sFAAmB;IAGT,0DAAkB;IAAlB,qFAAkB;;;IAMvC,yEAAoC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;;IAI/C,2EAA2E;IAAA,kFAC1D;IAAA,+EAA8D;IAA1C,gUAA0B,aAAa,KAAE;IAAC,iEAAM;IAAA,4DAAW;IAChG,4DAAO;;;;IACP,qFAEI;IAAA,4EACA;IADwC,4WAAiC;IAAzE,4DACA;IAAA,+EAA8D;IAA1C,0UAA0B,aAAa,KAAE;IAAC,wEAAa;IAAA,4DAAW;IAC1F,4DAAiB;;;IAF2B,0DAAiC;IAAjC,gGAAiC;;;IANjF,yEACI;IAAA,kHAEO;IACP,sIAIiB;IACrB,4DAAK;;;IARM,0DAAkB;IAAlB,qFAAkB;IAGR,0DAAiB;IAAjB,oFAAiB;;;IAMtC,yEAAoC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;;IAI/C,2EAAkF;IAAA,sFACjE;IAAA,+EAAqE;IAAjD,gUAA0B,oBAAoB,KAAE;IAAC,kEAClF;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EACA;IAD4C,mXAAwC;IAApF,4DACA;IAAA,+EAAqE;IAAjD,0UAA0B,oBAAoB,KAAE;IAAC,yEACrE;IAAA,4DAAW;IACf,4DAAiB;;;IAH+B,0DAAwC;IAAxC,uGAAwC;;;IAN5F,yEACI;IAAA,kHAEuB;IACvB,sIAKiB;IACrB,4DAAK;;;IATM,0DAAyB;IAAzB,4FAAyB;IAGf,0DAAwB;IAAxB,2FAAwB;;;IAO7C,yEAAoC;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;;IAKtD,2EAA2E;IAAA,8EACvE;IAAA,+EAA8D;IAA1C,gUAA0B,aAAa,KAAE;IAAC,iEAAM;IAAA,4DAAW;IAAC,4DAAO;;;;IAC3F,qFAEI;IAAA,4EACA;IADoC,2WAAgC;IAApE,4DACA;IAAA,+EAA8D;IAA1C,0UAA0B,aAAa,KAAE;IAAC,wEAAa;IAAA,4DAAW;IAC1F,4DAAiB;;;IAFuB,0DAAgC;IAAhC,+FAAgC;;;IAL5E,yEACI;IAAA,kHAC2F;IAC3F,sIAIiB;IACrB,4DAAK;;;IAPM,0DAAkB;IAAlB,qFAAkB;IAER,0DAAiB;IAAjB,oFAAiB;;;IAMtC,yEAAoC;IAAA,uDAAc;IAAA,4DAAK;;;IAAnB,0DAAc;IAAd,yFAAc;;;;IAK9C,2EAA4E;IAAA,+EACxE;IAAA,+EAA+D;IAA3C,gUAA0B,cAAc,KAAE;IAAC,iEAAM;IAAA,4DAAW;IAAC,4DAAO;;;;IAC5F,qFAEI;IAAA,4EACA;IADqC,4WAAiC;IAAtE,4DACA;IAAA,+EAA+D;IAA3C,0UAA0B,cAAc,KAAE;IAAC,wEAAa;IAAA,4DAAW;IAC3F,4DAAiB;;;IAFwB,0DAAiC;IAAjC,gGAAiC;;;IAL9E,yEACI;IAAA,kHAC4F;IAC5F,sIAIiB;IACrB,4DAAK;;;IAPM,0DAAmB;IAAnB,sFAAmB;IAET,0DAAkB;IAAlB,qFAAkB;;;IAMvC,yEAAoC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;;IAK/C,2EAA8E;IAAA,kFAC7D;IAAA,+EAAiE;IAA7C,gUAA0B,gBAAgB,KAAE;IAAC,kEAC9E;IAAA,4DAAW;IAAC,4DAAO;;;;IACvB,qFAEI;IAAA,4EACA;IADwC,8WAAmC;IAA3E,4DACA;IAAA,+EAAiE;IAA7C,0UAA0B,gBAAgB,KAAE;IAAC,wEAAa;IAAA,4DAAW;IAC7F,4DAAiB;;;IAF2B,0DAAmC;IAAnC,kGAAmC;;;IANnF,yEACI;IAAA,kHAEuB;IACvB,sIAIiB;IACrB,4DAAK;;;IARM,0DAAqB;IAArB,yFAAqB;IAGX,0DAAoB;IAApB,wFAAoB;;;IAMzC,yEAAoC;IAAA,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,4FAAiB;;;;IAKjD,2EAA4E;IAAA,8EACxE;IAAA,+EAA+D;IAA3C,gUAA0B,cAAc,KAAE;IAAC,iEAAM;IAAA,4DAAW;IAAC,4DAAO;;;;IAC5F,qFAEI;IAAA,4EACA;IADqC,kXAAuC;IAA5E,4DACA;IAAA,+EAA+D;IAA3C,0UAA0B,cAAc,KAAE;IAAC,wEAAa;IAAA,4DAAW;IAC3F,4DAAiB;;;IAFwB,0DAAuC;IAAvC,sGAAuC;;;IALpF,yEACI;IAAA,kHAC4F;IAC5F,sIAIiB;IACrB,4DAAK;;;IAPM,0DAAmB;IAAnB,uFAAmB;IAET,0DAAkB;IAAlB,sFAAkB;;;IAMvC,yEACI;IAAA,uDAAqB;IAAA,4DAAK;;;IADK,2GAAmD;IAClF,0DAAqB;IAArB,gGAAqB;;;IAIzB,yEACI;IAAA,2EAAsD;IAAA,kEAAO;IAAA,4DAAO;IACxE,4DAAK;;;;IACL,yEACI;IAAA,+EAC2B;IADiB,qWAA6B;IAC9C,qEAAU;IAAA,4DAAW;IAAA,kEAChD;IAAA,+EAC2B;IADiB,qVAAoB,MAAM,kBAAU;IACrD,+DAAI;IAAA,4DAAW;IAAA,kEAE1C;IAAA,+EACI;IADuC,oWAA4B;IACnE,kEAAM;IAAA,4DAAW;IAAA,kEACzB;IAAA,4DAAK;;;IAMT,oEAA4D;;;IAC5D,oEAAkE;;;ADrH3E,MAAM,KAAK;CAiBjB;AAED;;GAEG;AASI,MAAM,aAAa;IAsBxB,YAAmB,MAAkB,EAAS,WAAyB,EAC7D,QAAsB;QAC9B,mBAAmB;QACnB,2EAA2E;QAH1D,WAAM,GAAN,MAAM,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAc;QAC7D,aAAQ,GAAR,QAAQ,CAAc;QArBhC,SAAI,GAAG,CAAC,CAAC,YAAY,EAAE,WAAW,EAAC,eAAe,EAAC,OAAO,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,CAAC,CAAC,CAAC;QACzH,qBAAgB,GAAa,CAAE,QAAQ,EAAE,QAAQ,EAAC,eAAe,EAAC,OAAO,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC;QAQjH,iBAAY,GAAG,KAAK,CAAC;QACrB,gBAAW,GAAG,KAAK,CAAC;QACpB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,gBAAW,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QAUpB,6DAA6D;IAC/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,+DAAc,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAC7D,CAAC,IAAQ,EAAC,EAAE;YACV,IAAG,IAAI,IAAI,IAAI,EAAC;gBACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACrC,IAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,EAAC;wBAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,QAAQ,CAAC;qBACvC;yBAAI;wBACH,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC;qBACzC;oBACD,IAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,IAAI,EAAC;wBACrC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,EAAE,CAAC;qBAClC;oBAED,IAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,EAAC;wBAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;qBAC1B;oBAED,IAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAC;wBAC9B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;qBAC3B;iBAIF;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aAClC;iBAAI;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,oBAAoB,EAAE,SAAS,EAAC,EAAC,QAAQ,EAAG,IAAI,EAAE,CAAC;gBACtF,OAAO;aACR;QAGH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QACT,CAAC,CACF;IAEH,CAAC;IAED,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mHAA0B,EAAE;YACrE,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEL,8FAA8F;QAE5F,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACrD,IAAK,MAAM,EACX;gBACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAQ,EAAC,EAAE;oBACV,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;wBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;wBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,aAAa,EAAC,SAAS,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC,CAAC;qBAC3E;yBAAI;wBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,SAAS,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC,CAAC;qBAC5D;gBAEH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;gBAET,CAAC,CACF;aACF;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,MAAM,GAAG;YACX,MAAM,EAAG,MAAM;YACf,IAAI,EAAG,IAAI;SACZ;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uFAAmB,EAAE;YACtD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,MAAM;YACZ,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,mBAAmB;YAC/B,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,IAAI,IAAI,EAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aACxB;QAEJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEC,UAAU,CAAC,MAAM,EAAC,IAAI;QAEpB,IAAI,MAAM,GAAG;YACX,MAAM,EAAG,MAAM;YACf,IAAI,EAAG,IAAI;SAEZ;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;YACxD,KAAK,EAAE,QAAQ;YACf,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,mBAAmB;YAC/B,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAEzC,IAAG,MAAM,IAAI,IAAI,EAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aACxB;YACF,qBAAqB;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,IAAI;QAEX,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CACrC,CAAC,IAAQ,EAAC,EAAE;YACV,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvF,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;iBAAI;gBACH,IAAG,IAAI,CAAC,QAAQ,IAAI,sBAAsB,EAAC;oBACzC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC9B,IAAI,KAAK,GAAG,IAAI,CAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oBAE5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;oBAClD,IAAG,IAAI,CAAC,QAAQ,IAAI,YAAY,EAAE;wBAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,aAAa,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAClF;oBAAA,IAAG,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAC;wBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACxF;oBAAA,IAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAC;wBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,kBAAkB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACvF;oBACD,IAAG,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAC;wBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,gBAAgB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACrF;oBAAA,IAAG,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAC;wBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACxF;iBACF;qBAAI;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjE;gBACD,kEAAkE;aACnE;QAEH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,CAAC,CACF;IAEL,CAAC;IACD,gBAAgB,CAAC,aAAa;QAE5B,IAAG,aAAa,IAAI,cAAc,EAAC;YACjC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;QAED,IAAG,aAAa,IAAI,aAAa,EAAC;YAChC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;QACD,IAAG,aAAa,IAAI,oBAAoB,EAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;YACnD,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC;SACtC;QACD,IAAG,aAAa,IAAI,aAAa,EAAC;YAChC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC;SAC9B;QACD,IAAG,aAAa,IAAI,cAAc,EAAC;YACjC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;QACD,IAAG,aAAa,IAAI,gBAAgB,EAAC;YACnC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;SACjC;QACD,IAAG,aAAa,IAAI,cAAc,EAAC;YACjC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;SACrC;IACF,CAAC;IAED,WAAW;QAET,mDAAmD;QACnD,wGAAwG;QACxG,mDAAmD;QACnD,0DAA0D;QAE1D,qBAAqB;QACrB,6CAA6C;QAC7C,wBAAwB;QACxB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAG,EAAC,YAAY,EAAC,UAAU,CAAC,MAAM,EAAC,WAAW,EAAC,UAAU,CAAC,MAAM,EAAC,eAAe,EAAC,UAAU,CAAC,aAAa;gBACrG,OAAO,EAAE,UAAU,CAAC,KAAK,EAAC,SAAS,EAAC,UAAU,CAAC,MAAM,EAAC,WAAW,EAAC,UAAU,CAAC,QAAQ,EAAC,SAAS,EAAC,UAAU,CAAC,MAAM;gBACjH,WAAW,EAAC,UAAU,CAAC,QAAQ,EAAC,WAAW,EAAC,UAAU,CAAC,QAAQ;gBACjE,QAAQ,EAAC,UAAU,CAAC,YAAY,EAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QAGA,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,MAAM,QAAQ,GAAkB,0CAAU,CAAC,QAAQ,EAAE,CAAC;QACtD,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC3D,8CAAc,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACzC,yDAAyD;QACxD,yBAAyB;IAG5B,CAAC;IAED,SAAS;QACR,wBAAwB;QACxB,IAAI,GAAG,GAAG,IAAI,4CAAK,CAAC,EAAE,uCAAuC;SAE5D,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC9C,2EAA2E;YAC3E,qCAAqC;YACrC,IAAI,IAAI,GAAE,CAAC,MAAM,CAAC,MAAM,EAAC,MAAM,CAAC,MAAM,EAAC,MAAM,CAAC,aAAa,EAAC,MAAM,CAAC,KAAK,EAAC,MAAM,CAAC,MAAM,EAAC,MAAM,CAAC,QAAQ,EAAC,MAAM,CAAC,MAAM,EAAC,MAAM,CAAC,QAAQ,EAAC,MAAM,CAAC,QAAQ,EAAC,MAAM,CAAC,YAAY,CAAC,CAAE;YAE3K,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QACD,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,IAAI,GAAG,GAAG,2CAA2C,CAAC;QACtD,IAAI,UAAU,GAAG,4CAA4C,CAAC;QAC/D,QAAQ,CAAC,GAAG,GAAE,UAAU,CAAC;QACzB,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAElB,GAAW,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,EAAE,SAAS,EAAE,SAAS,EAAC,SAAS,EAAC,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAC;YAC3D,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aAEZ;YAED,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACnB,WAAW,EAAE,IAAI,CAAC,EAAE;YACpB,CAAC;YACD,WAAW,EAAC,IAAI,GAAE;gBAChB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;gBAEvF,GAAG,CAAC,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;gBAC9B,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;gBACpB,GAAG,CAAC,SAAS,CAAE,GAAG,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC,CAAC,CAAC;gBAC3C,GAAG,CAAC,IAAI,CAAC,iCAAiC,EAAC,EAAE,EAAC,GAAG,EAAC,IAAI,EAAC,EAAE,CAAG,CAAC;gBAC7D,GAAG,CAAC,SAAS,CAAE,GAAG,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;gBACzC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACtB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAE,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAEvC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,EAAC,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;gBAC/E,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC;QAEF,8CAA8C;QAC9C,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC9B,yBAAyB;QACzB,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAE/B,CAAC;IACD,YAAY,CAAC,GAAG;QACd,IAAI,OAAO,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAC1C,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAClB,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACvB,+BAA+B;QAE/B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,EAAC,GAAG,GAAC,EAAE,EAAC,GAAG,GAAC,EAAE,EAAC,IAAI,EAAC,IAAI,EAAC,OAAO,CAAC;QAI1F,OAAO,GAAG,CAAC;IAEb,CAAC;;0EAzVU,aAAa;6FAAb,aAAa;wEASb,wEAAY;wEACZ,8DAAO;;;;;;QCtDpB,yEAGI;QAAA,4EACI;QADkC,qIAAS,iBAAa,IAAC;QACzD,2EAAU;QAAA,4EAAiB;QAAA,4DAAW;QACxC,4DAAS;QAAA,wEACT;QAAA,4EACE;QADoC,qIAAS,eAAW,IAAC;QACzD,2EAAU;QAAA,yEAAc;QAAA,4DAAW;QACrC,4DAAS;QAEf,4DAAM;QACN,yEACI;QAAA,yEAEI;QAAA,uEACI;QAAA,4EAEI;QAAA,4EACI;QAAA,yGASK;QACL,yGAAwD;QAC5D,qEAAe;QACf,4EACI;QAAA,yGASK;QACL,yGAAwD;QAC5D,qEAAe;QACf,6EACI;QAAA,yGAUK;QACL,yGAA+D;QACnE,qEAAe;QAEf,6EACI;QAAA,yGAQK;QACL,yGAAuD;QAC3D,qEAAe;QAEf,6EACI;QAAA,yGAQK;QACL,yGAAwD;QAC5D,qEAAe;QAEf,6EACI;QAAA,yGASK;QACL,yGAA0D;QAC9D,qEAAe;QAEf,6EACI;QAAA,yGAQK;QACL,0GAC8B;QAClC,qEAAe;QAEf,6EACI;QAAA,0GAEK;QACL,0GAQK;QACT,qEAAe;QAKf,0GAA4D;QAC5D,0GAAkE;QAItE,4DAAQ;QAER,gFAAkE;QACtE,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA7HsC,2DAAyB;QAAzB,sFAAyB;QAmHjC,2DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAMhD,0DAAkC;QAAlC,kJAAkC;gkGDhG5C,+DAAc;6FAGlB,aAAa;cARzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAK,+DAAc;aAE9B;qSAU0C,SAAS;kBAAjD,uDAAS;mBAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;YACH,IAAI;kBAAvC,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AE1DpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAC8B;AAItC;AAE9B;AACO;AACA;AAEF;AAOoB;;;;;;;;;;;;;;;;;;;;;;;;;;ICFxD,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMF,4EAA8C;IAAA,gFAAqB;IAAA,4DAAY;;;IAO7E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMF,4EAAgD;IAAA,+EAAoB;IAAA,4DAAY;;;IAO9E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMF,4EAA+C;IAAA,kFAC/C;IAAA,4DAAY;;;IAbd,qFACE;IAAA,4EAAW;IAAA,8DAAG;IAAA,4DAAY;IAC1B,uEACA;IAAA,2FACE;IAAA,kJAEa;;IACf,4DAAmB;IACnB,0EACE;IAAA,+EAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAA+E;IAAA,gEAAI;IAAA,4DAAW;IAChG,4DAAM;IACN,kJACY;IACd,4DAAiB;;;;IAZ0D,0DAA+B;IAA/B,iFAA+B;IACvD,0DAA0B;IAA1B,0FAA0B;IAC1C,0DAA6B;IAA7B,+JAA6B;IAQlD,0DAAiC;IAAjC,oGAAiC;;;IAO3C,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFsD,6EAAgB;IACjF,0DACF;IADE,2FACF;;;IAOF,4EACE;IAAA,2FACF;IAAA,4DAAY;;;IAfd,qFACE;IAAA,4EAAW;IAAA,kFAAuB;IAAA,4DAAY;IAC9C,uEACA;IAAA,2FACE;IAAA,kJAEa;;IACf,4DAAmB;IACnB,0EACE;IAAA,+EAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAAuF;IAAA,iEACvF;IAAA,4DAAW;IACb,4DAAM;IACN,kJAEY;IACd,4DAAiB;;;;IAdwC,0DAAyB;IAAzB,iFAAyB;IACrC,0DAA+B;IAA/B,+FAA+B;IACzC,0DAAkC;IAAlC,oKAAkC;IASvD,0DAAkC;IAAlC,qGAAkC;;;IAW9C,4EAA2D;IAAA,iFAAsB;IAAA,4DAAY;;;IAC7F,4EAA0D;IAAA,4FAAiC;IAAA,4DAAY;;;IAOvG,4EAA0D;IAAA,4FAAiC;IAAA,4DAAY;;;IAOvG,4EAA2D;IAAA,gFAAqB;IAAA,4DAAY;;;IAC5F,4EAA0D;IAAA,4FAAiC;IAAA,4DAAY;;;IAevG,4EAA6C;IAAA,qFAA0B;IAAA,4DAAY;;;IAOnF,4EAA4D;IAAA,6EAAkB;IAAA,4DAAY;;;IAC1F,4EAA2D;IAAA,mFAAwB;IAAA,4DAAY;;;IAO/F,4EAAiD;IAAA,sFACjD;IAAA,4DAAY;;;IACZ,4EAA6D;IAAA,4FAAiC;IAAA,4DAAY;;;IAU1G,4EAAgD;IAAA,iFAChD;IAAA,4DAAY;;;IA6BZ,4EAA6D;IAAA,+EAC7D;IAAA,4DAAY;;;IACZ,4EAA4D;IAAA,0FAC5D;IAAA,4DAAY;;;IAOZ,4EAA+D;IAAA,0FAC/D;IAAA,4DAAY;;;IAOZ,4EAA2C;IAAA,mFAC3C;IAAA,4DAAY;;;IACZ,4EAAuD;IAAA,4FAAiC;IAAA,4DAAY;;;IAuBpG,4EAAsD;IAAA,qFACtD;IAAA,4DAAY;;;IAMZ,4EAAsD;IAAA,qFACtD;IAAA,4DAAY;;;IAQZ,4EAA4D;IAAA,iFAC5D;IAAA,4DAAY;;;IACZ,4EAA2D;IAAA,uFAC3D;IAAA,4DAAY;;;IAYV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMF,4EAA+C;IAAA,gFAAqB;IAAA,4DAAY;;;IAQ9E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMF,4EAA6C;IAAA,8EAAmB;IAAA,4DAAY;;;IAQ1E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMF,4EAA4C;IAAA,6EAAkB;IAAA,4DAAY;;;IAS1E,4EAAkD;IAAA,iFAClD;IAAA,4DAAY;;ADlRtB,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AASM,MAAM,qBAAqB;IAgChC,YAAoB,EAAe,EAAU,QAAqB,EAAS,sBAA8C,EAAU,QAAkB,EAAS,cAAgC,EAAU,WAAwB,EACtN,UAAsB,EAAU,WAAwB,EAAS,SAA8C,EACtF,IAAmB,EAAU,aAA4B;QAFxE,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAAS,2BAAsB,GAAtB,sBAAsB,CAAwB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,mBAAc,GAAd,cAAc,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAa;QACtN,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,cAAS,GAAT,SAAS,CAAqC;QACtF,SAAI,GAAJ,IAAI,CAAe;QAAU,kBAAa,GAAb,aAAa,CAAe;QA/B5F,eAAU,GAAG,KAAK,CAAC;QAGnB,WAAM,GAAG,KAAK,CAAC;QAsBf,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,iBAAY,GAAW,KAAK,CAAC;QAE7B,aAAQ,GAAW,KAAK,CAAC;QA4KzB,qBAAgB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YACpE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAClB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aACxC;iBAAM,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE;gBAChE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aACvC;QACH,CAAC;IA/K+F,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IAEpB,CAAC;IAED,UAAU;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAEhE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpE,OAAO,EAAC,CAAC,EAAE,EAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,QAAQ,EAAE,CAAC,EAAE,EAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACjD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACjD,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACvD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC,CAAC;YAC7F,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACtF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACpE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7E,QAAQ,EAAE,CAAC,EAAE,CAAC;YAEd,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9F,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACxC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,0CAA0C;QAC1C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,sCAAsC;QACtC,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAED,KAAK;QAEH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAGD,UAAU;QACR,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,MAAM,CAAC;QACX,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,WAAW,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SAChF;aAAI;YACH,MAAM,GAAE;gBACN,SAAS,EAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,EAAE,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC/D,YAAY,EAAE,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACvE,SAAS,EAAC,UAAU,CAAC,QAAQ,CAAC,IAAI;gBAClC,OAAO,EAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBAC9B,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,aAAa,EAAE,UAAU,CAAC,SAAS;gBACnC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,CAAC;gBAC5D,KAAK,EAAG,UAAU,CAAC,OAAO;gBAC1B,MAAM,EAAG,UAAU,CAAC,QAAQ;gBAC5B,UAAU,EAAE,UAAU,CAAC,WAAW;gBAClC,QAAQ,EAAG,UAAU,CAAC,QAAQ;gBAC9B,MAAM,EAAG,UAAU,CAAC,QAAQ;gBAC5B,yCAAyC;gBACzC,QAAQ,EAAE,UAAU,CAAC,cAAc;gBACnC,QAAQ,EAAE,UAAU,CAAC,cAAc;gBACnC,GAAG,EAAE,UAAU,CAAC,OAAO;gBACvB,QAAQ,EAAE,UAAU,CAAC,UAAU;gBAC/B,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE;gBACjC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC7B,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC3B,UAAU,EAAC,GAAG;gBACd,MAAM,EAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;gBACzC,mBAAmB,EAAC,KAAK;gBACzB,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;aACrC;YACD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBAC7B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aAC/C;iBAAM;gBACL,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aAC9C;YACD,IAAG,IAAI,CAAC,UAAU,EAAE;gBAClB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CACvC,CAAC,IAAQ,EAAE,EAAE;oBACX,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;wBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBACvF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;qBACxB;gBACH,CAAC,EAAC,CAAC,GAAG,EAAE,EAAE;oBACR,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,CAAC,CACF,CAAC;aACH;iBAAI;gBACH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CACvC,CAAC,IAAS,EAAG,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,cAAc,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAClF,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACzB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAClF,CAAC,CACF;aAEF;YAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC9B;IAEH,CAAC;IAED,eAAe,CAAC,IAAe;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3C,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACnC,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACX,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,gEAAgE;QAEhE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC;IAQD,uBAAuB;QACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACvD,CAAC;IACD,8BAA8B;QAC5B,IAAI,CAAC,0BAA0B,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC;IACrE,CAAC;IACD,YAAY,CAAC,UAAU,EAAC,SAAS;QAE/B,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,SAAS,CACvE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAE5B,IAAG,IAAI,CAAC,UAAU,EAAC;gBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC7E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;gBAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;qBAClE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CACjE,CAAC;aACH;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IAEH,CAAC;IACD,YAAY,CAAC,MAAM;QACjB,sBAAsB;QACtB,IAAG,MAAM,CAAC,IAAI,IAAI,OAAO,EAAC;YAExB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;SAC7C;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;SAC7C;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,KAAK,EAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aACG,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC3B;aACG;YACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IACD,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;qBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC;gBACb,mEAAmE;gBACnE,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;aACL;QAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;qBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC;gBACb,mEAAmE;gBACnE,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;gBACJ,IAAI,QAAQ,IAAI,IAAI,EAAE;oBACpB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;iBAClC;aACF;QAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAQ,EAAC,EAAE;YAEV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;qBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;aACD;QAEF,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACL;IACH,CAAC;IAGD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,eAAe,CAAC,IAAY;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3F,CAAC;IACD,eAAe;QAEb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAElD,GAAG;QACH,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,oBAAoB;YACpB,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACtC,GAAG;gBACH,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;oBACnB,oBAAoB;oBACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBAC3E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;yBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;oBACJ,IAAI;oBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC1C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC9D,CAAC,SAAc,EAAE,EAAE;wBACjB,oBAAoB;wBACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC;wBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;6BAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;oBACD,IAAI;oBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACtC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,QAAa,EAAE,EAAE;wBAChB,oBAAoB;wBACpB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC5B,mEAAmE;wBACnE,6CAA6C;wBAE7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;6BAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;gBACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBAEX,CAAC,CACF;aACF;iBAAM;aAEN;QAGH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAG/B,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,SAAc,EAAE,EAAE;YACjB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,oEAAoE;YACpE,6CAA6C;YAE7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnC,yCAAyC;IAC3C,CAAC;IACD,YAAY,CAAC,KAAK;QAEhB,yCAAyC;IAC3C,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,UAAe,EAAE,EAAE;YAClB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,oEAAoE;YACpE,6CAA6C;YAE7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;YACnB,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,YAAY,CAAC,IAAY;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,WAAW,CAAC,IAAY;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,WAAW,CAAC,SAAS;QAEnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3E,IAAI,QAAQ,IAAI,IAAI,EAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC5C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBACnC;aACF;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBAC9D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IAEH,CAAC;IACD,UAAU,CAAC,IAAS;QAClB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,UAAU;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CACvE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC5D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC/B;YACC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY;iBAChE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAClE,CAAC;QACR,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,IAAS;QACrB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,mBAAmB,CAAC,IAAY;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACxF,CAAC;IACD,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC;YACrC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACzF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC9C;YACD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;iBACpE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC1E,CAAC;QACN,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI;QACN,CAAC,CAAC;IACN,CAAC;IACD,eAAe,CAAC,IAAS;QACvB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,eAAe,CAAC,IAAY;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACpG,CAAC;;0FAloBU,qBAAqB,w1CAkCrB,wEAAe;qGAlCf,qBAAqB;;;;;;;qFAFrB,CAAC,wDAAQ,CAAC;QChCvB,8EACqE;QADR,+IAAS,sBAAkB,IAAC;QACpB,gEAAK;QAAA,4DAAW;QAErF,iFAAoC;QAAA,sEAAW;QAAA,4DAAc;QAC7D,yEACC;QAAA,yEACC;QAAA,0EAEI;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,uEAEA;QAAA,0FAEE;QADF,gLAAkB,uCAAmC,IAAC;QACpD,kIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAAiF;QAAA,0EAAc;QAAA,4DAAW;QAC1G,4DAAM;QACR,gIAA+E;QACjF,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,2FACE;QAD4E,gLAAkB,qCAAiC,IAAC;QAChI,kIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAA4E;QAAA,gEAAI;QAAA,4DAAW;QAC7F,4DAAM;QACN,gIAAgF;QAClF,4DAAiB;QAEjB,2IAciB;QACjB,2IAgBiB;QACnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,wEACA;QAAA,gFAAgF;QAAA,0EAAc;QAAA,4DAAW;QACzG,gIAA6F;QAC7F,gIAAuG;QACzG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,wEACA;QAAA,gFAAiF;QAAA,0EAAc;QAAA,4DAAW;QAC1G,gIAAuG;QACzG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,gFAAgF;QAAA,0EAAc;QAAA,4DAAW;QACzG,gIAA4F;QAC5F,gIAAuG;QACzG,4DAAiB;QAEnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,wEAEA;QAAA,2EACE;QAAA,gFAAwF;QAAA,gEAAI;QAAA,4DAAW;QACvG,wFAAqE;QACrE,qFAAuD;QACzD,4DAAM;QACN,gIAAmF;QACrF,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,gFAA2E;QAAA,gEAAI;QAAA,4DAAW;QAC1F,gIAA0F;QAC1F,gIAA+F;QACjG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QACjG,gIACY;QACZ,gIAA0G;QAC5G,4DAAiB;QACnB,4DAAM;QAEN,0EAEE;QAAA,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA+E;QAAA,0EAAc;QAAA,4DAAW;QACxG,gIACY;QACd,4DAAiB;QAqBnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,8EAAW;QAAA,0EAAa;QAAA,4DAAY;QACpC,yEACA;QAAA,iFAAmF;QAAA,0EAAa;QAAA,4DAAW;QAC3G,kIACY;QACZ,kIACY;QACd,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,oFAAuB;QAAA,4DAAY;QAC9C,yEACA;QAAA,iFAAsF;QAAA,0EAAa;QAAA,4DAAW;QAC9G,kIACY;QACd,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,uEAAU;QAAA,4DAAY;QACjC,yEACA;QAAA,iFAA8E;QAAA,iEAAI;QAAA,4DAAW;QAC7F,kIACY;QACZ,kIAAoG;QACtG,4DAAiB;QAEnB,4DAAM;QAEN,2EAEE;QAAA,uFACE;QAAA,8EAAW;QAAA,0EAAa;QAAA,4DAAY;QACpC,yEACA;QAAA,iFAA4E;QAAA,iEAAI;QAAA,4DAAW;QAC7F,4DAAiB;QAEnB,4DAAM;QAGN,2EAAkD;QAAA,gFAAmB;QAAA,4DAAK;QAE1E,2EACE;QAAA,sFACE;QAAA,8EAAW;QAAA,2EAAc;QAAA,4DAAY;QACrC,yEACA;QAAA,iFAAkF;QAAA,iEAAI;QAAA,4DAAW;QACjG,kIACY;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,2EAAc;QAAA,4DAAY;QACrC,yEACA;QAAA,iFAAkF;QAAA,iEAAI;QAAA,4DAAW;QACjG,kIACY;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAE/B,8EAEA;QAF0D,gJAAU,qBAAiB,IAAC;QAAtF,4DAEA;QAAA,iFAA8E;QAAA,sEAAS;QAAA,4DAAW;QAClG,kIACY;QACZ,kIACY;QACd,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,uFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEAGA;QAAA,4FAEE;QADA,iLAAkB,wCAAoC,IAAC;QACvD,oIAEa;;QACf,4DAAmB;QACnB,4EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA8E;QAAA,0EAAa;QAAA,4DAAW;QACxG,4DAAM;QACN,kIAAgF;QAClF,4DAAiB;QACjB,uFACE;QAAA,8EAAW;QAAA,kEAAK;QAAA,4DAAY;QAC5B,yEAEA;QAAA,4FAEE;QADA,iLAAkB,sCAAkC,IAAC;QACrD,oIAEa;;QACf,4DAAmB;QACnB,4EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA4E;QAAA,0EAAa;QAAA,4DAAW;QACtG,4DAAM;QACN,kIAA4E;QAC9E,4DAAiB;QACjB,uFACE;QAAA,8EAAW;QAAA,iEAAI;QAAA,4DAAY;QAC3B,yEAEA;QAAA,4FAEE;QADF,iLAAkB,qCAAiC,IAAC;QAClD,oIAEa;;QACf,4DAAmB;QACnB,4EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA2E;QAAA,0EAAa;QAAA,4DAAW;QACrG,4DAAM;QACN,kIAA0E;QAC5E,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAC/B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QACpG,kIACY;QACd,4DAAiB;QACjB,4EACE;QAAA,6FAEE;QAF0E,iKAAU,wBAAoB,IAAC;QAEzG,yDAAkC;QAAA,4DAAmB;QACzD,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,+EAAuF;QAAlB,+IAAS,WAAO,IAAC;QAAC,mEAAM;QAAA,4DAAS;QAEtG,+EACyB;QAAvB,+IAAS,gBAAY,IAAC;QAAC,iEAAI;QAAA,4DAAS;QACxC,4DAAM;QAER,4DAAO;QACT,4DAAM;QACR,4DAAM;;;;;;;;QAhTE,0DAAkB;QAAlB,+EAAkB;QAKwD,0DAA8B;QAA9B,gFAA8B;QAEtD,0DAA6B;QAA7B,0FAA6B;QAE5C,0DAAgC;QAAhC,iKAAgC;QAQrD,0DAAgC;QAAhC,gGAAgC;QAK8B,0DAAgC;QAAhC,gFAAgC;QACxD,0DAA2B;QAA3B,wFAA2B;QAC5C,0DAA8B;QAA9B,+JAA8B;QAQnD,0DAAkC;QAAlC,kGAAkC;QAGe,0DAAc;QAAd,8EAAc;QAeb,0DAAkB;QAAlB,kFAAkB;QAwBpE,0DAA6C;QAA7C,6GAA6C;QAC7C,0DAA4C;QAA5C,4GAA4C;QAO5C,0DAA4C;QAA5C,4GAA4C;QAO5C,0DAA6C;QAA7C,6GAA6C;QAC7C,0DAA4C;QAA5C,4GAA4C;QAQxC,0DAAqB;QAArB,+EAAqB;QAIF,0DAAW;QAAX,qEAAW;QAGlC,0DAA+B;QAA/B,+FAA+B;QAO/B,0DAA8C;QAA9C,8GAA8C;QAC9C,0DAA6C;QAA7C,6GAA6C;QAO7C,0DAAmC;QAAnC,mGAAmC;QAEnC,0DAA+C;QAA/C,+GAA+C;QAU/C,0DAAkC;QAAlC,kGAAkC;QA8BlC,0DAA+C;QAA/C,+GAA+C;QAE/C,0DAA8C;QAA9C,8GAA8C;QAQ9C,0DAAiD;QAAjD,iHAAiD;QAQjD,0DAA6B;QAA7B,6FAA6B;QAE7B,0DAAyC;QAAzC,yGAAyC;QAuBzC,2DAAwC;QAAxC,wGAAwC;QAOxC,0DAAwC;QAAxC,wGAAwC;QASxC,0DAA8C;QAA9C,8GAA8C;QAE9C,0DAA6C;QAA7C,6GAA6C;QAQgB,0DAA+B;QAA/B,iFAA+B;QAGvD,0DAA8B;QAA9B,2FAA8B;QAE9C,0DAAgC;QAAhC,kKAAgC;QAQrD,0DAAiC;QAAjC,iGAAiC;QAI0B,0DAA6B;QAA7B,iFAA6B;QAErD,0DAA4B;QAA5B,yFAA4B;QAE1C,0DAA8B;QAA9B,gKAA8B;QAQnD,0DAA+B;QAA/B,+FAA+B;QAI2B,0DAA4B;QAA5B,iFAA4B;QAEpD,0DAA2B;QAA3B,wFAA2B;QAExC,0DAA6B;QAA7B,+JAA6B;QAQlD,0DAA8B;QAA9B,8FAA8B;QAS9B,0DAAoC;QAApC,oGAAoC;QAIS,0DAAkB;QAAlB,+EAAkB;QAEzE,0DAAkC;QAAlC,6GAAkC;28ED1QhC,+DAAc;6FAGf,qBAAqB;cARjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;gBAC7C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;gBAC1B,SAAS,EAAE,CAAC,wDAAQ,CAAC;aACtB;;sBAmCK,oDAAM;uBAAC,wEAAe;4HARE,MAAM;kBAAjC,uDAAS;mBAAC,eAAe;YACE,GAAG;kBAA9B,uDAAS;mBAAC,eAAe;;;;;;;;;;;;;;AE9D5B;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;GAMG;AAG4D;AAEF;AACN;AAEhD,MAAM,gBAAgB,GAAW;IACtC,EAAE,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAG,wEAAe,EAAE,WAAW,EAAC,CAAC,4EAAS,CAAC,EAAE;IACzE,EAAE,IAAI,EAAG,MAAM,EAAE,SAAS,EAAG,kEAAa,EAAG,WAAW,EAAE,CAAC,4EAAS,CAAC,EAAE;IACvE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;;;;;;;;;;;;;AClBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAC4B;AAIpC;AAE9B;AACK;AACE;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;ICKlC,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMF,4EAA8C;IAAA,gFAAqB;IAAA,4DAAY;;;IAO7E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMF,4EAAgD;IAAA,+EAAoB;IAAA,4DAAY;;;IAO9E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMF,4EAA+C;IAAA,kFAC/C;IAAA,4DAAY;;;IAbd,qFACE;IAAA,4EAAW;IAAA,8DAAG;IAAA,4DAAY;IAC1B,uEACA;IAAA,2FACE;IAAA,gJAEa;;IACf,4DAAmB;IACnB,0EACE;IAAA,+EAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAA+E;IAAA,gEAAI;IAAA,4DAAW;IAChG,4DAAM;IACN,gJACY;IACd,4DAAiB;;;;IAZ0D,0DAA+B;IAA/B,iFAA+B;IACvD,0DAA0B;IAA1B,0FAA0B;IAC1C,0DAA6B;IAA7B,+JAA6B;IAQlD,0DAAiC;IAAjC,oGAAiC;;;IAO3C,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFsD,6EAAgB;IACjF,0DACF;IADE,2FACF;;;IAOF,4EACE;IAAA,2FACF;IAAA,4DAAY;;;IAfd,qFACE;IAAA,4EAAW;IAAA,kFAAuB;IAAA,4DAAY;IAC9C,uEACA;IAAA,2FACE;IAAA,gJAEa;;IACf,4DAAmB;IACnB,0EACE;IAAA,+EAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAAuF;IAAA,iEACvF;IAAA,4DAAW;IACb,4DAAM;IACN,gJAEY;IACd,4DAAiB;;;;IAdwC,0DAAyB;IAAzB,iFAAyB;IACrC,0DAA+B;IAA/B,+FAA+B;IACzC,0DAAkC;IAAlC,oKAAkC;IASvD,0DAAkC;IAAlC,qGAAkC;;;IAW9C,4EAA2D;IAAA,iFAAsB;IAAA,4DAAY;;;IAC7F,4EAA0D;IAAA,4FAAiC;IAAA,4DAAY;;;IAOvG,4EAA0D;IAAA,4FAAiC;IAAA,4DAAY;;;IAOvG,4EAA2D;IAAA,gFAAqB;IAAA,4DAAY;;;IAC5F,4EAA0D;IAAA,4FAAiC;IAAA,4DAAY;;;IAevG,4EAA6C;IAAA,qFAA0B;IAAA,4DAAY;;;IAOnF,4EAA4D;IAAA,6EAAkB;IAAA,4DAAY;;;IAC1F,4EAA2D;IAAA,mFAAwB;IAAA,4DAAY;;;IAO/F,4EAAiD;IAAA,sFACjD;IAAA,4DAAY;;;IACZ,4EAA6D;IAAA,4FAAiC;IAAA,4DAAY;;;IAU1G,4EAAgD;IAAA,iFAChD;IAAA,4DAAY;;;IA6BZ,4EAA6D;IAAA,+EAC7D;IAAA,4DAAY;;;IACZ,4EAA4D;IAAA,0FAC5D;IAAA,4DAAY;;;IAOZ,4EAA+D;IAAA,0FAC/D;IAAA,4DAAY;;;IAOZ,4EAA2C;IAAA,mFAC3C;IAAA,4DAAY;;;IACZ,4EAAuD;IAAA,4FAAiC;IAAA,4DAAY;;;IAuBpG,4EAAsD;IAAA,qFACtD;IAAA,4DAAY;;;IAMZ,4EAAsD;IAAA,qFACtD;IAAA,4DAAY;;;IAQZ,4EAA4D;IAAA,iFAC5D;IAAA,4DAAY;;;IACZ,4EAA2D;IAAA,uFAC3D;IAAA,4DAAY;;;IAYV,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFoD,6EAAgB;IAC/E,0DACF;IADE,2FACF;;;IAMF,4EAA+C;IAAA,gFAAqB;IAAA,4DAAY;;;IAQ9E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC7E,0DACF;IADE,2FACF;;;IAMF,4EAA6C;IAAA,8EAAmB;IAAA,4DAAY;;;IAQ1E,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC5E,0DACF;IADE,2FACF;;;IAMF,4EAA4C;IAAA,6EAAkB;IAAA,4DAAY;;;IAS1E,4EAAkD;IAAA,iFAClD;IAAA,4DAAY;;ADjRtB,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AASM,MAAM,mBAAmB;IAgC9B,YAAoB,EAAe,EAAU,QAAqB,EAAS,sBAA8C,EAAU,QAAkB,EAAS,cAAgC,EAAU,WAAwB,EACtN,UAAsB,EAAU,WAAwB,EAAS,SAA8C,EACtF,IAAmB,EAAU,aAA4B;QAFxE,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAa;QAAS,2BAAsB,GAAtB,sBAAsB,CAAwB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,mBAAc,GAAd,cAAc,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAa;QACtN,eAAU,GAAV,UAAU,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,cAAS,GAAT,SAAS,CAAqC;QACtF,SAAI,GAAJ,IAAI,CAAe;QAAU,kBAAa,GAAb,aAAa,CAAe;QA/B5F,eAAU,GAAG,KAAK,CAAC;QAGnB,WAAM,GAAG,KAAK,CAAC;QAsBf,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QACrB,iBAAY,GAAW,KAAK,CAAC;QAE7B,aAAQ,GAAW,KAAK,CAAC;QAwJzB,qBAAgB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YACpE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAClB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aACxC;iBAAM,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE;gBAChE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aACvC;QACH,CAAC;IA3J+F,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IAEpB,CAAC;IAED,UAAU;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAEpE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAEhE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpE,OAAO,EAAC,CAAC,EAAE,EAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,QAAQ,EAAE,CAAC,EAAE,EAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACjD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACjD,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACvD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC,CAAC;YAC7F,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACtF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACpE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7E,QAAQ,EAAE,CAAC,EAAE,CAAC;YAEd,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9F,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACxC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,0CAA0C;QAC1C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,sCAAsC;QACtC,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAED,KAAK;QAEH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAGD,UAAU;QACR,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,MAAM,CAAC;QACX,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC;YACnB,OAAO;SACR;aAAI;YACH,MAAM,GAAE;gBACN,SAAS,EAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,EAAE,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC/D,YAAY,EAAE,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACvE,SAAS,EAAC,UAAU,CAAC,QAAQ,CAAC,IAAI;gBAClC,OAAO,EAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBAC9B,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,aAAa,EAAE,UAAU,CAAC,SAAS;gBACnC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,CAAC;gBAC5D,KAAK,EAAG,UAAU,CAAC,OAAO;gBAC1B,MAAM,EAAG,UAAU,CAAC,QAAQ;gBAC5B,UAAU,EAAE,UAAU,CAAC,WAAW;gBAClC,QAAQ,EAAG,UAAU,CAAC,QAAQ;gBAC9B,MAAM,EAAG,UAAU,CAAC,QAAQ;gBAC5B,yCAAyC;gBACzC,QAAQ,EAAE,UAAU,CAAC,cAAc;gBACnC,QAAQ,EAAE,UAAU,CAAC,cAAc;gBACnC,GAAG,EAAE,UAAU,CAAC,OAAO;gBACvB,QAAQ,EAAE,UAAU,CAAC,UAAU;gBAC/B,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE;gBACjC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC7B,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC3B,UAAU,EAAC,GAAG;gBACd,MAAM,EAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;gBACzC,mBAAmB,EAAC,KAAK;gBACzB,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBAEpC,sCAAsC;aACvC;YACD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;oBAC7B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aAC/C;iBAAM;gBACL,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aAC9C;YAGD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC9B;IAEH,CAAC;IAED,eAAe,CAAC,IAAe;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3C,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACnC,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACX,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,gEAAgE;QAEhE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC;IAQD,uBAAuB;QACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACvD,CAAC;IACD,8BAA8B;QAC5B,IAAI,CAAC,0BAA0B,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC;IACrE,CAAC;IACD,YAAY,CAAC,UAAU,EAAC,SAAS;QAE/B,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,SAAS,CACvE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAE5B,IAAG,IAAI,CAAC,UAAU,EAAC;gBACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC7E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;gBAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;qBAClE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CACjE,CAAC;aACH;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IAEH,CAAC;IACD,YAAY,CAAC,MAAM;QACjB,sBAAsB;QACtB,IAAG,MAAM,CAAC,IAAI,IAAI,OAAO,EAAC;YAExB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;SAC7C;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;SAC7C;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,KAAK,EAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aACG,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC3B;aACG;YACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IACD,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;qBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC;gBACb,mEAAmE;gBACnE,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;aACL;QAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;qBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC;gBACb,mEAAmE;gBACnE,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;gBACJ,IAAI,QAAQ,IAAI,IAAI,EAAE;oBACpB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;iBAClC;aACF;QAEH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAQ,EAAC,EAAE;YAEV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;qBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;aACD;QAEF,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACL;IACH,CAAC;IAGD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,eAAe,CAAC,IAAY;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3F,CAAC;IACD,eAAe;QAEb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAElD,GAAG;QACH,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAClE,CAAC,IAAS,EAAE,EAAE;YACZ,oBAAoB;YACpB,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACtC,GAAG;gBACH,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;oBACnB,oBAAoB;oBACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBAC3E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;yBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;oBACJ,IAAI;oBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBAC1C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC9D,CAAC,SAAc,EAAE,EAAE;wBACjB,oBAAoB;wBACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC;wBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;6BAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;oBACD,IAAI;oBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACtC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,QAAa,EAAE,EAAE;wBAChB,oBAAoB;wBACpB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC5B,mEAAmE;wBACnE,6CAA6C;wBAE7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;6BAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;oBAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;oBAEX,CAAC,CACF;gBACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;gBAEX,CAAC,CACF;aACF;iBAAM;aAEN;QAGH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAG/B,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IACD,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,SAAc,EAAE,EAAE;YACjB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,oEAAoE;YACpE,6CAA6C;YAE7C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnC,yCAAyC;IAC3C,CAAC;IACD,YAAY,CAAC,KAAK;QAEhB,yCAAyC;IAC3C,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,UAAe,EAAE,EAAE;YAClB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,oEAAoE;YACpE,6CAA6C;YAE7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC5D,CAAC,WAAgB,EAAE,EAAE;YACnB,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QAEN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,YAAY,CAAC,IAAS;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,YAAY,CAAC,IAAY;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,WAAW,CAAC,IAAY;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,WAAW,CAAC,SAAS;QAEnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3E,IAAI,QAAQ,IAAI,IAAI,EAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC5C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;iBACnC;aACF;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBAC9D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACN,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IAEH,CAAC;IACD,UAAU,CAAC,IAAS;QAClB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,UAAU;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CACvE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC5D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC/B;YACC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY;iBAChE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAClE,CAAC;QAKR,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,IAAS;QACrB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,mBAAmB,CAAC,IAAY;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACxF,CAAC;IACD,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IACD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC;YACrC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACzF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC9C;YACD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;iBACpE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC1E,CAAC;QACN,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI;QACN,CAAC,CAAC;IACN,CAAC;IACD,eAAe,CAAC,IAAS;QACvB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,eAAe,CAAC,IAAY;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACpG,CAAC;;sFAlnBU,mBAAmB,u1CAkCnB,wEAAe;mGAlCf,mBAAmB;;;;;;;qFAFpB,CAAC,wDAAQ,CAAC;QCjCtB,8EACqE;QADR,6IAAS,sBAAkB,IAAC;QACpB,gEAAK;QAAA,4DAAW;QAErF,iFAAoC;QAAA,sEAAW;QAAA,4DAAc;QAC7D,yEACC;QAAA,yEACC;QAAA,0EAEI;QAAA,yEACE;QAAA,oFACE;QAAA,4EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,uEAEA;QAAA,0FAEE;QADF,8KAAkB,uCAAmC,IAAC;QACpD,gIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAAiF;QAAA,0EAAc;QAAA,4DAAW;QAC1G,4DAAM;QACR,8HAA+E;QACjF,4DAAiB;QAEjB,sFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,2FACE;QAD4E,8KAAkB,qCAAiC,IAAC;QAChI,gIAEa;;QACf,4DAAmB;QACnB,2EACE;QAAA,gFAA2C;QAAA,uEAAW;QAAA,4DAAW;QACjE,gFAA4E;QAAA,gEAAI;QAAA,4DAAW;QAC7F,4DAAM;QACN,8HAAgF;QAClF,4DAAiB;QAEjB,yIAciB;QACjB,yIAgBiB;QACnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,wEACA;QAAA,gFAAgF;QAAA,0EAAc;QAAA,4DAAW;QACzG,8HAA6F;QAC7F,8HAAuG;QACzG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,wEACA;QAAA,gFAAiF;QAAA,0EAAc;QAAA,4DAAW;QAC1G,8HAAuG;QACzG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,wEACA;QAAA,gFAAgF;QAAA,0EAAc;QAAA,4DAAW;QACzG,8HAA4F;QAC5F,8HAAuG;QACzG,4DAAiB;QAEnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,wEAEA;QAAA,2EACE;QAAA,gFAAwF;QAAA,gEAAI;QAAA,4DAAW;QACvG,wFAAwF;QACxF,qFAAuD;QACzD,4DAAM;QACN,8HAAmF;QACrF,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,iEAAK;QAAA,4DAAY;QAC5B,wEACA;QAAA,gFAA2E;QAAA,gEAAI;QAAA,4DAAW;QAC1F,8HAA0F;QAC1F,8HAA+F;QACjG,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,wEACA;QAAA,gFAAkF;QAAA,gEAAI;QAAA,4DAAW;QACjG,8HACY;QACZ,8HAA0G;QAC5G,4DAAiB;QACnB,4DAAM;QAEN,0EAEE;QAAA,sFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACA;QAAA,gFAA+E;QAAA,0EAAc;QAAA,4DAAW;QACxG,8HACY;QACd,4DAAiB;QAqBnB,4DAAM;QAEN,0EACE;QAAA,qFACE;QAAA,8EAAW;QAAA,0EAAa;QAAA,4DAAY;QACpC,yEACA;QAAA,iFAAmF;QAAA,0EAAa;QAAA,4DAAW;QAC3G,gIACY;QACZ,gIACY;QACd,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,oFAAuB;QAAA,4DAAY;QAC9C,yEACA;QAAA,iFAAsF;QAAA,0EAAa;QAAA,4DAAW;QAC9G,gIACY;QACd,4DAAiB;QAEjB,sFACE;QAAA,8EAAW;QAAA,uEAAU;QAAA,4DAAY;QACjC,yEACA;QAAA,iFAA8E;QAAA,iEAAI;QAAA,4DAAW;QAC7F,gIACY;QACZ,gIAAoG;QACtG,4DAAiB;QAEnB,4DAAM;QAEN,2EAEE;QAAA,uFACE;QAAA,8EAAW;QAAA,0EAAa;QAAA,4DAAY;QACpC,yEACA;QAAA,iFAA4E;QAAA,iEAAI;QAAA,4DAAW;QAC7F,4DAAiB;QAEnB,4DAAM;QAGN,2EAAkD;QAAA,gFAAmB;QAAA,4DAAK;QAE1E,2EACE;QAAA,sFACE;QAAA,8EAAW;QAAA,2EAAc;QAAA,4DAAY;QACrC,yEACA;QAAA,iFAAkF;QAAA,iEAAI;QAAA,4DAAW;QACjG,gIACY;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,2EAAc;QAAA,4DAAY;QACrC,yEACA;QAAA,iFAAkF;QAAA,iEAAI;QAAA,4DAAW;QACjG,gIACY;QACd,4DAAiB;QACjB,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAE/B,8EAEA;QAF0D,8IAAU,qBAAiB,IAAC;QAAtF,4DAEA;QAAA,iFAA8E;QAAA,sEAAS;QAAA,4DAAW;QAClG,gIACY;QACZ,gIACY;QACd,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,uFACE;QAAA,8EAAW;QAAA,oEAAO;QAAA,4DAAY;QAC9B,yEAGA;QAAA,4FAEE;QADA,+KAAkB,wCAAoC,IAAC;QACvD,kIAEa;;QACf,4DAAmB;QACnB,4EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA8E;QAAA,0EAAa;QAAA,4DAAW;QACxG,4DAAM;QACN,gIAAgF;QAClF,4DAAiB;QACjB,uFACE;QAAA,8EAAW;QAAA,kEAAK;QAAA,4DAAY;QAC5B,yEAEA;QAAA,4FAEE;QADA,+KAAkB,sCAAkC,IAAC;QACrD,kIAEa;;QACf,4DAAmB;QACnB,4EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA4E;QAAA,0EAAa;QAAA,4DAAW;QACtG,4DAAM;QACN,gIAA4E;QAC9E,4DAAiB;QACjB,uFACE;QAAA,8EAAW;QAAA,iEAAI;QAAA,4DAAY;QAC3B,yEAEA;QAAA,4FAEE;QADF,+KAAkB,qCAAiC,IAAC;QAClD,kIAEa;;QACf,4DAAmB;QACnB,4EACE;QAAA,iFAA2C;QAAA,wEAAW;QAAA,4DAAW;QACjE,iFAA2E;QAAA,0EAAa;QAAA,4DAAW;QACrG,4DAAM;QACN,gIAA0E;QAC5E,4DAAiB;QACnB,4DAAM;QAEN,2EACE;QAAA,sFACE;QAAA,8EAAW;QAAA,qEAAQ;QAAA,4DAAY;QAC/B,yEACA;QAAA,iFAA8E;QAAA,wEAAW;QAAA,4DAAW;QACpG,gIACY;QACd,4DAAiB;QACjB,4EACE;QAAA,6FAEE;QAF0E,+JAAU,wBAAoB,IAAC;QAEzG,yDAAkC;QAAA,4DAAmB;QACzD,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,+EAAuF;QAAlB,6IAAS,WAAO,IAAC;QAAC,mEAAM;QAAA,4DAAS;QAIxG,4DAAM;QAER,4DAAO;QACT,4DAAM;QACR,4DAAM;;;;;;;;QAhTE,0DAAkB;QAAlB,+EAAkB;QAKwD,0DAA8B;QAA9B,gFAA8B;QAEtD,0DAA6B;QAA7B,0FAA6B;QAE5C,0DAAgC;QAAhC,iKAAgC;QAQrD,0DAAgC;QAAhC,gGAAgC;QAK8B,0DAAgC;QAAhC,gFAAgC;QACxD,0DAA2B;QAA3B,wFAA2B;QAC5C,0DAA8B;QAA9B,+JAA8B;QAQnD,0DAAkC;QAAlC,kGAAkC;QAGe,0DAAc;QAAd,8EAAc;QAeb,0DAAkB;QAAlB,kFAAkB;QAwBpE,0DAA6C;QAA7C,6GAA6C;QAC7C,0DAA4C;QAA5C,4GAA4C;QAO5C,0DAA4C;QAA5C,4GAA4C;QAO5C,0DAA6C;QAA7C,6GAA6C;QAC7C,0DAA4C;QAA5C,4GAA4C;QAQxC,0DAAqB;QAArB,+EAAqB;QAIF,0DAAiB;QAAjB,0EAAiB;QAGxC,0DAA+B;QAA/B,+FAA+B;QAO/B,0DAA8C;QAA9C,8GAA8C;QAC9C,0DAA6C;QAA7C,6GAA6C;QAO7C,0DAAmC;QAAnC,mGAAmC;QAEnC,0DAA+C;QAA/C,+GAA+C;QAU/C,0DAAkC;QAAlC,kGAAkC;QA8BlC,0DAA+C;QAA/C,+GAA+C;QAE/C,0DAA8C;QAA9C,8GAA8C;QAQ9C,0DAAiD;QAAjD,iHAAiD;QAQjD,0DAA6B;QAA7B,6FAA6B;QAE7B,0DAAyC;QAAzC,yGAAyC;QAuBzC,2DAAwC;QAAxC,wGAAwC;QAOxC,0DAAwC;QAAxC,wGAAwC;QASxC,0DAA8C;QAA9C,8GAA8C;QAE9C,0DAA6C;QAA7C,6GAA6C;QAQgB,0DAA+B;QAA/B,iFAA+B;QAGvD,0DAA8B;QAA9B,2FAA8B;QAE9C,0DAAgC;QAAhC,kKAAgC;QAQrD,0DAAiC;QAAjC,iGAAiC;QAI0B,0DAA6B;QAA7B,iFAA6B;QAErD,0DAA4B;QAA5B,yFAA4B;QAE1C,0DAA8B;QAA9B,gKAA8B;QAQnD,0DAA+B;QAA/B,+FAA+B;QAI2B,0DAA4B;QAA5B,iFAA4B;QAEpD,0DAA2B;QAA3B,wFAA2B;QAExC,0DAA6B;QAA7B,+JAA6B;QAQlD,0DAA8B;QAA9B,8FAA8B;QAS9B,0DAAoC;QAApC,oGAAoC;QAIS,0DAAkB;QAAlB,+EAAkB;QAEzE,0DAAkC;QAAlC,6GAAkC;q4EDzQ7B,+DAAc;6FAGlB,mBAAmB;cAR/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAK,+DAAc;gBAC7B,SAAS,EAAC,CAAC,wDAAQ,CAAC;aACrB;;sBAmCK,oDAAM;uBAAC,wEAAe;4HARE,MAAM;kBAAjC,uDAAS;mBAAC,eAAe;YACE,GAAG;kBAA9B,uDAAS;mBAAC,eAAe;;;;;;;;;;;;;;AE/D5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACe;AACY;AACR;AACN;AACI;AACsB;AACxB;AACkB;;AAC1E,MAAM,UAAU,GAAE,CAAC,gFAAiB,EAAE,wEAAe,EAAE,kEAAa,CAAC,CAAC;AACtE,MAAM,kBAAkB,GAAE,CAAC,4FAAqB,EAAC,sFAAmB,CAAC,CAAC;AAQ/D,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBALX,CAAC,qEAAY,EAAE,sEAAiB,EAAC,oEAAgB,CAAC;mIAKjD,UAAU,mBATJ,gFAAiB,EAAE,wEAAe,EAAE,kEAAa,EACzC,4FAAqB,EAAC,sFAAmB,aAGvD,qEAAY,EAAE,sEAAiB,EAAC,oEAAgB;6FAKhD,UAAU;cANtB,sDAAQ;eAAC;gBACN,OAAO,EAAC,CAAC,qEAAY,EAAE,sEAAiB,EAAC,oEAAgB,CAAC;gBAC1D,YAAY,EAAG,CAAC,UAAU,EAAC,kBAAkB,CAAC;gBAC9C,eAAe,EAAG,CAAC,kBAAkB,CAAC;aACzC;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AACnB;AAEA;;;;;;;;;ICqB9C,0EAKE;IAAA,uDACF;IAAA,4DAAI;;;;IAJD,uFAA2B;IAG5B,0DACF;IADE,4FACF;;;;ADzBJ;;GAEG;AAQI,MAAM,iBAAiB;IAY5B,YAAoB,MAAc,EAAU,GAAsB,EAAU,eAA+B;QAAvF,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAX3G,eAAe;QACf,aAAQ,GAAG;QACT,mCAAmC;QACnC,uCAAuC;SACxC,CAAC;QAKF,cAAS,GAAG,EAAE,CAAC;IAIf,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;QACnD,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;YACpB,IAAI,CAAC,CAAC,EAAE,KAAK,gBAAgB,EAAE;gBAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,IAAI,SAAS,EAAE;oBAC7E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;wBACpC,IAAI,CAAC,CAAC,EAAE,KAAK,WAAW,EAAE;4BACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;4BACzB,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,IAAI,IAAI,EAAE;gCACvF,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;oCACzC,IAAI,sBAAsB,GAAG,KAAK,CAAC;oCACnC,IAAI,CAAC,CAAC,EAAE,KAAK,MAAM,EAAE;wCACnB,sBAAsB,GAAG,IAAI,CAAC;wCAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;qCACtD;oCACD,IAAI,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;wCACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;qCAC3D;oCACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;oCAC/B,IAAI,CAAC,sBAAsB,EAAE;wCAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;qCAC1E;gCACH,CAAC,CAAC,CAAC;6BACJ;yBAEF;oBAEH,CAAC,CAAC,CAAC;iBACJ;aAEF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,eAAe;QACb,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;YAChE,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,EAAE;gBAC9H,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACtE;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC;IAEJ,CAAC;;kFA5DU,iBAAiB;iGAAjB,iBAAiB;QCf9B,yEACE;QAAA,yEAEE;QACA,yEAEI;QACA,yEAEI;QAAA,yEAEI;QAAA,0EACiD;QAAA,uDACjD;QAAA,4DAAO;QAMX,4DAAM;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACR,yEACI;QAAA,yGAMI;QACN,4DAAM;QACN,2EAAgC;QAClC,4DAAM;;QArBgB,0DAA0C;QAA1C,kNAA0C;QAAC,0DACjD;QADiD,6HACjD;QAYW,0DAAa;QAAb,iFAAa;w6BDZ1B,+DAAc;6FAEf,iBAAiB;cAP7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;gBACzC,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAE,+DAAc;aAC3B;;AAyEM,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QAFxB,8FAAmC;;6FAEnC,wBAAwB;cAJpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,qCAAqC;aAChD;;AAOM,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QAFxB,4GAAiD;;6FAEjD,wBAAwB;cAJpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,mDAAmD;aAC9D;;AAOM,MAAM,wBAAwB;;gGAAxB,wBAAwB;wGAAxB,wBAAwB;QAFxB,gGAAqC;;6FAErC,wBAAwB;cAJpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,uCAAuC;aAClD;;;;;;;;;;;;;;AElGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACe;AACa;AACd;AACS;;;AAC/D,MAAM,MAAM,GAAY;IACpB;QACI,IAAI,EAAG,EAAE,EAAC,SAAS,EAAG,gFAAiB,EAAC,WAAW,EAAE,CAAC,4EAAS,CAAC,EAAE,QAAQ,EAAG,kEAAgB;KAChG;CAEJ;AAOM,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAJhB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAGd,iBAAiB,uFAHf,4DAAY;6FAGd,iBAAiB;cAL7B,sDAAQ;eAAC;gBACN,OAAO,EAAG,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACzC,OAAO,EAAG,CAAC,4DAAY,CAAC;aAC3B;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACgD;AAKjE;AAEG;AACE;AACE;AAEgB;;;;;;;;;;;;;;;;;;;;;;;;;ICD7D,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFoD,6EAAgB;IAChF,0DACD;IADC,2FACD;;;IAOD,4EAA8C;IAAA,gFAAqB;IAAA,4DAAY;;;IAS9E,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC9E,0DACD;IADC,2FACD;;;IAMD,4EAAgD;IAAA,+EAAoB;IAAA,4DAAY;;;IAS/E,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC7E,0DACD;IADC,2FACD;;;IAMD,4EAA+C;IAAA,kFAC/C;IAAA,4DAAY;;;;IAfb,qFACC;IAAA,4EAAW;IAAA,8DAAG;IAAA,4DAAY;IAC1B,uEAEA;IAAA,0FAEC;IADA,oYAAsD;IACtD,kJAEa;;IACd,4DAAmB;IACnB,yEACC;IAAA,+EAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAA+E;IAAA,gEAAI;IAAA,4DAAW;IAC/F,4DAAM;IACN,mJACY;IACb,4DAAiB;;;;IAbf,0DAA+B;IAA/B,iFAA+B;IACiB,0DAA0B;IAA1B,0FAA0B;IAE3C,0DAA6B;IAA7B,+JAA6B;IAQjD,0DAAiC;IAAjC,oGAAiC;;;IAQ5C,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFsD,6EAAgB;IAClF,0DACD;IADC,2FACD;;;IAOD,4EACC;IAAA,2FACD;IAAA,4DAAY;;;IAfb,qFACC;IAAA,4EAAW;IAAA,kFAAuB;IAAA,4DAAY;IAC9C,uEACA;IAAA,2FACC;IAAA,kJAEa;;IACd,4DAAmB;IACnB,yEACC;IAAA,+EAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAAuF;IAAA,iEACvF;IAAA,4DAAW;IACZ,4DAAM;IACN,mJAEY;IACb,4DAAiB;;;;IAduC,0DAAyB;IAAzB,iFAAyB;IACrC,0DAA+B;IAA/B,+FAA+B;IAC1C,0DAAkC;IAAlC,oKAAkC;IAStD,0DAAkC;IAAlC,qGAAkC;;;IAW9C,4EAA2D;IAAA,iFAAsB;IAAA,4DAAY;;;IAC7F,4EAA0D;IAAA,6FAC1D;IAAA,4DAAY;;;IAOZ,4EAA0D;IAAA,6FAC1D;IAAA,4DAAY;;;IAQZ,4EAA2D;IAAA,gFAAqB;IAAA,4DAAY;;;IAC5F,4EAA0D;IAAA,6FAC1D;IAAA,4DAAY;;;IAeZ,4EAA6C;IAAA,sFAC7C;IAAA,4DAAY;;;IAOZ,4EAA4D;IAAA,6EAAkB;IAAA,4DAAY;;;IAC1F,4EAA2D;IAAA,mFAAwB;IAAA,4DAAY;;;IAM/F,4EAAiD;IAAA,sFACjD;IAAA,4DAAY;;;IACZ,4EAA6D;IAAA,6FAC7D;IAAA,4DAAY;;;IAUZ,4EAAgD;IAAA,kFAChD;IAAA,4DAAY;;;IAQZ,4EAA+D;IAAA,gFAAqB;IAAA,4DAAY;;;IAChG,4EAA8D;IAAA,qHAC5C;IAAA,4DAAY;;;IAS9B,4EAAsE;IAAA,yFACtE;IAAA,4DAAY;;;IACZ,4EAAqE;IAAA,qFACrE;IAAA,4DAAY;;;IASZ,4EAA6D;IAAA,+EAC7D;IAAA,4DAAY;;;IACZ,4EAA4D;IAAA,0FAC5D;IAAA,4DAAY;;;IAOZ,4EAA+D;IAAA,0FAC/D;IAAA,4DAAY;;;IAMZ,4EAA2C;IAAA,4EAC3C;IAAA,4DAAY;;;IACZ,4EAAuD;IAAA,4FAAiC;IAAA,4DAAY;;;IAoBpG,4EAAsD;IAAA,qFACtD;IAAA,4DAAY;;;IAMZ,4EAAsD;IAAA,qFACtD;IAAA,4DAAY;;;IAQZ,4EAA4D;IAAA,iFAC5D;IAAA,4DAAY;;;IACZ,4EAA2D;IAAA,uFAC3D;IAAA,4DAAY;;;IAWX,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFoD,6EAAgB;IAChF,0DACD;IADC,2FACD;;;IAOD,4EAA+C;IAAA,gFAAqB;IAAA,4DAAY;;;IAS/E,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFkD,6EAAgB;IAC9E,0DACD;IADC,2FACD;;;IAOD,4EAA6C;IAAA,8EAAmB;IAAA,4DAAY;;;IAS3E,iFACC;IAAA,uDACD;IAAA,4DAAa;;;IAFiD,6EAAgB;IAC7E,0DACD;IADC,2FACD;;;IAOD,4EAA4C;IAAA,6EAAkB;IAAA,4DAAY;;;IAQ1E,4EAAkD;IAAA,iFAClD;IAAA,4DAAY;;;;IA3Sf,0EAGC;IAF8B,sTAAqB,0GAAmC,uBAAuB,IAA1D;IAEnD,yEACC;IAAA,oFACC;IAAA,4EAAW;IAAA,iEAAM;IAAA,4DAAY;IAC7B,sEAEA;IAAA,yFAEC;IADA,iXAAsD;IACtD,gIAEa;;IACd,4DAAmB;IACnB,0EACC;IAAA,gFAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAAiF;IAAA,2EACjF;IAAA,4DAAW;IACZ,4DAAM;IACN,iIAA+E;IAChF,4DAAiB;IAEjB,sFACC;IAAA,6EAAW;IAAA,iEAAK;IAAA,4DAAY;IAC5B,wEAEA;IAAA,2FAEC;IADA,gXAAoD;IACpD,kIAEa;;IACd,4DAAmB;IACnB,0EACC;IAAA,gFAA2C;IAAA,uEAAW;IAAA,4DAAW;IACjE,gFAA2E;IAAA,gEAAI;IAAA,4DAAW;IAC3F,4DAAM;IACN,iIAAgF;IACjF,4DAAiB;IAEjB,4IAgBiB;IAEjB,4IAgBiB;IAClB,4DAAM;IACN,0EACC;IAAA,qFACC;IAAA,6EAAW;IAAA,sEAAU;IAAA,4DAAY;IACjC,wEACA;IAAA,gFAAgF;IAAA,2EAChF;IAAA,4DAAW;IACX,iIAA6F;IAC7F,iIACY;IACb,4DAAiB;IACjB,qFACC;IAAA,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,wEACA;IAAA,gFAAiF;IAAA,2EACjF;IAAA,4DAAW;IACX,iIACY;IACb,4DAAiB;IAEjB,qFACC;IAAA,6EAAW;IAAA,qEAAS;IAAA,4DAAY;IAChC,wEACA;IAAA,gFAAgF;IAAA,2EAChF;IAAA,4DAAW;IACX,iIAA4F;IAC5F,iIACY;IACb,4DAAiB;IAClB,4DAAM;IACN,0EACC;IAAA,qFACC;IAAA,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,wEAEA;IAAA,0EACC;IAAA,gFAAwF;IAAA,iEACxF;IAAA,4DAAW;IACX,wFAAqE;IACrE,qFAAuD;IACxD,4DAAM;IAEN,iIACY;IACb,4DAAiB;IACjB,qFACC;IAAA,6EAAW;IAAA,iEAAK;IAAA,4DAAY;IAC5B,wEAEA;IAAA,gFAA2E;IAAA,gEAAI;IAAA,4DAAW;IAC1F,iIAA0F;IAC1F,iIAA+F;IAChG,4DAAiB;IACjB,qFACC;IAAA,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,wEACA;IAAA,gFAAkF;IAAA,gEAAI;IAAA,4DAAW;IACjG,iIACY;IACZ,iIACY;IACb,4DAAiB;IAClB,4DAAM;IACN,0EACC;IAAA,sFACC;IAAA,6EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,wEAEA;IAAA,gFAA+E;IAAA,2EAC/E;IAAA,4DAAW;IACX,iIACY;IACb,4DAAiB;IACjB,qFACC;IAAA,6EAAW;IAAA,oEAAQ;IAAA,4DAAY;IAC/B,wEAEA;IAAA,gFACC;IADS,wUAAmC;IAC5C,wDAAyD;IAAA,4DAAW;IACrE,iIAAgG;IAChG,iIAC8B;IAC/B,4DAAiB;IACjB,sFACC;IAAA,8EAAW;IAAA,6EAAgB;IAAA,4DAAY;IACvC,yEAEA;IAAA,iFAC4C;IADlC,gVAA0C;IACR,yDAC7B;IAAA,4DAAW;IAC1B,mIACY;IACZ,mIACY;IACb,4DAAiB;IAClB,4DAAM;IACN,2EACC;IAAA,sFACC;IAAA,8EAAW;IAAA,0EAAa;IAAA,4DAAY;IACpC,yEACA;IAAA,iFAAmF;IAAA,2EACnF;IAAA,4DAAW;IACX,mIACY;IACZ,mIACY;IACb,4DAAiB;IACjB,sFACC;IAAA,8EAAW;IAAA,oFAAuB;IAAA,4DAAY;IAC9C,yEACA;IAAA,iFAAsF;IAAA,2EACtF;IAAA,4DAAW;IACX,mIACY;IACb,4DAAiB;IACjB,sFACC;IAAA,8EAAW;IAAA,uEAAU;IAAA,4DAAY;IACjC,yEACA;IAAA,iFAA8E;IAAA,iEAAI;IAAA,4DAAW;IAC7F,mIACY;IACZ,mIAAoG;IACrG,4DAAiB;IAClB,4DAAM;IACN,2EAEC;IAAA,uFACC;IAAA,8EAAW;IAAA,0EAAa;IAAA,4DAAY;IACpC,yEACA;IAAA,iFAA4E;IAAA,iEAAI;IAAA,4DAAW;IAC5F,4DAAiB;IAElB,4DAAM;IAGN,2EAAkD;IAAA,gFAAmB;IAAA,4DAAK;IAC1E,2EACC;IAAA,sFACC;IAAA,8EAAW;IAAA,2EAAc;IAAA,4DAAY;IACrC,yEACA;IAAA,iFAAkF;IAAA,iEAAI;IAAA,4DAAW;IACjG,mIACY;IACb,4DAAiB;IACjB,sFACC;IAAA,8EAAW;IAAA,2EAAc;IAAA,4DAAY;IACrC,yEACA;IAAA,iFAAkF;IAAA,iEAAI;IAAA,4DAAW;IACjG,mIACY;IACb,4DAAiB;IACjB,sFACC;IAAA,8EAAW;IAAA,qEAAQ;IAAA,4DAAY;IAE/B,8EAEA;IAF0D,gUAA4B;IAAtF,4DAEA;IAAA,iFAA8E;IAAA,sEAAS;IAAA,4DAAW;IAClG,mIACY;IACZ,mIACY;IACb,4DAAiB;IAClB,4DAAM;IACN,2EACC;IAAA,uFACC;IAAA,8EAAW;IAAA,oEAAO;IAAA,4DAAY;IAC9B,yEAGA;IAAA,4FAEC;IADA,oXAAuD;IACvD,oIAEa;;IACd,4DAAmB;IACnB,2EACC;IAAA,iFAA2C;IAAA,wEAAW;IAAA,4DAAW;IACjE,iFAA8E;IAAA,2EAC9E;IAAA,4DAAW;IACZ,4DAAM;IACN,mIAAgF;IACjF,4DAAiB;IACjB,uFACC;IAAA,8EAAW;IAAA,kEAAK;IAAA,4DAAY;IAC5B,yEAGA;IAAA,4FAEC;IADA,kXAAqD;IACrD,oIAEa;;IACd,4DAAmB;IACnB,2EACC;IAAA,iFAA2C;IAAA,wEAAW;IAAA,4DAAW;IACjE,iFAA4E;IAAA,2EAC5E;IAAA,4DAAW;IACZ,4DAAM;IACN,mIAA4E;IAC7E,4DAAiB;IACjB,uFACC;IAAA,8EAAW;IAAA,iEAAI;IAAA,4DAAY;IAC3B,yEAGA;IAAA,4FAEC;IADA,iXAAoD;IACpD,oIAEa;;IACd,4DAAmB;IACnB,2EACC;IAAA,iFAA2C;IAAA,wEAAW;IAAA,4DAAW;IACjE,iFAA2E;IAAA,2EAC3E;IAAA,4DAAW;IACZ,4DAAM;IACN,mIAA0E;IAC3E,4DAAiB;IAClB,4DAAM;IACN,2EACC;IAAA,sFACC;IAAA,8EAAW;IAAA,qEAAQ;IAAA,4DAAY;IAC/B,yEACA;IAAA,iFAA8E;IAAA,wEAAW;IAAA,4DAAW;IACpG,mIACY;IACb,4DAAiB;IACjB,4EACC;IAAA,6FAEC;IADA,oVAA+B;IAC/B,yDAAkC;IAAA,4DAAmB;IACvD,4DAAM;IACP,4DAAM;IAEN,4EACC;IAAA,+EAAuD;IAAA,iEAAI;IAAA,4DAAS;IACpE,+EACwC;IAAA,mEAAM;IAAA,4DAAS;IACxD,4DAAM;IACP,4DAAO;;;;;;;;;IAzTD,kFAAkB;IAMmD,0DAA8B;IAA9B,gFAA8B;IAEtD,0DAA6B;IAA7B,6FAA6B;IAE7C,0DAAgC;IAAhC,mKAAgC;IASpD,0DAAgC;IAAhC,mGAAgC;IAM3C,0DAAgC;IAAhC,gFAAgC;IACiB,0DAA2B;IAA3B,2FAA2B;IAE7C,0DAA8B;IAA9B,kKAA8B;IAQlD,0DAAkC;IAAlC,qGAAkC;IAGgB,0DAAc;IAAd,iFAAc;IAkBd,0DAAkB;IAAlB,qFAAkB;IAwBpE,0DAA6C;IAA7C,gHAA6C;IAC7C,0DAA4C;IAA5C,+GAA4C;IAQ5C,0DAA4C;IAA5C,+GAA4C;IAS5C,0DAA6C;IAA7C,gHAA6C;IAC7C,0DAA4C;IAA5C,+GAA4C;IAOxC,0DAAqB;IAArB,+EAAqB;IAKH,0DAAW;IAAX,qEAAW;IAIjC,0DAA+B;IAA/B,kGAA+B;IAQ/B,0DAA8C;IAA9C,iHAA8C;IAC9C,0DAA6C;IAA7C,gHAA6C;IAM7C,0DAAmC;IAAnC,sGAAmC;IAEnC,0DAA+C;IAA/C,kHAA+C;IAW/C,0DAAkC;IAAlC,qGAAkC;IAKf,0DAAkD;IAAlD,kHAAkD;IAGhF,0DAAyD;IAAzD,uIAAyD;IAC9C,0DAAiD;IAAjD,oHAAiD;IACjD,0DAAgD;IAAhD,mHAAgD;IAK7B,0DAAyD;IAAzD,yHAAyD;IAG5C,0DAC7B;IAD6B,oIAC7B;IACH,0DAAwD;IAAxD,2HAAwD;IAExD,0DAAuD;IAAvD,0HAAuD;IAUvD,0DAA+C;IAA/C,kHAA+C;IAE/C,0DAA8C;IAA9C,iHAA8C;IAQ9C,0DAAiD;IAAjD,oHAAiD;IAOjD,0DAA6B;IAA7B,gGAA6B;IAE7B,0DAAyC;IAAzC,4GAAyC;IAoBzC,2DAAwC;IAAxC,2GAAwC;IAOxC,0DAAwC;IAAxC,2GAAwC;IASxC,0DAA8C;IAA9C,iHAA8C;IAE9C,0DAA6C;IAA7C,gHAA6C;IAOgB,0DAA+B;IAA/B,iFAA+B;IAGvD,0DAA8B;IAA9B,8FAA8B;IAE/C,0DAAgC;IAAhC,qKAAgC;IASpD,0DAAiC;IAAjC,oGAAiC;IAI0B,0DAA6B;IAA7B,iFAA6B;IAGrD,0DAA4B;IAA5B,4FAA4B;IAE3C,0DAA8B;IAA9B,mKAA8B;IASlD,0DAA+B;IAA/B,kGAA+B;IAI2B,0DAA4B;IAA5B,iFAA4B;IAGpD,0DAA2B;IAA3B,2FAA2B;IAEzC,0DAA6B;IAA7B,kKAA6B;IASjD,0DAA8B;IAA9B,iGAA8B;IAQ9B,0DAAoC;IAApC,uGAAoC;IAIS,0DAAkB;IAAlB,kFAAkB;IAE1E,0DAAkC;IAAlC,gHAAkC;;ADhSvC,SAAS,2BAA2B;IAClC,OAAO,CAAC,OAAwB,EAAiC,EAAE;QACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAO,EAAE,2BAA2B,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE;SACjE;QACD,OAAO,IAAI,EAAE,2BAA2B;IAC1C,CAAC;AACH,CAAC;AASM,MAAM,eAAe;IAkC1B,YAAoB,EAAe,EAAU,aAA6B,EAChE,WAAyB,EAAS,QAAqB,EAAS,sBAA8C,EAC9G,MAAe,EAAS,QAAkB,EAAU,aAA6B,EAClF,cAAgC,EAAS,WAAuB,EAAS,UAAqB;QAHnF,OAAE,GAAF,EAAE,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAChE,gBAAW,GAAX,WAAW,CAAc;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAS,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9G,WAAM,GAAN,MAAM,CAAS;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAClF,mBAAc,GAAd,cAAc,CAAkB;QAAS,gBAAW,GAAX,WAAW,CAAY;QAAS,eAAU,GAAV,UAAU,CAAW;QAbvG,WAAM,GAAG,IAAI,CAAC;QAId,aAAQ,GAAC,IAAI,CAAC;QAEd,YAAO,GAAC,IAAI,IAAI,EAAE,CAAC;QACnB,iBAAY,GAAW,KAAK,CAAC;QAC7B,aAAQ,GAAW,KAAK,CAAC;QA+KzB,qBAAgB,GAAG,CAAC,OAAoB,EAA4B,EAAE;YACpE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAClB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aACxC;iBAAM,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE;gBAChE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aACvC;QACH,CAAC;IA7KD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IAEpB,CAAC;IAED,UAAU;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAErE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,OAAO,EAAC,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACjD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,aAAa,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACjD,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACvD,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC,CAAC;YAC5F,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACtF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACpE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5E,QAAQ,EAAE,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC,CAAC;YACnG,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAChD,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,oCAAoC,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC7F,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,MAAM,EAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;SACzC,CAAC,CAAC;QACJ,yBAAyB;QAEzB,IAAI,CAAC,aAAa,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC5E,gDAAgD;IAEjD,CAAC;IAED,YAAY,CAAC,UAAU,EAAC,SAAS;QAC/B,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,SAAS,CACvE,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;iBAClE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAC/D,CAAC;QACH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACL;QACD,oDAAoD;IACtD,CAAC;IACD,YAAY,CAAC,MAAM;QACjB,sBAAsB;QACtB,IAAG,MAAM,CAAC,IAAI,IAAI,OAAO,EAAC;YAExB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;SAC7C;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;SAC7C;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,KAAK,EAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;aACI,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aACG,IAAG,MAAM,CAAC,IAAI,IAAI,IAAI,EAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC3B;aACG;YACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACxC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACjE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACL;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,CAAC,SAAa,EAAC,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACL;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC3D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACL;IACH,CAAC;IAED,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,eAAe,CAAC,IAAY;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3F,CAAC;IASD,uBAAuB;QACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACvD,CAAC;IACD,8BAA8B;QAC5B,IAAI,CAAC,0BAA0B,GAAG,CAAC,IAAI,CAAC,0BAA0B,CAAC;IACrE,CAAC;IACD,QAAQ;QAEN,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,EAAC;YACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC5F;QACD,IAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAC;YAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3F,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC7F;QACD,IAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAC;YAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3F,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,2BAA2B,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC7F;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC;YAClB,OAAO;SACV;aAAI;YACH,IAAI,MAAM,GAAG;gBACX,SAAS,EAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,EAAE,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC/D,YAAY,EAAE,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBACvE,SAAS,EAAC,UAAU,CAAC,QAAQ,CAAC,IAAI;gBAClC,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,OAAO,EAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBAC9B,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,aAAa,EAAE,UAAU,CAAC,SAAS;gBACnC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,YAAY,CAAC;gBAC5D,KAAK,EAAG,UAAU,CAAC,OAAO;gBAC1B,MAAM,EAAG,UAAU,CAAC,QAAQ;gBAC5B,UAAU,EAAE,UAAU,CAAC,WAAW;gBAClC,QAAQ,EAAG,UAAU,CAAC,QAAQ;gBAC9B,MAAM,EAAG,UAAU,CAAC,QAAQ;gBAC5B,QAAQ,EAAE,UAAU,CAAC,iBAAiB;gBACtC,QAAQ,EAAE,UAAU,CAAC,cAAc;gBACnC,QAAQ,EAAE,UAAU,CAAC,cAAc;gBACnC,GAAG,EAAE,UAAU,CAAC,OAAO;gBACvB,QAAQ,EAAE,UAAU,CAAC,UAAU;gBAC/B,UAAU,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE;gBACjC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC7B,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC3B,UAAU,EAAC,GAAG;gBACd,MAAM,EAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG;gBACzC,mBAAmB,EAAC,KAAK;gBACzB,UAAU,EAAG,IAAI,CAAC,YAAY,CAAC,MAAM;aACtC;YAMD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CACvC,CAAC,IAAQ,EAAE,EAAE;gBACX,IAAG,IAAI,CAAC,MAAM,IAAI,IAAI,EAAC;oBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,WAAW,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;iBACrD;qBAAI;oBACH,IAAG,IAAI,CAAC,QAAQ,IAAI,sBAAsB,EAAC;wBACzC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC9B,IAAI,KAAK,GAAG,IAAI,CAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;wBAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;wBAClD,IAAG,IAAI,CAAC,QAAQ,IAAI,YAAY,EAAE;4BAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,aAAa,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBAClF;wBAAA,IAAG,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAC;4BAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACxF;wBAAA,IAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAC;4BAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,kBAAkB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACvF;wBACD,IAAG,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAC;4BAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,gBAAgB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACrF;qBACF;yBAAI;wBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACjE;oBACD,kEAAkE;iBACnE;YAEH,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iFAAe,CAAC,YAAY,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAClF,CAAC,CACF;SACF;IAGH,CAAC;IAED,eAAe,CAAC,IAAe;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3C,CAAC,CAAC,wBAAwB;YAC1B,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBACrC,CAAC,CAAC,mBAAmB;gBACrB,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IACD,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;IAE9B,CAAC;IACD,eAAe;QAEb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAE7C,GAAG;QACH,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,SAAS,CACnE,CAAC,IAAQ,EAAC,EAAE;YACV,oBAAoB;YACpB,IAAG,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;gBACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACjC,GAAG;gBACH,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAC7D,CAAC,WAAe,EAAC,EAAE;oBACjB,oBAAoB;oBACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;oBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;yBACnE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;oBACF,IAAI;oBACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;oBACrC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAE,CAAC,SAAS,CAC/D,CAAC,SAAa,EAAC,EAAE;wBACf,oBAAoB;wBACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;wBACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACjE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;6BAC/D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;oBAEJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;oBAET,CAAC,CACF;oBACD,IAAI;oBACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACjC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAC1D,CAAC,QAAY,EAAC,EAAE;wBACd,oBAAoB;wBACpB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;wBACvB,mEAAmE;wBACpE,6CAA6C;wBAE5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;6BAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;oBAEJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;oBAET,CAAC,CACF;gBACH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;gBAET,CAAC,CACF;aACF;iBAAI;aAEJ;QAGH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACA;IACH,CAAC;IACD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAG/B,yCAAyC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAE,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAE,EAAE,CAAC,CAAC;IACtC,CAAC;IACD,kBAAkB,CAAC,KAAK;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAC9D,CAAC,SAAa,EAAC,EAAE;YACf,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACzB,oEAAoE;YACpE,6CAA6C;YAE5C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY;iBAC/D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D,CAAC;QAEJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAE,EAAE,CAAC,CAAC;QACpC,yCAAyC;IAC3C,CAAC;IACD,YAAY,CAAC,KAAK;QAEhB,yCAAyC;IAC3C,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAC3D,CAAC,UAAc,EAAC,EAAE;YAChB,oBAAoB;YACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YAC1B,oEAAoE;YACpE,6CAA6C;YAE5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY;iBAC7D,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACzD,CAAC;QAEJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACF;IACH,CAAC;IACD,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAC,SAAS,CAC7D,CAAC,WAAe,EAAC,EAAE;YACjB,oBAAoB;YACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBACnE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QAEL,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACF;IACF,CAAC;IACD,cAAc,CAAC,IAAS;QACxB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC1C,CAAC;IACO,cAAc,CAAC,IAAY;QACnC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACxF,CAAC;IACD,YAAY,CAAC,IAAS;QACrB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3C,CAAC;IACO,YAAY,CAAC,IAAY;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACvF,CAAC;IACD,WAAW,CAAC,IAAS;QACpB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3C,CAAC;IACO,WAAW,CAAC,IAAY;QAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACtF,CAAC;IACD,WAAW,CAAC,SAAS;QAEnB,kDAAkD;QAClD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CACnD,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY;iBAChE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAC/D,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACF;IACH,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,cAAc,CAAC,IAAY;QACjC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1F,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CACvE,CAAC,IAAQ,EAAC,EAAE;YACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEnB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,EAAE,CAAC;YAEnC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY;iBAClE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAClE,CAAC;QACJ,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;QAET,CAAC,CACF;IACH,CAAC;IACD,aAAa,CAAC,IAAS;QACrB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,mBAAmB,CAAC,IAAY;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACxF,CAAC;IACD,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC;YACrC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY;iBACpE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5D,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAC1E,CAAC;QACN,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI;QACN,CAAC,CAAC;IACN,CAAC;IACD,eAAe,CAAC,IAAS;QACvB,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5C,CAAC;IACO,eAAe,CAAC,IAAY;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACpG,CAAC;;8EA/kBU,eAAe;+FAAf,eAAe;;;;;qFAFhB,CAAC,wDAAQ,CAAC;QC/BtB,yEACC;QAAA,gHAyTO;QACR,4DAAM;;QAzTiD,0DAAc;QAAd,8EAAc;y7ED4BpD,+DAAc;6FAGlB,eAAe;cAR3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,UAAU,EAAK,+DAAc;gBAC7B,SAAS,EAAC,CAAC,wDAAQ,CAAC;aACrB;ogCA8B6B,MAAM;kBAAjC,uDAAS;mBAAC,eAAe","file":"user-user-module-es2015.js","sourcesContent":["\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nexport class Users {\r\n  f_name: string;\r\n  l_name: string;\r\n  employee_code: string;\r\n  email: string;\r\n  mobile: string;\r\n  username: string;\r\n  aadhar: string;\r\n  address1: string;\r\n  address2: string;\r\n  city: string;\r\n  state: string;\r\n  country: string;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  status:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n  \r\n})\r\nexport class ListComponent implements OnInit {\r\n \r\n  head = [['First Name', 'Last Name','Employee Code','Email','Mobile','Username','Aadhar','Address1','Address2','Status']];\r\n  displayedColumns: string[] = [ 'f_name', 'l_name','employee_code','email','mobile','username','status','action'];\r\n  dataSource: MatTableDataSource<Users>;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  users : Users[];\r\n  filterEntity: Users;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  f_NameSearch = false;\r\n  lNameSearch = false;\r\n  employeeCodeSearch = false;\r\n  emailSearch = false;\r\n  mobileSearch = false;\r\n  userNameSearch = false;\r\n   statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  constructor(public dialog : MatDialog,private userService : UserService,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getAllUsers();\r\n    this.filterEntity = new Users();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllUsers(){\r\n    this.userService.getUsersCW(this.localStorage.userId).subscribe(\r\n      (resp:any)=>{\r\n        if(resp != null){\r\n          this.users = resp.data;\r\n          for(var i=0; i < this.users.length;i++){\r\n            if(this.users[i].status == 'Y'){\r\n              this.users[i].statusString = 'Active';\r\n            }else{\r\n              this.users[i].statusString = 'Inactive';\r\n            }\r\n            if(this.users[i].employee_code == null){\r\n              this.users[i].employee_code = '';\r\n            }\r\n\r\n            if(this.users[i].email == null){\r\n              this.users[i].email = '';\r\n            }\r\n\r\n            if(this.users[i].mobile == null){\r\n              this.users[i].mobile = '';\r\n            }\r\n\r\n            \r\n           \r\n          }\r\n          this.dataSource = new MatTableDataSource(this.users);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 5000 })\r\n          return;\r\n        }\r\n        \r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n    disableClose: true\r\n  });\r\n\r\n//this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n    if ( result )\r\n    {\r\n      this.userService.delete(id,this.localStorage.userId).subscribe(\r\n        (data:any)=>{\r\n          if(data.status == true){\r\n            this.getAllUsers();\r\n          this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:5000});\r\n          }else{\r\n            this.snackBar.open(data.message,'Dismiss',{duration:5000});\r\n          }\r\n          \r\n        },(err)=>{\r\n          \r\n        }\r\n      )\r\n    }\r\n    this.confirmDialogRef = null;\r\n  });\r\n \r\n}\r\n\r\nviewDialog(data):void{\r\n  let params = {\r\n    action : 'View',\r\n    data : data\r\n  }\r\n\r\n  const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n    width: '1000px',\r\n    data: params,\r\n    autoFocus: false,\r\n    panelClass: 'app-action-dialog',\r\n    disableClose: true    \r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if(result != null){\r\n      this.updateUser(result);\r\n     }\r\n        \r\n  });\r\n}\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      \r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1000px',\r\n      data: params,   \r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true   \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      if(result != null){\r\n        this.updateUser(result);\r\n       }\r\n      //this.getAllUsers();\r\n    });\r\n  }\r\n\r\n  updateUser(data){\r\n    \r\n      this.userService.update(data).subscribe(\r\n        (data:any)=>{\r\n          if(data.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.getAllUsers();\r\n          }else{\r\n            if(data.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = data.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n             \r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'username'\" ){\r\n                this.snackBar.open(MessageConstant.userDuplicate, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'mobile'\"){\r\n                this.snackBar.open(MessageConstant.mobileDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'email'\"){\r\n                this.snackBar.open(MessageConstant.emailDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n              if(this.splitted == \"'PAN'\"){\r\n                this.snackBar.open(MessageConstant.panDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'aadhar'\"){\r\n                this.snackBar.open(MessageConstant.aadharDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }else{\r\n              this.snackBar.open(data.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(data.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n  \r\n        },(err)=>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    \r\n  }\r\n  changeVisibility(visibleOption){\r\n    \r\n    if(visibleOption == 'f_NameSearch'){\r\n      this.f_NameSearch = !this.f_NameSearch;\r\n      this.filterEntity.f_name = '';\r\n    }\r\n    \r\n    if(visibleOption == 'lNameSearch'){\r\n      this.lNameSearch = !this.lNameSearch;\r\n      this.filterEntity.l_name = '';\r\n    }\r\n    if(visibleOption == 'employeeCodeSearch'){\r\n      this.employeeCodeSearch = !this.employeeCodeSearch;\r\n      this.filterEntity.employee_code = '';\r\n    }\r\n    if(visibleOption == 'emailSearch'){\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = '';\r\n    }\r\n    if(visibleOption == 'mobileSearch'){\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if(visibleOption == 'userNameSearch'){\r\n      this.userNameSearch = !this.userNameSearch;\r\n      this.filterEntity.username = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n   }\r\n   \r\n   tableExport()\r\n   {\r\n     // const tab = document.getElementById('mapTable');\r\n     // const ws: XLSX.WorkSheet=XLSX.utils.table_to_sheet(tab);//converts a DOM TABLE element to a worksheet\r\n     // const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n     // XLSX.utils.book_append_sheet(wb, ws, 'Mapped Charger');\r\n   \r\n     // /* save to file */\r\n     // XLSX.writeFile(wb, 'Mapped Charger.xlsx');\r\n     //this.preloader.open();\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.users.length; i++) {\r\n       var usersModel = this.users[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'First Name':usersModel.f_name,'Last Name':usersModel.l_name,'Employee Code':usersModel.employee_code,\r\n                  'Email': usersModel.email,'Mobile ':usersModel.mobile,'Username ':usersModel.username,'Aadhar ':usersModel.aadhar,\r\n                  'Address1 ':usersModel.address1,'Address2 ':usersModel.address1,\r\n                'Status':usersModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n    \r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Users');\r\n       XLSX.writeFile(workBook, 'Users.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n     \r\n   \r\n   }\r\n\r\n   pdfExport(){\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.f_name,chrger.l_name,chrger.employee_code,chrger.email,chrger.mobile,chrger.username,chrger.aadhar,chrger.address1,chrger.address1,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Users Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Users report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    \r\n    \r\n  \r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div>\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"f_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!f_NameSearch\" class=\"custom_font_size\" style=\"display: flex;\">First Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('f_NameSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"f_NameSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"First Name\" [(ngModel)]=\"filterEntity.f_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('f_NameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.f_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"l_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!lNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Last Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('lNameSearch')\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"lNameSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Last Name\" [(ngModel)]=\"filterEntity.l_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('lNameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.l_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"employee_code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!employeeCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Employee Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('employeeCodeSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"employeeCodeSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Employee Code\" [(ngModel)]=\"filterEntity.employee_code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('employeeCodeSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.employee_code}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Email\" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Mobile &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"username\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!userNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"userNameSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.username\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status&nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\">Action </span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>&nbsp;\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, FormControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  role_types: any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  cpo_types: any;\r\n  clients: any;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  stationValid:boolean  =false;\r\n  chargingStationName:any;\r\n  cpoValid:boolean = false;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar,private chargingStationService: ChargingStationService, private datePipe: DatePipe, public countryService: CountriesService, private userService: UserService,\r\n    private cpoService: CpoService, private roleService: RoleService, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private clientService: ClientService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      roleType: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpoType:['',[autocompleteObjectValidator(),Validators.required]],\r\n      charStat: ['',[autocompleteObjectValidator(),Validators.required]],\r\n      f_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      m_name: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      l_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      pan: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_empCode: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_dob: ['', [Validators.required]],\r\n      u_email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      u_mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['', [Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_userID: ['', [Validators.pattern(/^[a-zA-Z0-9._]*$/), Validators.required]],\r\n      u_aadhar: [''],\r\n\r\n      u_addressline1: ['', [Validators.required]],\r\n      u_addressline2: [''],\r\n      pincode: ['', [Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$'), Validators.required]],\r\n      u_landmark: [''],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getRoleTypes(project_id,client_id);\r\n    this.getClients();\r\n    //this.getCpoTypes(this.localStorage);\r\n    this.getCity();\r\n \r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    let params;\r\n    if(this.form.invalid){\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }else{\r\n      params= {\r\n        client_id:formValues.client.id,\r\n        cpo_id: formValues.cpoType == null ? 0  : formValues.cpoType.id,\r\n        char_Station: formValues.charStat == null ? 0  : formValues.charStat.id,\r\n        user_type:formValues.roleType.code,\r\n        role_id:formValues.roleType.id,\r\n        f_Name: formValues.f_name,\r\n        m_Name: formValues.m_name,\r\n        l_Name: formValues.l_name,\r\n        PAN: formValues.pan,\r\n        employee_code: formValues.u_empCode,\r\n        dob: this.datePipe.transform(formValues.u_dob, \"yyyy-MM-dd\"),\r\n        email : formValues.u_email,\r\n        mobile : formValues.u_mobile,\r\n        alt_mobile: formValues.u_altmobile,\r\n        username : formValues.u_userID,\r\n        aadhar : formValues.u_aadhar,\r\n        //password: formValues.u_confirmPassword,\r\n        address1: formValues.u_addressline1,\r\n        address2: formValues.u_addressline2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.u_landmark,\r\n        country_id: formValues.country.id,\r\n        state_id: formValues.state.id,\r\n        city_id: formValues.city.id,\r\n        can_expire:\"Y\",\r\n        status :  this.status == true ? 'Y' : 'N',\r\n        registration_origin:\"WEB\",\r\n        created_by: this.localStorage.userId\r\n      }\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n      if(this.isEditMode ){\r\n        this.userService.update(params).subscribe(\r\n          (resp:any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },(err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }else{\r\n        this.userService.create(params).subscribe(\r\n          (data: any ) => {\r\n            this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    //this.form.get('roleType').setValue(params.data.role_types.id);\r\n\r\n    this.form.get('f_name').setValue(params.data.f_name);\r\n    this.form.get('m_name').setValue(params.data.m_name);\r\n    this.form.get('l_name').setValue(params.data.l_name);\r\n    this.form.get('pan').setValue(params.data.PAN);\r\n    this.form.get('u_empCode').setValue(params.data.employee_code);\r\n    this.form.get('u_dob').setValue(params.data.dob);\r\n    this.form.get('u_email').setValue(params.data.email);\r\n    this.form.get('u_mobile').setValue(params.data.mobile);\r\n    this.form.get('u_altmobile').setValue(params.data.alt_mobile);\r\n    this.form.get('u_userID').setValue(params.data.username);\r\n    this.form.get('u_aadhar').setValue(params.data.aadhar);\r\n\r\n    this.form.get('u_addressline1').setValue(params.data.address1);\r\n    this.form.get('u_addressline2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('u_landmark').setValue(params.data.landmark);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.u_password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType() {\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType() {\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  getRoleTypes(project_id,client_id) {\r\n\r\n    this.roleService.getActiveRolesByClientId(project_id,client_id).subscribe(\r\n      (resp: any) => {\r\n        this.role_types = resp.data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.role_types.find(c => c.id == this.params.data.role_id);\r\n          this.form.get('roleType').setValue(toSelect);\r\n          this.onRoleChange(toSelect)\r\n          this.filteredOptionsRole = this.form.controls.roleType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterRoleType(name) : this.role_types)\r\n          );\r\n        }  \r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  onRoleChange(object){\r\n    //console.log(object);\r\n    if(object.code == 'ADMIN'){\r\n\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue(null);\r\n      this.form.get('charStat').setValue(null);\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'EU'){\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'CPO'){\r\n      this.cpoValid = true;\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('charStat').clearValidators();\r\n      this.stationValid = false;\r\n    }\r\n    else if(object.code == 'SC'){\r\n      this.cpoValid = true;\r\n      this.stationValid = true;\r\n    }\r\n   else if(object.code == 'SO'){\r\n      this.cpoValid = true;\r\n      \r\n      this.stationValid = true;\r\n   }\r\n   else{\r\n    this.form.get('cpoType').clearValidators();\r\n    this.form.get('charStat').clearValidators();\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n        this.cpoValid = false;\r\n        this.stationValid = false;\r\n    }\r\n    \r\n    this.form.get(\"cpoType\").setValue('');\r\n    this.form.get(\"charStat\").setValue('');\r\n    this.getCpoTypes(this.localStorage.client_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n          if (toSelect != null) {\r\n            this.getCitiesByStates(toSelect);\r\n          }\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        \r\n        this.cities = resp.data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n          }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n\r\n\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterRoleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.role_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode.trim();\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (resp: any) => {\r\n        //this.form.reset();\r\n        if (resp.data != undefined && resp.data != null && resp.data.length > 0) {\r\n          this.state_id = resp.data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == resp.data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = resp.data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata.data;\r\n                  const toSelect = this.states.find(c => c.id == resp.data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = resp.data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata.data;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue('');\r\n    this.form.get('city').setValue('');\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  onCityChange(event){\r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCpoTypes(client_id) {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cpo_types = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cpo_types.find(c => c.id == this.params.data.cpo_id);\r\n          if( toSelect != null){\r\n            this.form.get('cpoType').setValue(toSelect);\r\n            this.getStationByCPO(toSelect.id);\r\n          }\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n          this.getRoleTypes(this.localStorage.project_id,toSelect.id);\r\n          this.getCpoTypes(toSelect.id);\r\n        }\r\n          this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterClientModels(name) : this.clients)\r\n            );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    this.form.get('cpoType').setValue(\"\");\r\n    this.form.get('roleType').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    this.getRoleTypes(this.localStorage.project_id,value.id);\r\n    this.getCpoTypes(value.id);\r\n  }\r\n  getStationByCPO(id) {\r\n    this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n      (data: any) => {\r\n        this.chargingStationName = data.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargingStationName.find(c => c.id == this.params.data.station_id);\r\n          this.form.get('charStat').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n          );\r\n      },\r\n      (err) => {\r\n        ////\r\n      })\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage User</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            required>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n          (optionSelected)='onClientChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n            </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n          <mat-label>Roles</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"roleType\" autocomplete=\"off\" [matAutocomplete]=\"roleTypeAuto\" required>\r\n          <mat-autocomplete #roleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayRole\" (optionSelected)='onRoleChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select roles\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('roleType').invalid\">Please select roles </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"cpoValid\">\r\n          <mat-label>CPO</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpoType\" autocomplete=\"off\" [matAutocomplete]=\"cpoTypeAuto\" required>\r\n          <mat-autocomplete #cpoTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpoType').invalid\">Please select cpo type\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\"  *ngIf=\"stationValid\">\r\n          <mat-label>Select Charging Station</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n          <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n            Please select charging station\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"f_name\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('required')\">First name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Middle Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"m_name\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Middle name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('m_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"l_name\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('required')\">Last name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Date Of Birth</mat-label>\r\n          <input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"u_dob\" disabled>\r\n\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter dob\">help</mat-icon>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('u_dob').invalid\">Please enter date of birth</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_email\" required  style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Employee Code</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_empCode\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter emplyee code\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_empCode').invalid\">Please enter employee code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_empCode').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_userID\" required autocomplete=\"off\" style=\"text-transform: none;\" >\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter user name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_userID').invalid\">Please enter username\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\" formControlName=\"u_password\"\r\n          required autocomplete=\"off\">\r\n        <mat-icon (click)=\"togglePasswordFieldType()\" matSuffix matTooltip=\"Please enter password\">{{isPasswordFieldType\r\n          ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_password').invalid\">Please enter password</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n          formControlName=\"u_confirmPassword\" required>\r\n        <mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix matTooltip=\"Please enter confirm password\">\r\n          {{isPasswordConfirmFieldType ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('required')\">Please confirm your password!</mat-error>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('confirm')\">Password is inconsistent! </mat-error>\r\n      </mat-form-field> -->\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_mobile\" type=\"number\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile number\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Alternate Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_altmobile\" type=\"number\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter secondary mobile\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_altmobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pan Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"pan\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pan card\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pan').invalid\">Please enter pan number\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pan').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Aadhar Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_aadhar\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter aadhar\">help</mat-icon>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      \r\n      <h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline1\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required\r\n            autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n            required>\r\n\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_landmark\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button type=\"button\" color=\"accent\" class=\"m-t-8\" (click)=\"close()\">Cancel</button>\r\n\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" style=\"margin-left: 1%;\"\r\n          (click)=\"onYesClick()\">Save</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn,AbstractControl,FormControl  } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\n\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ActionDialogComponent } from 'app/main/client/action-dialog/action-dialog.component';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  role_types: any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  cpo_types: any;\r\n  clients: any;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  stationValid:boolean  =false;\r\n  chargingStationName:any;\r\n  cpoValid:boolean = false;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar,private chargingStationService: ChargingStationService, private datePipe: DatePipe, public countryService: CountriesService, private userService: UserService,\r\n    private cpoService: CpoService, private roleService: RoleService, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private clientService: ClientService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      roleType: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpoType:['',[autocompleteObjectValidator(),Validators.required]],\r\n      charStat: ['',[autocompleteObjectValidator(),Validators.required]],\r\n      f_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      m_name: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      l_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      pan: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_empCode: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_dob: ['', [Validators.required]],\r\n      u_email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      u_mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['', [Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_userID: ['', [Validators.pattern(/^[a-zA-Z0-9._]*$/), Validators.required]],\r\n      u_aadhar: [''],\r\n\r\n      u_addressline1: ['', [Validators.required]],\r\n      u_addressline2: [''],\r\n      pincode: ['', [Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$'), Validators.required]],\r\n      u_landmark: [''],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getRoleTypes(project_id,client_id);\r\n    this.getClients();\r\n    //this.getCpoTypes(this.localStorage);\r\n    this.getCity();\r\n \r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    let params;\r\n    if(this.form.invalid){\r\n      return;\r\n    }else{\r\n      params= {\r\n        client_id:formValues.client.id,\r\n        cpo_id: formValues.cpoType == null ? 0  : formValues.cpoType.id,\r\n        char_Station: formValues.charStat == null ? 0  : formValues.charStat.id,\r\n        user_type:formValues.roleType.code,\r\n        role_id:formValues.roleType.id,\r\n        f_Name: formValues.f_name,\r\n        m_Name: formValues.m_name,\r\n        l_Name: formValues.l_name,\r\n        PAN: formValues.pan,\r\n        employee_code: formValues.u_empCode,\r\n        dob: this.datePipe.transform(formValues.u_dob, \"yyyy-MM-dd\"),\r\n        email : formValues.u_email,\r\n        mobile : formValues.u_mobile,\r\n        alt_mobile: formValues.u_altmobile,\r\n        username : formValues.u_userID,\r\n        aadhar : formValues.u_aadhar,\r\n        //password: formValues.u_confirmPassword,\r\n        address1: formValues.u_addressline1,\r\n        address2: formValues.u_addressline2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.u_landmark,\r\n        country_id: formValues.country.id,\r\n        state_id: formValues.state.id,\r\n        city_id: formValues.city.id,\r\n        can_expire:\"Y\",\r\n        status :  this.status == true ? 'Y' : 'N',\r\n        registration_origin:\"WEB\",\r\n        created_by: this.localStorage.userId\r\n  \r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    //this.form.get('roleType').setValue(params.data.role_types.id);\r\n\r\n    this.form.get('f_name').setValue(params.data.f_name);\r\n    this.form.get('m_name').setValue(params.data.m_name);\r\n    this.form.get('l_name').setValue(params.data.l_name);\r\n    this.form.get('pan').setValue(params.data.PAN);\r\n    this.form.get('u_empCode').setValue(params.data.employee_code);\r\n    this.form.get('u_dob').setValue(params.data.dob);\r\n    this.form.get('u_email').setValue(params.data.email);\r\n    this.form.get('u_mobile').setValue(params.data.mobile);\r\n    this.form.get('u_altmobile').setValue(params.data.alt_mobile);\r\n    this.form.get('u_userID').setValue(params.data.username);\r\n    this.form.get('u_aadhar').setValue(params.data.aadhar);\r\n\r\n    this.form.get('u_addressline1').setValue(params.data.address1);\r\n    this.form.get('u_addressline2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('u_landmark').setValue(params.data.landmark);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.u_password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType() {\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType() {\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  getRoleTypes(project_id,client_id) {\r\n\r\n    this.roleService.getActiveRolesByClientId(project_id,client_id).subscribe(\r\n      (resp: any) => {\r\n        this.role_types = resp.data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.role_types.find(c => c.id == this.params.data.role_id);\r\n          this.form.get('roleType').setValue(toSelect);\r\n          this.onRoleChange(toSelect)\r\n          this.filteredOptionsRole = this.form.controls.roleType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterRoleType(name) : this.role_types)\r\n          );\r\n        }  \r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  onRoleChange(object){\r\n    //console.log(object);\r\n    if(object.code == 'ADMIN'){\r\n\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue(null);\r\n      this.form.get('charStat').setValue(null);\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'EU'){\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'CPO'){\r\n      this.cpoValid = true;\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('charStat').clearValidators();\r\n      this.stationValid = false;\r\n    }\r\n    else if(object.code == 'SC'){\r\n      this.cpoValid = true;\r\n      this.stationValid = true;\r\n    }\r\n   else if(object.code == 'SO'){\r\n      this.cpoValid = true;\r\n      \r\n      this.stationValid = true;\r\n   }\r\n   else{\r\n    this.form.get('cpoType').clearValidators();\r\n    this.form.get('charStat').clearValidators();\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n        this.cpoValid = false;\r\n        this.stationValid = false;\r\n    }\r\n    \r\n    this.form.get(\"cpoType\").setValue('');\r\n    this.form.get(\"charStat\").setValue('');\r\n    this.getCpoTypes(this.localStorage.client_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n          if (toSelect != null) {\r\n            this.getCitiesByStates(toSelect);\r\n          }\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        \r\n        this.cities = resp.data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n          }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n\r\n\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterRoleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.role_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode.trim();\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (resp: any) => {\r\n        //this.form.reset();\r\n        if (resp.data != undefined && resp.data != null && resp.data.length > 0) {\r\n          this.state_id = resp.data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == resp.data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = resp.data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata.data;\r\n                  const toSelect = this.states.find(c => c.id == resp.data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = resp.data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata.data;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue('');\r\n    this.form.get('city').setValue('');\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  onCityChange(event){\r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCpoTypes(client_id) {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cpo_types = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cpo_types.find(c => c.id == this.params.data.cpo_id);\r\n          if( toSelect != null){\r\n            this.form.get('cpoType').setValue(toSelect);\r\n            this.getStationByCPO(toSelect.id);\r\n          }\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n          this.getRoleTypes(this.localStorage.project_id,toSelect.id);\r\n          this.getCpoTypes(toSelect.id);\r\n        }\r\n          this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterClientModels(name) : this.clients)\r\n            );\r\n\r\n           \r\n        \r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    this.form.get('cpoType').setValue(\"\");\r\n    this.form.get('roleType').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    this.getRoleTypes(this.localStorage.project_id,value.id);\r\n    this.getCpoTypes(value.id);\r\n  }\r\n  getStationByCPO(id) {\r\n    this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n      (data: any) => {\r\n        this.chargingStationName = data.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargingStationName.find(c => c.id == this.params.data.station_id);\r\n          this.form.get('charStat').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n          );\r\n      },\r\n      (err) => {\r\n        ////\r\n      })\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage User</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            readonly>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n          (optionSelected)='onClientChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n            </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n          <mat-label>Roles</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"roleType\" autocomplete=\"off\" [matAutocomplete]=\"roleTypeAuto\" readonly>\r\n          <mat-autocomplete #roleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayRole\" (optionSelected)='onRoleChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select roles\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('roleType').invalid\">Please select roles </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"cpoValid\">\r\n          <mat-label>CPO</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpoType\" autocomplete=\"off\" [matAutocomplete]=\"cpoTypeAuto\" readonly>\r\n          <mat-autocomplete #cpoTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpoType').invalid\">Please select cpo type\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\"  *ngIf=\"stationValid\">\r\n          <mat-label>Select Charging Station</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n          <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\" readonly>\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n            Please select charging station\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"f_name\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('required')\">First name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Middle Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"m_name\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Middle name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('m_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"l_name\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('required')\">Last name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Date Of Birth</mat-label>\r\n          <input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"u_dob\" disabled>\r\n\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter dob\">help</mat-icon>\r\n            <mat-datepicker-toggle matSuffix [disabled]=\"true\"  [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('u_dob').invalid\">Please enter date of birth</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_email\" readonly  style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Employee Code</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_empCode\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter emplyee code\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_empCode').invalid\">Please enter employee code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_empCode').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_userID\" readonly autocomplete=\"off\" style=\"text-transform: none;\" >\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter user name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_userID').invalid\">Please enter username\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\" formControlName=\"u_password\"\r\n          required autocomplete=\"off\">\r\n        <mat-icon (click)=\"togglePasswordFieldType()\" matSuffix matTooltip=\"Please enter password\">{{isPasswordFieldType\r\n          ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_password').invalid\">Please enter password</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n          formControlName=\"u_confirmPassword\" required>\r\n        <mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix matTooltip=\"Please enter confirm password\">\r\n          {{isPasswordConfirmFieldType ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('required')\">Please confirm your password!</mat-error>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('confirm')\">Password is inconsistent! </mat-error>\r\n      </mat-form-field> -->\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_mobile\" type=\"number\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile number\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Alternate Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_altmobile\" readonly type=\"number\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter secondary mobile\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_altmobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pan Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"pan\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pan card\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pan').invalid\">Please enter pan number\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pan').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Aadhar Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_aadhar\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter aadhar\">help</mat-icon>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      \r\n      <h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline1\"  readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline2\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly\r\n            autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          readonly>\r\n\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" readonly>\r\n\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" readonly>\r\n\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_landmark\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button type=\"button\" color=\"accent\" class=\"m-t-8\" (click)=\"close()\">Cancel</button>\r\n\r\n        <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" style=\"margin-left: 1%;\"\r\n          (click)=\"onYesClick()\">Save</button> -->\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { UserCrudComponent } from './user-crud/user-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[UserCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, UserRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class UserModule{}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-user-crud',\r\n  templateUrl: './user-crud.component.html',\r\n  styleUrls: ['./user-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class UserCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'User', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"localUser\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"user\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'User', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/user/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"dashboard-project\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0 \" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserCrudComponent } from './user-crud/user-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './user-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : UserCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class UserRoutingModule{}","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  params: any;\r\n  role_types:any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  cpo_types:any;\r\n  clients:any;\r\n  status = true;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  chargingStationName: any;\r\n  isSubmit=true;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  maxDate=new Date();\r\n  stationValid:boolean  =false;\r\n  cpoValid:boolean = false;\r\n  selectedClient:any;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private userService : UserService,private snackBar: MatSnackBar,private chargingStationService: ChargingStationService,\r\n    private router : Router,private datePipe: DatePipe, private clientService : ClientService,\r\n    public countryService: CountriesService,private roleService:RoleService,private cpoService:CpoService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    \r\n  }\r\n\r\n  initialize(){\r\n   \r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      roleType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      cpoType:['', [autocompleteObjectValidator(), Validators.required]],\r\n      charStat: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      f_name: ['', [Validators.pattern(/^[a-zA-Z]*$/),Validators.required]],\r\n      m_name: ['' ,[Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      l_name: ['', [Validators.pattern(/^[a-zA-Z]*$/),Validators.required]],\r\n      pan: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_empCode: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_dob: ['', [Validators.required]],\r\n      u_email: ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      u_mobile: ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['', [Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_userID: ['', [Validators.pattern(/^[a-zA-Z0-9._]*$/),Validators.required]],\r\n      u_aadhar: [''],\r\n\t    u_password: ['', [Validators.required,Validators.pattern('^[a-zA-Z0-9](?=.*?[_#?!@$%^&*-]).{6,}$')]],\r\n      u_confirmPassword: ['', [this.confirmValidator]],\r\n      u_addressline1: ['', [Validators.required]],\r\n      u_addressline2: [''],\r\n      pincode: ['', [Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$'),Validators.required]],\r\n      u_landmark: [''],\r\n      country: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n    });\r\n   //this.filteredOptions();\r\n   \r\n   this.getAllCountry();\r\n    this.getAllState();\r\n    this.getClients();\r\n   this.getRoleTypes(this.localStorage.project_id,this.localStorage.client_id);\r\n   //this.getCpoTypes(this.localStorage.client_id);\r\n   \r\n  }\r\n  \r\n  getRoleTypes(project_id,client_id){\r\n    this.roleService.getActiveRolesByClientId(project_id,client_id).subscribe(\r\n      (resp:any)=>{\r\n        this.role_types = resp.data;\r\n        this.filteredOptionsRole = this.form.controls.roleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRoleType(name) : this.role_types)\r\n          );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n    //this.role_types = this.userService.getRoleTypes();\r\n  }\r\n  onRoleChange(object){\r\n    //console.log(object);\r\n    if(object.code == 'ADMIN'){\r\n\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue(null);\r\n      this.form.get('charStat').setValue(null);\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'EU'){\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'CPO'){\r\n      this.cpoValid = true;\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('charStat').clearValidators();\r\n      this.stationValid = false;\r\n    }\r\n    else if(object.code == 'SC'){\r\n      this.cpoValid = true;\r\n      this.stationValid = true;\r\n    }\r\n   else if(object.code == 'SO'){\r\n      this.cpoValid = true;\r\n      \r\n      this.stationValid = true;\r\n   }\r\n   else{\r\n    this.form.get('cpoType').clearValidators();\r\n    this.form.get('charStat').clearValidators();\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n        this.cpoValid = false;\r\n        this.stationValid = false;\r\n    }\r\n    \r\n    this.form.get(\"cpoType\").setValue('');\r\n    this.form.get(\"charStat\").setValue('');\r\n    this.getCpoTypes(this.selectedClient);\r\n  }\r\n\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        this.cities = resp.data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterRoleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.role_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.u_password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType(){\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType(){\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  onSubmit(){\r\n\r\n    let formValues = this.form.value;\r\n    if(formValues.roleType.code == \"CPO\"){\r\n      this.form.get('cpoType').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if(formValues.roleType.code == \"SC\"){\r\n      this.form.get('cpoType').setValidators([autocompleteObjectValidator(),Validators.required])\r\n      this.form.get('charStat').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if(formValues.roleType.code == \"SO\"){\r\n      this.form.get('cpoType').setValidators([autocompleteObjectValidator(),Validators.required])\r\n      this.form.get('charStat').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if (this.form.invalid){\r\n        return;\r\n    }else{\r\n      let params = {\r\n        client_id:formValues.client.id,\r\n        cpo_id: formValues.cpoType == null ? 0  : formValues.cpoType.id,\r\n        char_Station: formValues.charStat == null ? 0  : formValues.charStat.id,\r\n        user_type:formValues.roleType.code,\r\n        f_Name: formValues.f_name,\r\n        role_id:formValues.roleType.id,\r\n        m_Name: formValues.m_name,\r\n        l_Name: formValues.l_name,\r\n        PAN: formValues.pan,\r\n        employee_code: formValues.u_empCode,\r\n        dob: this.datePipe.transform(formValues.u_dob, \"yyyy-MM-dd\"),\r\n        email : formValues.u_email,\r\n        mobile : formValues.u_mobile,\r\n        alt_mobile: formValues.u_altmobile,\r\n        username : formValues.u_userID,\r\n        aadhar : formValues.u_aadhar,\r\n        password: formValues.u_confirmPassword,\r\n        address1: formValues.u_addressline1,\r\n        address2: formValues.u_addressline2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.u_landmark,\r\n        country_id: formValues.country.id,\r\n        state_id: formValues.state.id,\r\n        city_id: formValues.city.id,\r\n        can_expire:\"Y\",\r\n        status :  this.status == true ? 'Y' : 'N',\r\n        registration_origin:\"WEB\",\r\n        created_by : this.localStorage.userId \r\n      }\r\n      \r\n     \r\n      \r\n  \r\n      \r\n      this.userService.create(params).subscribe(\r\n        (resp:any )=>{\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.userCreated, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/userManagement/user/list']);\r\n          }else{\r\n            if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = resp.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'username'\" ){\r\n                this.snackBar.open(MessageConstant.userDuplicate, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'mobile'\"){\r\n                this.snackBar.open(MessageConstant.mobileDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'email'\"){\r\n                this.snackBar.open(MessageConstant.emailDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n              if(this.splitted == \"'PAN'\"){\r\n                this.snackBar.open(MessageConstant.panDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n  \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n  \r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n    )\r\n  }\r\n  onCountryChange(event){\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    \r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue( \"\");\r\n    this.form.get('city').setValue( \"\");\r\n  }\r\n  getStatesByCountry(state){\r\n     this.state_id = state.id;\r\n     this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n      (statedata:any)=>{\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  onStateChange(event){\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue( \"\");\r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  onCityChange(event){\r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId){\r\n    this.state_id = stateId.id;\r\n     this.countryService.getCityByState(this.state_id ).subscribe(\r\n      (citiesdata:any)=>{\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId){\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id ).subscribe(\r\n      (countrydata:any)=>{\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n        \r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n       \r\n     },(err)=>{\r\n       \r\n     }\r\n   )\r\n  }\r\n  displayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n   return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCity(item: any): string {\r\n   return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n   return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCpoTypes(client_id){\r\n    \r\n    //this.cpo_types = this.userService.getCPOTypes();\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data:any)=>{\r\n        this.cpo_types = data;\r\n        this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  onCPOChange(event) {\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getClients(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        this.clients = data;\r\n\r\n         const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n         this.form.get('client').setValue(toSelect);\r\n         this.selectedClient = toSelect.id;\r\n\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientModels(name) : this.clients)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    this.getRoleTypes(this.localStorage.project_id,value.id);\r\n    this.selectedClient = value.id;\r\n    this.getCpoTypes(value.id)\r\n    this.form.get('cpoType').setValue(\"\");\r\n    this.form.get('roleType').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n      (data: any) => {\r\n        this.chargingStationName = data.data;\r\n        this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n          );\r\n      },\r\n      (err) => {\r\n        ////\r\n      })\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" *ngIf=\"isSubmit\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t\t(optionSelected)='onClientChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Roles</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"roleType\" autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"roleTypeAuto\" required>\r\n\t\t\t\t<mat-autocomplete #roleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayRole\"\r\n\t\t\t\t\t(optionSelected)='onRoleChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select role\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('roleType').invalid\">Please select roles </mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"cpoValid\">\r\n\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"cpoType\" autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"cpoTypeAuto\">\r\n\t\t\t\t<mat-autocomplete #cpoTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\"\r\n\t\t\t\t\t(optionSelected)='onCPOChange($event.option.value.id)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo type\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cpoType').invalid\">Please select cpo type\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"stationValid\">\r\n\t\t\t\t<mat-label>Select Charging Station</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n\t\t\t\t<mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('charStat').invalid\">\r\n\t\t\t\t\tPlease select charging station\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>First Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"f_name\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('f_name').hasError('required')\">First name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('f_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Middle Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"m_name\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Middle name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('m_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Last Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"l_name\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('l_name').hasError('required')\">Last name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('l_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Date Of Birth</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"u_dob\" disabled>\r\n\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter dob\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_dob').invalid\">Please enter date of birth\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_email\" required\r\n\t\t\t\t\tstyle=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_email').hasError('required')\">Please enter email</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_email').hasError('pattern')\">Please enter valid email</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Employee Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_empCode\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter emplyee code\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_empCode').invalid\">Please enter employee code\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_empCode').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Username</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_userID\" required autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter user name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_userID').invalid\">Please enter user name\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Password</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\"\r\n\t\t\t\t\tformControlName=\"u_password\" required autocomplete=\"off\" style=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon (click)=\"togglePasswordFieldType()\" matSuffix matTooltip=\"Please enter password\">\r\n\t\t\t\t\t{{isPasswordFieldType ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_password').hasError('required')\">Please enter password</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_password').hasError('pattern')\">Password should be 6 characters with one\r\n\t\t\t\t\tspecial character</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Confirm Password</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n\t\t\t\t\tformControlName=\"u_confirmPassword\" required style=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix\r\n\t\t\t\t\tmatTooltip=\"Please enter confirm password\">{{isPasswordConfirmFieldType ? 'visibility_off' :\r\n\t\t\t\t\t'visibility'}}</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_confirmPassword').hasError('required')\">Please confirm your password!\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_confirmPassword').hasError('confirm')\">Password is inconsistent!\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_mobile\" type=\"number\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile number\">phone_android\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Alternate Mobile Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_altmobile\" type=\"number\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter secondary mobile\">phone_android\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_altmobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pan Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"pan\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pan card\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pan').invalid\">Please enter pan\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pan').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Aadhar Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_aadhar\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter aadhar\">help</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t</div>\r\n\r\n\r\n\t\t<h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_addressline1\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_addressline1').invalid\">Please enter address line\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_addressline2\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_addressline2').invalid\">Please enter address line\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\trequired>\r\n\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n\t\t\t\t\trequired>\r\n\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n\t\t\t\t\trequired>\r\n\r\n\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_landmark\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_landmark').invalid\">Please enter landmark\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/userManagement/user/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>"],"sourceRoot":"webpack:///"}