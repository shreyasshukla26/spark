{"version":3,"sources":["webpack:///src/app/main/asset/rfid-management/rfid/rfid-crud/rfid-crud.component.ts","webpack:///src/app/main/asset/rfid-management/rfid/rfid-crud/rfid-crud.component.html","webpack:///src/app/main/asset/rfid-management/rfid/list/list.component.ts","webpack:///src/app/main/asset/rfid-management/rfid/list/list.component.html","webpack:///src/app/main/asset/rfid-management/rfid/action-dialog/action-dialog.component.ts","webpack:///src/app/main/asset/rfid-management/rfid/action-dialog/action-dialog.component.html","webpack:///src/app/shared/services/rfid/rfid.service.ts","webpack:///src/app/main/asset/rfid-management/rfid/rfid-crud/routes.ts","webpack:///src/app/main/asset/rfid-management/rfid/rfid.module.ts","webpack:///src/app/main/asset/rfid-management/rfid/create/create.component.ts","webpack:///src/app/main/asset/rfid-management/rfid/create/create.component.html","webpack:///src/app/main/asset/rfid-management/rfid/view-dialog/view-dialog.component.ts","webpack:///src/app/main/asset/rfid-management/rfid/view-dialog/view-dialog.component.html","webpack:///src/app/main/asset/rfid-management/rfid/rfid-routing.module.ts"],"names":["RfidCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","nav_list","nav_list_with_tab","filter","x","id","objectData","children","y","objectChildData","z","childData","isDefaultRoutePermeted","t","push","label","link","navigate","selector","templateUrl","styleUrls","encapsulation","None","animations","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","RFID","ListComponent","rfidService","dialog","datePipe","snackBar","displayedColumns","head","rfidSearch","expirySearch","statusSearch","getRFids","filterEntity","filterType","ANYWHERE","event","filterValue","target","value","dataSource","trim","toLowerCase","paginator","firstPage","getAllRfid","data","rfid","i","length","dateConverted","transform","expiry_date","status","statusString","sort","open","NoRecordFoundMessage","duration","err","confirmDialogRef","disableClose","afterClosed","result","userId","action","params","dialogRef","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","rf_id_no","exportedData","filteredData","chargerModel","Status","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","name","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","providers","ActionDialogComponent","fb","isEditMode","initialize","form","group","rfid_no","required","pattern","rfid_expDate","assignValues","close","valid","formValues","created_date","created_by","modify_by","update","create","get","hasError","setValue","checked","ref","closeActionPanel","updateStatus","onYesClick","RfidService","http","apiUrl2","API_URL2","post","user_id","cpo_id","login_id","map_id","providedIn","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","COMPONENTS","COMPONENTS_DYNAMIC","RfidModule","imports","declarations","entryComponents","CreateComponent","masterService","rfid_number","invalid","rf_name","onSubmit","$event","preventDefault","ViewDialogComponent","routes","RfidRoutingModule","forChild","exports"],"mappings":"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","file":"rfid-rfid-module-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\n\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { UtilityService } from \"app/shared/services/utility/utility.service\";\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n    selector: \"app-rfid-crud\",\r\n    templateUrl: \"./rfid-crud.component.html\",\r\n    styleUrls: [\"./rfid-crud.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class RfidCrudComponent implements OnInit {\r\n    tabLinks = [\r\n        // { label: 'RFID', link: 'list' },\r\n        // { label: 'Add New', link: 'create' }\r\n    ];\r\n    menuArray: any;\r\n    localStorage: any;\r\n    objectData: any;\r\n    objectChildData: any;\r\n    tempLinks = [];\r\n    childData: any;\r\n    constructor(\r\n        private router: Router,\r\n        private cdr: ChangeDetectorRef,\r\n        private _utilityService: UtilityService\r\n    ) {}\r\n    ngAfterViewInit() {\r\n        this._utilityService.activeMenuItems$.subscribe((menuItemSelecte) => {\r\n            this.menuArray = menuItemSelecte;\r\n            if (\r\n                this.menuArray == null ||\r\n                this.menuArray == undefined ||\r\n                this.menuArray.title == null ||\r\n                this.menuArray.title == undefined\r\n            ) {\r\n                this.menuArray = JSON.parse(\r\n                    localStorage.getItem(\"activeMenuItems\")\r\n                );\r\n            }\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        let nav_list = this.localStorage.nav_list_with_tab;\r\n        nav_list.filter((x) => {\r\n            if (x.id === \"assetManagement\") {\r\n                this.objectData = x;\r\n                if (\r\n                    this.objectData.children != undefined &&\r\n                    this.objectData.children != null\r\n                ) {\r\n                    this.objectData.children.filter((y) => {\r\n                        if (y.id === \"rfidManagement\") {\r\n                            this.objectChildData = y;\r\n                            if (\r\n                                this.objectChildData.children != undefined &&\r\n                                this.objectChildData.children != null\r\n                            ) {\r\n                                this.objectChildData.children.filter((z) => {\r\n                                    this.childData = z;\r\n                                    if (z.id === \"rfid\") {\r\n                                        let isDefaultRoutePermeted = false;\r\n                                        if (\r\n                                            this.childData.children !=\r\n                                                undefined &&\r\n                                            this.childData.children != null\r\n                                        ) {\r\n                                            this.childData.children.filter(\r\n                                                (t) => {\r\n                                                    if (t.id === \"rfid\") {\r\n                                                        isDefaultRoutePermeted =\r\n                                                            true;\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"RFID\",\r\n                                                            link: \"list\",\r\n                                                        });\r\n                                                    }\r\n                                                    if (t.id === \"addNew\") {\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"Add New\",\r\n                                                            link: \"create\",\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                        }\r\n\r\n                                        this.tabLinks = this.tempLinks;\r\n                                        if (!isDefaultRoutePermeted) {\r\n                                            this.router.navigate([\r\n                                                \"/assetManagement/rfidManagement/rfid/crud/\" +\r\n                                                    this.tempLinks[0].link,\r\n                                            ]);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: \"sunny-routed-content\",\r\n    template: \"Having a lot of light from the sun.\",\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"rainy-routed-content\",\r\n    template: \"A rainy period of time is one when it rains a lot\",\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"foggy-routed-content\",\r\n    template: \"If the weather is foggy, there is fog\",\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ViewDialogComponent } from \"../view-dialog/view-dialog.component\";\r\nexport class RFID {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    rf_id_no: string;\r\n    expiry_date: string;\r\n    status: string;\r\n    created_date: string;\r\n    createdby: number;\r\n    modify_date: string;\r\n    modifyby: number;\r\n    statusString: string;\r\n    dateConverted: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n    selector: \"app-list\",\r\n    templateUrl: \"./list.component.html\",\r\n    styleUrls: [\"./list.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: RFID;\r\n    filterType: MatTableFilter;\r\n    displayedColumns: string[] = [\r\n        \"rf_id_no\",\r\n        \"expiry_date\",\r\n        \"status\",\r\n        \"action\",\r\n    ];\r\n    head = [[\"RFID Number\", \"Expiry Date\", \"Name\", \"Status\"]];\r\n    dataSource: MatTableDataSource<RFID>;\r\n    localStorage: any;\r\n    rfid: RFID[];\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    rfidSearch = false;\r\n    expirySearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    constructor(\r\n        private rfidService: RfidService,\r\n        public dialog: MatDialog,\r\n        private datePipe: DatePipe,\r\n        private snackBar: MatSnackBar\r\n    ) {\r\n        // Create 100 users\r\n        // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n        // Assign the data to the data source for the table to render\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        this.getRFids();\r\n        this.filterEntity = new RFID();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    getRFids() {\r\n        this.rfidService.getAllRfid().subscribe(\r\n            (data: any) => {\r\n                if (data != null) {\r\n                    this.rfid = data;\r\n                    for (var i = 0; i < this.rfid.length; i++) {\r\n                        this.rfid[i].dateConverted = this.datePipe.transform(\r\n                            this.rfid[i].expiry_date,\r\n                            \"dd/MM/yyyy\"\r\n                        );\r\n                        if (this.rfid[i].status == \"N\") {\r\n                            this.rfid[i].statusString = \"Inactive\";\r\n                        } else {\r\n                            this.rfid[i].statusString = \"Active\";\r\n                        }\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(this.rfid);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.snackBar.open(\r\n                        MessageConstant.NoRecordFoundMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 3000 }\r\n                    );\r\n\r\n                    return;\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    delete(id) {\r\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n            disableClose: true,\r\n        });\r\n\r\n        //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n        this.confirmDialogRef.afterClosed().subscribe((result) => {\r\n            if (result) {\r\n                this.rfidService.delete(id, this.localStorage.userId).subscribe(\r\n                    (data: any) => {\r\n                        this.getRFids();\r\n                        this.snackBar.open(\"Deleted successfully\", \"Dismiss\", {\r\n                            duration: 2000,\r\n                        });\r\n                    },\r\n                    (err) => {}\r\n                );\r\n            }\r\n            this.confirmDialogRef = null;\r\n        });\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"800px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            // this.moderate(result);\r\n            this.getRFids();\r\n        });\r\n    }\r\n    viewDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n\r\n        const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n            width: \"800px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            // this.moderate(result);\r\n            this.getRFids();\r\n        });\r\n    }\r\n    changeVisibility(visibleOption, ev) {\r\n        // visibleOption = !visibleOption;\r\n        //nameSearch = false;\r\n        //descSearch = false;\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"rfidSearch\") {\r\n            this.rfidSearch = !this.rfidSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"expirySearch\") {\r\n            this.expirySearch = !this.expirySearch;\r\n            this.filterEntity.dateConverted = \"\";\r\n        }\r\n        if (visibleOption == \"statusSearch\") {\r\n            this.statusSearch = !this.statusSearch;\r\n            this.filterEntity.statusString = \"\";\r\n        }\r\n    }\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chargerModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"RFID Number \": chargerModel.rf_id_no,\r\n                \"Expiry Date\": chargerModel.dateConverted,\r\n                Status: chargerModel.statusString,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"RFID List\");\r\n        XLSX.writeFile(workBook, \"RFID List.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        //this.preloader.open();\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var chrger = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                chrger.rf_id_no,\r\n                chrger.dateConverted,\r\n                chrger.name,\r\n                chrger.statusString,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"RFID List Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n        //this.preloader.close();\r\n        // below line for Download PDF document\r\n        doc.save(\"RFID List report.pdf\");\r\n    }\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\"\r\n>\r\n<button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n    <mat-icon>sim_card_download</mat-icon> \r\n  </button>&nbsp;&nbsp;\r\n  <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n    <mat-icon>picture_as_pdf</mat-icon> \r\n  </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\"  class=\"page-layout simple fullwidth\"  style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n      \r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                   [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!rfidSearch\"  class=\"custom_font_size\" style=\"display: flex;\">RFID Number &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"rfidSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" RFID Number \"\r\n                                   [(ngModel)]=\"filterEntity.rf_id_no\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('rfidSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.rf_id_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"expiry_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!expirySearch\"  class=\"custom_font_size\" style=\"display: flex;\">Expiry Date &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('expirySearch',$event)\">search</mat-icon> </span>\r\n                       \r\n                        <mat-form-field *ngIf=\"expirySearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Expiry Date \"\r\n                                   [(ngModel)]=\"filterEntity.dateConverted\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('expirySearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.dateConverted }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field  *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" status \"\r\n                                   [(ngModel)]=\"filterEntity.statusString\">\r\n                                   <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"\r\n                        [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef  >\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n                                <mat-icon color=\"primary\" matTooltip=\"View\"\r\n                                (click)=\"viewDialog('VIEW',element)\"\r\n                                style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\"\r\n                                  (click)=\"openDialog('EDIT',element)\"\r\n                                  style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\"\r\n                                  (click)=\"delete(element.id)\"\r\n                                  style=\"cursor:pointer\">delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                \r\n               \r\n                <tr mat-header-row  *matHeaderRowDef=\"displayedColumns\">\r\n                </tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import {\r\n    Component,\r\n    OnInit,\r\n    Inject,\r\n    ElementRef,\r\n    ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MasterService } from \"app/shared/services/master/master.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { VehicleService } from \"app/shared/services/master/vehicle/vehicle.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MtxDialogData } from \"@ng-matero/extensions\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\n@Component({\r\n    selector: \"app-action-dialog\",\r\n    templateUrl: \"./action-dialog.component.html\",\r\n    styleUrls: [\"./action-dialog.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n    params: any;\r\n    isEditMode = false;\r\n    form: FormGroup;\r\n    localStorage: any;\r\n    status = false;\r\n\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private rfidService: RfidService,\r\n        private snackBar: MatSnackBar,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.params = this.data;\r\n\r\n        this.isEditMode = this.params.action == \"CREATE\" ? false : true;\r\n\r\n        this.form = this.fb.group({\r\n            // name: ['', [Validators.required]],\r\n            //description : ['', [Validators.required]] ,\r\n            rfid_no: [\r\n                \"\",\r\n                [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)],\r\n            ],\r\n            rfid_expDate: [\"\", [Validators.required]],\r\n        });\r\n\r\n        if (this.isEditMode) {\r\n            this.assignValues(this.params);\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    closeActionPanel() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    onYesClick() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            const params: any = {\r\n                name: !!formValues.name ? formValues.name : \"\",\r\n                //description :formValues.description,\r\n                rfid_no: formValues.rfid_no,\r\n                expiry_date: this.datePipe.transform(\r\n                    formValues.rfid_expDate,\r\n                    \"yyyy-MM-dd\"\r\n                ),\r\n                created_date: this.datePipe.transform(\r\n                    formValues.rfid_expDate,\r\n                    \"yyyy-MM-dd\"\r\n                ),\r\n                created_by: this.localStorage.userId,\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n                // tslint:disable-next-line: semicolon\r\n            };\r\n            // tslint:disable-next-line: no-//\r\n\r\n            if (this.isEditMode) {\r\n                (params.id = this.params.data.id),\r\n                    (params.modify_by = this.localStorage.userId);\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n                this.rfidService.update(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(\r\n                            \"Record updated successfully!\",\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(\"Please try again\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                );\r\n            } else {\r\n                this.rfidService.create(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(\"Rfid created!\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(\"Please try again\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n\r\n            this.dialogRef.close(params);\r\n        }\r\n        return;\r\n    }\r\n\r\n    getErrorMessage(form: FormGroup) {\r\n        return form.get(\"email\").hasError(\"required\")\r\n            ? \"You must enter a value\"\r\n            : form.get(\"email\").hasError(\"email\")\r\n            ? \"Not a valid email\"\r\n            : \"\";\r\n    }\r\n\r\n    assignValues(params) {\r\n        // this.form.get('name').setValue(params.data.name);\r\n        //this.form.get('description').setValue(params.data.description);\r\n        this.form.get(\"rfid_no\").setValue(params.data.rf_id_no);\r\n        this.form.get(\"rfid_expDate\").setValue(params.data.expiry_date);\r\n\r\n        this.status = params.data.status == \"Y\" ? true : false;\r\n    }\r\n\r\n    updateStatus(event) {\r\n        this.status = event.checked;\r\n        this.ref.checked = this.status;\r\n    }\r\n}\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">RFID</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n      fxFlex=\"1 0 auto\" name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>RFID Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"rfid_no\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter RFID number\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('rfid_no').hasError('required')\">Please enter RFID number\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('rfid_no').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Expiry Date</mat-label>\r\n          <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n            </mat-icon>\r\n            <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </div>\r\n          <!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n          <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <div fxFlex=\"50\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard]},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { RfidCrudComponent } from './rfid-crud/rfid-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { RfidRoutingModule } from './rfid-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[RfidCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, RfidRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class RfidModule{}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup;\r\n  brands: any;\r\n  models: any;\r\n  chargerTypes: any;\r\n  vehicleTypes: any;\r\n  localStorage: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  constructor(private fb: FormBuilder, private masterService: MasterService,\r\n    private rfidService: RfidService, private snackBar: MatSnackBar,\r\n    private router: Router, private datePipe: DatePipe) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      // rf_name: ['', [Validators.required]],\r\n      // rfid_description : ['', [Validators.required]] ,\r\n      rfid_number: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      rfid_expDate: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    } else {\r\n      let formValues = this.form.value;\r\n      let params = {\r\n        name: !!formValues.rf_name ? formValues.rf_name : '',\r\n        // description :formValues.rfid_description, \r\n        rfid_no: formValues.rfid_number,\r\n        expiry_date: this.datePipe.transform(formValues.rfid_expDate, \"yyyy-MM-dd\"),\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_date: this.datePipe.transform(formValues.rfid_expDate, \"yyyy-MM-dd\"),\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      this.rfidService.create(params).subscribe(\r\n        (data: any) => {\r\n\r\n          this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/assetManagement/rfidManagement/rfid/crud/list']);\r\n\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>RFID Number</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"rfid_number\" autocomplete=\"off\" maxlength=\"100\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter RFID number\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('rfid_number').hasError('required')\">Please enter RFID number\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('rfid_number').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Expiry Date</mat-label>\r\n        <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n          </mat-icon>\r\n          <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </div>\r\n        <!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n        <mat-error *ngIf=\"form.get('rfid_expDate').invalid\">Please enter expiry date\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"50\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/rfidManagement/rfid/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder,private rfidService: RfidService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      // name: ['', [Validators.required]],\r\n      //description : ['', [Validators.required]] ,\r\n      rfid_no: [''],\r\n      rfid_expDate : ['']   \r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if (this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n  \r\n        name : !!formValues.name ? formValues.name : '', \r\n        //description :formValues.description, \r\n        rfid_no :formValues.rfid_no,\r\n        expiry_date :this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n        created_date: this.datePipe.transform(formValues.rfid_expDate,\"yyyy-MM-dd\") ,\r\n          created_by : this.localStorage.userId,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.rfidService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.rfidService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n  \r\n      this.dialogRef.close(params);\r\n\r\n    }\r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    // this.form.get('name').setValue(params.data.name);\r\n    //this.form.get('description').setValue(params.data.description);\r\n    this.form.get('rfid_no').setValue(params.data.rf_id_no);\r\n    this.form.get('rfid_expDate').setValue(params.data.expiry_date);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">RFID</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n            fxFlex=\"1 0 auto\" name=\"form\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>RFID Number</mat-label>\r\n                    <input readonly matInput placeholder=\"\" formControlName=\"rfid_no\" autocomplete=\"off\">\r\n\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Expiry Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"dp3\" formControlName=\"rfid_expDate\" disabled>\r\n                    <mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <div fxFlex=\"50\">\r\n                    <mat-slide-toggle disabled class=\"example-margin\" disable color=\"primary\" [checked]=\"status\"\r\n                        (change)=\"updateStatus($event)\" #toggleElement>\r\n                        {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n\r\n                <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RfidCrudComponent } from './rfid-crud/rfid-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './rfid-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : RfidCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class RfidRoutingModule{}"]}