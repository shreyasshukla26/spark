{"version":3,"sources":["webpack:///src/app/main/miscellaneous/notification-engine/list/list.component.ts","webpack:///src/app/main/miscellaneous/notification-engine/list/list.component.html","webpack:///src/app/main/miscellaneous/notification-engine/action-dialog/action-dialog.component.ts","webpack:///src/app/main/miscellaneous/notification-engine/action-dialog/action-dialog.component.html","webpack:///src/app/main/miscellaneous/miscellaneous.module.ts","webpack:///src/app/shared/services/notification-engine/notification-engine.service.ts","webpack:///src/app/main/miscellaneous/notification-engine/view-dialog/view-dialog.component.ts","webpack:///src/app/main/miscellaneous/notification-engine/view-dialog/view-dialog.component.html","webpack:///src/app/main/miscellaneous/miscellaneous-routing.module.ts","webpack:///src/app/main/miscellaneous/notification-engine/notification-engine-crud/notification-engine-crud.component.ts","webpack:///src/app/main/miscellaneous/notification-engine/notification-engine-crud/notification-engine-crud.component.html","webpack:///src/app/main/miscellaneous/notification-engine/create/create.component.ts","webpack:///src/app/main/miscellaneous/notification-engine/create/create.component.html","webpack:///src/app/main/miscellaneous/notification-engine/notification-engine-routing.module.ts","webpack:///src/app/main/miscellaneous/notification-engine/notification-engine-crud/routes.ts"],"names":["NotificationEngine","resizeColumnSetting","ListComponent","notificationService","dialog","snackBar","cdr","displayedColumns","head","projectSearch","eventCodSearch","eventNaSearch","emailSearch","smsSearch","pushSearch","statusSearch","localStorage","JSON","parse","getItem","defaultColumnSize","getNotiyEngine","filterEntity","filterType","ANYWHERE","resizeColumnSettings","i","length","columnSetting","coulmnName","csswidth","push","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","getAllNotificationEngineList","subscribe","resp","notify_Engine","data","status","statusString","sort","open","NoRecordFoundMessage","duration","err","id","confirmDialogRef","disableClose","afterClosed","result","deleteNotificationEngine","userId","deleteMessage","detectChanges","errorMessage","action","params","dialogRef","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","project_code","event_code","event_name","content_email","content_sms","content_push","exportedData","filteredData","notifyData","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","edges","right","cssValue","rectangle","columnElts","document","getElementsByClassName","currentEl","style","requestString","selBox","createElement","position","left","stringify","appendChild","focus","select","execCommand","removeChild","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","autocompleteObjectValidator","control","ActionDialogComponent","fb","router","menuMasterService","isEditMode","sendEmailChecked","sendSmsChecked","sendPushChecked","initialize","menuArray","form","group","project","required","maxLength","send_email","send_sms","send_push","get","disable","assignValues","getProject","close","setValue","clearValidators","setValidators","valid","formValues","project_id","undefined","modify_by","created_by","updateNotificationEngine","recordUpdateMessage","createNotificationEngine","notificationCreate","formInvalid","hasError","enable","checked","ref","toSelect","find","c","filteredOptionsProject","controls","valueChanges","pipe","name","_filterProject","option","includes","item","closeActionPanel","onCheckSendEmail","onCheckSendSms","onCheckSendPush","updateStatus","onYesClick","COMPONENTS","COMPONENTS_DYNAMIC","MiscellaneousModule","imports","declarations","entryComponents","NotificationEngineService","http","apiUrl1","API_URL2","post","login_id","providedIn","ViewDialogComponent","pattern","routes","path","loadChildren","then","m","EVChargingSolutionModule","title","NotificationEngineModule","MiscellaneousRoutingModule","forChild","exports","NotificationEngineCrudComponent","_utilityService","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","children","y","objectChildData","isDefaultRoutePermeted","z","label","link","navigate","activeMenuItems$","menuItemSelecte","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","CreateComponent","onSubmit","$event","preventDefault","component","canActivate","NotificationEngineRoutingModule","TABS_DEMO_ROUTES","redirectTo","pathMatch"],"mappingsgBoB;;AAA6E;;AACzE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AAAM;;AAAY;;;;;;;;AAC7F;;AACI;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAA7C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AAAa;;AACxF;;;;;;AAFiD;;AAAA;;;;;;AALrD;;AAEI;;AAEA;;AAIJ;;;;;;AAPA;;AACW;;AAAA;;AAEU;;AAAA;;;;;;AAKrB;;AAA8D;;AAAqB;;;;;;AAAhE;;AAA2C;;AAAA;;;;;;;;AAM1D;;AAA8E;;AAC1E;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAM;;AAAY;;;;;;;;AAC9F;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,gBAA1B,EAA0C,MAA1C;AAA0C,WAA1C;;AAAoD;;AAAa;;AACzF;;;;;;AAF+C;;AAAA;;;;;;AALnD;;AAEI;;AAEA;;AAIJ;;;;;;AAPC;;AACU;;AAAA;;AAEU;;AAAA;;;;;;AAKrB;;AAA8D;;AAAmB;;;;;;AAA9D;;AAA2C;;AAAA;;;;;;;;AAM1D;;AAA6E;;AAC5D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AACpF;;AAAY;;;;;;;;AAChB;;AAEI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,eAA1B,EAAyC,MAAzC;AAAyC,WAAzC;;AAAmD;;AAAa;;AACxF;;;;;;AAF+C;;AAAA;;;;;;AAPnD;;AAEI;;AAGA;;AAKJ;;;;;;AATC;;AACU;;AAAA;;AAGU;;AAAA;;;;;;AAMrB;;AAAgE;;AAAmB;;;;;;AAAhE;;AAA6C;;AAAA;;;;;;;;AAM5D;;AAA2E;;AAC1D;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAClF;;AAAY;;;;;;;;AAChB;;AAEI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,aAA1B,EAAuC,MAAvC;AAAuC,WAAvC;;AAAiD;;AAAa;;AACtF;;;;;;AAFgD;;AAAA;;;;;;AAPpD;;AAEI;;AAGA;;AAKJ;;;;;;AATA;;AACW;;AAAA;;AAGU;;AAAA;;;;;;;;;;;;;;AAMrB;;AACwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAAsB;;;;;;AADlC;;AAAzC,sFAAkB,iBAAlB,EAAkB,qEAAlB;;AACqD;;AAAA;;;;;;;;AAMpE;;AAAyE;;AACxD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,WAA1B,EAAqC,MAArC;AAAqC,WAArC;;AAA+C;;AAChF;;AAAY;;;;;;;;AAChB;;AAEI;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAA1C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,WAA1B,EAAqC,MAArC;AAAqC,WAArC;;AAA+C;;AAAa;;AACpF;;;;;;AAF8C;;AAAA;;;;;;AAPlD;;AAEI;;AAGA;;AAKJ;;;;;;AATC;;AACU;;AAAA;;AAGU;;AAAA;;;;;;;;AAMrB;;AACwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAAoB;;;;;;AAD7B;;AAAzC,sFAAkB,iBAAlB,EAAkB,qEAAlB;;AACkD;;AAAA;;;;;;;;AAMlE;;AAA0E;;AACzD;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AACjF;;AAAY;;;;;;;;AAChB;;AAEI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,YAA1B,EAAsC,MAAtC;AAAsC,WAAtC;;AAAgD;;AAAa;;AACrF;;;;;;AAF+C;;AAAA;;;;;;AAPnD;;AAEI;;AAGA;;AAKJ;;;;;;AATC;;AACU;;AAAA;;AAGU;;AAAA;;;;;;;;AAMrB;;AACwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAAqB;;;;;;AADhC;;AAAzC,sFAAkB,iBAAlB,EAAkB,qEAAlB;;AACoD;;AAAA;;;;;;;;AAMnE;;AAA4E;;AACxE;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAM;;AAAY;;;;;;;;AAC5F;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAArC;;AACA;;AAAoB;AAAA;;AAAA;;AAAA,4CAA0B,cAA1B,EAAwC,MAAxC;AAAwC,WAAxC;;AAAkD;;AAAa;;AACvF;;;;;;AAFyC;;AAAA;;;;;;AAL7C;;AAEI;;AAEA;;AAIJ;;;;;;AAPE;;AACS;;AAAA;;AAEU;;AAAA;;;;;;AAKrB;;AACI;;AAAqB;;;;;;AADmC;;AAAzC;;AACf;;AAAA;;;;;;AAIJ;;AACI;;AAA+B;;AAAM;;AACzC;;;;;;;;AACA;;AAEI;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAU;;AAAW;;AAEhD;;AAA4C;AAAA;;AAAA;;AAAA;;AAAA,sCAAoB,MAApB,EAA0B,WAA1B;AAA0B,WAA1B;;AACjB;;AAAI;;AAAW;;AAE1C;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAAM;;AACd;;;;;;AAEJ;;;;;;AACA;;;;;;;;UDjHCA,kB;;;;UAgBAC,mB;;;;UAcAC,a;AAwBX;AACA,+BAAoBC,mBAApB,EAA2EC,MAA3E,EACUC,QADV,EACyCC,GADzC,EACiE;AAAA;;AAD7C,eAAAH,mBAAA,GAAAA,mBAAA;AAAuD,eAAAC,MAAA,GAAAA,MAAA;AACjE,eAAAC,QAAA,GAAAA,QAAA;AAA+B,eAAAC,GAAA,GAAAA,GAAA;AAtBzC,eAAAC,gBAAA,GAA6B,CAAC,cAAD,EAAgB,YAAhB,EAA8B,YAA9B,EAA4C,eAA5C,EAA6D,aAA7D,EAA4E,cAA5E,EAA4F,QAA5F,EAAsG,QAAtG,CAA7B;AACA,eAAAC,IAAA,GAAO,CAAC,CAAC,cAAD,EAAgB,YAAhB,EAA8B,YAA9B,EAA4C,eAA5C,EAA6D,aAA7D,EAA4E,cAA5E,EAA4F,QAA5F,CAAD,CAAP;AASA,eAAAC,aAAA,GAAc,KAAd;AACA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,WAAA,GAAc,KAAd;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,YAAA,GAAe,KAAf;AAOC;;;;qCAEU;AACT,iBAAKC,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKC,iBAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,YAAL,GAAoB,IAAItB,kBAAJ,EAApB;AACA,iBAAKuB,UAAL,GAAkB,gEAAeC,QAAjC;AAED;;;8CAEgB;AACf,iBAAKC,oBAAL,GAA4B,EAA5B;;AACA,iBAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAG,KAAKnB,gBAAL,CAAsBoB,MAAxC,EAA+CD,CAAC,EAAhD,EAAmD;AAC/C,kBAAIE,aAAa,GAAE,IAAI3B,mBAAJ,EAAnB;AACA2B,2BAAa,CAACC,UAAd,GAA2B,KAAKtB,gBAAL,CAAsBmB,CAAtB,CAA3B;AACAE,2BAAa,CAACE,QAAd,GAAyB,CAAzB;AACA,mBAAKL,oBAAL,CAA0BM,IAA1B,CAA+BH,aAA/B;AACH;AACF;;;sCAEWI,K,EAAc;AACxB,gBAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,iBAAKC,UAAL,CAAgBC,MAAhB,GAAyBJ,WAAW,CAACK,IAAZ,GAAmBC,WAAnB,EAAzB;;AACA,gBAAI,KAAKH,UAAL,CAAgBI,SAApB,EAA+B;AAC7B,mBAAKJ,UAAL,CAAgBI,SAAhB,CAA0BC,SAA1B;AACD;AACF;;;2CAEgB;AAAA;;AACf,iBAAKtC,mBAAL,CAAyBuC,4BAAzB,GAAwDC,SAAxD,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,qBAAI,CAACC,aAAL,GAAqBD,IAAI,CAACE,IAA1B;;AACA,qBAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAACmB,aAAL,CAAmBlB,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,sBAAI,KAAI,CAACmB,aAAL,CAAmBnB,CAAnB,EAAsBqB,MAAtB,IAAgC,GAApC,EAAyC;AACvC,yBAAI,CAACF,aAAL,CAAmBnB,CAAnB,EAAsBsB,YAAtB,GAAqC,UAArC;AACD,mBAFD,MAEO;AACL,yBAAI,CAACH,aAAL,CAAmBnB,CAAnB,EAAsBsB,YAAtB,GAAqC,QAArC;AACD;AACF;;AACD,qBAAI,CAACZ,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAI,CAACS,aAA5B,CAAlB;AACA,qBAAI,CAACT,UAAL,CAAgBI,SAAhB,GAA4B,KAAI,CAACA,SAAjC;AACA,qBAAI,CAACJ,UAAL,CAAgBa,IAAhB,GAAuB,KAAI,CAACA,IAA5B;AACD,eAZD,MAYO;AACL,qBAAI,CAAC5C,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBC,oBAAnC,EAAyD,SAAzD,EAAoE;AAAEC,0BAAQ,EAAE;AAAZ,iBAApE;;AACA;AACD;AAEF,aAnBH,EAoBE,UAACC,GAAD,EAAS,CAAG,CApBd;AAsBD;;;kCAEMC,E,EAAI;AAAA;;AACT,iBAAKC,gBAAL,GAAwB,KAAKnD,MAAL,CAAY8C,IAAZ,CAAiB,mHAAjB,EAA6C;AACnEM,0BAAY,EAAE;AADqD,aAA7C,CAAxB;AAIA,iBAAKD,gBAAL,CAAsBE,WAAtB,GAAoCd,SAApC,CAA8C,UAAAe,MAAM,EAAI;AACtD,kBAAIA,MAAJ,EAAY;AACN,sBAAI,CAACvD,mBAAL,CAAyBwD,wBAAzB,CAAkDL,EAAlD,EAAqD,MAAI,CAACtC,YAAL,CAAkB4C,MAAvE,EAA+EjB,SAA/E,CACA,UAACC,IAAD,EAAe;AACb,sBAAGA,IAAI,CAACG,MAAL,IAAe,IAAlB,EAAuB;AACrB,0BAAI,CAAC1B,cAAL;;AACA,0BAAI,CAAChB,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBW,aAAnC,EAAkD,SAAlD,EAA6D;AAAET,8BAAQ,EAAE;AAAZ,qBAA7D;;AACA,0BAAI,CAAC9C,GAAL,CAASwD,aAAT;AACD,mBAJD,MAIK;AACH,0BAAI,CAACzD,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBa,YAAnC,EAAiD,SAAjD,EAA4D;AAAEX,8BAAQ,EAAE;AAAZ,qBAA5D;AACD;AACF,iBATD,EASG,UAACC,GAAD,EAAS,CACb,CAVC;AAYL;;AACD,oBAAI,CAACE,gBAAL,GAAwB,IAAxB;AACD,aAhBD;AAkBD;;;qCAEUS,M,EAAQlB,I,EAAI;AAAA;;AACrB,gBAAImB,MAAM,GAAG;AACXD,oBAAM,EAAEA,MADG;AAEXlB,kBAAI,EAAEA;AAFK,aAAb;AAKA,gBAAMoB,SAAS,GAAG,KAAK9D,MAAL,CAAY8C,IAAZ,CAAiB,sFAAjB,EAAsC;AACtDiB,mBAAK,EAAE,QAD+C;AAEtDrB,kBAAI,EAAEmB,MAFgD;AAGtDG,wBAAU,EAAE,mBAH0C;AAItDC,uBAAS,EAAE,KAJ2C;AAKtDb,0BAAY,EAAE;AALwC,aAAtC,CAAlB;AAQAU,qBAAS,CAACT,WAAV,GAAwBd,SAAxB,CAAkC,UAAAe,MAAM,EAAI;AAE1C;AACA,oBAAI,CAACrC,cAAL;AACD,aAJD;AAKD;;;qCACU2C,M,EAAQlB,I,EAAI;AAAA;;AACrB;AACA;AACA,gBAAImB,MAAM,GAAG;AACXD,oBAAM,EAAEA,MADG;AAEXlB,kBAAI,EAAEA;AAFK,aAAb;AAKA,gBAAMoB,SAAS,GAAG,KAAK9D,MAAL,CAAY8C,IAAZ,CAAiB,4FAAjB,EAAwC;AACxDiB,mBAAK,EAAE,QADiD;AAExDrB,kBAAI,EAAEmB,MAFkD;AAGxDI,uBAAS,EAAE,KAH6C;AAIxDb,0BAAY,EAAE,IAJ0C;AAKxDY,wBAAU,EAAE;AAL4C,aAAxC,CAAlB;AAQAF,qBAAS,CAACT,WAAV,GAAwBd,SAAxB,CAAkC,UAAAe,MAAM,EAAI;AAC1C,oBAAI,CAACrC,cAAL;;AACA,oBAAI,CAACf,GAAL,CAASwD,aAAT;AACD,aAHD;AAID;;;2CAEgBQ,a,EAAcC,E,EAAI;AAEjCA,cAAE,CAACC,eAAH;;AACA,gBAAIF,aAAa,IAAI,eAArB,EAAsC;AACpC,mBAAK7D,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,mBAAKa,YAAL,CAAkBmD,YAAlB,GAAiC,EAAjC;AACD;;AACD,gBAAIH,aAAa,IAAI,gBAArB,EAAuC;AACrC,mBAAK5D,cAAL,GAAsB,CAAC,KAAKA,cAA5B;AACA,mBAAKY,YAAL,CAAkBoD,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIJ,aAAa,IAAI,eAArB,EAAsC;AACpC,mBAAK3D,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,mBAAKW,YAAL,CAAkBqD,UAAlB,GAA+B,EAA/B;AACD;;AACD,gBAAIL,aAAa,IAAI,aAArB,EAAoC;AAClC,mBAAK1D,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,mBAAKU,YAAL,CAAkBsD,aAAlB,GAAkC,EAAlC;AACD;;AACD,gBAAIN,aAAa,IAAI,WAArB,EAAkC;AAChC,mBAAKzD,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACA,mBAAKS,YAAL,CAAkBuD,WAAlB,GAAgC,EAAhC;AACD;;AACD,gBAAIP,aAAa,IAAI,YAArB,EAAmC;AACjC,mBAAKxD,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,mBAAKQ,YAAL,CAAkBwD,YAAlB,GAAiC,EAAjC;AACD;;AAED,gBAAIR,aAAa,IAAI,cAArB,EAAqC;AACnC,mBAAKvD,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,mBAAKO,YAAL,CAAkB0B,YAAlB,GAAiC,EAAjC;AACD;AAEF;;;wCAEa;AACZ,iBAAK+B,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKU,UAAL,CAAgB4C,YAAhB,CAA6BrD,MAAjD,EAAyDD,CAAC,EAA1D,EAA8D;AAC5D,kBAAIuD,UAAU,GAAG,KAAK7C,UAAL,CAAgB4C,YAAhB,CAA6BtD,CAA7B,CAAjB;AACA,kBAAIoB,IAAI,GAAG;AACT,gCAAemC,UAAU,CAACR,YADjB;AAC8B,8BAAcQ,UAAU,CAACP,UADvD;AACmE,8BAAcO,UAAU,CAACN,UAD5F;AACwG,iCAAiBM,UAAU,CAACL,aADpI;AAET,+BAAeK,UAAU,CAACJ,WAFjB;AAE8B,gCAAgBI,UAAU,CAACH,YAFzD;AAEuE,0BAAUG,UAAU,CAACjC;AAF5F,eAAX;AAIA,mBAAK+B,YAAL,CAAkBhD,IAAlB,CAAuBe,IAAvB;AACD;;AACD,gBAAMoC,SAAS,GAAG,4CAAWC,aAAX,CAAyB,KAAKJ,YAA9B,CAAlB;AACA,gBAAMK,QAAQ,GAAkB,4CAAWC,QAAX,EAAhC;AACA,wDAAWC,iBAAX,CAA6BF,QAA7B,EAAuCF,SAAvC,EAAkD,qBAAlD;AACA,4DAAeE,QAAf,EAAyB,0BAAzB;AACD;;;sCAEW;AAAA;;AACV,gBAAIG,GAAG,GAAG,IAAI,4CAAJ,CAAU,CAAE;AAAF,aAAV,CAAV;AAGA,iBAAKR,YAAL,GAAoB,EAApB;;AACA,iBAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKU,UAAL,CAAgB4C,YAAhB,CAA6BrD,MAAjD,EAAyDD,CAAC,EAA1D,EAA8D;AAC5D,kBAAIuD,UAAU,GAAG,KAAK7C,UAAL,CAAgB4C,YAAhB,CAA6BtD,CAA7B,CAAjB;AACA,kBAAIoB,IAAI,GAAG,CAACmC,UAAU,CAACR,YAAZ,EAAyBQ,UAAU,CAACP,UAApC,EAAgDO,UAAU,CAACN,UAA3D,EAAuEM,UAAU,CAACL,aAAlF,EAAiGK,UAAU,CAACJ,WAA5G,EAAyHI,UAAU,CAACH,YAApI,EACTG,UAAU,CAACjC,YADF,CAAX;AAGA,mBAAK+B,YAAL,CAAkBhD,IAAlB,CAAuBe,IAAvB;AACD;;AACD,gBAAI0C,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,gBAAIC,QAAQ,GAAG,IAAID,KAAJ,EAAf;AACA,gBAAIE,GAAG,GAAG,2CAAV;AACA,gBAAIC,UAAU,GAAG,4CAAjB;AACAF,oBAAQ,CAACC,GAAT,GAAeC,UAAf;AACA,gBAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,cAAX,CAA2B,OAA3B,CAAlB;AACAP,eAAG,CAACG,GAAJ,GAAUA,GAAV;AACAJ,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB;AAECT,eAAW,CAACW,SAAZ,CAAsB;AACrB1F,kBAAI,EAAE,KAAKA,IADU;AAErB2F,kBAAI,EAAE,KAAKpB,YAFU;AAGrBqB,mBAAK,EAAE,MAHc;AAIrBC,wBAAU,EAAE;AAAEC,yBAAS,EAAE,SAAb;AAAwBC,yBAAS,EAAE,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV;AAAnC,eAJS;AAKrBC,oBAAM,EAAE;AACNC,2BAAW,EAAE,CADP;AAENC,wBAAQ,EAAE;AAFJ,eALa;AAWrBC,oBAAM,EAAE;AAAEC,mBAAG,EAAE;AAAP,eAXa;AAYrBC,yBAAW,EAAE,qBAAA/D,IAAI,EAAI,CACpB,CAboB;AAcrBgE,yBAAW,EAAE,qBAAAhE,IAAI,EAAI;AACnByC,mBAAG,CAACwB,QAAJ,CAAavB,GAAb,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B;AACAD,mBAAG,CAACwB,QAAJ,CAAarB,QAAb,EAAuB,GAAvB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,CAAnC;AAEAH,mBAAG,CAACyB,IAAJ,CAAS,4BAAT,EAAuCzB,GAAG,CAAC0B,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,KAAmC,CAA1E,EAA6E,EAA7E,EAAiF;AAAEC,uBAAK,EAAE;AAAT,iBAAjF;AAEA7B,mBAAG,CAACU,YAAJ,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B;AACAV,mBAAG,CAACS,WAAJ,CAAgB,EAAhB;AACAT,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACyB,IAAJ,CAAS,iCAAT,EAA4C,EAA5C,EAAgD,GAAhD,EAAqD,IAArD,EAA2D,EAA3D;AACAzB,mBAAG,CAAC8B,SAAJ,CAAc9B,GAAG,CAAC+B,MAAJ,CAAW;AAAEC,yBAAO,EAAE;AAAX,iBAAX,CAAd;AACAhC,mBAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,mBAAG,CAACS,WAAJ,CAAgB,CAAhB;AACAT,mBAAG,CAACyB,IAAJ,CAAS,UAAUnB,WAAnB,EAAgC,EAAhC,EAAoC,EAApC;AAEAN,mBAAG,CAACyB,IAAJ,CAAS,kBAAkB,MAAI,CAAChG,YAAL,CAAkBwG,MAA7C,EAAqD,GAArD,EAA0D,EAA1D,EAA8D;AAAEJ,uBAAK,EAAE;AAAT,iBAA9D;AACA7B,mBAAG,GAAG,MAAI,CAACkC,YAAL,CAAkBlC,GAAlB,CAAN;AACD;AA/BoB,aAAtB,EAvBS,CAyDV;;AACAA,eAAG,CAACmC,MAAJ,CAAW,kBAAX,EA1DU,CA4DV;;AACAnC,eAAG,CAACoC,IAAJ,CAAS,gCAAT;AAED;;;uCACYpC,G,EAAK;AAChB,gBAAIqC,OAAO,GAAGrC,GAAG,CAACsC,gBAAJ,EAAd;AACA,gBAAMnG,CAAC,GAAG6D,GAAG,CAAC0B,QAAJ,CAAaY,gBAAb,EAAV;AACAtC,eAAG,CAACU,YAAJ,CAAiB,GAAjB;AACAV,eAAG,CAACS,WAAJ,CAAgB,EAAhB,EAJgB,CAKhB;;AACAT,eAAG,CAACyB,IAAJ,CAAS,UAAUc,MAAM,CAACpG,CAAD,CAAhB,GAAsB,MAAtB,GAA+BoG,MAAM,CAACF,OAAD,CAA9C,EAAyD,MAAM,EAA/D,EAAmE,MAAM,EAAzE,EAA6E,IAA7E,EAAmF,IAAnF,EAAyF,OAAzF;AACA,mBAAOrC,GAAP;AAED;;;sCAEWvD,K,EAAoBzB,gB,EAAgB;AAChD,gBAAIyB,KAAK,CAAC+F,KAAN,CAAYC,KAAhB,EAAuB;AACtB,kBAAMC,QAAQ,GAAGjG,KAAK,CAACkG,SAAN,CAAgB/D,KAAhB,GAAwB,IAAzC;AACA,kBAAMgE,UAAU,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,gBAAgB9H,gBAAhD,CAAnB;;AACA,mBAAK,IAAImB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGyG,UAAU,CAACxG,MAA/B,EAAuCD,EAAC,EAAxC,EAA4C;AAC3C,oBAAM4G,SAAS,GAAGH,UAAU,CAACzG,EAAD,CAA5B;AACI4G,yBAAS,CAACC,KAAV,CAAgBpE,KAAhB,GAAwB8D,QAAxB;AACA,qBAAK3H,GAAL,CAASwD,aAAT;AACD;;AAED,mBAAI,IAAIpC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAG,KAAKD,oBAAL,CAA0BE,MAA5C,EAAmDD,CAAC,EAApD,EAAuD;AACrD,oBAAIE,aAAa,GAAI,KAAKH,oBAAL,CAA0BC,CAA1B,CAArB;;AACC,oBAAGE,aAAa,CAACC,UAAd,IAA6BtB,gBAAhC,EAAiD;AAChDqB,+BAAa,CAACE,QAAd,GAAyBE,KAAK,CAACkG,SAAN,CAAgB/D,KAAzC;AACA;AAEL;AACF;AACA;;;6CACe;AAEd,iBAAI,IAAIzC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAG,KAAKD,oBAAL,CAA0BE,MAA5C,EAAmDD,CAAC,EAApD,EAAuD;AACnD,kBAAIE,aAAa,GAAI,KAAKH,oBAAL,CAA0BC,CAA1B,CAArB;;AAED,kBAAGE,aAAa,CAACE,QAAd,GAAyB,CAA5B,EAA8B;AAC7B,oBAAMqG,UAAU,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,gBAAgBzG,aAAa,CAACC,UAA9D,CAAnB;;AACA,qBAAK,IAAIH,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGyG,UAAU,CAACxG,MAA/B,EAAuCD,GAAC,EAAxC,EAA4C;AAC1C,sBAAM4G,SAAS,GAAGH,UAAU,CAACzG,GAAD,CAA5B;AACA4G,2BAAS,CAACC,KAAV,CAAgBpE,KAAhB,GAAwBvC,aAAa,CAACE,QAAd,GAAwB,IAAhD;AACA,uBAAKxB,GAAL,CAASwD,aAAT;AACD;AACD;AAEH;AACF;;;wCAEa0E,a,EAAa;AACzB,gBAAIC,MAAM,GAAGL,QAAQ,CAACM,aAAT,CAAuB,UAAvB,CAAb;AACAD,kBAAM,CAACF,KAAP,CAAaI,QAAb,GAAwB,OAAxB;AACAF,kBAAM,CAACF,KAAP,CAAaK,IAAb,GAAoB,GAApB;AACAH,kBAAM,CAACF,KAAP,CAAa3B,GAAb,GAAmB,GAAnB;AACA6B,kBAAM,CAACF,KAAP,CAAahB,OAAb,GAAuB,GAAvB;AACAkB,kBAAM,CAACtG,KAAP,GAAelB,IAAI,CAAC4H,SAAL,CAAeL,aAAf,CAAf;AACAJ,oBAAQ,CAACjC,IAAT,CAAc2C,WAAd,CAA0BL,MAA1B;AACAA,kBAAM,CAACM,KAAP;AACAN,kBAAM,CAACO,MAAP;AACAZ,oBAAQ,CAACa,WAAT,CAAqB,MAArB;AACAb,oBAAQ,CAACjC,IAAT,CAAc+C,WAAd,CAA0BT,MAA1B;AACD;;;;;;;yBAlUUvI,a,EAAa,+L,EAAA,oI,EAAA,yI,EAAA,gI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;4EAUb,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;AC9DtB;;AACI;;AAAqC;AAAA,qBAAS,IAAAiJ,WAAA,EAAT;AAAsB,aAAtB;;AACjC;;AAAU;;AAAiB;;AAC/B;;AAAS;;AACT;;AAAqC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AACjC;;AAAU;;AAAc;;AAC5B;;AACJ;;AAEA;;AACI;;AACI;;AAGI;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AASA;;AACJ;;AAEA;;AACI;;AAWA;;AACJ;;AAEA;;AACI;;AAWA;;AAEJ;;AAEA;;AACI;;AAWA;;AAEJ;;AAEA;;AACI;;AAWA;;AAEJ;;AAEA;;AACI;;AASA;;AAEJ;;AAEA;;AACI;;AAGA;;AAWJ;;AACA;;AACA;;AAEJ;;AACA;;AAEJ;;AACJ;;;;AAjIoB;;AAAA,wGAA8B,YAA9B,EAA8B,cAA9B,EAA8B,YAA9B,EAA8B,cAA9B;;AA0HqC;;AAAA;;AACnC;;AAAA,8GAAmC,uBAAnC,EAAmC,IAAnC;;AAGY;;AAAA;;;;;;;qBD1FpB;;;;;;wEAIDlJ,a,EAAa;gBATzB,uDASyB;iBATf;AACTmJ,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AASe,U;;;;;;;;;;;AAUmBlH,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE,C;AAChBS,cAAI,EAAE,CAAF;kBAAzC,uDAAyC;mBAA/B,8D,EAAS;AAAE,wBAAQ;AAAV,a;AAAsB,WAAE;;;;;;;;;;;;;;;;;;;AE9D9C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaM;;AACC;;AACD;;;;;;AAFmE;;AAClE;;AAAA;;;;;;AAQF;;AAA+C;;AAAqB;;;;;;AAMpE;;AAA+D;;AAAuB;;;;;;AACtF;;AAAgE;;AAChE;;;;;;AAMA;;AAA+D;;AAAuB;;;;;;AACtF;;AAAgE;;AAChE;;;;;;AAaA;;AAAqD;;AAA0B;;;;;;AAC/E;;AAAmE;;AACnE;;;;;;AAYC;;AAAmD;;AAAwB;;;;;;AAC3E;;AAAiE;;AACjE;;;;;;AAWA;;AAAoD;;AAAyB;;;;;;AAC7E;;AAAkE;;AAClE;;;;ADhEN,eAAS0G,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACzH,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAEyH,OAAO,CAACzH;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UAYY0H,qB;AAeX;AACA,uCAAoBC,EAApB,EAA6CzJ,QAA7C,EAA2E6D,SAA3E,EACkCpB,IADlC,EAC+DiH,MAD/D,EACuFC,iBADvF,EAEU7J,mBAFV,EAEwD;AAAA;;AAFpC,eAAA2J,EAAA,GAAAA,EAAA;AAAyB,eAAAzJ,QAAA,GAAAA,QAAA;AAA8B,eAAA6D,SAAA,GAAAA,SAAA;AACzC,eAAApB,IAAA,GAAAA,IAAA;AAA6B,eAAAiH,MAAA,GAAAA,MAAA;AAAwB,eAAAC,iBAAA,GAAAA,iBAAA;AAC7E,eAAA7J,mBAAA,GAAAA,mBAAA;AAfV,eAAA8J,UAAA,GAAa,KAAb;AAGA,eAAAlH,MAAA,GAAkB,IAAlB;AACA,eAAAmH,gBAAA,GAA4B,KAA5B;AACA,eAAAC,cAAA,GAA0B,KAA1B;AACA,eAAAC,eAAA,GAA2B,KAA3B;AAWC;;;;qCAEU;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKrJ,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKmJ,SAAL,GAAkBrJ,IAAI,CAACC,KAAL,CAAYF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAZ,CAAlB;AACA,iBAAK8C,MAAL,GAAc,KAAKnB,IAAnB,CAHW,CAIX;;AACA,iBAAKmH,UAAL,GAAkB,KAAKhG,MAAL,CAAYD,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AAEA,iBAAKuG,IAAL,GAAY,KAAKT,EAAL,CAAQU,KAAR,CAAc;AACxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAACd,2BAA2B,EAA5B,EAAgC,0DAAWe,QAA3C,CAAL,CADe;AAExBhG,wBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWgG,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,EAArB,CAAtB,CAAL,CAFY;AAGxBhG,wBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW+F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,GAArB,CAAtB,CAAL,CAHY;AAIxBC,wBAAU,EAAE,CAAC,EAAD,CAJY;AAKxBhG,2BAAa,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW8F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,IAArB,CAAtB,CAAL,CALS;AAMxBE,sBAAQ,EAAE,CAAC,EAAD,CANc;AAOxBhG,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW6F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,GAArB,CAAtB,CAAL,CAPW;AAQxBG,uBAAS,EAAE,CAAC,EAAD,CARa;AASxBhG,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW4F,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,GAArB,CAAtB,CAAL,CATU;AAUxB5H,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAVZ,aAAd,CAAZ;AAYA,iBAAKwH,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BC,OAA/B;AACA,iBAAKT,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BC,OAA7B;AACA,iBAAKT,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BC,OAA9B;;AAGA,gBAAI,KAAKf,UAAT,EAAqB;AACnB,mBAAKgB,YAAL,CAAkB,KAAKhH,MAAvB;AACD;;AACD,iBAAKiH,UAAL;AACD;;;kCAEO;AACN,iBAAKhH,SAAL,CAAeiH,KAAf;AACD;;;6CACkB;AACjB,iBAAKjH,SAAL,CAAeiH,KAAf;AACD;;;uCAEY;AAAA;;AACX,gBAAI,KAAKjB,gBAAL,IAAyB,KAA7B,EAAoC;AAClC,mBAAKK,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BK,QAA/B,CAAwC,EAAxC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BM,eAA/B;AACD,aAHD,MAGO;AACL,mBAAKd,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BO,aAA/B,CAA6C,0DAAWZ,QAAxD;AACD;;AAED,gBAAI,KAAKP,cAAL,IAAuB,KAA3B,EAAkC;AAChC,mBAAKI,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BK,QAA7B,CAAsC,EAAtC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BM,eAA7B;AACD,aAHD,MAGO;AACL,mBAAKd,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BO,aAA7B,CAA2C,0DAAWZ,QAAtD;AACD;;AAED,gBAAI,KAAKN,eAAL,IAAwB,KAA5B,EAAmC;AACjC,mBAAKG,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BK,QAA9B,CAAuC,EAAvC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BM,eAA9B;AACD,aAHD,MAGO;AACL,mBAAKd,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BO,aAA9B,CAA4C,0DAAWZ,QAAvD;AACD;;AAED,gBAAI,KAAKH,IAAL,CAAUgB,KAAd,EAAqB;AACnB,kBAAIC,UAAU,GAAG,KAAKjB,IAAL,CAAUpI,KAA3B;AAEA,kBAAM8B,MAAM,GAAQ;AAClBwH,0BAAU,EAAED,UAAU,CAACf,OAAX,CAAmBnH,EADb;AAElBoB,0BAAU,EAAE8G,UAAU,CAAC9G,UAFL;AAGlBC,0BAAU,EAAE6G,UAAU,CAAC7G,UAHL;AAIlBiG,0BAAU,EAAE,KAAKV,gBAAL,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAJ/B;AAKlBW,wBAAQ,EAAE,KAAKV,cAAL,KAAwB,IAAxB,GAA+B,CAA/B,GAAmC,CAL3B;AAMlBW,yBAAS,EAAE,KAAKV,eAAL,KAAyB,IAAzB,GAAgC,CAAhC,GAAoC,CAN7B;AAOlBxF,6BAAa,EAAE4G,UAAU,CAAC5G,aAAX,KAA6B8G,SAA7B,GAAyC,GAAzC,GAA+CF,UAAU,CAAC5G,aAPvD;AAQlBC,2BAAW,EAAE2G,UAAU,CAAC3G,WAAX,KAA2B6G,SAA3B,GAAuC,GAAvC,GAA6CF,UAAU,CAAC3G,WARnD;AASlBC,4BAAY,EAAE0G,UAAU,CAAC1G,YAAX,KAA4B4G,SAA5B,GAAwC,GAAxC,GAA8CF,UAAU,CAAC1G,YATrD;AAUlB/B,sBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAVlB,eAApB;;AAaA,kBAAI,KAAKkH,UAAT,EAAqB;AACnBhG,sBAAM,CAACX,EAAP,GAAY,KAAKW,MAAL,CAAYnB,IAAZ,CAAiBQ,EAA7B,EACEW,MAAM,CAAC0H,SAAP,GAAmB,KAAK3K,YAAL,CAAkB4C,MADvC;AAED,eAHD,MAGO;AACLK,sBAAM,CAAC2H,UAAP,GAAoB,KAAK5K,YAAL,CAAkB4C,MAAtC;AACD;;AAED,kBAAI,KAAKqG,UAAT,EAAqB;AACnB,qBAAK9J,mBAAL,CAAyB0L,wBAAzB,CAAkD5H,MAAlD,EAA0DtB,SAA1D,CACE,UAACC,IAAD,EAAe;AACb,sBAAIA,IAAI,CAACG,MAAL,IAAe,IAAnB,EAAyB;AACvB,0BAAI,CAAC1C,QAAL,CAAc6C,IAAd,CAAmB,kFAAgB4I,mBAAnC,EAAwD,SAAxD,EAAmE;AAAE1I,8BAAQ,EAAE;AAAZ,qBAAnE;;AACA,0BAAI,CAACc,SAAL,CAAeiH,KAAf;AACD,mBAHD,MAGO;AACL,0BAAI,CAAC9K,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBa,YAAnC,EAAiD,SAAjD,EAA4D;AAAEX,8BAAQ,EAAE;AAAZ,qBAA5D;AACD;AACF,iBARH,EASE,UAACC,GAAD,EAAS;AACP,wBAAI,CAAChD,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBa,YAAnC,EAAiD,SAAjD,EAA4D;AAAEX,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBAXH;AAaD,eAdD,MAcO;AACL,qBAAKjD,mBAAL,CAAyB4L,wBAAzB,CAAkD9H,MAAlD,EAA0DtB,SAA1D,CACE,UAACC,IAAD,EAAe;AACb,wBAAI,CAACvC,QAAL,CAAc6C,IAAd,CAAmB,kFAAgB8I,kBAAnC,EAAuD,SAAvD,EAAkE;AAAE5I,4BAAQ,EAAE;AAAZ,mBAAlE;;AACA,wBAAI,CAACc,SAAL,CAAeiH,KAAf;AACD,iBAJH,EAKE,UAAC9H,GAAD,EAAS;AACP,wBAAI,CAAChD,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBa,YAAnC,EAAiD,SAAjD,EAA4D;AAAEX,4BAAQ,EAAE;AAAZ,mBAA5D;AACD,iBAPH;AASD;;AACD,mBAAKc,SAAL,CAAeiH,KAAf,CAAqBlH,MAArB;AACD,aAjDD,MAiDO;AACL,mBAAK5D,QAAL,CAAc6C,IAAd,CAAmB,kFAAgB+I,WAAnC,EAAgD,SAAhD,EAA2D;AAAE7I,wBAAQ,EAAE;AAAZ,eAA3D;AACD;AACF;;;0CAEemH,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACQ,GAAL,CAAS,OAAT,EAAkBmB,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEH3B,IAAI,CAACQ,GAAL,CAAS,OAAT,EAAkBmB,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEYjI,M,EAAQ;AACnB,iBAAKiG,gBAAL,GAAwB,KAAKjG,MAAL,CAAYnB,IAAZ,CAAiB8H,UAAjB,IAA+B,CAA/B,GAAmC,IAAnC,GAA0C,KAAlE;AACA,iBAAKT,cAAL,GAAsB,KAAKlG,MAAL,CAAYnB,IAAZ,CAAiB+H,QAAjB,IAA6B,CAA7B,GAAiC,IAAjC,GAAwC,KAA9D;AACA,iBAAKT,eAAL,GAAuB,KAAKnG,MAAL,CAAYnB,IAAZ,CAAiBgI,SAAjB,IAA8B,CAA9B,GAAkC,IAAlC,GAAyC,KAAhE;AACA,iBAAKP,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BK,QAA5B,CAAqCnH,MAAM,CAACnB,IAAP,CAAY4B,UAAjD;AACA,iBAAK6F,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BK,QAA5B,CAAqCnH,MAAM,CAACnB,IAAP,CAAY6B,UAAjD;AACA,iBAAK4F,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BK,QAA/B,CAAwCnH,MAAM,CAACnB,IAAP,CAAY8B,aAApD;AACA,iBAAK2F,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BK,QAA7B,CAAsCnH,MAAM,CAACnB,IAAP,CAAY+B,WAAlD;AACA,iBAAK0F,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BK,QAA9B,CAAuCnH,MAAM,CAACnB,IAAP,CAAYgC,YAAnD;AACA,iBAAKyF,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BK,QAA5B,CAAqC,KAAKlB,gBAA1C;AACA,iBAAKK,IAAL,CAAUQ,GAAV,CAAc,UAAd,EAA0BK,QAA1B,CAAmC,KAAKjB,cAAxC;AACA,iBAAKI,IAAL,CAAUQ,GAAV,CAAc,WAAd,EAA2BK,QAA3B,CAAoC,KAAKhB,eAAzC;AACA,iBAAKrH,MAAL,GAAc,KAAKkB,MAAL,CAAYnB,IAAZ,CAAiBC,MAAjB,IAA2B,GAA3B,GAAiC,IAAjC,GAAwC,KAAtD;;AACA,gBAAG,KAAKmH,gBAAL,IAAyB,IAA5B,EAAiC;AAC/B,mBAAKK,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BoB,MAA/B;AACD,aAFD,MAEK;AACH,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BC,OAA/B;AACD;;AACD,gBAAG,KAAKb,cAAL,IAAuB,IAA1B,EAA+B;AAC7B,mBAAKI,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BoB,MAA7B;AACD,aAFD,MAEK;AACH,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BC,OAA7B;AACD;;AACD,gBAAG,KAAKZ,eAAL,IAAwB,IAA3B,EAAgC;AAC9B,mBAAKG,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BoB,MAA9B;AACD,aAFD,MAEK;AACH,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BC,OAA9B;AACD;AACF;;;uCACYhJ,K,EAAO;AAClB,iBAAKe,MAAL,GAAcf,KAAK,CAACoK,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKrJ,MAAxB;AACD;;;uCACY;AAAA;;AACX,iBAAKiH,iBAAL,CAAuBkB,UAAvB,GAAoCvI,SAApC,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,sBAAI,CAAC6H,OAAL,GAAe7H,IAAf,CADgB,CAEhB;;AACA,oBAAI,MAAI,CAACqH,UAAT,EAAqB;AACnB,sBAAMqC,QAAQ,GAAG,MAAI,CAAC7B,OAAL,CAAa8B,IAAb,CAAkB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAAClJ,EAAF,IAAQ,MAAI,CAACW,MAAL,CAAYnB,IAAZ,CAAiB2I,UAA7B;AAAA,mBAAnB,CAAjB;;AACA,wBAAI,CAAClB,IAAL,CAAUQ,GAAV,CAAc,SAAd,EAAyBK,QAAzB,CAAkCkB,QAAlC;AACD;;AACD,sBAAI,CAACG,sBAAL,GAA8B,MAAI,CAAClC,IAAL,CAAUmC,QAAV,CAAmBjC,OAAnB,CAA2BkC,YAA3B,CAC3BC,IAD2B,CAE1B,iEAAU,EAAV,CAF0B,EAG1B,2DAAI,UAAAzK,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC0K,IAA9C;AAAA,iBAAT,CAH0B,EAI1B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,MAAI,CAACpC,OAA5C;AAAA,iBAAR,CAJ0B,CAA9B;AAMD;AACF,aAhBH,EAgBK,UAACpH,GAAD,EAAS,CAAG,CAhBjB;AAmBD;;;yCACsBwJ,I,EAAY;AACjC,gBAAM5K,WAAW,GAAG4K,IAAI,CAACtK,WAAL,EAApB;AACA,mBAAO,KAAKkI,OAAL,CAAapI,MAAb,CAAoB,UAAA0K,MAAM;AAAA,qBAAIA,MAAM,CAACF,IAAP,CAAYtK,WAAZ,GAA0ByK,QAA1B,CAAmC/K,WAAnC,CAAJ;AAAA,aAA1B,CAAP;AACD;;;yCACcgL,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACJ,IAAb,GAAoBI,IAAI,CAACJ,IAAzB,GAAgC,EAAvC;AACD;;;2CAEgB7K,K,EAAK;AACpB;AACA,gBAAGA,KAAK,CAACoK,OAAT,EAAiB;AACf,mBAAK7B,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BoB,MAA/B;AACA,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BO,aAA/B,CAA6C,0DAAWZ,QAAxD;AACA,mBAAKR,gBAAL,GAAuB,IAAvB;AACD,aAJD,MAIK;AACH,mBAAKK,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BC,OAA/B;AACA,mBAAKT,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BK,QAA/B,CAAwC,EAAxC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BM,eAA/B;AACA,mBAAKnB,gBAAL,GAAuB,KAAvB;AACD;AACF;;;yCACclI,K,EAAK;AAClB,gBAAGA,KAAK,CAACoK,OAAT,EAAiB;AACf,mBAAK7B,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BoB,MAA7B;AACA,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BO,aAA7B,CAA2C,0DAAWZ,QAAtD;AACA,mBAAKP,cAAL,GAAqB,IAArB;AACD,aAJD,MAIK;AACH,mBAAKI,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BC,OAA7B;AACA,mBAAKT,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BK,QAA7B,CAAsC,EAAtC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BM,eAA7B;AACA,mBAAKlB,cAAL,GAAqB,KAArB;AACD;AACF;;;0CACenI,K,EAAK;AACnB,gBAAGA,KAAK,CAACoK,OAAT,EAAiB;AACf,mBAAK7B,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BoB,MAA9B;AACA,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BO,aAA9B,CAA4C,0DAAWZ,QAAvD;AACA,mBAAKN,eAAL,GAAsB,IAAtB;AACD,aAJD,MAIK;AACH,mBAAKG,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BC,OAA9B;AACA,mBAAKT,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BK,QAA9B,CAAuC,EAAvC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BM,eAA9B;AACA,mBAAKjB,eAAL,GAAsB,KAAtB;AACD;AACF;;;;;;;yBArPUP,qB,EAAqB,2H,EAAA,wI,EAAA,sI,EAAA,gEAiBtB,wEAjBsB,C,EAiBP,uH,EAAA,sK,EAAA,8L;AAAA,O;;;cAjBdA,qB;AAAqB,0C;AAAA;AAAA;;;;;;;;;;;;;;;ACnClC;;AAA6D;AAAA,qBAAS,IAAAqD,gBAAA,EAAT;AAA2B,aAA3B;;AACO;;AAAK;;AAEzE;;AAAoC;;AAAoB;;AACxD;;AACC;;AACC;;AACC;;AACC;;AACC;;AAAW;;AAAO;;AAClB;;AAEA;;AACC;;;;AAGD;;AACA;;AACC;;AAA2C;;AAAW;;AACtD;;AACC;;AAAuB;;AACzB;;AACA;;AACD;;AACA;;AACC;;AAAW;;AAAU;;AACrB;;AAEA;;AACA;;AAED;;AACA;;AACC;;AAAW;;AAAU;;AACrB;;AAEA;;AACA;;AAED;;AAED;;AACA;;AACC;;AACC;;AAA2C;AAAA,qBAAU,IAAAC,gBAAA,QAAV;AAAkC,aAAlC;;AAAoC;;AAAU;;AAC1F;;AAEA;;AACC;;AAAW;;AAAa;;AACxB;;AAEA;;AACA;;AAED;;AAED;;AACA;;AACC;;AACC;;AAAyC;AAAA,qBAAU,IAAAC,cAAA,QAAV;AAAgC,aAAhC;;AAAkC;;AAAQ;;AACpF;;AACA;;AACC;;AAAW;;AAAW;;AACtB;;AAEC;;AACA;;AAEF;;AACD;;AACA;;AACC;;AACC;;AAA0C;AAAA,qBAAU,IAAAC,eAAA,QAAV;AAAiC,aAAjC;;AAAmC;;AAAS;;AACvF;;AACA;;AACC;;AAAW;;AAAY;;AACvB;;AAEC;;AACA;;AAEF;;AACD;;AACA;;AACC;;AACC;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AACA;;AACD;;AACD;;AAEA;;AACC;;AAAqE;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AACxE;;AACpB;;AAAkE;AAAA,qBAAS,IAAApC,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC3F;;AACD;;AAED;;AACD;;;;;;AA/FoC;;AAAA;;AAG5B;;AAAA;;AAKF;;AAAA;;AACgD;;AAAA;;AACjB;;AAAA;;AASpB;;AAAA;;AAMA;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AAcA;;AAAA;;AACA;;AAAA;;AAaC;;AAAA;;AACA;;AAAA;;AAYA;;AAAA;;AACA;;AAAA;;AAKoE;;AAAA;;AAEjF;;AAAA;;AAK2F;;AAAA;;;;;;;;qBD5DlF;;;;;;wEAIDtB,qB,EAAqB;gBATjC,uDASiC;iBATvB;AACTR,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AASuB,U;;;;;;;;;;oBAiB7B,oD;qBAAO,wE;;;;;;;;;;AALkB2C,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AE9CnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMmB,UAAU,GAAE,EAAlB;AACA,UAAMC,kBAAkB,GAAE,EAA1B;;UAQaC,mB;;;;;cAAAA;;;;2BAAAA,mB;AAAmB,S;AAAA,kBALpB,CAAC,qEAAD,EAAe,wFAAf,EAA0C,uHAA1C,EAA0E,oEAA1E,CAKoB;;;;4HAAnBA,mB,EAAmB;AAAA,oBALnB,qEAKmB,EALL,wFAKK,EALsB,uHAKtB,EALsD,oEAKtD;AAAA,S;AALsE,O;;;;;wEAKzFA,mB,EAAmB;gBAN/B,sDAM+B;iBANtB;AACNC,mBAAO,EAAC,CAAC,qEAAD,EAAe,wFAAf,EAA0C,uHAA1C,EAA0E,oEAA1E,CADF;AAENC,wBAAY,EAAG,CAACJ,UAAD,EAAYC,kBAAZ,CAFT;AAGNI,2BAAe,EAAG,CAACJ,kBAAD;AAHZ,W;AAMsB,U;;;;;;;;;;;;;;;;;;ACfhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaK,yB;AAGT,2CAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AADpB,eAAAC,OAAA,aAAa,sEAAYC,QAAzB;AACyC;;;;8DAER;AAC7B,mBAAO,KAAKF,IAAL,CAAUhD,GAAV,WAAiB,KAAKiD,OAAtB,yDAAP;AACH;;;yDAE2B;AACxB,mBAAO,KAAKD,IAAL,CAAUhD,GAAV,WAAiB,KAAKiD,OAAtB,mCAAP;AACH;;;mDAEwB/J,M,EAAM;AAC3B,mBAAO,KAAK8J,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,gCAA0D/J,MAA1D,CAAP;AACH;;;mDAEwBA,M,EAAM;AAC3B,mBAAO,KAAK8J,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,gCAA0D/J,MAA1D,CAAP;AACH;;;mDAEwBX,E,EAAG6K,Q,EAAQ;AAChC,mBAAO,KAAKJ,IAAL,qBAAoB,KAAKC,OAAzB,uCAA6D1K,EAA7D,cAAmE6K,QAAnE,EAAP;AACH;;;;;;;yBAvBQL,yB,EAAyB,uH;AAAA,O;;;eAAzBA,yB;AAAyB,iBAAzBA,yBAAyB,K;AAAA,oBAHtB;;;;;wEAGHA,yB,EAAyB;gBAJrC,wDAIqC;iBAJ1B;AACRM,sBAAU,EAAE;AADJ,W;AAI0B,U;;;;;;;;;;;;;;;;;;;;;;ACRtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcM;;AACC;;AACD;;;;;;AAFmE;;AAClE;;AAAA;;;;;;AAQF;;AAA+C;;AAAqB;;;;;;AAMnE;;AAA+D;;AAAuB;;;;;;AACtF;;AAAgE;;AAChE;;;;;;AAMA;;AAA+D;;AAAuB;;;;;;AACtF;;AAAgE;;AAChE;;;;;;AAaA;;AAAqD;;AAA0B;;;;;;AAC/E;;AAAmE;;AACnE;;;;;;AAaA;;AAAmD;;AAAwB;;;;;;AAC3E;;AAAiE;;AACjE;;;;;;AAWA;;AAAoD;;AAAyB;;;;;;AAC7E;;AAAkE;;AAClE;;;;ADrEN,eAASzE,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACzH,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAEyH,OAAO,CAACzH;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UASYkM,mB;AAcX,qCAAoBvE,EAApB,EAA6CzJ,QAA7C,EAA2E6D,SAA3E,EACkCpB,IADlC,EAC+DiH,MAD/D,EACuF5J,mBADvF,EAEU6J,iBAFV,EAE+C;AAAA;;AAF3B,eAAAF,EAAA,GAAAA,EAAA;AAAyB,eAAAzJ,QAAA,GAAAA,QAAA;AAA8B,eAAA6D,SAAA,GAAAA,SAAA;AACzC,eAAApB,IAAA,GAAAA,IAAA;AAA6B,eAAAiH,MAAA,GAAAA,MAAA;AAAwB,eAAA5J,mBAAA,GAAAA,mBAAA;AAC7E,eAAA6J,iBAAA,GAAAA,iBAAA;AAbV,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAAlH,MAAA,GAAiB,IAAjB;AACA,eAAAmH,gBAAA,GAA0B,KAA1B;AACA,eAAAC,cAAA,GAAwB,KAAxB;AACA,eAAAC,eAAA,GAAyB,KAAzB;AASC;;;;qCAEU;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKrJ,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAKmJ,SAAL,GAAkBrJ,IAAI,CAACC,KAAL,CAAYF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAZ,CAAlB;AACA,iBAAK8C,MAAL,GAAc,KAAKnB,IAAnB,CAHW,CAIX;;AACA,iBAAKmH,UAAL,GAAkB,KAAKhG,MAAL,CAAYD,MAAZ,IAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAA3D;AAEA,iBAAKuG,IAAL,GAAY,KAAKT,EAAL,CAAQU,KAAR,CAAc;AACxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAACd,2BAA2B,EAA5B,EAAgC,0DAAWe,QAA3C,CAAL,CADe;AAExBhG,wBAAU,EAAE,CAAC,EAAD,EAAI,CAAC,0DAAWgG,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,EAArB,CAArB,EAA8C,0DAAW2D,OAAX,CAAmB,cAAnB,CAA9C,CAAJ,CAFY;AAGxB3J,wBAAU,EAAE,CAAC,EAAD,EAAM,CAAC,0DAAW+F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,GAArB,CAArB,EAA+C,0DAAW2D,OAAX,CAAmB,cAAnB,CAA/C,CAAN,CAHY;AAIxB1D,wBAAU,EAAE,CAAC,EAAD,CAJY;AAKxBhG,2BAAa,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW8F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,IAArB,CAArB,CAAL,CALS;AAMxBE,sBAAQ,EAAE,CAAC,EAAD,CANc;AAOxBhG,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW6F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,GAArB,CAArB,CAAL,CAPW;AAQxBG,uBAAS,EAAC,CAAC,EAAD,CARc;AASxBhG,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW4F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,GAArB,CAArB,CAAL,CATU;AAUxB5H,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAVZ,aAAd,CAAZ;AAYA,iBAAKwH,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BC,OAA5B;AACA,iBAAKT,IAAL,CAAUQ,GAAV,CAAc,UAAd,EAA0BC,OAA1B;AACA,iBAAKT,IAAL,CAAUQ,GAAV,CAAc,WAAd,EAA2BC,OAA3B;;AAEA,gBAAI,KAAKf,UAAT,EAAqB;AACnB,mBAAKgB,YAAL,CAAkB,KAAKhH,MAAvB;AACD;;AACD,iBAAKiH,UAAL;AAED;;;kCAEO;AACN,iBAAKhH,SAAL,CAAeiH,KAAf;AACD;;;6CACkB;AACjB,iBAAKjH,SAAL,CAAeiH,KAAf;AACD;;;0CAEeZ,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACQ,GAAL,CAAS,OAAT,EAAkBmB,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEH3B,IAAI,CAACQ,GAAL,CAAS,OAAT,EAAkBmB,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEYjI,M,EAAQ;AACnB,iBAAKiG,gBAAL,GAAwB,KAAKjG,MAAL,CAAYnB,IAAZ,CAAiB8H,UAAjB,IAA+B,CAA/B,GAAmC,IAAnC,GAAyC,KAAjE;AACA,iBAAKT,cAAL,GAAsB,KAAKlG,MAAL,CAAYnB,IAAZ,CAAiB+H,QAAjB,IAA6B,CAA7B,GAAiC,IAAjC,GAAuC,KAA7D;AACA,iBAAKT,eAAL,GAAuB,KAAKnG,MAAL,CAAYnB,IAAZ,CAAiBgI,SAAjB,IAA8B,CAA9B,GAAkC,IAAlC,GAAwC,KAA/D;AACA,iBAAKP,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BK,QAA5B,CAAqCnH,MAAM,CAACnB,IAAP,CAAY4B,UAAjD;AACA,iBAAK6F,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BK,QAA5B,CAAqCnH,MAAM,CAACnB,IAAP,CAAY6B,UAAjD;AACA,iBAAK4F,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BK,QAA/B,CAAwCnH,MAAM,CAACnB,IAAP,CAAY8B,aAApD;AACA,iBAAK2F,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BK,QAA7B,CAAsCnH,MAAM,CAACnB,IAAP,CAAY+B,WAAlD;AACA,iBAAK0F,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BK,QAA9B,CAAuCnH,MAAM,CAACnB,IAAP,CAAYgC,YAAnD;AACA,iBAAKyF,IAAL,CAAUQ,GAAV,CAAc,YAAd,EAA4BK,QAA5B,CAAqC,KAAKlB,gBAA1C;AACA,iBAAKK,IAAL,CAAUQ,GAAV,CAAc,UAAd,EAA0BK,QAA1B,CAAmC,KAAKjB,cAAxC;AACA,iBAAKI,IAAL,CAAUQ,GAAV,CAAc,WAAd,EAA2BK,QAA3B,CAAoC,KAAKhB,eAAzC;AACA,iBAAKrH,MAAL,GAAc,KAAKkB,MAAL,CAAYnB,IAAZ,CAAiBC,MAAjB,IAA2B,GAA3B,GAAiC,IAAjC,GAAwC,KAAtD;AACD;;;uCAEYf,K,EAAO;AAClB,iBAAKe,MAAL,GAAcf,KAAK,CAACoK,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKrJ,MAAxB;AACD;;;uCAEY;AAAA;;AACX,iBAAKiH,iBAAL,CAAuBkB,UAAvB,GAAoCvI,SAApC,CACE,UAACC,IAAD,EAAe;AACb,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,sBAAI,CAAC6H,OAAL,GAAe7H,IAAf;;AACA,oBAAG,MAAI,CAACqH,UAAR,EAAmB;AACf,sBAAMqC,QAAQ,GAAG,MAAI,CAAC7B,OAAL,CAAa8B,IAAb,CAAkB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAAClJ,EAAF,IAAQ,MAAI,CAACW,MAAL,CAAYnB,IAAZ,CAAiB2I,UAA7B;AAAA,mBAAnB,CAAjB;;AACA,wBAAI,CAAClB,IAAL,CAAUQ,GAAV,CAAc,SAAd,EAAyBK,QAAzB,CAAkCkB,QAAlC;AACD;;AACF,sBAAI,CAACG,sBAAL,GAA8B,MAAI,CAAClC,IAAL,CAAUmC,QAAV,CAAmBjC,OAAnB,CAA2BkC,YAA3B,CAC5BC,IAD4B,CAE3B,iEAAU,EAAV,CAF2B,EAG3B,2DAAI,UAAAzK,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC0K,IAA9C;AAAA,iBAAT,CAH2B,EAI3B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,MAAI,CAACpC,OAA5C;AAAA,iBAAR,CAJ2B,CAA9B;AAMF;AACF,aAfH,EAeK,UAACpH,GAAD,EAAS,CAAG,CAfjB;AAkBD;;;yCACsBwJ,I,EAAY;AACjC,gBAAM5K,WAAW,GAAG4K,IAAI,CAACtK,WAAL,EAApB;AACA,mBAAO,KAAKkI,OAAL,CAAapI,MAAb,CAAoB,UAAA0K,MAAM;AAAA,qBAAIA,MAAM,CAACF,IAAP,CAAYtK,WAAZ,GAA0ByK,QAA1B,CAAmC/K,WAAnC,CAAJ;AAAA,aAA1B,CAAP;AACD;;;yCACcgL,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACJ,IAAb,GAAoBI,IAAI,CAACJ,IAAzB,GAAgC,EAAvC;AACD;;;;;;;yBAnHUwB,mB,EAAmB,2H,EAAA,wI,EAAA,sI,EAAA,gEAepB,wEAfoB,C,EAeL,uH,EAAA,8L,EAAA,sK;AAAA,O;;;cAfdA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;;;;;;AC7BhC;;AAA6D;AAAA,qBAAS,IAAAnB,gBAAA,EAAT;AAA2B,aAA3B;;AACS;;AAAK;;AAG3E;;AAAoC;;AAAoB;;AACxD;;AACC;;AACC;;AACC;;AACC;;AACC;;AAAW;;AAAO;;AAClB;;AAEA;;AACC;;;;AAGD;;AACA;;AACC;;AAA2C;;AAAW;;AACtD;;AACC;;AAAuB;;AACzB;;AACA;;AACD;;AACA;;AACC;;AAAW;;AAAU;;AACrB;;AAEC;;AACA;;AAEF;;AACA;;AACC;;AAAW;;AAAU;;AACrB;;AAEC;;AACA;;AAEF;;AAED;;AACA;;AACC;;AACC;;AAA6C;;AAAU;;AACxD;;AAEA;;AACC;;AAAW;;AAAa;;AACxB;;AAEC;;AACA;;AAEF;;AAED;;AACA;;AACC;;AACC;;AAAyC;;AAAQ;;AAClD;;AAEA;;AACC;;AAAW;;AAAW;;AACtB;;AAEC;;AACA;;AAEF;;AACD;;AACA;;AACC;;AACC;;AAA2C;;AAAS;;AACrD;;AACA;;AACC;;AAAW;;AAAY;;AACvB;;AAEC;;AACA;;AAEF;;AACD;;AACA;;AACC;;AACC;AAAA,qBAAU,IAAAI,YAAA,QAAV;AAA8B,aAA9B;;AACA;;AACD;;AACD;;AAEA;;AACC;;AAAkE;AAAA,qBAAS,IAAAnC,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAM;;AAC3F;;AAGD;;AACD;;AACD;;;;;;AA/FoC;;AAAA;;AAG5B;;AAAA;;AAKF;;AAAA;;AACgD;;AAAA;;AACjB;;AAAA;;AASpB;;AAAA;;AAMC;;AAAA;;AACA;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AAcA;;AAAA;;AACA;;AAAA;;AAcA;;AAAA;;AACA;;AAAA;;AAYA;;AAAA;;AACA;;AAAA;;AAKoE;;AAAA;;AAEjF;;AAAA;;;;;;;;qBD7DS;;;;;;wEAEDkD,mB,EAAmB;gBAP/B,uDAO+B;iBAPrB;AACThF,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAOqB,U;;;;;;;;;;oBAe3B,oD;qBAAO,wE;;;;;;;;;;AALkB2C,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AEtCnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAMkC,MAAM,GAAY,CACpB;AACIC,YAAI,EAAG,oBADX;AAEFC,oBAAY,EAAG;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAA6DC,IAA7D,CAAkE,UAAAC,CAAC;AAAA,mBAAEA,CAAC,CAACC,wBAAJ;AAAA,WAAnE,CAAN;AAAA,SAFb;AAGF9L,YAAI,EAAG;AAAC+L,eAAK,EAAG;AAAT;AAHL,OADoB,EAMpB;AACIL,YAAI,EAAG,oBADX;AAEIC,oBAAY,EAAG;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAA2DC,IAA3D,CAAgE,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACG,wBAAN;AAAA,WAAjE,CAAN;AAAA,SAFnB;AAGIhM,YAAI,EAAG;AAAC+L,eAAK,EAAG;AAAT;AAHX,OANoB,CAAxB;;UAkBaE,0B;;;;;cAAAA;;;;2BAAAA,0B;AAA0B,S;AAAA,kBAJzB,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CAIyB,EAHxB,4DAGwB;;;;4HAA1BQ,0B,EAA0B;AAAA;AAAA,oBAHxB,4DAGwB;AAAA,S;AAHZ,O;;;;;wEAGdA,0B,EAA0B;gBALtC,sDAKsC;iBAL7B;AACNpB,mBAAO,EAAG,CAAC,6DAAaqB,QAAb,CAAsBT,MAAtB,CAAD,CADJ;AAENU,mBAAO,EAAG,CAAC,4DAAD;AAFJ,W;AAK6B,U;;;;;;;;;;;;;;;;;;ACtBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeI;;AAKE;;AACF;;;;;;;;AAJG,kGAA2B,QAA3B,EAA2B,YAA3B;;AAGD;;AAAA;;;;;;;;;;;;;;;;ADhBN;;;;;UAUaC,+B;AAUX,iDAAoBnF,MAApB,EAA4CzJ,GAA5C,EAA4E6O,eAA5E,EAA6G;AAAA;;AAAzF,eAAApF,MAAA,GAAAA,MAAA;AAAwB,eAAAzJ,GAAA,GAAAA,GAAA;AAAgC,eAAA6O,eAAA,GAAAA,eAAA;AAT5E,eAAAC,QAAA,GAAW,CACT;AACA;AAFS,WAAX;AAQA,eAAAC,SAAA,GAAY,EAAZ;AAGC;;;;qCAEU;AAAA;;AACT,iBAAKrO,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,gBAAImO,QAAQ,GAAG,KAAKtO,YAAL,CAAkBuO,iBAAjC;AACAD,oBAAQ,CAACjN,MAAT,CAAgB,UAACmN,CAAD,EAAO;AACrB,kBAAIA,CAAC,CAAClM,EAAF,KAAS,eAAb,EAA8B;AAC5B,sBAAI,CAACmM,UAAL,GAAkBD,CAAlB;;AACA,oBAAI,MAAI,CAACC,UAAL,CAAgBC,QAAhB,IAA4BhE,SAA5B,IAAyC,MAAI,CAAC+D,UAAL,CAAgBC,QAAhB,IAA4B,IAAzE,EAA+E;AAC7E,wBAAI,CAACD,UAAL,CAAgBC,QAAhB,CAAyBrN,MAAzB,CAAgC,UAACsN,CAAD,EAAO;AACrC,wBAAIA,CAAC,CAACrM,EAAF,KAAS,oBAAb,EAAmC;AACjC,4BAAI,CAACsM,eAAL,GAAuBD,CAAvB;AAEA,0BAAIE,sBAAsB,GAAG,KAA7B;;AACA,0BAAI,MAAI,CAACD,eAAL,CAAqBF,QAArB,IAAiChE,SAAjC,IAA8C,MAAI,CAACkE,eAAL,CAAqBF,QAArB,IAAiC,IAAnF,EAAyF;AACvF,8BAAI,CAACE,eAAL,CAAqBF,QAArB,CAA8BrN,MAA9B,CAAqC,UAACyN,CAAD,EAAO;AAC1C,8BAAIA,CAAC,CAACxM,EAAF,KAAS,oBAAb,EAAmC;AACjCuM,kDAAsB,GAAG,IAAzB;;AACA,kCAAI,CAACR,SAAL,CAAetN,IAAf,CAAoB;AAAEgO,mCAAK,EAAE,qBAAT;AAAgCC,kCAAI,EAAE;AAAtC,6BAApB;AACD;;AACD,8BAAIF,CAAC,CAACxM,EAAF,KAAS,QAAb,EAAuB;AACrB,kCAAI,CAAC+L,SAAL,CAAetN,IAAf,CAAoB;AAAEgO,mCAAK,EAAE,SAAT;AAAoBC,kCAAI,EAAE;AAA1B,6BAApB;AACD;AACF,yBARD;AASD;;AAED,4BAAI,CAACZ,QAAL,GAAgB,MAAI,CAACC,SAArB;;AACA,0BAAI,CAACQ,sBAAL,EAA6B;AAC3B,8BAAI,CAAC9F,MAAL,CAAYkG,QAAZ,CAAqB,CAAC,4CAA4C,MAAI,CAACZ,SAAL,CAAe,CAAf,EAAkBW,IAA/D,CAArB;AACD;AAEF;AAEF,mBAxBD;AAyBD;AAEF;AACF,aAhCD;AAkCD;;;4CACiB;AAAA;;AAChB,iBAAKb,eAAL,CAAqBe,gBAArB,CAAsCvN,SAAtC,CAAgD,UAAAwN,eAAe,EAAI;AACjE,qBAAI,CAAC7F,SAAL,GAAiB6F,eAAjB;;AACA,kBAAI,OAAI,CAAC7F,SAAL,IAAkB,IAAlB,IAA0B,OAAI,CAACA,SAAL,IAAkBoB,SAA5C,IAAyD,OAAI,CAACpB,SAAL,CAAeuE,KAAf,IAAwB,IAAjF,IAAyF,OAAI,CAACvE,SAAL,CAAeuE,KAAf,IAAwBnD,SAArH,EAAgI;AAC9H,uBAAI,CAACpB,SAAL,GAAiBrJ,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAAX,CAAjB;AACD;;AACD,qBAAI,CAACb,GAAL,CAASwD,aAAT;AACD,aAND;AAQD;;;;;;;yBA7DUoL,+B,EAA+B,uH,EAAA,gI,EAAA,2J;AAAA,O;;;cAA/BA,+B;AAA+B,qD;AAAA,iB;AAAA,e;AAAA,+pB;AAAA;AAAA;ACd5C;;AACE;;AAEE;;AAEI;;AACI;;AACI;;AACiD;;AACjD;;AACJ;;AACF;;AACJ;;AACJ;;AACF;;AACI;;AAOF;;AACA;;AACF;;;;AAhBsB;;AAAA;;AAA2C;;AAAA;;AAQtC;;AAAA;;;;;;;qBDJb;;;;;;wEAEDA,+B,EAA+B;gBAP3C,uDAO2C;iBAPjC;AACT7F,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,2CAAD,CAHF;AAITC,yBAAa,EAAE,gEAAkBC,IAJxB;AAKTC,sBAAU,EAAE;AALH,W;AAOiC,U;;;;;;;;;;;UA4E/B0G,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACT/G,oBAAQ,EAAE,sBADD;AAETgH,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBC,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTjH,oBAAQ,EAAE,sBADD;AAETgH,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;UAMxBE,wB;;;;;yBAAAA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,6C;AAAA,gB;AAAA,e;AAAA;AAAA;AAFxB;;;;;;;;wEAEAA,wB,EAAwB;gBAJpC,uDAIoC;iBAJ1B;AACTlH,oBAAQ,EAAE,sBADD;AAETgH,oBAAQ,EAAE;AAFD,W;AAI0B,U;;;;;;;;;;;;;;;;;;AEtGrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUK;;AACC;;AACD;;;;;;AAFmE;;AAClE;;AAAA;;;;;;AAQF;;AAA+C;;AAAqB;;;;;;AAMpE;;AAA+D;;AAAuB;;;;;;AAGtF;;AAAgE;;AAChE;;;;;;AAMA;;AAA+D;;AAAuB;;;;;;AAGtF;;AAAgE;;AAChE;;;;;;AAcA;;AAAkE;;AAA0B;;;;;;AAG5F;;AAAmE;;AACnE;;;;;;AAcA;;AAAgE;;AAAwB;;;;;;AAGxF;;AAAiE;;AACjE;;;;;;AAYA;;AAAiE;;AAAyB;;;;;;AAG1F;;AAAkE;;AAClE;;;;AD/EJ,eAAS1G,2BAAT,GAAoC;AAClC,eAAO,UAACC,OAAD,EAA6D;AAClE,cAAI,OAAOA,OAAO,CAACzH,KAAf,KAAyB,QAA7B,EAAuC;AACrC,mBAAO;AAAE,2CAA6B;AAAEA,qBAAK,EAAEyH,OAAO,CAACzH;AAAjB;AAA/B,aAAP;AACD;;AACD,iBAAO,IAAP;AAAa;AACd,SALD;AAMD;;UASYqO,e;AAaX,iCAAoB1G,EAApB,EAA6CzJ,QAA7C,EAA4E0J,MAA5E,EACU5J,mBADV,EACiE6J,iBADjE,EACsG;AAAA;;AADlF,eAAAF,EAAA,GAAAA,EAAA;AAAyB,eAAAzJ,QAAA,GAAAA,QAAA;AAA+B,eAAA0J,MAAA,GAAAA,MAAA;AAClE,eAAA5J,mBAAA,GAAAA,mBAAA;AAAuD,eAAA6J,iBAAA,GAAAA,iBAAA;AAVjE,eAAAjH,MAAA,GAAiB,IAAjB;AACA,eAAAmH,gBAAA,GAA0B,KAA1B;AACA,eAAAC,cAAA,GAAwB,KAAxB;AACA,eAAAC,eAAA,GAAyB,KAAzB;AASC;;;;qCAEU;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKrJ,YAAL,GAAoBC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,iBAAK+J,UAAL;AACA,iBAAKX,IAAL,GAAY,KAAKT,EAAL,CAAQU,KAAR,CAAc;AACxBC,qBAAO,EAAE,CAAC,EAAD,EAAK,CAACd,2BAA2B,EAA5B,EAAgC,0DAAWe,QAA3C,CAAL,CADe;AAExBhG,wBAAU,EAAE,CAAC,EAAD,EAAI,CAAC,0DAAWgG,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,EAArB,CAArB,CAAJ,CAFY;AAGxBhG,wBAAU,EAAE,CAAC,EAAD,EAAM,CAAC,0DAAW+F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,GAArB,CAArB,CAAN,CAHY;AAIxBC,wBAAU,EAAE,CAAC,EAAD,CAJY;AAKxBhG,2BAAa,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW8F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,IAArB,CAArB,CAAL,CALS;AAMxBE,sBAAQ,EAAE,CAAC,EAAD,CANc;AAOxBhG,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW6F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,GAArB,CAArB,CAAL,CAPW;AAQxBG,uBAAS,EAAC,CAAC,EAAD,CARc;AASxBhG,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW4F,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,GAArB,CAArB,CAAL,CATU;AAUxB5H,oBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B;AAVZ,aAAd,CAAZ;AAYA,iBAAKwH,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BC,OAA/B;AACA,iBAAKT,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BC,OAA7B;AACA,iBAAKT,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BC,OAA9B;AAGD;;;qCAEU;AAAA;;AACT,gBAAG,KAAKd,gBAAL,IAAyB,KAA5B,EAAmC;AACjC,mBAAKK,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BK,QAA/B,CAAwC,EAAxC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BM,eAA/B;AACD,aAHD,MAGK;AACH,mBAAKd,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BO,aAA/B,CAA6C,0DAAWZ,QAAxD;AACD;;AAED,gBAAG,KAAKP,cAAL,IAAuB,KAA1B,EAAiC;AAC/B,mBAAKI,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BK,QAA7B,CAAsC,EAAtC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BM,eAA7B;AACD,aAHD,MAGK;AACH,mBAAKd,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BO,aAA7B,CAA2C,0DAAWZ,QAAtD;AACD;;AAED,gBAAG,KAAKN,eAAL,IAAwB,KAA3B,EAAkC;AAChC,mBAAKG,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BK,QAA9B,CAAuC,EAAvC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BM,eAA9B;AACD,aAHD,MAGK;AACH,mBAAKd,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BO,aAA9B,CAA4C,0DAAWZ,QAAvD;AACD;;AAED,gBAAI,KAAKH,IAAL,CAAUgB,KAAd,EAAqB;AACnB,kBAAIC,UAAU,GAAG,KAAKjB,IAAL,CAAUpI,KAA3B,CADmB,CAEnB;;AACA,kBAAI8B,MAAM,GAAG;AACXwH,0BAAU,EAAGD,UAAU,CAACf,OAAX,CAAmBnH,EADrB;AAEXoB,0BAAU,EAAE8G,UAAU,CAAC9G,UAFZ;AAGXC,0BAAU,EAAE6G,UAAU,CAAC7G,UAHZ;AAIXiG,0BAAU,EAAE,KAAKV,gBAAL,KAA0B,IAA1B,GAAiC,CAAjC,GAAqC,CAJtC;AAKXW,wBAAQ,EAAE,KAAKV,cAAL,KAAwB,IAAxB,GAA+B,CAA/B,GAAmC,CALlC;AAMXW,yBAAS,EAAE,KAAKV,eAAL,KAAyB,IAAzB,GAAgC,CAAhC,GAAoC,CANpC;AAOXxF,6BAAa,EAAE4G,UAAU,CAAC5G,aAAX,KAA6B8G,SAA7B,GAAyC,GAAzC,GAA+CF,UAAU,CAAC5G,aAP9D;AAQXC,2BAAW,EAAE2G,UAAU,CAAC3G,WAAX,KAA2B6G,SAA3B,GAAuC,GAAvC,GAA6CF,UAAU,CAAC3G,WAR1D;AASXC,4BAAY,EAAE0G,UAAU,CAAC1G,YAAX,KAA4B4G,SAA5B,GAAwC,GAAxC,GAA8CF,UAAU,CAAC1G,YAT5D;AAUX/B,sBAAM,EAAE,KAAKA,MAAL,IAAe,IAAf,GAAsB,GAAtB,GAA4B,GAVzB;AAWX6I,0BAAU,EAAE,KAAK5K,YAAL,CAAkB4C;AAXnB,eAAb;AAcA,mBAAKzD,mBAAL,CAAyB4L,wBAAzB,CAAkD9H,MAAlD,EAA0DtB,SAA1D,CACE,UAACC,IAAD,EAAc;AACZ,oBAAGA,IAAI,CAACG,MAAL,IAAe,IAAlB,EAAuB;AACrB;AACA,yBAAI,CAAC1C,QAAL,CAAc6C,IAAd,CAAmB,kFAAgB8I,kBAAnC,EAAuD,SAAvD,EAAkE;AAAE5I,4BAAQ,EAAE;AAAZ,mBAAlE;;AACA,yBAAI,CAAC2G,MAAL,CAAYkG,QAAZ,CAAqB,CAAC,8CAAD,CAArB;AACD,iBAJD,MAIK;AACH,yBAAI,CAAC5P,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBa,YAAnC,EAAiD,SAAjD,EAA4D;AAAEX,4BAAQ,EAAE;AAAZ,mBAA5D;AACD;AAEF,eAVH,EAUI,UAACC,GAAD,EAAQ;AACR,uBAAI,CAAChD,QAAL,CAAc6C,IAAd,CAAmB,kFAAgBa,YAAnC,EAAiD,SAAjD,EAA4D;AAAEX,0BAAQ,EAAE;AAAZ,iBAA5D;AACA,eAZJ;AAcD,aA/BD,MAgCK;AACH,mBAAK/C,QAAL,CAAc6C,IAAd,CAAmB,kFAAgB+I,WAAnC,EAAgD,SAAhD,EAA2D;AAAE7I,wBAAQ,EAAE;AAAZ,eAA3D;AACD;AAEF;;;0CAEemH,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACQ,GAAL,CAAS,OAAT,EAAkBmB,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEH3B,IAAI,CAACQ,GAAL,CAAS,OAAT,EAAkBmB,QAAlB,CAA2B,OAA3B,IACE,mBADF,GAEE,EAJN;AAKD;;;uCAEYlK,K,EAAO;AAClB,iBAAKe,MAAL,GAAcf,KAAK,CAACoK,OAApB;AACA,iBAAKC,GAAL,CAASD,OAAT,GAAmB,KAAKrJ,MAAxB;AACD;;;2CACgBf,K,EAAK;AACpB;AACA,gBAAGA,KAAK,CAACoK,OAAT,EAAiB;AACf,mBAAK7B,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BoB,MAA/B;AACA,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BO,aAA/B,CAA6C,0DAAWZ,QAAxD;AACA,mBAAKR,gBAAL,GAAuB,IAAvB;AACD,aAJD,MAIK;AACH,mBAAKK,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BC,OAA/B;AACA,mBAAKT,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BK,QAA/B,CAAwC,EAAxC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+BM,eAA/B;AACA,mBAAKnB,gBAAL,GAAuB,KAAvB;AACD;AACF;;;yCACclI,K,EAAK;AAClB,gBAAGA,KAAK,CAACoK,OAAT,EAAiB;AACf,mBAAK7B,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BoB,MAA7B;AACA,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BO,aAA7B,CAA2C,0DAAWZ,QAAtD;AACA,mBAAKP,cAAL,GAAqB,IAArB;AACD,aAJD,MAIK;AACH,mBAAKI,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BC,OAA7B;AACA,mBAAKT,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BK,QAA7B,CAAsC,EAAtC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,aAAd,EAA6BM,eAA7B;AACA,mBAAKlB,cAAL,GAAqB,KAArB;AACD;AACF;;;0CACenI,K,EAAK;AACnB,gBAAGA,KAAK,CAACoK,OAAT,EAAiB;AACf,mBAAK7B,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BoB,MAA9B;AACA,mBAAK5B,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BO,aAA9B,CAA4C,0DAAWZ,QAAvD;AACA,mBAAKN,eAAL,GAAsB,IAAtB;AACD,aAJD,MAIK;AACH,mBAAKG,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BC,OAA9B;AACA,mBAAKT,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BK,QAA9B,CAAuC,EAAvC;AACA,mBAAKb,IAAL,CAAUQ,GAAV,CAAc,cAAd,EAA8BM,eAA9B;AACA,mBAAKjB,eAAL,GAAsB,KAAtB;AACD;AACF;;;uCAES;AAAA;;AACR,iBAAKJ,iBAAL,CAAuBkB,UAAvB,GAAoCvI,SAApC,CACE,UAACC,IAAD,EAAa;AACX,kBAAGA,IAAI,IAAI,IAAX,EAAgB;AACd,uBAAI,CAAC6H,OAAL,GAAe7H,IAAf;AACA,uBAAI,CAAC6J,sBAAL,GAA8B,OAAI,CAAClC,IAAL,CAAUmC,QAAV,CAAmBjC,OAAnB,CAA2BkC,YAA3B,CAC7BC,IAD6B,CAE5B,iEAAU,EAAV,CAF4B,EAG5B,2DAAI,UAAAzK,KAAK;AAAA,yBAAI,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAC0K,IAA9C;AAAA,iBAAT,CAH4B,EAI5B,2DAAI,UAAAA,IAAI;AAAA,yBAAIA,IAAI,GAAG,OAAI,CAACC,cAAL,CAAoBD,IAApB,CAAH,GAA+B,OAAI,CAACpC,OAA5C;AAAA,iBAAR,CAJ4B,CAA9B;AAOD;AACF,aAZH,EAYI,UAACpH,GAAD,EAAS,CAAG,CAZhB;AAeD;;;yCACsBwJ,I,EAAY;AACjC,gBAAM5K,WAAW,GAAG4K,IAAI,CAACtK,WAAL,EAApB;AACA,mBAAO,KAAKkI,OAAL,CAAapI,MAAb,CAAoB,UAAA0K,MAAM;AAAA,qBAAIA,MAAM,CAACF,IAAP,CAAYtK,WAAZ,GAA0ByK,QAA1B,CAAmC/K,WAAnC,CAAJ;AAAA,aAA1B,CAAP;AACD;;;yCACcgL,I,EAAS;AACtB,mBAAOA,IAAI,IAAIA,IAAI,CAACJ,IAAb,GAAoBI,IAAI,CAACJ,IAAzB,GAAgC,EAAvC;AACD;;;;;;;yBAjLU2D,e,EAAe,2H,EAAA,wI,EAAA,uH,EAAA,8L,EAAA,sK;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA;AAAA;;;;;;;;;;;;;;;AC5B5B;;AACC;;AAC+B;AAAA,qBAAU,IAAAC,QAAA,EAAV;AAAoB,aAApB,EAAqB,eAArB,EAAqB;AAAA,qBAAkBC,MAAM,CAACC,cAAP,EAAlB;AAAyC,aAA9D;;AAC9B;;AAEC;;AACC;;AAAW;;AAAO;;AAClB;;AAEA;;AACC;;;;AAGD;;AACA;;AACC;;AAA2C;;AAAW;;AACtD;;AACC;;AAAuB;;AACzB;;AACA;;AACD;;AACA;;AACC;;AAAW;;AAAU;;AACrB;;AAEA;;AAGA;;AAED;;AACA;;AACC;;AAAW;;AAAU;;AACrB;;AAEA;;AAGA;;AAED;;AAED;;AAEA;;AACC;;AACC;;AAA2C;AAAA,qBAAU,IAAAxD,gBAAA,QAAV;AAAkC,aAAlC;;AAAoC;;AAAU;;AAC1F;;AAEA;;AACC;;AAAW;;AAAa;;AACxB;;AAEA;;AAGA;;AAED;;AAED;;AAEA;;AACC;;AACC;;AAA0C;AAAA,qBAAU,IAAAC,cAAA,QAAV;AAAgC,aAAhC;;AAAkC;;AAAQ;;AACrF;;AAEA;;AACC;;AAAW;;AAAW;;AACtB;;AAEA;;AAGA;;AAED;;AACD;;AAEA;;AACC;;AACC;;AAA2C;AAAA,qBAAU,IAAAC,eAAA,QAAV;AAAiC,aAAjC;;AAAmC;;AAAS;;AACxF;;AACA;;AACC;;AAAW;;AAAY;;AACvB;;AAEA;;AAGA;;AAED;;AACD;;AACA;;AACC;;AACE;AAAA,qBAAU,IAAAC,YAAA,QAAV;AAA8B,aAA9B;;AACA;;AACF;;AACD;;AAEA;;AACC;;AAAwD;;AAAI;;AAC5D;;AAA2H;;AAAM;;AAClI;;AACD;;AACD;;;;;;AAzGO;;AAAA;;AAOF;;AAAA;;AACgD;;AAAA;;AACjB;;AAAA;;AASpB;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAeA;;AAAA;;AAGA;;AAAA;;AAeA;;AAAA;;AAGA;;AAAA;;AAaA;;AAAA;;AAGA;;AAAA;;AAKqE;;AAAA;;AAEhF;;AAAA;;;;;;;;;;wEDrEQkD,e,EAAe;gBAP3B,uDAO2B;iBAPjB;AACTnH,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAOiB,U;;;;;;;;;;;;;AAUE8C,aAAG,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,e;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AErCnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMkC,MAAM,GAAY,CACpB;AACIC,YAAI,EAAG,MADX;AACkBoC,iBAAS,EAAG,4HAD9B;AAC8DC,mBAAW,EAAE,CAAC,4EAAD,CAD3E;AACwFnB,gBAAQ,EAAG;AADnG,OADoB,CAAxB;;UAWaoB,+B;;;;;cAAAA;;;;2BAAAA,+B;AAA+B,S;AAAA,kBAJ9B,CAAC,6DAAa9B,QAAb,CAAsBT,MAAtB,CAAD,CAI8B,EAH7B,4DAG6B;;;;4HAA/BuC,+B,EAA+B;AAAA;AAAA,oBAH7B,4DAG6B;AAAA,S;AAHjB,O;;;;;wEAGdA,+B,EAA+B;gBAL3C,sDAK2C;iBALlC;AACNnD,mBAAO,EAAG,CAAC,6DAAaqB,QAAb,CAAsBT,MAAtB,CAAD,CADJ;AAENU,mBAAO,EAAG,CAAC,4DAAD;AAFJ,W;AAKkC,U;;;;;;;;;;;;;;;;;;ACjB5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAcO,UAAM8B,gBAAgB,GAAW,CACtC;AAAEvC,YAAI,EAAG,QAAT;AAAmBoC,iBAAS,EAAG,wEAA/B;AAA+CC,mBAAW,EAAC,CAAC,4EAAD;AAA3D,OADsC,EAEtC;AAAErC,YAAI,EAAG,MAAT;AAAiBoC,iBAAS,EAAG,kEAA7B;AAA2CC,mBAAW,EAAC,CAAC,4EAAD;AAAvD,OAFsC,EAGtC;AAAErC,YAAI,EAAE,EAAR;AAAYwC,kBAAU,EAAE,MAAxB;AAAgCC,iBAAS,EAAE;AAA3C,OAHsC,CAAjC","file":"app-main-miscellaneous-miscellaneous-module-es5.js","sourcesContent":["\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { NotificationEngineService } from 'app/shared/services/notification-engine/notification-engine.service';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\n\r\n\r\nexport class NotificationEngine {\r\n  id: number;\r\n  event_code: string;\r\n  event_name: string;\r\n  send_email: string;\r\n  send_sms: string;\r\n  send_push: string;\r\n  content_email:string;\r\n  content_sms:string;\r\n  content_push:string;\r\n  project_id:number;\r\n  project_code:string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\nexport class resizeColumnSetting {\r\n  coulmnName: string;\r\n  csswidth: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: NotificationEngine;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['project_code','event_code', 'event_name', 'content_email', 'content_sms', 'content_push', 'status', 'action'];\r\n  head = [['Project Code','Event Code', 'Event Name', 'Content Email', 'Content Sms', 'Content Push', 'Status']]\r\n  dataSource: MatTableDataSource<NotificationEngine>;\r\n  notify_Engine: NotificationEngine[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dialogRef: any;\r\n  projectSearch=false;\r\n  eventCodSearch = false;\r\n  eventNaSearch = false;\r\n  emailSearch = false;\r\n  smsSearch = false;\r\n  pushSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  resizeColumnSettings: resizeColumnSetting[];\r\n  //messageConstant = MessageConstant;\r\n  constructor(private notificationService: NotificationEngineService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.defaultColumnSize();\r\n    this.getNotiyEngine();\r\n    this.filterEntity = new NotificationEngine();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n  }\r\n\r\n  defaultColumnSize(){\r\n    this.resizeColumnSettings = [];\r\n    for(var i =0; i < this.displayedColumns.length;i++){\r\n        var columnSetting= new resizeColumnSetting();\r\n        columnSetting.coulmnName = this.displayedColumns[i];\r\n        columnSetting.csswidth = 0;\r\n        this.resizeColumnSettings.push(columnSetting);\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getNotiyEngine() {\r\n    this.notificationService.getAllNotificationEngineList().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.notify_Engine = resp.data;\r\n          for (var i = 0; i < this.notify_Engine.length; i++) {\r\n            if (this.notify_Engine[i].status == 'N') {\r\n              this.notify_Engine[i].statusString = 'Inactive';\r\n            } else {\r\n              this.notify_Engine[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.notify_Engine);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n            this.notificationService.deleteNotificationEngine(id,this.localStorage.userId).subscribe(\r\n            (resp: any) => {\r\n              if(resp.status == true){\r\n                this.getNotiyEngine();\r\n                this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n                this.cdr.detectChanges();\r\n              }else{\r\n                this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n              }\r\n            }, (err) => {\r\n          }\r\n        );\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1000px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getNotiyEngine();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1000px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getNotiyEngine();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'projectSearch') {\r\n      this.projectSearch = !this.projectSearch;\r\n      this.filterEntity.project_code = '';\r\n    }\r\n    if (visibleOption == 'eventCodSearch') {\r\n      this.eventCodSearch = !this.eventCodSearch;\r\n      this.filterEntity.event_code = '';\r\n    }\r\n    if (visibleOption == 'eventNaSearch') {\r\n      this.eventNaSearch = !this.eventNaSearch;\r\n      this.filterEntity.event_name = '';\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.content_email = '';\r\n    }\r\n    if (visibleOption == 'smsSearch') {\r\n      this.smsSearch = !this.smsSearch;\r\n      this.filterEntity.content_sms = '';\r\n    }\r\n    if (visibleOption == 'pushSearch') {\r\n      this.pushSearch = !this.pushSearch;\r\n      this.filterEntity.content_push = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var notifyData = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Project Code':notifyData.project_code,'Event Code': notifyData.event_code, 'Event Name': notifyData.event_name, 'Content Email': notifyData.content_email,\r\n        'Content Sms': notifyData.content_sms, 'Content Push': notifyData.content_push, 'Status': notifyData.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Notification Engine');\r\n    XLSX.writeFile(workBook, 'Notification Engine.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var notifyData = this.dataSource.filteredData[i];\r\n      var data = [notifyData.project_code,notifyData.event_code, notifyData.event_name, notifyData.content_email, notifyData.content_sms, notifyData.content_push,\r\n        notifyData.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Notification Engine Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not For Public Use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Notification Engine report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n  onResizeEnd(event: ResizeEvent, displayedColumns): void {\r\n\t\tif (event.edges.right) {\r\n\t\t\tconst cssValue = event.rectangle.width + 'px';\r\n\t\t\tconst columnElts = document.getElementsByClassName('mat-column-' + displayedColumns);\r\n\t\t\tfor (let i = 0; i < columnElts.length; i++) {\r\n\t\t\t\tconst currentEl = columnElts[i] as HTMLDivElement;\r\n        currentEl.style.width = cssValue;\r\n        this.cdr.detectChanges();\r\n      }\r\n      \r\n      for(var i =0; i < this.resizeColumnSettings.length;i++){\r\n        var columnSetting  = this.resizeColumnSettings[i];\r\n         if(columnSetting.coulmnName ==  displayedColumns){\r\n          columnSetting.csswidth = event.rectangle.width;\r\n         }\r\n        \r\n    }\r\n\t\t}\r\n  }\r\n  changeColumnSize(){\r\n    \r\n    for(var i =0; i < this.resizeColumnSettings.length;i++){\r\n        var columnSetting  = this.resizeColumnSettings[i];\r\n       \r\n       if(columnSetting.csswidth > 0){\r\n        const columnElts = document.getElementsByClassName('mat-column-' + columnSetting.coulmnName);\r\n        for (let i = 0; i < columnElts.length; i++) {\r\n          const currentEl = columnElts[i] as HTMLDivElement;\r\n          currentEl.style.width = columnSetting.csswidth +'px';\r\n          this.cdr.detectChanges();\r\n        }\r\n       }\r\n        \r\n    }\r\n  }\r\n\r\n  responseClick(requestString){\r\n    let selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = JSON.stringify(requestString);\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n        <mat-table  [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table [dataSource]=\"dataSource\"\r\n         matSort matTableFilter class=\"mat-elevation-z8 reszieable\">\r\n\r\n            <ng-container matColumnDef=\"project_code\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!projectSearch\" class=\"custom_font_size\" style=\"display: flex;\">Project Code  &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('projectSearch',$event)\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"projectSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                        <input matInput placeholder=\" Project Code \" [(ngModel)]=\"filterEntity.project_code\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('projectSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" > {{row.project_code}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"event_code\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!eventCodSearch\" class=\"custom_font_size\" style=\"display: flex;\">Event Code  &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('eventCodSearch',$event)\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"eventCodSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                        <input matInput placeholder=\" Event Code \" [(ngModel)]=\"filterEntity.event_code\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('eventCodSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" > {{row.event_code}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"event_name\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!eventNaSearch\" class=\"custom_font_size\" style=\"display: flex;\">Event Name\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('eventNaSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"eventNaSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\" Event Name \" [(ngModel)]=\"filterEntity.event_name\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('eventNaSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\"   > {{row.event_name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"content_email\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Content Email\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\"Content Email\" [(ngModel)]=\"filterEntity.content_email\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.content_email}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.content_email)\" > {{row.content_email}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"content_sms\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!smsSearch\" class=\"custom_font_size\" style=\"display: flex;\">Content Sms\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('smsSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"smsSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\"Content Sms\" [(ngModel)]=\"filterEntity.content_sms\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('smsSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell  [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.content_sms}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.content_sms)\" > {{row.content_sms}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"content_push\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!pushSearch\" class=\"custom_font_size\" style=\"display: flex;\">Content Push\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('pushSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"pushSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\"Content Push\" [(ngModel)]=\"filterEntity.content_push\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('pushSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.content_push}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.content_push)\" > {{row.content_push}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"status\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                  [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                        <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                    {{row.statusString}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\" >\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef >\r\n                    <span class=\"custom_font_size\">Action</span>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">\r\n\r\n                    <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                        style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                    <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                    <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                        delete</mat-icon>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n            <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n\r\n        </mat-table>\r\n        <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { EVChargingSolutionService } from 'app/shared/services/ev-charging-solution/ev-charging-solution.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { NotificationEngineService } from 'app/shared/services/notification-engine/notification-engine.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status: boolean = true;\r\n  sendEmailChecked: boolean = false;\r\n  sendSmsChecked: boolean = false;\r\n  sendPushChecked: boolean = false;\r\n  project: any;\r\n  filteredOptionsProject: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  menuArray: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private menuMasterService: MenuMasterService,\r\n    private notificationService: NotificationEngineService,) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    //console.log(this.params)\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      event_code: ['', [Validators.required, Validators.maxLength(50),]],\r\n      event_name: ['', [Validators.required, Validators.maxLength(100),]],\r\n      send_email: ['',],\r\n      content_email: ['', [Validators.required, Validators.maxLength(3000)]],\r\n      send_sms: ['',],\r\n      content_sms: ['', [Validators.required, Validators.maxLength(500)]],\r\n      send_push: ['',],\r\n      content_push: ['', [Validators.required, Validators.maxLength(500)]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.form.get('content_email').disable();\r\n    this.form.get('content_sms').disable();\r\n    this.form.get('content_push').disable();\r\n\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getProject();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.sendEmailChecked == false) {\r\n      this.form.get('content_email').setValue('');\r\n      this.form.get('content_email').clearValidators();\r\n    } else {\r\n      this.form.get('content_email').setValidators(Validators.required);\r\n    }\r\n\r\n    if (this.sendSmsChecked == false) {\r\n      this.form.get('content_sms').setValue('');\r\n      this.form.get('content_sms').clearValidators();\r\n    } else {\r\n      this.form.get('content_sms').setValidators(Validators.required);\r\n    }\r\n\r\n    if (this.sendPushChecked == false) {\r\n      this.form.get('content_push').setValue('');\r\n      this.form.get('content_push').clearValidators();\r\n    } else {\r\n      this.form.get('content_push').setValidators(Validators.required);\r\n    }\r\n\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        project_id: formValues.project.id,\r\n        event_code: formValues.event_code,\r\n        event_name: formValues.event_name,\r\n        send_email: this.sendEmailChecked === true ? 1 : 0,\r\n        send_sms: this.sendSmsChecked === true ? 1 : 0,\r\n        send_push: this.sendPushChecked === true ? 1 : 0,\r\n        content_email: formValues.content_email === undefined ? \" \" : formValues.content_email,\r\n        content_sms: formValues.content_sms === undefined ? \" \" : formValues.content_sms,\r\n        content_push: formValues.content_push === undefined ? \" \" : formValues.content_push,\r\n        status: this.status == true ? 'Y' : 'N',\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.notificationService.updateNotificationEngine(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.notificationService.createNotificationEngine(params).subscribe(\r\n          (resp: any) => {\r\n            this.snackBar.open(MessageConstant.notificationCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n      this.dialogRef.close(params);\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.sendEmailChecked = this.params.data.send_email == 1 ? true : false;\r\n    this.sendSmsChecked = this.params.data.send_sms == 1 ? true : false;\r\n    this.sendPushChecked = this.params.data.send_push == 1 ? true : false;\r\n    this.form.get('event_code').setValue(params.data.event_code);\r\n    this.form.get('event_name').setValue(params.data.event_name);\r\n    this.form.get('content_email').setValue(params.data.content_email);\r\n    this.form.get('content_sms').setValue(params.data.content_sms);\r\n    this.form.get('content_push').setValue(params.data.content_push);\r\n    this.form.get('send_email').setValue(this.sendEmailChecked);\r\n    this.form.get('send_sms').setValue(this.sendSmsChecked);\r\n    this.form.get('send_push').setValue(this.sendPushChecked);\r\n    this.status = this.params.data.status == 'Y' ? true : false;\r\n    if(this.sendEmailChecked == true){\r\n      this.form.get('content_email').enable();\r\n    }else{\r\n      this.form.get('content_email').disable();\r\n    }\r\n    if(this.sendSmsChecked == true){\r\n      this.form.get('content_sms').enable();\r\n    }else{\r\n      this.form.get('content_sms').disable();\r\n    }\r\n    if(this.sendPushChecked == true){\r\n      this.form.get('content_push').enable();\r\n    }else{\r\n      this.form.get('content_push').disable();\r\n    }\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          //console.log(this.project)\r\n          if (this.isEditMode) {\r\n            const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n            this.form.get('project').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterProject(name) : this.project)\r\n            );\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.project.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  onCheckSendEmail(event){\r\n    //console.log(event)\r\n    if(event.checked){\r\n      this.form.get('content_email').enable();\r\n      this.form.get('content_email').setValidators(Validators.required);\r\n      this.sendEmailChecked =true;\r\n    }else{\r\n      this.form.get('content_email').disable();\r\n      this.form.get('content_email').setValue('');\r\n      this.form.get('content_email').clearValidators();\r\n      this.sendEmailChecked =false;\r\n    }\r\n  }\r\n  onCheckSendSms(event){\r\n    if(event.checked){\r\n      this.form.get('content_sms').enable();\r\n      this.form.get('content_sms').setValidators(Validators.required);\r\n      this.sendSmsChecked =true;\r\n    }else{\r\n      this.form.get('content_sms').disable();\r\n      this.form.get('content_sms').setValue('');\r\n      this.form.get('content_sms').clearValidators();\r\n      this.sendSmsChecked =false;\r\n    }\r\n  }\r\n  onCheckSendPush(event){\r\n    if(event.checked){\r\n      this.form.get('content_push').enable();\r\n      this.form.get('content_push').setValidators(Validators.required);\r\n      this.sendPushChecked =true;\r\n    }else{\r\n      this.form.get('content_push').disable();\r\n      this.form.get('content_push').setValue('');\r\n      this.form.get('content_push').clearValidators();\r\n      this.sendPushChecked =false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\t\t<form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"search\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Event Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"event_code\" maxlength=\"50\" type=\"text\"\r\n\t\t\t\t\t\tautocomplete=\"off\" required>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('event_code').hasError('required')\">Please enter event code</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('event_code').hasError('maxLength')\">Maximum 50 character is allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Event Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\"  type=\"text\" formControlName=\"event_name\" maxlength=\"100\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('event_name').hasError('required')\">Please enter event name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('event_name').hasError('maxLength')\">Maximum 100 character is allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t\t<mat-checkbox formControlName=\"send_email\" (change)='onCheckSendEmail($event)'>Send Email</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Content Email</mat-label>\r\n\t\t\t\t\t<textarea matInput placeholder=\"\" type=\"text\" formControlName=\"content_email\"\r\n\t\t\t\t\t\tautocomplete=\"off\"></textarea>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('content_email').invalid\">Please enter content email</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('content_email').hasError('maxLength')\">Maximum 3000 character is allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t\t<mat-checkbox formControlName=\"send_sms\" (change)='onCheckSendSms($event)'>Send Sms</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\" >\r\n\t\t\t\t\t<mat-label>Content Sms</mat-label>\r\n\t\t\t\t\t<textarea matInput placeholder=\"\" type=\"text\" formControlName=\"content_sms\"  \r\n\t\t\t\t\t\tautocomplete=\"off\"></textarea>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_sms').invalid\">Please enter content sms</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_sms').hasError('maxLength')\">Maximum 500 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t\t<mat-checkbox formControlName=\"send_push\" (change)='onCheckSendPush($event)'>Send Push</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Content Push</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"content_push\"  \r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_push').invalid\">Please enter content push</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_push').hasError('maxLength')\">Maximum 500 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" class=\"mt-12\">\r\n\t\t\t\t<mat-slide-toggle fxFlex=\"15\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-8\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\t</div>\r\n</div>","\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\r\nimport { NotificationEngineRoutingModule } from './notification-engine/notification-engine-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS =[ ];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, MiscellaneousRoutingModule,NotificationEngineRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class MiscellaneousModule{}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class NotificationEngineService {\r\n\r\n    apiUrl1 = `${environment.API_URL2}/master`;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getNotificationDetailsByEventCode(){\r\n        return this.http.get(`${this.apiUrl1}/getNotificationDetailsByEventCode/WARRANTY_ExPIRED`);\r\n    }\r\n\r\n    getAllNotificationEngineList(){\r\n        return this.http.get(`${this.apiUrl1}/getAllNotificationEngineList`);\r\n    }\r\n\r\n    createNotificationEngine(params){\r\n        return this.http.post(`${this.apiUrl1}/createNotificationEngine`,params);\r\n    }\r\n\r\n    updateNotificationEngine(params){\r\n        return this.http.post(`${this.apiUrl1}/updateNotificationEngine`,params);\r\n    }\r\n\r\n    deleteNotificationEngine(id,login_id){\r\n        return this.http.delete(`${this.apiUrl1}/deleteNotificationEngine/${id}/${login_id}`);\r\n    }\r\n\r\n\r\n}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { NotificationEngineService } from 'app/shared/services/notification-engine/notification-engine.service';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status:boolean = true;\r\n  sendEmailChecked :boolean=false;\r\n  sendSmsChecked :boolean=false;\r\n  sendPushChecked :boolean=false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  project: any;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  menuArray: any;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private notificationService:NotificationEngineService,\r\n    private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();  \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    //console.log(this.params)\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      event_code: ['',[Validators.required,Validators.maxLength(50),Validators.pattern('^[a-zA-Z ]*$')]],\r\n      event_name: ['',  [Validators.required,Validators.maxLength(100),Validators.pattern('^[a-zA-Z ]*$')]],\r\n      send_email: ['', ],\r\n      content_email: ['', [Validators.required,Validators.maxLength(3000)]],\r\n      send_sms: ['', ],\r\n      content_sms: ['', [Validators.required,Validators.maxLength(500)]],\r\n      send_push:['',],\r\n      content_push: ['', [Validators.required,Validators.maxLength(500)]],  \r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.form.get('send_email').disable();\r\n    this.form.get('send_sms').disable();\r\n    this.form.get('send_push').disable();\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getProject();\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.sendEmailChecked = this.params.data.send_email == 1 ? true :false;\r\n    this.sendSmsChecked = this.params.data.send_sms == 1 ? true :false;\r\n    this.sendPushChecked = this.params.data.send_push == 1 ? true :false;\r\n    this.form.get('event_code').setValue(params.data.event_code);\r\n    this.form.get('event_name').setValue(params.data.event_name);\r\n    this.form.get('content_email').setValue(params.data.content_email);\r\n    this.form.get('content_sms').setValue(params.data.content_sms);\r\n    this.form.get('content_push').setValue(params.data.content_push);\r\n    this.form.get('send_email').setValue(this.sendEmailChecked);\r\n    this.form.get('send_sms').setValue(this.sendSmsChecked);\r\n    this.form.get('send_push').setValue(this.sendPushChecked);\r\n    this.status = this.params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  \r\n  getProject() {\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.project = resp;\r\n          if(this.isEditMode){\r\n              const toSelect = this.project.find(c => c.id == this.params.data.project_id);\r\n              this.form.get('project').setValue(toSelect);\r\n            }\r\n           this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterProject(name) : this.project)\r\n            );\r\n        }\r\n      }, (err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.project.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string{\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white; \" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input type=\"search\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Event Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"event_code\" maxlength=\"50\" type=\"text\"\r\n\t\t\t\t\t\tautocomplete=\"off\" readonly>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('event_code').hasError('required')\">Please enter event code</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('event_code').hasError('maxLength')\">Maximum 50 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Event Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\"  type=\"text\" formControlName=\"event_name\" maxlength=\"100\" readonly\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('event_name').hasError('required')\">Please enter event name</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('event_name').hasError('maxLength')\">Maximum 100 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t\t<mat-checkbox formControlName=\"send_email\"  >Send Email</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Content Email</mat-label>\r\n\t\t\t\t\t<textarea matInput placeholder=\"\" type=\"text\" formControlName=\"content_email\"\r\n\t\t\t\t\t\tautocomplete=\"off\" readonly></textarea>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_email').invalid\">Please enter content email</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_email').hasError('maxLength')\">Maximum 3000 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t\t<mat-checkbox formControlName=\"send_sms\">Send Sms</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\" >\r\n\t\t\t\t\t<mat-label>Content Sms</mat-label>\r\n\t\t\t\t\t<textarea matInput placeholder=\"\" type=\"text\" formControlName=\"content_sms\"  \r\n\t\t\t\t\t\tautocomplete=\"off\" readonly></textarea>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_sms').invalid\">Please enter content sms</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_sms').hasError('maxLength')\">Maximum 500 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t\t<mat-checkbox formControlName=\"send_push\" >Send Push</mat-checkbox>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Content Push</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"content_push\"  \r\n\t\t\t\t\t\tautocomplete=\"off\" readonly>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_push').invalid\">Please enter content push</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('content_push').hasError('maxLength')\">Maximum 500 character is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" class=\"mt-12\">\r\n\t\t\t\t<mat-slide-toggle fxFlex=\"15\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-8\">\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","\r\nimport {NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes : Routes = [\r\n    {\r\n        path : 'evChargingSolution',\r\n\t\tloadChildren : () => import('./EV-charging-solution/EV-charging-solution.module').then(m=>m.EVChargingSolutionModule),\r\n\t\tdata : {title : 'Miscellaneous'}\r\n    },\r\n    {\r\n        path : 'notificationEngine',\r\n        loadChildren : () => import('./notification-engine/notification-engine.module').then(m => m.NotificationEngineModule),\r\n        data : {title : 'Miscellaneous'}\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class MiscellaneousRoutingModule{}","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-notification-engine-crud',\r\n  templateUrl: './notification-engine-crud.component.html',\r\n  styleUrls: ['./notification-engine-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class NotificationEngineCrudComponent implements OnInit {\r\n  tabLinks = [\r\n    // { label: 'Notification Engine', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"miscellaneous\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"notificationEngine\") {\r\n              this.objectChildData = y;\r\n\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"notificationEngine\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Notification Engine', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/miscellaneous/notificationEngine/crud/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { NotificationEngineService } from 'app/shared/services/notification-engine/notification-engine.service'\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status:boolean = true;\r\n  sendEmailChecked :boolean=false;\r\n  sendSmsChecked :boolean=false;\r\n  sendPushChecked :boolean=false;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  project: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n \r\n  \r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router,\r\n    private notificationService: NotificationEngineService,private menuMasterService:MenuMasterService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize(); \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getProject();\r\n    this.form = this.fb.group({\r\n      project: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      event_code: ['',[Validators.required,Validators.maxLength(50),]],\r\n      event_name: ['',  [Validators.required,Validators.maxLength(100),]],\r\n      send_email: ['', ],\r\n      content_email: ['', [Validators.required,Validators.maxLength(3000)]],\r\n      send_sms: ['', ],\r\n      content_sms: ['', [Validators.required,Validators.maxLength(500)]],\r\n      send_push:['',],\r\n      content_push: ['', [Validators.required,Validators.maxLength(500)]],  \r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    this.form.get('content_email').disable();\r\n    this.form.get('content_sms').disable();\r\n    this.form.get('content_push').disable();\r\n\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.sendEmailChecked == false ){\r\n      this.form.get('content_email').setValue('');\r\n      this.form.get('content_email').clearValidators();\r\n    }else{\r\n      this.form.get('content_email').setValidators(Validators.required);\r\n    }\r\n\r\n    if(this.sendSmsChecked == false ){\r\n      this.form.get('content_sms').setValue('');\r\n      this.form.get('content_sms').clearValidators();\r\n    }else{\r\n      this.form.get('content_sms').setValidators(Validators.required);\r\n    }\r\n\r\n    if(this.sendPushChecked == false ){\r\n      this.form.get('content_push').setValue('');\r\n      this.form.get('content_push').clearValidators();\r\n    }else{\r\n      this.form.get('content_push').setValidators(Validators.required);\r\n    }\r\n\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      //console.log(this.form.value);\r\n      let params = {\r\n        project_id : formValues.project.id,\r\n        event_code: formValues.event_code,\r\n        event_name: formValues.event_name,\r\n        send_email: this.sendEmailChecked === true ? 1 : 0, \r\n        send_sms: this.sendSmsChecked === true ? 1 : 0,\r\n        send_push: this.sendPushChecked === true ? 1 : 0 ,\r\n        content_email: formValues.content_email === undefined ? \" \" : formValues.content_email,\r\n        content_sms: formValues.content_sms === undefined ? \" \" : formValues.content_sms,\r\n        content_push: formValues.content_push === undefined ? \" \" : formValues.content_push,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      this.notificationService.createNotificationEngine(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            //console.log(params,resp.data);\r\n            this.snackBar.open(MessageConstant.notificationCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/miscellaneous/notificationEngine/crud/list/']);\r\n          }else{\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n\r\n        },(err) =>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n         }\r\n      );\r\n    }\r\n    else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  onCheckSendEmail(event){\r\n    //console.log(event)\r\n    if(event.checked){\r\n      this.form.get('content_email').enable();\r\n      this.form.get('content_email').setValidators(Validators.required);\r\n      this.sendEmailChecked =true;\r\n    }else{\r\n      this.form.get('content_email').disable();\r\n      this.form.get('content_email').setValue('');\r\n      this.form.get('content_email').clearValidators();\r\n      this.sendEmailChecked =false;\r\n    }\r\n  }\r\n  onCheckSendSms(event){\r\n    if(event.checked){\r\n      this.form.get('content_sms').enable();\r\n      this.form.get('content_sms').setValidators(Validators.required);\r\n      this.sendSmsChecked =true;\r\n    }else{\r\n      this.form.get('content_sms').disable();\r\n      this.form.get('content_sms').setValue('');\r\n      this.form.get('content_sms').clearValidators();\r\n      this.sendSmsChecked =false;\r\n    }\r\n  }\r\n  onCheckSendPush(event){\r\n    if(event.checked){\r\n      this.form.get('content_push').enable();\r\n      this.form.get('content_push').setValidators(Validators.required);\r\n      this.sendPushChecked =true;\r\n    }else{\r\n      this.form.get('content_push').disable();\r\n      this.form.get('content_push').setValue('');\r\n      this.form.get('content_push').clearValidators();\r\n      this.sendPushChecked =false;\r\n    }\r\n  }\r\n\r\n  getProject(){\r\n    this.menuMasterService.getProject().subscribe(\r\n      (resp:any) =>{\r\n        if(resp != null){\r\n          this.project = resp;\r\n          this.filteredOptionsProject = this.form.controls.project.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterProject(name) : this.project)\r\n          );\r\n\r\n        }\r\n      },(err) => { }\r\n\r\n    );\r\n  }\r\n  private _filterProject(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.project.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayProject(item: any): string{\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t<input type=\"search\" matInput formControlName=\"project\" autocomplete=\"off\" required\r\n\t\t\t\t\t[matAutocomplete]=\"projectAuto\">\r\n\t\t\t\t<mat-autocomplete #projectAuto=\"matAutocomplete\" [displayWith]=\"displayProject\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsProject  | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select project\">\r\n\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('project').invalid\">Please select project</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Event Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"event_code\" maxlength=\"50\" required type=\"text\"\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('event_code').hasError('required')\">Please enter event code</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('event_code').hasError('pattern')\">Only character are allowed \r\n\t\t\t\t</mat-error> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('event_code').hasError('maxLength')\">Maximum 50 character is allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Event Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\"  type=\"text\" formControlName=\"event_name\" maxlength=\"100\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('event_name').hasError('required')\">Please enter event name</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('event_name').hasError('pattern')\">Only character are allowed \r\n\t\t\t\t</mat-error> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('event_name').hasError('maxLength')\">Maximum 100 character is allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t<mat-checkbox formControlName=\"send_email\" (change)='onCheckSendEmail($event)'>Send Email</mat-checkbox>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Content Email</mat-label>\r\n\t\t\t\t<textarea matInput placeholder=\"\" type=\"text\" formControlName=\"content_email\"\r\n\t\t\t\t\tautocomplete=\"off\" ></textarea>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('content_email').hasError('required')\">Please enter content email</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('content_email').hasError('pattern')\">Character length should be 3000 only\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('content_email').hasError('maxLength')\">Maximum 3000 character is allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t<mat-checkbox formControlName=\"send_sms\"  (change)='onCheckSendSms($event)'>Send Sms</mat-checkbox>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\" >\r\n\t\t\t\t<mat-label>Content Sms</mat-label>\r\n\t\t\t\t<textarea matInput placeholder=\"\" type=\"text\" formControlName=\"content_sms\"  \r\n\t\t\t\t\tautocomplete=\"off\"></textarea>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('content_sms').hasError('required')\">Please enter content sms</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('content_sms').hasError('pattern')\">Character length should be 500 only\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('content_sms').hasError('maxLength')\">Maximum 500 character is allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<div fxFlex=\"10\" class=\"mt-12\">\r\n\t\t\t\t<mat-checkbox formControlName=\"send_push\"  (change)='onCheckSendPush($event)'>Send Push</mat-checkbox>\r\n\t\t\t</div>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"90\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Content Push</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"content_push\"  \r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('content_push').hasError('required')\">Please enter content push</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('content_push').hasError('pattern')\">Character length should be 500 only\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t\t<mat-error *ngIf=\"form.get('content_push').hasError('maxLength')\">Maximum 500 character is allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" class=\"mt-12\">\r\n\t\t\t<mat-slide-toggle fxFlex=\"15\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t</mat-slide-toggle>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-12\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" >Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\" routerLink=\"/miscellaneous/notificationEngine/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotificationEngineCrudComponent } from './notification-engine-crud/notification-engine-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './notification-engine-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : NotificationEngineCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class NotificationEngineRoutingModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard]},\r\n  { path : 'list', component : ListComponent,canActivate:[AuthGuard]},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n"]}