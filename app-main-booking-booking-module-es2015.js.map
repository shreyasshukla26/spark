{"version":3,"sources":["./src/app/main/booking/list/list.component.ts","./src/app/main/booking/list/list.component.html","./src/app/main/booking/view-dialog/view-dialog.component.ts","./src/app/main/booking/view-dialog/view-dialog.component.html","./src/app/main/booking/list-approved/list-approved.component.ts","./src/app/main/booking/list-approved/list-approved.component.html","./src/app/main/booking/booking-crud/booking-crud.component.ts","./src/app/main/booking/booking-crud/booking-crud.component.html","./src/app/main/booking/booking-crud/routes.ts","./src/app/main/booking/registerUser-dialog/registerUser-dialog.component.ts","./src/app/main/booking/registerUser-dialog/registerUser-dialog.component.html","./src/app/main/booking/action-dialog/action-dialog.component.ts","./src/app/main/booking/action-dialog/action-dialog.component.html","./src/app/main/booking/create/create.component.ts","./src/app/main/booking/create/create.component.html","./src/app/shared/services/booking/booking.service.ts","./src/app/main/booking/booking.module.ts","./src/app/main/booking/registerVehicle-dialog/registerVehicle-dialog.component.ts","./src/app/main/booking/registerVehicle-dialog/registerVehicle-dialog.component.html","./src/app/main/booking/booking-routing.module.ts"],"names":[],"mappings":"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","file":"app-main-booking-booking-module-es2015.js","sourcesContent":["\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport 'jspdf-autotable';\r\nimport { FormBuilder, FormGroup, ValidatorFn, AbstractControl, Validators } from '@angular/forms';\r\n\r\n\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\nexport class BookingModel {\r\n  id: number;\r\n  booking_number: number;\r\n  username: string;\r\n  mobile: number;\r\n  registration_no: string;\r\n  booking_date: number;\r\n  booking_date_string: string;\r\n  start_time: string;\r\n  end_time: string;\r\n  booking_status_description: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: BookingModel;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['booking_number', 'username', 'mobile', 'registration_no', 'booking_date', 'start_time', 'end_time', 'booking_status_description'];\r\n  head = [['Booking Number', 'Username', 'Mobile', 'Registration Number', 'Booking Date', 'Start Time', 'End Time', 'Booking Status']];\r\n  dataSource: MatTableDataSource<BookingModel>;\r\n  bookingModels: BookingModel[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  dialogRef: any;\r\n  bookingNumberSearch = false;\r\n  userNameSearch = false;\r\n  mobileSearch = false;\r\n  registrationSearch = false;\r\n  bookingDateSearch = false;\r\n  startTimeSearch = false;\r\n  endTimeSearch = false;\r\n  bookingStatusSearch = false;\r\n  localStorage: any;\r\n  exportedData: any[];\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  stationID: any;\r\n  form: FormGroup;\r\n  clientCpoStaDetails: any;\r\n  clientList: any; cpoList: any; stationList: any;\r\n  station: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private bookingService: BookingService, public dialog: MatDialog, \r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef, public datepipe: DatePipe, private fb: FormBuilder) {\r\n    this.form = this.fb.group({\r\n      charClient: ['', [autocompleteObjectValidator()]],\r\n      charCPO: ['', [autocompleteObjectValidator()]],\r\n      charStat: ['', [autocompleteObjectValidator()]]\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'));\r\n    //this.getBookingModels();\r\n    this.filterEntity = new BookingModel();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getBookingModels() {\r\n    let formValues = this.form.value;\r\n    let params = {\r\n      status: 'ALL',\r\n      station_id: formValues.charStat.station_id,\r\n      f_date: '',\r\n      t_date: '',\r\n      user_id: this.localStorage.userId\r\n    }\r\n    this.bookingService.getallbookingscw(params).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.bookingModels = resp.data;\r\n          for (var i = 0; i < this.bookingModels.length; i++) {\r\n            this.bookingModels[i].booking_date_string = this.datepipe.transform(this.bookingModels[i].booking_date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.bookingModels);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    // this.confirmDialogRef.afterClosed().subscribe(result => {\r\n    //     if ( result )\r\n    //     {\r\n    //         this.chargingModelService.delete(id).subscribe(\r\n    //     (data:any)=>{\r\n    //       ;\r\n    //       this.getBookingModels();\r\n    //       this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n    //       this.cdr.detectChanges();\r\n    //     },(err)=>{\r\n\r\n    //     }\r\n    //   )\r\n    //     }\r\n    //     this.confirmDialogRef = null;\r\n    // });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBookingModels();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBookingModels();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'bookingNumberSearch') {\r\n      this.bookingNumberSearch = !this.bookingNumberSearch;\r\n      this.filterEntity.booking_number = null;\r\n    }\r\n    if (visibleOption == 'userNameSearch') {\r\n      this.userNameSearch = !this.userNameSearch;\r\n      this.filterEntity.username = \"\";\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = null;\r\n    }\r\n    if (visibleOption == 'registrationSearch') {\r\n      this.registrationSearch = !this.registrationSearch;\r\n      this.filterEntity.registration_no = \"\";\r\n    }\r\n    if (visibleOption == 'bookingDateSearch') {\r\n      this.bookingDateSearch = !this.bookingDateSearch;\r\n      this.filterEntity.booking_date_string = \"\";\r\n    }\r\n    if (visibleOption == 'startTimeSearch') {\r\n      this.startTimeSearch = !this.startTimeSearch;\r\n      this.filterEntity.start_time = \"\";\r\n    }\r\n    if (visibleOption == 'endTimeSearch') {\r\n      this.endTimeSearch = !this.endTimeSearch;\r\n      this.filterEntity.end_time = \"\";\r\n    }\r\n    if (visibleOption == 'bookingStatusSearch') {\r\n      this.bookingStatusSearch = !this.bookingStatusSearch;\r\n      this.filterEntity.booking_status_description = \"\";\r\n    }\r\n\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var bookingModel = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Booking Number': bookingModel.booking_number, 'User Name ': bookingModel.username, 'Mobile': bookingModel.mobile,\r\n        'Registration Number': bookingModel.registration_no, 'Booking Date ': bookingModel.booking_date_string,\r\n        'Start Time': bookingModel.start_time, 'End Time': bookingModel.end_time,\r\n        'Booking Status': bookingModel.booking_status_description\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Booking.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      var data = [chrger.booking_number, chrger.username, chrger.mobile, chrger.registration_no, chrger.booking_date_string, chrger.start_time, chrger.end_time, chrger.booking_status_description];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Booking Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Booking report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n\r\n    } \r\n  }\r\n  onClientChange(client_id) {\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    } \r\n  }\r\n  onCPOChange(event) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n  \r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station =[];\r\n\r\n    if (this.localStorage.role_code != \"END\") {\r\n      for(var i = 0; i< this.stationList.length; i++){\r\n        if(id == this.stationList[i].cpo_id){\r\n          this.station.push( this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        const toSelect =  this.station[0];\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getBookingModels()\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    } \r\n\r\n  }\r\n  onStationChange(id) {\r\n    this.stationID = id\r\n    this.getBookingModels();\r\n  }\r\n\r\n  \r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n\r\n","\r\n<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    \r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<mat-card style=\"padding:16px  !important; display:none;\" *ngIf=\"localStorage.role_code != 'END' \">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                        (optionSelected)='onClientChange($event.option.value.client_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.client_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.cpo_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\" >expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select  CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\" readonly>\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.station_name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n            \r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n<div fxLayout=\"row wrap\"  class=\"page-layout simple fullwidth\"  style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\" >\r\n       \r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\"  [exampleEntity]=\"filterEntity\"\r\n            [filterType]=\"filterType\"  matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"booking_number\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!bookingNumberSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Booking Number &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('bookingNumberSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"bookingNumberSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Booking Number\" [(ngModel)]=\"filterEntity.code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('bookingNumberSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.booking_number}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"username\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!userNameSearch\"  class=\"custom_font_size\" style=\"display: flex;\">User Name &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch',$event)\">search</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"userNameSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.username\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!mobileSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Moblie &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"registration_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!registrationSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Registration Number &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('registrationSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field  *ngIf=\"registrationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Registration Number\" [(ngModel)]=\"filterEntity.registration_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('registrationSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.registration_no}} </td>\r\n                </ng-container>\r\n                \r\n\r\n                <ng-container matColumnDef=\"booking_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!bookingDateSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Booking Date &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('bookingDateSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"bookingDateSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Booking Date\" [(ngModel)]=\"filterEntity.booking_date_string\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('bookingDateSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.booking_date_string}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"start_time\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!startTimeSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Start Time &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('startTimeSearch',$event)\">search</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"startTimeSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Start Time\" [(ngModel)]=\"filterEntity.start_time\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('startTimeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.start_time}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"end_time\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!endTimeSearch\"  class=\"custom_font_size\" style=\"display: flex;\">End Time &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('endTimeSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"End Time\" [(ngModel)]=\"filterEntity.end_time\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('endTimeSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.end_time}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"booking_status_description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!bookingStatusSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Booking Status &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('bookingStatusSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field  *ngIf=\"bookingStatusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Booking Status\" [(ngModel)]=\"filterEntity.booking_status_description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('bookingStatusSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.booking_status_description}} </td>\r\n                </ng-container>\r\n\r\n\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header >\r\n                        <span *ngIf=\"!statusSearch\"  class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span> \r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\"  class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"\r\n                        [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <!-- <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef  >\r\n                        <span class=\"custom_font_size\">Action</span> \r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"View\"\r\n                        (click)=\"viewDialog('VIEW',element)\"\r\n                        style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        \r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" \r\n                        (click)=\"openDialog('EDIT',element)\" \r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon  color=\"warn\"  matTooltip=\"Remove\"  \r\n                        (click)=\"delete(element.id)\" \r\n                        style=\"cursor:pointer\">delete</mat-icon>\r\n                    </td>\r\n                </ng-container> -->\r\n                \r\n                <!-- <tr mat-header-row  *matHeaderRowDef=\"['lable_code','lable_name', 'lable_charger_type','lable_manufacturer','lable_status','lable_Active']\"></tr> -->\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n               \r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {  FormControl, FormArray } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface ChargingModel {\r\n  id ?: number;\r\n  client_id ?: number;\r\n  charger_type_id : number;\r\n  client_name ?: string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name ?: string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name ?: string;\r\n  battery_backup : string;\r\n  code : string;\r\n  name : string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name ?: string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  connector_data : ChargingModelConnectorMap[];\r\n  status : string ;\r\n  created_date ?: string ;\r\n  created_by ?: number;\r\n  modify_date ?: string ;\r\n  modify_by ?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap{\r\n  id : number;\r\n  model_id : number;\r\n  connector_type_id : number;\r\n  io_type_id : number;\r\n  current_type_id : number;\r\n  voltage : number;\r\n  phase : number;\r\n  max_amp : number;\r\n  power : number;\r\n  frequency : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  \r\n  chargerTypes :any;\r\n  manufacturers:any;\r\n  chargerModelTypes:any;\r\n  communicationProtocols:any;\r\n  connectorTypes:any;\r\n  ioTypes:any;\r\n  currentTypes:any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  filteredOptionsCharType: Observable<any[]>;\r\n  filteredOptionsManufacturer: Observable<any[]>;\r\n  filteredOptionsCharModelType : Observable<any[]>;\r\n  filteredOptionsCommunicationProto: Observable<any[]>;\r\n  communicationModeData: string[] = ['LAN', 'SIM', 'WIFI'];\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerTypeService: ChargerTypeService, \r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<ViewDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private chargingModelService : ChargingModelService, \r\n     private masterService: MasterService,\r\n    private router : Router) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      chargerType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      manufacturer: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      chargerModelType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      batteryBackup: [{value:false},  [Validators.required]],\r\n      code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      communicationProtocol: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      communicationMode: ['', [Validators.required]],\r\n      cardReaderType: ['', [Validators.required]],\r\n      noOfConnectors: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n      connectorForm : this.fb.array([this.createConnectorFG()]) ,\r\n    });\r\n\r\n    this.getChargetTypes();\r\n    this.getManufacturers();\r\n    this.getChargerModelTypes();\r\n    this.getCommunicationProtocols();\r\n    this.getConnectorTypes();\r\n    this.getIOTypes();\r\n    this.getCurrentTypes();   \r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n   this.filteredOptions();\r\n  }\r\n\r\n  private createConnectorFG(): FormGroup {\r\n    return new FormGroup({\r\n      connectorType: new FormControl(''),\r\n      ioType: new FormControl(''),\r\n      currentType: new FormControl('',),\r\n      voltage: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      phase: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      maxAmp: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      power: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      frequency: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)])\r\n    });\r\n  }\r\n\r\n  public addConnectorFG() {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    connectorForm.push(this.createConnectorFG());\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  public removeConnectorFG(i: number) {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    if (connectorForm.length > 1) {\r\n      connectorForm.removeAt(i)\r\n    } else {\r\n      connectorForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  getChargetTypes(){\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerTypes = data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerTypes.find(c => c.id == this.params.data.charger_type_id);\r\n          this.form.get('chargerType').setValue(toSelect);\r\n         this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n            //tap(() => this.form.controls.chargerType.setValue(toSelect)),\r\n           //tap(() => this.form.get('chargerType').setValue({name:toSelect.name, id:toSelect.id})),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n         \r\n         );\r\n        }\r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getManufacturers(){\r\n    this.masterService.getManufacturers().subscribe(\r\n      (data:any)=>{\r\n        this.manufacturers = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n          this.form.get('manufacturer').setValue(toSelect);\r\n          this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n           // tap(() => this.form.controls.manufacturer.setValue(toSelect)),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n          );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getChargerModelTypes(){\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerModelTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerModelTypes.find(c => c.id == this.params.data.charger_model_type_id);\r\n         this.form.get('chargerModelType').setValue(toSelect);\r\n         this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n           //tap(() => this.form.controls.chargerModelType.setValue(toSelect)),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n         );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCommunicationProtocols(){\r\n    this.masterService.getCommunicationProtocols().subscribe(\r\n      (data:any)=>{\r\n        this.communicationProtocols = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.communicationProtocols.find(c => c.id == this.params.data.communication_protocol_id);\r\n          this.form.get('communicationProtocol').setValue(toSelect);\r\n          this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.communicationProtocol.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n        );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getIOTypes(){\r\n    this.masterService.getIOTypes().subscribe(\r\n      (data:any)=>{\r\n        this.ioTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCurrentTypes(){\r\n    this.masterService.getCurrentTypes().subscribe(\r\n      (data:any)=>{\r\n        this.currentTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let connectors=[] ;\r\n  \r\n      formValues.connectorForm.forEach(item => {\r\n        connectors.push({\r\n          connector_type_id : item.connectorType ,\r\n          io_type_id : item.ioType,\r\n          current_type_id : item.currentType,\r\n          voltage : item.voltage ,\r\n          phase : item.phase,\r\n          max_amp : item.maxAmp,\r\n          power : item.power,\r\n          frequency : item.frequency,\r\n          status : 'Y',\r\n          created_by : this.localStorage.userId \r\n        })\r\n      });\r\n  \r\n      \r\n      let params : ChargingModel = {\r\n        charger_type_id : formValues.chargerType.id,\r\n        manufacturer_id : formValues.manufacturer.id ,\r\n        charger_model_type_id : formValues.chargerModelType.id ,\r\n        battery_backup  : this.batteryBackup == true ? 'Y' : 'N',\r\n        code : formValues.code ,\r\n        name : formValues.name ,\r\n        description : formValues.description ,\r\n        communication_protocol_id : formValues.communicationProtocol.id ,\r\n        communication_mode : formValues.communicationMode ,\r\n        card_reader_type : formValues.cardReaderType ,\r\n        no_of_connectors : formValues.connectorForm.length ,\r\n        connector_data : connectors,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n  \r\n      if (this.isEditMode){\r\n        params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n      } else{\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      \r\n  \r\n      if (this.isEditMode){\r\n        this.chargingModelService.update(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }else{\r\n        this.chargingModelService.create(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n        this.dialogRef.close(params);\r\n    }\r\n   \r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    var temp = new Array();\r\n    temp = this.params.data.communication_mode.split(\",\");\r\n\r\n    this.form.get('communicationMode').setValue(temp);\r\n    this.form.get('cardReaderType').setValue(params.data.card_reader_type);\r\n    this.form.get('noOfConnectors').setValue(params.data.no_of_connectors);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.batteryBackup = params.data.battery_backup == 'Y' ? true : false;\r\n\r\n    this.assignValuesFG(params.data.connector_data);\r\n  }\r\n\r\n  assignValuesFG(data){\r\n\r\n    let connector_data = [];\r\n\r\n    data.forEach(connector => {\r\n      this.addConnectorFG();\r\n      connector_data.push({ id : connector.id ,\r\n        model_id : connector.model_id ,\r\n        connectorType : connector.connector_type_id ,\r\n        ioType : connector.io_type_id ,\r\n        currentType : connector.current_type_id ,\r\n        voltage : connector.voltage ,\r\n        phase : connector.phase ,\r\n        maxAmp : connector.max_amp ,\r\n        power : connector.power ,\r\n        frequency : connector.frequency ,\r\n        status : connector.status ,\r\n        created_date : connector.created_date ,\r\n        created_by : connector.created_by ,\r\n        modify_date : connector.modify_date ,\r\n        modify_by : connector.modify_by })\r\n    });\r\n    \r\n   this.removeConnectorFG(data.length);\r\n\r\n   const connectorForm = this.form.get('connectorForm') as FormArray;\r\n\r\n   connectorForm.patchValue(connector_data);\r\n\r\n\r\n  }\r\n\r\n  clkBatteryBackup(event){\r\n    this.batteryBackup = event.checked;\r\n    this.ref.checked = this.batteryBackup;\r\n  }\r\n  clkRfidCardReader(event){\r\n    this.rfidCardReader = event.checked;\r\n    this.rfid.checked = this.rfidCardReader;\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  \r\n  filteredOptions(){\r\n    this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n    );\r\n    this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n     \r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n    );\r\n    this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n    );\r\n    this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n      );\r\n  }\r\n  displayCharType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayManfacturer(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharModelType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCommunicationProto(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }  \r\n  private _filterCharType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterManfacturer(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.manufacturers.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModelType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCommunicationProtocol(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.communicationProtocols.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">Variants</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"chargerType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"manufacturer\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\" [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" readonly matInput formControlName=\"chargerModelType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"code\" maxlength=\"20\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"50\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"description\" maxlength=\"200\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput readonly formControlName=\"communicationProtocol\" required\r\n\t\t\t\t\t\tautocomplete=\"off\" [matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"\r\n\t\t\t\t\t\t[displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t\t<mat-select formControlName=\"communicationMode\" disabled multiple>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">\r\n\t\t\t\t\t\t\t{{communication}}</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" readonly formControlName=\"cardReaderType\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cardReaderType').invalid\">Please enter card reader type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>No Of Connectors</mat-label>\r\n\t\t\t\t\t<input matInput numbersOnly readonly placeholder=\"\" formControlName=\"noOfConnectors\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter numbers of connectors\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle disabled class=\"example-margin sm-txt mt-10\" color=\"primary\"\r\n\t\t\t\t\t\t[checked]=\"batteryBackup\" (change)=\"clkBatteryBackup($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"17\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">RFID Card Reader</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle disabled class=\"example-margin sm-txt mt-10\" color=\"primary\"\r\n\t\t\t\t\t\t[checked]=\"rfidCardReader\" (change)=\"clkRfidCardReader($event)\" #rfidToggleElement>\r\n\t\t\t\t\t\t{{rfidCardReader ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"18\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<mat-card style=\"box-shadow: none!important;\">\r\n\t\t\t\t<div formArrayName=\"connectorForm\">\r\n\t\t\t\t\t<div fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\"\r\n\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select disabled formControlName=\"connectorType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select disabled formControlName=\"ioType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select disabled formControlName=\"currentType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly formControlName=\"voltage\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Phase</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"phase\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Max Amp(A)</mat-label>\r\n\t\t\t\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"maxAmp\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput readonly placeholder=\"\" formControlName=\"power\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t\t\t\t<input readonly matInput placeholder=\"\" formControlName=\"frequency\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<!-- <div class=\"add-row\">\r\n              <mat-label class=\"sm-txt\">Add Row</mat-label>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\" aria-label=\"Add\"\r\n                (click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n              <mat-icon>add_circle</mat-icon>\r\n              </button>\r\n              <button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\" aria-label=\"Remove/clear\"\r\n                (click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n              <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div> -->\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</mat-card>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { jsPDF } from 'jspdf';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport 'jspdf-autotable';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nexport class BookingModel {\r\n  id: number;\r\n  booking_number: number;\r\n  username: string;\r\n  mobile: number;\r\n  registration_no: string;\r\n  booking_date: number;\r\n  booking_date_string: string;\r\n  start_time: string;\r\n  end_time: string;\r\n  booking_status_description: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list-approved',\r\n  templateUrl: './list-approved.component.html',\r\n  styleUrls: ['./list-approved.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ListApprovedComponent implements OnInit {\r\n  filterEntity: BookingModel;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['select', 'booking_number', 'username', 'mobile', 'registration_no', 'booking_date', 'start_time', 'end_time', 'booking_status_description'];\r\n  head = [['Booking Number', 'Username', 'Mobile', 'Registration Number', 'Booking Date', 'Start Time', 'End Time', 'Booking Status']];\r\n  dataSource: MatTableDataSource<BookingModel>;\r\n  selection = new SelectionModel<BookingModel>(true, []);\r\n  bookingModels: BookingModel[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  dialogRef: any;\r\n  bookingNumberSearch = false;\r\n  userNameSearch = false;\r\n  mobileSearch = false;\r\n  registrationSearch = false;\r\n  bookingDateSearch = false;\r\n  startTimeSearch = false;\r\n  endTimeSearch = false;\r\n  bookingStatusSearch = false;\r\n  localStorage: any;\r\n  exportedData: any[];\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n\r\n  form: FormGroup;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(private bookingService: BookingService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef, public datepipe: DatePipe, private fb: FormBuilder) {\r\n    this.form = this.fb.group({\r\n      charClient: [''],\r\n      charCPO: [''],\r\n      charStat: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'));\r\n    //this.getBookingModels();\r\n    this.filterEntity = new BookingModel();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getBookingModels() {\r\n    let formValues = this.form.value;\r\n    let params = {\r\n      status: \"P\",\r\n      station_id: formValues.charStat.station_id,\r\n      f_date: \"\",\r\n      t_date: \"\",\r\n      user_id: this.localStorage.userId,\r\n    }\r\n    this.bookingService.getallbookingscw(params).subscribe(\r\n      (resp: any) => {\r\n        //;\r\n        if (resp != null) {\r\n          this.bookingModels = resp.data;\r\n\r\n          for (var i = 0; i < this.bookingModels.length; i++) {\r\n            this.bookingModels[i].booking_date_string = this.datepipe.transform(this.bookingModels[i].booking_date, 'dd/MM/yyyy hh:mm:ss');\r\n\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.bookingModels);\r\n\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'bookingNumberSearch') {\r\n      this.bookingNumberSearch = !this.bookingNumberSearch;\r\n      this.filterEntity.booking_number = null;\r\n    }\r\n    if (visibleOption == 'userNameSearch') {\r\n      this.userNameSearch = !this.userNameSearch;\r\n      this.filterEntity.username = \"\";\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = null;\r\n    }\r\n    if (visibleOption == 'registrationSearch') {\r\n      this.registrationSearch = !this.registrationSearch;\r\n      this.filterEntity.registration_no = \"\";\r\n    }\r\n    if (visibleOption == 'bookingDateSearch') {\r\n      this.bookingDateSearch = !this.bookingDateSearch;\r\n      this.filterEntity.booking_date_string = \"\";\r\n    }\r\n    if (visibleOption == 'startTimeSearch') {\r\n      this.startTimeSearch = !this.startTimeSearch;\r\n      this.filterEntity.start_time = \"\";\r\n    }\r\n    if (visibleOption == 'endTimeSearch') {\r\n      this.endTimeSearch = !this.endTimeSearch;\r\n      this.filterEntity.end_time = \"\";\r\n    }\r\n    if (visibleOption == 'bookingStatusSearch') {\r\n      this.bookingStatusSearch = !this.bookingStatusSearch;\r\n      this.filterEntity.booking_status_description = \"\";\r\n    }\r\n\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var bookingModel = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Booking Number': bookingModel.booking_number, 'User Name ': bookingModel.username, 'Mobile': bookingModel.mobile,\r\n        'Registration Number': bookingModel.registration_no, 'Booking Date ': bookingModel.booking_date_string,\r\n        'Start Time': bookingModel.start_time, 'End Time': bookingModel.end_time,\r\n        'Booking Status': bookingModel.booking_status_description\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Booking.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      var data = [chrger.booking_number, chrger.username, chrger.mobile, chrger.registration_no, chrger.booking_date_string, chrger.start_time, chrger.end_time, chrger.booking_status_description];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Booking Approved Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Booking Approved report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n  bookingSelection() {\r\n    this.selection.selected.forEach(s => console.log(s.booking_number));\r\n  }\r\n  approveBookings() {\r\n    const booking_id = this.selection.selected.map(v => (v.booking_number));\r\n    let formValues = this.form.value;\r\n    let param = {\r\n\r\n      \"action\": \"A\",\r\n      \"booking_id\": booking_id,\r\n      \"station_id\": formValues.charStat.id,\r\n      \"modified_by\": this.localStorage.userId,\r\n    }\r\n    this.bookingService.ackBookingCW(param).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n\r\n          this.getBookingModels();\r\n          this.snackBar.open(MessageConstant.bookingApproved, 'Dismiss', { duration: 5000 });\r\n        }\r\n        else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n\r\n    }\r\n  }\r\n  onClientChange(client_id) {\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    if (this.localStorage.role_code != \"END\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        const toSelect = this.cpoList.length == 1 ? this.cpoList[0] : this.cpoList[1];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    }\r\n  }\r\n  onCPOChange(event) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n    //this.getChargerbyCPO(event);\r\n    // this.getOCPPTag(event);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    this.station = [];\r\n\r\n    if (this.localStorage.role_code != \"END\") {\r\n      for (var i = 0; i < this.stationList.length; i++) {\r\n        if (id == this.stationList[i].cpo_id) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n        if (id == -1) {\r\n          this.station.push(this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined && this.station.length > 0) {\r\n        const toSelect = this.station[0];\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getBookingModels();\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    }\r\n  }\r\n  onStationChange(event) {\r\n    this.getBookingModels();\r\n  }\r\n\r\n  displayCharClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n\r\n  private _filterCharClient(name: string): any[] {\r\n    this.form.get('charCPO').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterCharCPO(name: string): any[] {\r\n    this.form.get('charStat').setValue('');\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n","\r\n    <div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n        <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n            <mat-icon>sim_card_download</mat-icon> \r\n          </button>&nbsp;&nbsp;\r\n          <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n            <mat-icon>picture_as_pdf</mat-icon> \r\n          </button>&nbsp;&nbsp;\r\n          <button mat-mini-fab  color=\"primary\" (click)=\"approveBookings()\"  matTooltip=\"Approve Booking\">\r\n            <mat-icon>task</mat-icon> \r\n          </button>\r\n        <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n    </div>\r\n    <mat-card style=\"padding:16px  !important; display:none;\" *ngIf=\"localStorage.role_code != 'END' \">\r\n        <mat-card-content>\r\n            <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select Client</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n                        <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                            (optionSelected)='onClientChange($event.option.value.client_id)' >\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                                {{option.client_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                            Please select client \r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select CPO's</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n                        <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                            (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                                {{option.cpo_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                            Please select CPO\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select Charging Station</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\" readonly>\r\n                        <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                            (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                                {{option.station_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                            Please select charging station\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <!-- <div   fxFlex=\"10\" class=\" example-button-container pr-4 mb-16\">\r\n                            <button mat-mini-fab color=\"warn\" (click)=\"getAllCharger()\">\r\n                                <mat-icon>restart_alt</mat-icon>\r\n                            </button>\r\n                          </div> -->\r\n\r\n                </div>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n            <div class=\"mat-elevation-z8\">\r\n                <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                    [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                    <ng-container matColumnDef=\"select\">\r\n                        <th mat-header-cell *matHeaderCellDef > \r\n                          <mat-checkbox (change)=\"$event ? masterToggle() : null\" style=\"width: 40px;\"\r\n                                        [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n                          </mat-checkbox>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                          <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                        (change)=\"$event ? selection.toggle(row) : null\"\r\n                                        [checked]=\"selection.isSelected(row)\">\r\n                          </mat-checkbox>\r\n                        </td>\r\n                      </ng-container>\r\n                    \r\n                    <ng-container matColumnDef=\"booking_number\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!bookingNumberSearch\" class=\"custom_font_size\" style=\"display: flex;\">Booking\r\n                                Number &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('bookingNumberSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"bookingNumberSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Booking Number\" [(ngModel)]=\"filterEntity.code\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('bookingNumberSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.booking_number}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"username\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!userNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"userNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.username\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"mobile\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Moblie\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"registration_no\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!registrationSearch\" class=\"custom_font_size\"\r\n                                style=\"display: flex;\">Registration Number &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('registrationSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"registrationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Registration Number\"\r\n                                    [(ngModel)]=\"filterEntity.registration_no\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('registrationSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.registration_no}} </td>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"booking_date\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!bookingDateSearch\" class=\"custom_font_size\" style=\"display: flex;\">Booking\r\n                                Date &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('bookingDateSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"bookingDateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Booking Date\"\r\n                                    [(ngModel)]=\"filterEntity.booking_date_string\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('bookingDateSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.booking_date_string}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"start_time\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!startTimeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Start Time\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('startTimeSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"startTimeSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Start Time\" [(ngModel)]=\"filterEntity.start_time\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('startTimeSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.start_time}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"end_time\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!endTimeSearch\" class=\"custom_font_size\" style=\"display: flex;\">End Time\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('endTimeSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"End Time\" [(ngModel)]=\"filterEntity.end_time\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('endTimeSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.end_time}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"booking_status_description\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!bookingStatusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Booking\r\n                                Status &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('bookingStatusSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"bookingStatusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Booking Status\"\r\n                                    [(ngModel)]=\"filterEntity.booking_status_description\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('bookingStatusSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.booking_status_description}} </td>\r\n                    </ng-container>\r\n\r\n\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                            {{row.statusString}} </td>\r\n                    </ng-container>\r\n                   \r\n\r\n                    \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                    <!-- Row shown when there is no matching data. -->\r\n\r\n                </table>\r\n\r\n                <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-booking-crud',\r\n  templateUrl: './booking-crud.component.html',\r\n  styleUrls: ['./booking-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class BookingCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    //   { label: 'Booking Details', link: 'list' },\r\n    // { label: 'Pending Bookings', link: 'pendingBookings' },\r\n    //   { label: 'Add New Booking', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"bookingManagement\") {\r\n        this.objectData = x;\r\n\r\n        if(this.objectData.children != null && this.objectData.children!= undefined){\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              if(this.objectChildData.children != null && this.objectChildData != undefined){\r\n                let isDefaultRoutePermeted = false;\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"bookingDetails\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Booking Details', link: 'list' });\r\n                  }\r\n                  if (z.id === \"pendingBookings\") {\r\n                    this.tempLinks.push({ label: 'Pending Bookings', link: 'pendingBookings' });\r\n                  }\r\n                  if (z.id === \"addNewBooking\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n                this.tabLinks = this.tempLinks;\r\n                if (!isDefaultRoutePermeted) {\r\n                  this.router.navigate(['/bookingManagement/crud/' + this.tempLinks[0].link]);\r\n                }\r\n                }\r\n              }\r\n             \r\n          });\r\n        }\r\n        \r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}} \r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\nimport {ListApprovedComponent} from '../list-approved/list-approved.component'\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent, canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent, canActivate:[AuthGuard] },\r\n\t  {path: 'pendingBookings',component:ListApprovedComponent},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl, FormControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Subject } from 'rxjs';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { FuseConfigService } from '@fuse/services/config.service';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-registerUser-dialog',\r\n  templateUrl: './registerUser-dialog.component.html',\r\n  styleUrls: ['./registerUser-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class RegisterUserDialogComponent implements OnInit {\r\n\r\n  \r\n  registerForm: FormGroup;\r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  logs:any;\r\n  validateOTP:boolean= false;\r\n  hideDetail:boolean= true;\r\n  // Private\r\n  isErrorMessage = false;\r\n  errorMessage = \"\";\r\n  isSuccessMessage = false;\r\n  successMessage =\"\";\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  connector_types:any;\r\n  localStorage : any;\r\n  filteredOptionsbrands: Observable<any[]>;\r\n  filteredOptionsModel: Observable<any[]>;\r\n  filteredOptionsCurrType: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg:String;\r\n  splitted:String;\r\n\r\n  otpForm: FormGroup;\r\n  selectedIndex = 0;\r\n  isFirstTab = true;\r\n  isSecondTab = true;\r\n \r\n  constructor(\r\n    public dialogRef: MatDialogRef<RegisterUserDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private accountService: AccountService,\r\n     private _formBuilder: FormBuilder,private router : Router,private masterService : MasterService,\r\n     private vehicleService : VehicleService,private snackBar: MatSnackBar) {}\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this._formBuilder.group({\r\n      f_name: ['', [Validators.required]],\r\n      l_name: ['', [Validators.required]],\r\n      username: ['', [Validators.required]],\r\n      email: ['', [Validators.required]],\r\n      MobNo: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['',],\r\n      password: ['', [Validators.required]],\r\n      confirmPassword: ['', [this.confirmValidator]],\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp :['']\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n  initialize(){\r\n    ////\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.form = this._formBuilder.group({\r\n      brand: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      model: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      connector_type : ['', [autocompleteObjectValidator(),Validators.required]],\r\n      registration: ['', [Validators.required,\r\n        Validators.minLength(8),Validators.maxLength(100),\r\n        Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      yearOfManufacture: ['', [Validators.required]],\r\n      engineNumber: ['', [ Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      chassisNumber: ['', [ Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      VINnumber: [''],\r\n      status : this.status == true ? 'Y' : 'N'   \r\n      // vehicle: ['', [Validators.required]],\r\n      // manufacturer: ['', [Validators.required]],\r\n      \r\n    });\r\n\r\n    this.getBrands();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.registerForm.controls.password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType(){\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType(){\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  public resolved(captchaResponse: string) {\r\n  }\r\n  register(){\r\n    this.selectedIndex = 1;\r\n    let formValues = this.registerForm.value;\r\n    let params = {\r\n      f_name:formValues.f_name, \r\n      l_name:formValues.l_name,\r\n      username : formValues.username ,\r\n      password : formValues.confirmPassword ,\r\n      mobile :   formValues.MobNo ,\r\n      alt_mobile : \"1234567890\" ,\r\n      email : formValues.email,\r\n      device_id : \"qwertyuiop\",\r\n      app_version : \"9876543wsdfghnm\",\r\n      os_version : \"10\",\r\n      user_type : \"END\" ,\r\n      can_expire :\"Y\",\r\n      is_verified : \"N\" ,\r\n      registration_origin : \"WEB\" ,\r\n      status : \"Y\" ,\r\n      created_by   : 1\r\n     \r\n    }\r\n     //\r\n      this.accountService.register(params).subscribe((res:any)=>{\r\n        //\r\n       \r\n        if(res.status == true){\r\n          this.successMessage = MessageConstant.userOTPSend;\r\n          this.isSuccessMessage = true;\r\n          this.isFirstTab = false;\r\n          setTimeout(() => {                           //<<<---using ()=> syntax\r\n          this.isSuccessMessage = false;\r\n        }, 3000);\r\n          //this.snackBar.open(MessageConstant.userOTPSend, 'Dismiss', { duration: 3000 });\r\n          this.hideDetail = false;\r\n          this.validateOTP = true;\r\n        }else{\r\n          this.errorMessage = MessageConstant.dublicateRegistrationMessage;\r\n          this.isErrorMessage = true;\r\n          setTimeout(() => {                           //<<<---using ()=> syntax\r\n          this.isErrorMessage = false;\r\n        }, 3000);\r\n          //this.snackBar.open(MessageConstant.dublicateRegistrationMessage, 'Dismiss', { duration: 3000 });\r\n        }\r\n        \r\n       },(err)=>{\r\n        this.errorMessage = MessageConstant.errorMessage;\r\n        this.isErrorMessage = true;\r\n        setTimeout(() => {                           //<<<---using ()=> syntax\r\n        this.isErrorMessage = false;\r\n      }, 3000);\r\n        //this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n       this.router.navigateByUrl('/register');   \r\n    })\r\n  }\r\n  vaidateOTP(){\r\n    let formValues = this.otpForm.value;\r\n    let params = {\r\n      username : formValues.username ,\r\n      mobile :   formValues.MobNo ,\r\n      email : formValues.email,\r\n      otp: formValues.otp\r\n     \r\n    }\r\n    this.accountService.verifyUserNew(params).subscribe((res:any)=>{\r\n      this.logs = res;\r\n      //this.router.navigateByUrl('/login'); \r\n      this.successMessage = MessageConstant.userRegisterdMessage;\r\n      this.isSuccessMessage = true;\r\n      this.isSecondTab = false;\r\n      setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.isSuccessMessage = false;\r\n    }, 3000);\r\n        //this.snackBar.open(MessageConstant.userRegisterdMessage, 'Dismiss', { duration: 3000 });\r\n     },(err)=>{\r\n      this.errorMessage = MessageConstant.errorMessage;\r\n      this.isErrorMessage = true;\r\n      setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.isErrorMessage = false;\r\n    }, 3000);\r\n      //this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n     this.router.navigateByUrl('/register');   \r\n  })\r\n  }\r\n  resendOTP(){\r\n    let formValues = this.otpForm.value;\r\n    let params = {\r\n      mobile :   formValues.MobNo ,\r\n      email : formValues.email,\r\n      username:formValues.username,\r\n      id:null,\r\n      otp_purpose : \"REGISTER\" \r\n    }\r\n    this.accountService.getotpNew(params).subscribe((res:any)=>{\r\n      this.logs = res;\r\n      this.successMessage = MessageConstant.getOTPMessage;\r\n      this.isSuccessMessage = true;\r\n      setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.isSuccessMessage = false;\r\n      }, 3000);\r\n        //this.snackBar.open(MessageConstant.getOTPMessage, 'Dismiss', { duration: 3000 });\r\n     },(err)=>{\r\n      this.errorMessage = MessageConstant.errorMessage;\r\n      this.isErrorMessage = true;\r\n      setTimeout(() => {                           //<<<---using ()=> syntax\r\n      this.isErrorMessage = false;\r\n    }, 3000);\r\n      //this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n      this.router.navigateByUrl('/register');   \r\n  })\r\n  }\r\n\r\n  getBrands(){\r\n    this.masterService.getBrands().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.brands = data;\r\n        \r\n        this.filteredOptionsbrands = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterbrands(name) : this.brands)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getModelsByBrand(id){\r\n    this.models=[];\r\n    this.connector_types=[];\r\n    this.masterService.getModelsByBrand(id).subscribe(\r\n      (data:any)=>{\r\n        this.models = data;\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getConnectorTypeByModel(id){\r\n    this.connector_types=[];\r\n    this.masterService.getPublishedConnectorTypeByModel(id).subscribe(\r\n      (data:any)=>{\r\n        this.connector_types = data;\r\n        this.filteredOptionsCurrType = this.form.controls.connector_type.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterConnType(name) : this.connector_types)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  onBrandChange(event){\r\n    this.getModelsByBrand(event);\r\n    this.form.get('model').setValue('');\r\n  }\r\n  onModelChange(event){\r\n    this.getConnectorTypeByModel(event);\r\n  }\r\n  onConnectorTypeChange(event){\r\n    ////\r\n    // this.getConnectorTypeByModel(event.value);\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let params = {\r\n          brand_id : formValues.brand.id,\r\n          model_id : formValues.model.id,\r\n          connector_type_id : formValues.connector_type.ct_id,\r\n          registration_no : formValues.registration,\r\n          year_of_manufacture : formValues.yearOfManufacture,\r\n          engine_no : formValues.engineNumber,\r\n          chassis_no : formValues.chassisNumber,\r\n          vin_no : formValues.VINnumber,\r\n          status :  this.status == true ? 'Y' : 'N', \r\n          created_by : this.localStorage.userId\r\n      }\r\n      this.vehicleService.register(params).subscribe(\r\n        (resp:any )=>{\r\n          ////\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.vehicleCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/booking/crud/create']);\r\n          }else{\r\n            if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = resp.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n              \r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'registration_no'\" ){\r\n                this.snackBar.open(MessageConstant.registrationDuplicateVehicle, 'Dismiss', { duration: 5000 });\r\n              } if(this.splitted == \"'engine_no'\" ){\r\n                this.snackBar.open(MessageConstant.engineDuplicateVehicle, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'chassis_no'\" ){\r\n                this.snackBar.open(MessageConstant.chassisDuplicateVehicle, 'Dismiss', { duration: 5000 });\r\n              }\r\n\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(MessageConstant.errorMessage,'Dismiss', { duration: 5000 })\r\n          }\r\n  \r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n    else{\r\n      return;\r\n    }\r\n  }\r\n  onTabChange(event) {\r\n    this.selectedIndex = event.index;\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  displayBrands(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayModels(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCurrentType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterbrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.models.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterConnType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connector_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n    style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n<mat-toolbar class=\"action_toolbar\">End User Register</mat-toolbar>\r\n<mat-tab-group dynamicHeight [selectedIndex]=\"selectedIndex\" (selectedTabChange)=\"onTabChange($event)\" class=\"pt-0 pb-0 mt-0 mb-0\">\r\n    <mat-tab label=\"New User Register\">\r\n        <div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n            <div id=\"registerForm\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n                <form [formGroup]=\"registerForm\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n                    fxFlex=\"1 0 auto\" name=\"registerForm\">\r\n                    <div *ngIf=\"hideDetail\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n                        fxLayoutGap=\"8px grid\">\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                                <mat-label>First Name</mat-label>\r\n                                <input matInput placeholder=\"\" formControlName=\"f_name\" required>\r\n                                <mat-icon style=\"color:#1c5483 !important\" matSuffix>person</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('f_name').invalid\">Please enter first name\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                                <mat-label>Last Name</mat-label>\r\n                                <input matInput placeholder=\"\" formControlName=\"l_name\" required>\r\n                                <mat-icon style=\"color:#1c5483 !important\" matSuffix>person</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('l_name').invalid\">Please enter last name</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" class=\"pr-4\" fxFlex=\"50\">\r\n                                <mat-label>Username</mat-label>\r\n                                <input matInput placeholder=\"\" formControlName=\"username\" required\r\n                                    style=\"text-transform: none;\">\r\n                                <mat-icon style=\"color:#1c5483 !important\" matSuffix>account_circle</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('username').invalid\">Please enter name</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" class=\"pr-4\" fxFlex=\"50\">\r\n                                <mat-label>Email</mat-label>\r\n                                <input matInput placeholder=\"\" formControlName=\"email\" required\r\n                                    style=\"text-transform: none;\">\r\n                                <mat-icon style=\"color:#1c5483 !important\" matSuffix>email</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('email').invalid\">Please enter email</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" class=\"pr-4\" fxFlex=\"50\">\r\n                                <mat-label>Mobile No</mat-label>\r\n                                <input matInput placeholder=\"\" type=\"number\" formControlName=\"MobNo\" required>\r\n                                <mat-icon style=\"color:#1c5483 !important\" matSuffix>smartphone</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('MobNo').hasError('required')\">Mobile Number is\r\n                                    Required\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"registerForm.get('MobNo').hasError('pattern')\">Mobile number must be\r\n                                    10 digit\r\n                                </mat-error>\r\n\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"outline\" class=\"pr-4\" fxFlex=\"50\">\r\n                                <mat-label>Alternate Mobile Number</mat-label>\r\n                                <input matInput placeholder=\"\" type=\"number\" formControlName=\"u_altmobile\">\r\n                                <mat-error *ngIf=\"registerForm.get('u_altmobile').invalid\">Please enter alternate mobile\r\n                                    no\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <mat-form-field appearance=\"outline\" class=\"pr-4\" fxFlex=\"50\">\r\n                                <mat-label>Password</mat-label>\r\n                                <input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\"\r\n                                    formControlName=\"password\" required style=\"text-transform: none;\">\r\n                                <mat-icon (click)=\"togglePasswordFieldType()\" style=\"color:#1c5483 !important\"\r\n                                    matSuffix>\r\n                                    {{isPasswordFieldType ? 'visibility_off' :\r\n                                    'visibility'}}</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('password').invalid\">Please enter password\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"outline\" class=\"pr-4\" fxFlex=\"50\">\r\n                                <mat-label>Confirm Password</mat-label>\r\n                                <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n                                    formControlName=\"confirmPassword\" required style=\"text-transform: none;\">\r\n                                <mat-icon (click)=\"togglePasswordConfirmFieldType()\" style=\"color:#1c5483 !important\"\r\n                                    matSuffix>\r\n                                    {{isPasswordConfirmFieldType ?\r\n                                    'visibility_off' : 'visibility'}}</mat-icon>\r\n                                <mat-error *ngIf=\"registerForm.get('confirmPassword').hasError('required')\">Please\r\n                                    confirm\r\n                                    your password!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"registerForm.get('confirmPassword').hasError('confirm')\">Password is\r\n                                    inconsistent!\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                            <div fxFlex=\"100\">\r\n                                <button mat-raised-button class=\"submit-button\" color=\"accent\" mat-raised-button\r\n                                    color=\"primary\" [disabled]=\"registerForm.invalid\" (click)=\"register()\">Proceed\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"remember-forgot-password\" *ngIf=\"isSuccessMessage\" fxLayout=\"row\"\r\n                            fxLayout.xs=\"column\" fxLayoutAlign=\"space-between center\">\r\n                            <mat-error style=\"color:white\"> <b> {{successMessage}}</b></mat-error>\r\n                        </div>\r\n                        <div class=\"remember-forgot-password\" *ngIf=\"isErrorMessage\" fxLayout=\"row\" fxLayout.xs=\"column\"\r\n                            fxLayoutAlign=\"space-between center\">\r\n                            <mat-error> <b> {{errorMessage}}</b></mat-error>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div *ngIf=\"validateOTP\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n                        fxLayoutGap=\"8px grid\">\r\n                        <div>\r\n                            <mat-form-field appearance=\"outline\" fxFlex=\"100\">\r\n                                <mat-label>OTP</mat-label>\r\n                                <input matInput formControlName=\"otp\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"text-align:end\">\r\n                            <span><a style=\"font-size:14px;cursor: pointer;text-decoration: underline;\"\r\n                                    (click)=\"resendOTP()\">Resend\r\n                                    OTP</a></span>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"100\" fxFlex.lt-sm=\"100\">\r\n                            <button mat-raised-button class=\"submit-button\" color=\"accent\" mat-raised-button\r\n                                color=\"primary\" (click)=\"vaidateOTP()\">Validate OTP</button>\r\n                        </div>\r\n                        <div class=\"remember-forgot-password\" *ngIf=\"isSuccessMessage\" fxLayout=\"row\"\r\n                            fxLayout.xs=\"column\" fxLayoutAlign=\"space-between center\">\r\n                            <mat-error style=\"color:white\"> <b> {{successMessage}}</b></mat-error>\r\n                        </div>\r\n                        <div class=\"remember-forgot-password\" *ngIf=\"isErrorMessage\" fxLayout=\"row\" fxLayout.xs=\"column\"\r\n                            fxLayoutAlign=\"space-between center\">\r\n                            <mat-error> <b> {{errorMessage}}</b></mat-error>\r\n                        </div>\r\n                    </div> -->\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    </mat-tab>\r\n    <mat-tab label=\"Verification\"  [disabled]='isFirstTab'>\r\n        <div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n            <div id=\"otpForm\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n                <form [formGroup]=\"otpForm\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"otpForm\">\r\n                    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n                        <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n                          <mat-form-field appearance=\"outline\"fxFlex=\"50\">\r\n                            <mat-label>OTP</mat-label>\r\n                            <input matInput formControlName=\"otp\">\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"text-align:end\">\r\n                          <span><a style=\"font-size:14px;cursor: pointer;text-decoration: underline;\" (click)=\"resendOTP()\">Resend\r\n                              OTP</a></span>\r\n                        </div>\r\n              \r\n                        <div fxFlex=\"100\" fxFlex.lt-sm=\"100\">\r\n                          <button mat-raised-button class=\"submit-button\" color=\"accent\" mat-raised-button color=\"primary\"\r\n                            (click)=\"vaidateOTP()\">Validate OTP</button>\r\n                        </div>\r\n                        <div class=\"remember-forgot-password\" *ngIf=\"isSuccessMessage\" fxLayout=\"row\" fxLayout.xs=\"column\"\r\n                          fxLayoutAlign=\"space-between center\">\r\n                          <mat-error style=\"color:white\"> <b> {{successMessage}}</b></mat-error>\r\n                        </div>\r\n                        <div class=\"remember-forgot-password\" *ngIf=\"isErrorMessage\" fxLayout=\"row\" fxLayout.xs=\"column\"\r\n                          fxLayoutAlign=\"space-between center\">\r\n                          <mat-error> <b> {{errorMessage}}</b></mat-error>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Vehicle Registration\" [disabled]='isSecondTab'>\r\n        <!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n            <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n                fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Brand</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"brand\" [matAutocomplete]=\"brandAuto\" required>\r\n                        <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrands\"\r\n                            (optionSelected)='onBrandChange($event.option.value.id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsbrands | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Model</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"model\" [matAutocomplete]=\"modelAuto\" required>\r\n                        <mat-autocomplete #modelAuto=\"matAutocomplete\" [displayWith]=\"displayModels\"\r\n                            (optionSelected)='onModelChange($event.option.value.id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsModel | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('model').invalid\">Please select model\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Connector Type</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"connector_type\" [matAutocomplete]=\"connTypeAuto\"\r\n                            required>\r\n                        <mat-autocomplete #connTypeAuto=\"matAutocomplete\" [displayWith]=\"displayModels\"\r\n                            (optionSelected)='onConnectorTypeChange($event.option.value.id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCurrType | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('connector_type').invalid\">Please select model\r\n                        </mat-error>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Registration Number</mat-label>\r\n                        <input matInput formControlName=\"registration\" required>\r\n                        <mat-error *ngIf=\"form.controls.registration.hasError('required')\">Please enter registration\r\n                            number</mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"form.controls.registration.hasError('maxlength') || form.controls.registration.hasError('minlength')\">\r\n                            Registration number is incorrect</mat-error>\r\n                        <mat-error *ngIf=\"form.controls.registration.hasError('pattern')\">Special characters not\r\n                            allowed</mat-error>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Year Of Manufacture</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"yearOfManufacture\" required>\r\n                        <mat-error *ngIf=\"form.controls.registration.hasError('required')\">Please enter year Of\r\n                            manufacture</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Engine Number</mat-label>\r\n                        <input matInput formControlName=\"engineNumber\">\r\n\r\n                        <mat-error *ngIf=\"form.get('engineNumber').hasError('pattern')\">Special characters are not\r\n                            allowed\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Chassis Number</mat-label>\r\n                        <input matInput formControlName=\"chassisNumber\">\r\n\r\n                        <mat-error *ngIf=\"form.get('chassisNumber').hasError('pattern')\">Special characters are not\r\n                            allowed\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>VIN Number</mat-label>\r\n                        <input matInput formControlName=\"VINnumber\">\r\n                        <mat-error *ngIf=\"form.get('VINnumber').invalid\">Please enter vin number\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n                    <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n                    <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n                        routerLink=\"/booking/crud/create\">Cancel</button>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {  FormControl, FormArray } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingModelService } from 'app/shared/services/charging-model/charging-model.service';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nexport interface ChargingModel {\r\n  id ?: number;\r\n  client_id ?: number;\r\n  charger_type_id : number;\r\n  client_name ?: string;\r\n  manufacturer_id : number ;\r\n  manufacturer_name ?: string ;\r\n  charger_model_type_id : number;\r\n  charger_model_type_name ?: string;\r\n  battery_backup : string;\r\n  code : string;\r\n  name : string;\r\n  description : string;\r\n  communication_protocol_id : number;\r\n  communication_protocol_name ?: string;\r\n  communication_mode : string;\r\n  card_reader_type : string;\r\n  no_of_connectors : number;\r\n  connector_data : ChargingModelConnectorMap[];\r\n  status : string ;\r\n  created_date ?: string ;\r\n  created_by ?: number;\r\n  modify_date ?: string ;\r\n  modify_by ?: number;\r\n}\r\n\r\nexport interface ChargingModelConnectorMap{\r\n  id : number;\r\n  model_id : number;\r\n  connector_type_id : number;\r\n  io_type_id : number;\r\n  current_type_id : number;\r\n  voltage : number;\r\n  phase : number;\r\n  max_amp : number;\r\n  power : number;\r\n  frequency : number;\r\n  status : string ;\r\n  created_date : string ;\r\n  created_by : number;\r\n  modify_date : string ;\r\n  modify_by : number;\r\n}\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  \r\n  chargerTypes :any;\r\n  manufacturers:any;\r\n  chargerModelTypes:any;\r\n  communicationProtocols:any;\r\n  connectorTypes:any;\r\n  ioTypes:any;\r\n  currentTypes:any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"rfidToggleElement\") rfid: any;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  filteredOptionsCharType: Observable<any[]>;\r\n  filteredOptionsManufacturer: Observable<any[]>;\r\n  filteredOptionsCharModelType : Observable<any[]>;\r\n  filteredOptionsCommunicationProto: Observable<any[]>;\r\n  communicationModeData: string[] = ['LAN', 'SIM', 'WIFI'];\r\n // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private chargerTypeService: ChargerTypeService, \r\n    private snackBar: MatSnackBar,public dialogRef: MatDialogRef<ActionDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private chargingModelService : ChargingModelService, \r\n     private masterService: MasterService,\r\n    private router : Router) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      chargerType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      manufacturer: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      chargerModelType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      batteryBackup: [{value:false},  [Validators.required]],\r\n      code: ['', [ Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',[Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      communicationProtocol: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      communicationMode: ['', [Validators.required]],\r\n      cardReaderType: [''],\r\n      noOfConnectors: [{value : '',disabled : true}, [Validators.required,Validators.pattern(PATTERNS.ONLY_NUMBERS)]],\r\n      connectorForm : this.fb.array([this.createConnectorFG()]) ,\r\n    });\r\n\r\n    this.getChargetTypes();\r\n    this.getManufacturers();\r\n    this.getChargerModelTypes();\r\n    this.getCommunicationProtocols();\r\n    this.getConnectorTypes();\r\n    this.getIOTypes();\r\n    this.getCurrentTypes();   \r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n   this.filteredOptions();\r\n  }\r\n\r\n  private createConnectorFG(): FormGroup {\r\n    return new FormGroup({\r\n      connectorType: new FormControl(''),\r\n      ioType: new FormControl(''),\r\n      currentType: new FormControl('',),\r\n      voltage: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      phase: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      maxAmp: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      power: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)]),\r\n      frequency: new FormControl('', [Validators.pattern(PATTERNS.THREE_DIGIT_DECIMAL)])\r\n    });\r\n  }\r\n\r\n  public addConnectorFG() {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    connectorForm.push(this.createConnectorFG());\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  public removeConnectorFG(i: number) {\r\n    const connectorForm = this.form.get('connectorForm') as FormArray\r\n    if (connectorForm.length > 1) {\r\n      connectorForm.removeAt(i)\r\n    } else {\r\n      connectorForm.reset()\r\n    }\r\n\r\n    this.form.get('noOfConnectors').setValue(this.form.value.connectorForm.length);\r\n\r\n  }\r\n\r\n  getChargetTypes(){\r\n    this.chargerTypeService.getActiveChargerTypes().subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true){\r\n          if(resp.data.length > 0){\r\n            this.chargerTypes = resp.data;\r\n        \r\n            if(this.isEditMode){\r\n              const toSelect = this.chargerTypes.find(c => c.id == this.params.data.charger_type_id);\r\n              this.form.get('chargerType').setValue(toSelect);\r\n             this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n             .pipe(\r\n               startWith(''),\r\n                //tap(() => this.form.controls.chargerType.setValue(toSelect)),\r\n               //tap(() => this.form.get('chargerType').setValue({name:toSelect.name, id:toSelect.id})),\r\n               map(value => typeof value === 'string' ? value : value.name),\r\n               map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n             \r\n             );\r\n            }\r\n          }else{\r\n            this.snackBar.open(MessageConstant.NoRecordFoundMessage,'Dismiss',{duration:2000});\r\n          }\r\n        }\r\n        \r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getManufacturers(){\r\n    this.masterService.getManufacturers().subscribe(\r\n      (data:any)=>{\r\n        this.manufacturers = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n          this.form.get('manufacturer').setValue(toSelect);\r\n          this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n           // tap(() => this.form.controls.manufacturer.setValue(toSelect)),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n          );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getChargerModelTypes(){\r\n    this.masterService.getChargerModelTypes().subscribe(\r\n      (data:any)=>{\r\n        this.chargerModelTypes = data;\r\n        if(this.isEditMode){\r\n          const toSelect = this.chargerModelTypes.find(c => c.id == this.params.data.charger_model_type_id);\r\n         this.form.get('chargerModelType').setValue(toSelect);\r\n         this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n           //tap(() => this.form.controls.chargerModelType.setValue(toSelect)),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n         );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCommunicationProtocols(){\r\n    this.masterService.getCommunicationProtocols().subscribe(\r\n      (data:any)=>{\r\n        this.communicationProtocols = data;\r\n        if(this.isEditMode){\r\n          \r\n          const toSelect = this.communicationProtocols.find(c => c.id == this.params.data.communication_protocol_id);\r\n          this.form.get('communicationProtocol').setValue(toSelect);\r\n          this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.communicationProtocol.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n        );\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  getConnectorTypes(){\r\n    this.masterService.getConnectorTypes().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getIOTypes(){\r\n    this.masterService.getIOTypes().subscribe(\r\n      (data:any)=>{\r\n        this.ioTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getCurrentTypes(){\r\n    this.masterService.getCurrentTypes().subscribe(\r\n      (data:any)=>{\r\n        this.currentTypes = data;\r\n        // if(this.isEditMode){\r\n        //   \r\n        //   const toSelect = this.manufacturers.find(c => c.id == this.params.data.manufacturer_id);\r\n        //   this.form.get('manufacturer').setValue(toSelect.id);\r\n        // }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let connectors=[] ;\r\n  \r\n      formValues.connectorForm.forEach(item => {\r\n        connectors.push({\r\n          connector_type_id : item.connectorType ,\r\n          io_type_id : item.ioType,\r\n          current_type_id : item.currentType,\r\n          voltage : item.voltage ,\r\n          phase : item.phase,\r\n          max_amp : item.maxAmp,\r\n          power : item.power,\r\n          frequency : item.frequency,\r\n          status : 'Y',\r\n          created_by : this.localStorage.userId \r\n        })\r\n      });\r\n  \r\n      \r\n      let params : ChargingModel = {\r\n        charger_type_id : formValues.chargerType.id,\r\n        manufacturer_id : formValues.manufacturer.id ,\r\n        charger_model_type_id : formValues.chargerModelType.id ,\r\n        battery_backup  : this.batteryBackup == true ? 'Y' : 'N',\r\n        code : formValues.code ,\r\n        name : formValues.name ,\r\n        description : formValues.description ,\r\n        communication_protocol_id : formValues.communicationProtocol.id ,\r\n        communication_mode : formValues.communicationMode ,\r\n        card_reader_type : formValues.cardReaderType ,\r\n        no_of_connectors : formValues.connectorForm.length ,\r\n        connector_data : connectors,\r\n        status : this.status == true ? 'Y' : 'N',\r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n  \r\n      if (this.isEditMode){\r\n        params.id = this.params.data.id,\r\n        params.modify_by = this.localStorage.userId;\r\n      } else{\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      \r\n  \r\n      if (this.isEditMode){\r\n        this.chargingModelService.update(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }else{\r\n        this.chargingModelService.create(params).subscribe(\r\n          (data: any ) => {\r\n            \r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            // this.router.navigate(['/chargingModel/crud/list']);\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            \r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n        this.dialogRef.close(params);\r\n    }\r\n   \r\n    return;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('code').setValue(params.data.code);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    var temp = new Array();\r\n    temp = this.params.data.communication_mode.split(\",\");\r\n\r\n    this.form.get('communicationMode').setValue(temp);\r\n    this.form.get('cardReaderType').setValue(params.data.card_reader_type);\r\n    this.form.get('noOfConnectors').setValue(params.data.no_of_connectors);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n    this.batteryBackup = params.data.battery_backup == 'Y' ? true : false;\r\n\r\n    this.assignValuesFG(params.data.connector_data);\r\n  }\r\n\r\n  assignValuesFG(data){\r\n\r\n    let connector_data = [];\r\n\r\n    data.forEach(connector => {\r\n      this.addConnectorFG();\r\n      connector_data.push({ id : connector.id ,\r\n        model_id : connector.model_id ,\r\n        connectorType : connector.connector_type_id ,\r\n        ioType : connector.io_type_id ,\r\n        currentType : connector.current_type_id ,\r\n        voltage : connector.voltage ,\r\n        phase : connector.phase ,\r\n        maxAmp : connector.max_amp ,\r\n        power : connector.power ,\r\n        frequency : connector.frequency ,\r\n        status : connector.status ,\r\n        created_date : connector.created_date ,\r\n        created_by : connector.created_by ,\r\n        modify_date : connector.modify_date ,\r\n        modify_by : connector.modify_by })\r\n    });\r\n    \r\n   this.removeConnectorFG(data.length);\r\n\r\n   const connectorForm = this.form.get('connectorForm') as FormArray;\r\n\r\n   connectorForm.patchValue(connector_data);\r\n\r\n\r\n  }\r\n\r\n  clkBatteryBackup(event){\r\n    this.batteryBackup = event.checked;\r\n    this.ref.checked = this.batteryBackup;\r\n  }\r\n  clkRfidCardReader(event){\r\n    this.rfidCardReader = event.checked;\r\n    this.rfid.checked = this.rfidCardReader;\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n  \r\n  filteredOptions(){\r\n    this.filteredOptionsCharType = this.form.controls.chargerType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharType(name) : this.chargerTypes)\r\n    );\r\n    this.filteredOptionsManufacturer = this.form.controls.manufacturer.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n     \r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterManfacturer(name) : this.manufacturers)\r\n    );\r\n    this.filteredOptionsCharModelType = this.form.controls.chargerModelType.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.name),\r\n      map(name => name ? this._filterCharModelType(name) : this.chargerModelTypes)\r\n    );\r\n    this.filteredOptionsCommunicationProto = this.form.controls.communicationProtocol.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCommunicationProtocol(name) : this.communicationProtocols)\r\n      );\r\n  }\r\n  displayCharType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayManfacturer(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharModelType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCommunicationProto(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }  \r\n  private _filterCharType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterManfacturer(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.manufacturers.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharModelType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargerModelTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCommunicationProtocol(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.communicationProtocols.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\"> Variants</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger model\">model_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger model</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Manufacturer</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"manufacturer\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"manufacturerAuto\">\r\n\t\t\t\t\t<mat-autocomplete #manufacturerAuto=\"matAutocomplete\" [displayWith]=\"displayManfacturer\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsManufacturer | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select manufacturer\">\r\n\t\t\t\t\t\tprecision_manufacturing</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('manufacturer').invalid\">Please select manufacturer</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger Model Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"chargerModelType\" autocomplete=\"off\" required\r\n\t\t\t\t\t\t[matAutocomplete]=\"chargerModelTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerModelTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCharModelType\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharModelType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger model type\">\r\n\t\t\t\t\t\tformat_list_bulleted</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('chargerModelType').invalid\">Please select charger model type</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Code</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"code\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter code\">qr_code_scanner</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('code').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">badge</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"200\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Protocol</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"communicationProtocol\" required autocomplete=\"off\"\r\n\t\t\t\t\t\t[matAutocomplete]=\"communicationProtocolAuto\">\r\n\t\t\t\t\t<mat-autocomplete #communicationProtocolAuto=\"matAutocomplete\"\r\n\t\t\t\t\t\t[displayWith]=\"displayCommunicationProto\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCommunicationProto | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select communication protocol\">\r\n\t\t\t\t\t\timport_contacts</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationProtocol').invalid\">Please select communication protocol\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Communication Mode</mat-label>\r\n\t\t\t\t\t<mat-select formControlName=\"communicationMode\" multiple>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let communication of communicationModeData\" [value]=\"communication\">\r\n\t\t\t\t\t\t\t{{communication}}</mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter communication mode\">burst_mode\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('communicationMode').invalid\">Please enter communication mode</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Card Reader Type</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"cardReaderType\" autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter card reader type\">\r\n\t\t\t\t\t\tchrome_reader_mode</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cardReaderType').invalid\">Please enter card reader type\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>No Of Connectors</mat-label>\r\n\t\t\t\t\t<input matInput numbersOnly placeholder=\"\" formControlName=\"noOfConnectors\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter no. of connectors\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.required\">Please enter numbers of connectors\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('noOfConnectors').errors?.pattern\">Only numbers are allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"15\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Battery Backup</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"batteryBackup\"\r\n\t\t\t\t\t\t(change)=\"clkBatteryBackup($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{batteryBackup ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"17\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">RFID Card Reader</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"rfidCardReader\"\r\n\t\t\t\t\t\t(change)=\"clkRfidCardReader($event)\" #rfidToggleElement>\r\n\t\t\t\t\t\t{{rfidCardReader ? 'Yes' : 'No'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"18\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<mat-card style=\"box-shadow: none!important;\">\r\n\t\t\t\t<div formArrayName=\"connectorForm\">\r\n\t\t\t\t\t<div fxLayout=\"column\" *ngFor=\"let cf of form.get('connectorForm')['controls']; let i = index\"\r\n\t\t\t\t\t\t[formGroupName]=\"i\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tConnector {{i+1}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"connectorType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter connector type\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>I/O Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"ioType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of ioTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter I/O type\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Current Type</mat-label>\r\n\t\t\t\t\t\t\t\t<mat-select formControlName=\"currentType\">\r\n\t\t\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of currentTypes\" [value]=\"option.id\">\r\n\t\t\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter current type\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Voltage(V)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput formControlName=\"voltage\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter voltage \">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('voltage').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Phase</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"phase\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter phase\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('phase').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Max Amp(A)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"maxAmp\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter max Amp.\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('maxAmp').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Power(KW)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"power\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter power\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('power').errors?.pattern\">Only numbers are allowed (e.g. 00.00)\r\n\t\t\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"20\" class=\"pr-4\">\r\n\t\t\t\t\t\t\t\t<mat-label>Frequency(Hz)</mat-label>\r\n\t\t\t\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"frequency\" autocomplete=\"off\">\r\n\t\t\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter frequency\">help\r\n\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t<mat-error *ngIf=\"cf.get('frequency').errors?.pattern\">Only numbers are allowed (e.g.\r\n\t\t\t\t\t\t\t\t\t00.00)</mat-error>\r\n\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t<div class=\"add-row\">\r\n\t\t\t\t\t\t\t\t<mat-label class=\"sm-txt\">Add Row</mat-label>\r\n\t\t\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"primary\"\r\n\t\t\t\t\t\t\t\t\taria-label=\"Add\" (click)=\"addConnectorFG()\" matTooltip=\"Add\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>add_circle</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button class=\"float-left\" type=\"button\" mat-icon-button color=\"warn\"\r\n\t\t\t\t\t\t\t\t\taria-label=\"Remove/clear\" (click)=\"removeConnectorFG(i)\" matTooltip=\"Remove\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</mat-card>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RegisterUserDialogComponent } from 'app/main/booking/registerUser-dialog/registerUser-dialog.component';\r\nimport { RegisterVehicleDialogComponent } from 'app/main/booking/registerVehicle-dialog/registerVehicle-dialog.component';\r\nimport * as moment from 'moment';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\n\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  providers: [DatePipe],\r\n\r\n})\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  isLinear = true;\r\n  form: FormGroup;\r\n  PersonalFormGroup: FormGroup;\r\n  isEditable = false;\r\n  localStorage: any;\r\n  batteryBackup = false;\r\n  rfidCardReader = false;\r\n  is_read = false;\r\n  station: any;\r\n  charger: any;\r\n  connector: any;\r\n  chargingStations: any;\r\n  connectorTypes: any;\r\n  minDate = new Date();\r\n  filteredOptionsStationName: Observable<any[]>;\r\n  filteredOptionsCharger: Observable<any[]>;\r\n  filteredOptionsConnector: Observable<any[]>;\r\n  filteredOptionsConnectorType: Observable<any[]>;\r\n  chargerBookingObj: any;\r\n  availableTimeSlot: any;\r\n  selectedTimeSlot: any;\r\n  timeSlotDisabled: boolean = true;\r\n  vehicleList: any;\r\n  filteredOptionVehicleList: Observable<any[]>;\r\n  userVehicleDisabled: boolean = true;\r\n  userDetail: any;\r\n  vehicleListUpdate: any;\r\n  miniChargingTime: any;\r\n  maxiChargingTime: any;\r\n  configBookingData: any;\r\n  constructor(private _formBuilder: FormBuilder, private snackBar: MatSnackBar,\r\n    private router: Router, private chargingStationService: ChargingStationService, private chargerService: ChargerService,\r\n    public dialog: MatDialog, private bookingService: BookingService, private datePipe: DatePipe) {\r\n    this.batteryBackup = false;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this._formBuilder.group({\r\n      station_name: ['', Validators.required],\r\n      charger: ['', Validators.required],\r\n      connectorType: ['', Validators.required],\r\n      connector: ['', Validators.required],\r\n      mobile: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],//\"[0-9]{0-10}]\"\r\n      uname: ['', Validators.required],\r\n      vehicle: ['', Validators.required],\r\n      cdate: [new Date(), [Validators.required]],\r\n      sTime: ['', [Validators.required]],\r\n      eTime: ['', [this.confirmValidator, Validators.required]],\r\n      duration: [''],\r\n      validUpto: [''],\r\n      validationCheck: [false, Validators.requiredTrue],\r\n      amount: ['']\r\n    });\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.chargerBookingObj = this.chargerService.chargerBookingobj;\r\n    this.getChargingStations();\r\n    if (this.localStorage.client_id == '0') {\r\n      this.form.get('mobile').setValue(this.localStorage.mobile);\r\n      this.form.get('uname').setValue(this.localStorage.userName);\r\n      this.getUserDetail(this.localStorage.mobile);\r\n    }\r\n\r\n  }\r\n\r\n  getChargingStations() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.chargingStationService.getActiveChargingStationsCW(this.localStorage.userId).subscribe(\r\n      (resp: any) => {\r\n        this.chargingStations = resp.data;\r\n        if (this.chargerBookingObj != null && this.chargerBookingObj != undefined) {\r\n          const toSelectSetation = this.chargingStations.find(c => c.id == this.chargerBookingObj.station_id);\r\n          this.form.get('station_name').setValue(toSelectSetation);\r\n          this.getChargerByStation(toSelectSetation.id)\r\n        }\r\n        this.filteredOptionsStationName = this.form.controls.station_name.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterStation(name) : this.chargingStations)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStationChange(station) {\r\n    this.getChargerByStation(station.id);\r\n    this.form.get('charger').setValue('');\r\n    this.form.get('connectorType').setValue('');\r\n    this.form.get('connector').setValue('');\r\n    this.form.get('amount').setValue('');\r\n    this.form.get('validUpto').setValue('');\r\n    this.availableTimeSlot = [];\r\n  }\r\n  getChargerByStation(id) {\r\n    this.chargerService.getChargersByMappedStationId(id).subscribe(\r\n      (resp: any) => {\r\n        this.charger = resp.data;\r\n        if (this.chargerBookingObj != null && this.chargerBookingObj != undefined) {\r\n          const toSelectCharger = this.charger.find(c => c.charger_id == this.chargerBookingObj.charger_id);\r\n          this.form.get('charger').setValue(toSelectCharger);\r\n          this.onChargerChange(this.chargerBookingObj);\r\n        }\r\n        this.filteredOptionsCharger = this.form.controls.charger.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharger(name) : this.charger)\r\n          );\r\n      }\r\n      , (err) => {\r\n      }\r\n    )\r\n  }\r\n  onChargerChange(charger) {\r\n    this.form.get('connectorType').setValue(\"\");\r\n    this.form.get('connector').setValue(\"\");\r\n    this.form.get('amount').setValue('');\r\n    this.form.get('validUpto').setValue('');\r\n    this.availableTimeSlot = [];\r\n    this.connectorTypes = charger.connector_data;\r\n    this.connector = charger.connector_data;\r\n    if (this.chargerBookingObj != null && this.chargerBookingObj != undefined) {\r\n\r\n      const toSelectConnectorType = this.connectorTypes.find(c => c.connector_type_id == this.chargerBookingObj.connector_data[0].connector_type_id);\r\n      this.form.get('connectorType').setValue(toSelectConnectorType);\r\n\r\n      const toSelectConnector = this.connector.find(c => c.connector_id == this.chargerBookingObj.connector_data[0].connector_id);\r\n      this.form.get('connector').setValue(toSelectConnector);\r\n      this.getAvailableSlot();\r\n    }\r\n    this.filteredOptionsConnectorType = this.form.controls.connectorType.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.connector_type_name),\r\n        map(connector_type_name => connector_type_name ? this._filterConnectorType(connector_type_name) : this.connectorTypes)\r\n      );\r\n    // this.filteredOptionsConnector = this.form.controls.connector.valueChanges\r\n    //     .pipe(\r\n    //       startWith(''),\r\n    //       map(value => typeof value === 'string' ? value : value.connector_no),\r\n    //       map(connector_no => connector_no ? this._filterConnector(connector_no) : this.connector)\r\n    //     );\r\n\r\n  }\r\n  onConnectorTypeChange(connectorType) {\r\n    this.availableTimeSlot = [];\r\n    const toSelect = this.connector.find(c => c.map_id == connectorType.map_id);\r\n\r\n    this.form.get('connector').setValue(toSelect);\r\n    this.getAvailableSlot();\r\n  }\r\n  displayStationName(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharger(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayConnectorType(item: any): string {\r\n    return item && item.connector_type_name ? item.connector_type_name : '';\r\n  }\r\n  displayConnector(item: any): string {\r\n    return item && item.connector_no ? item.connector_no : '';\r\n  }\r\n  private _filterStation(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStations.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterCharger(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charger.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterConnectorType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connector.filter(option => option.connector_type_name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  registerNew() {\r\n    const dialogRef = this.dialog.open(RegisterUserDialogComponent, {\r\n      width: '800px',\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value < this.form.controls.eTime.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  timeCalculate() {\r\n    let formValues = this.form.value;\r\n    var hms = moment.utc(moment(formValues.eTime, \"HH:mm:ss\").diff(moment(formValues.sTime, \"HH:mm:ss\"))).format(\"HH:mm:ss\")\r\n    var a = hms.split(':');\r\n    var minutes = (+a[0]) * 60 + (+a[1]);\r\n\r\n    this.form.get('duration').setValue(minutes);\r\n\r\n  }\r\n  submit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      let params = {\r\n        user_id: this.userDetail.id,\r\n        mobile: formValues.mobile,\r\n        vehicle_id: formValues.vehicle.id,\r\n        registration_no: formValues.vehicle.registration_no,\r\n        station_id: formValues.station_name.id,\r\n        charger_id: formValues.charger.charger_id,\r\n        connector_no: formValues.connector.connector_no,\r\n        connector_type_id: formValues.connectorType.connector_type_id,\r\n        booking_date: this.datePipe.transform(formValues.cdate, \"yyyy-MM-dd\"),\r\n        start_time: formValues.sTime,\r\n        end_time: formValues.eTime,\r\n        duration: formValues.duration,\r\n        adv_booking_amt: formValues.amount,//this.status == true ? 'Y' : 'N', \r\n        is_tnc_read: 1,\r\n        status: 'P',\r\n        created_by: this.localStorage.userId\r\n      }\r\n\r\n      this.bookingService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.BookingCreateMessage, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/booking/crud/list']);\r\n          }\r\n          else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  close() {\r\n    this.router.navigate(['/booking/crud/list']);\r\n  }\r\n  getAvailableSlot() {\r\n    let formValues = this.form.value;\r\n    var station_id = formValues.station_name.id;\r\n    var charger_id = formValues.charger.map_id;\r\n    var connector_id = formValues.connector.id;\r\n    var bookingDate = this.datePipe.transform(formValues.cdate, \"yyyy-MM-dd\");\r\n    this.bookingService.getAvailableTimeInterval(station_id, bookingDate, charger_id, connector_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.availableTimeSlot = resp.data.available_intervals;\r\n          this.configBookingData = resp.data.booking_config[0];\r\n          this.snackBar.open(MessageConstant.BookingAvailableMessage, 'Dismiss', { duration: 5000 });\r\n          this.form.get('amount').setValue(resp.data.booking_config[0].adv_booking_amount);\r\n          this.form.get('validUpto').setValue(resp.data.booking_config[0].booking_validity_time);\r\n          //this.miniChargingTime = this.availableTimeSlot.from_time + resp.data.booking_config[0].min_charging_duration;\r\n        }\r\n        else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n        }\r\n      },\r\n      (err) => {\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  timeBook(time_set, event, i) {\r\n    this.selectedTimeSlot = time_set;\r\n    this.timeSlotDisabled = false;\r\n  }\r\n\r\n  getUserMobile() {\r\n    let formValues = this.form.value;\r\n    this.getUserDetail(formValues.mobile);\r\n  }\r\n\r\n  getUserDetail(mobile) {\r\n    this.bookingService.getUserByMobile(mobile).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.form.get('uname').setValue(resp.data.user_detail[0].username);\r\n          this.vehicleList = resp.data.vehicles.data;\r\n          this.userDetail = resp.data.user_detail[0];\r\n          this.userVehicleDisabled = false;\r\n          this.getVehicleList();\r\n        }\r\n        else {\r\n          this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n        }\r\n      },\r\n      (err) => {\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }\r\n\r\n  startTimeCheck() {\r\n    let formValues = this.form.value;\r\n    var miniTime = moment.utc(moment(formValues.sTime, \"HH:mm:ss\").add(this.configBookingData.min_charging_duration, 'minutes').format('HH:mm'));\r\n    this.miniChargingTime = miniTime;\r\n    var maxiTime = moment.utc(moment(formValues.sTime, \"HH:mm:ss\").add(this.configBookingData.max_charging_duration, 'minutes').format('HH:mm'));\r\n    this.maxiChargingTime = maxiTime;\r\n  }\r\n  stopTimeCheck() {\r\n\r\n  }\r\n\r\n  getVehicleList() {\r\n    if (this.vehicleListUpdate != null) {\r\n      const toSelectVechicle = this.vehicleList.find(c => c.id == this.vehicleListUpdate.id);\r\n      this.form.get('vehicle').setValue(toSelectVechicle);\r\n    }\r\n    this.filteredOptionVehicleList = this.form.controls.vehicle.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.registration_no),\r\n        map(registration_no => registration_no ? this._filterVehicle(registration_no) : this.vehicleList)\r\n      );\r\n  }\r\n\r\n  displayVehicle(item: any): string {\r\n    return item && item.registration_no ? item.registration_no : '';\r\n  }\r\n  private _filterVehicle(registration_no: string): any[] {\r\n    const filterValue = registration_no.toLowerCase();\r\n    return this.vehicleList.filter(option => option.registration_no.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  registerVehicle() {\r\n    const dialogRef = this.dialog.open(RegisterVehicleDialogComponent, {\r\n      width: '800px',\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      data: this.userDetail,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != null) {\r\n        let formValues = this.form.value;\r\n        this.getUserDetail(formValues.mobile);\r\n        this.vehicleListUpdate = result;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div fxLayout=\"column\" class=\"page-layout simple fullwidth\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\" >\r\n\t\t\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Station</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"station_name\" autocomplete=\"off\" required [matAutocomplete]=\"stationNameAuto\">\r\n\t\t\t\t\t<mat-autocomplete #stationNameAuto=\"matAutocomplete\"  [displayWith]=\"displayStationName\"\r\n\t\t\t\t\t(optionSelected)='onStationChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsStationName | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select station name\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('station_name').invalid\">Please select station</mat-error>\t\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charger</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charger\" autocomplete=\"off\" required [matAutocomplete]=\"chargerAuto\">\r\n\t\t\t\t\t<mat-autocomplete #chargerAuto=\"matAutocomplete\"  [displayWith]=\"displayCharger\"\r\n\t\t\t\t\t(optionSelected)='onChargerChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharger | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charger\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('charger').invalid\">Please select charger</mat-error>\t\t\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Connector Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"connectorType\" autocomplete=\"off\" required [matAutocomplete] = \"connectorTypeAuto\">\r\n\t\t\t\t\t<mat-autocomplete #connectorTypeAuto=\"matAutocomplete\"  [displayWith]=\"displayConnectorType\"\r\n\t\t\t\t\t(optionSelected)='onConnectorTypeChange($event.option.value)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsConnectorType | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.connector_type_name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('connectorType').invalid\">Please select connector type</mat-error>\t\t\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Connector</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"connector\" readonly autocomplete=\"off\" required [matAutocomplete] = \"connectorAuto\">\r\n\t\t\t\t\t<mat-autocomplete #connectorAuto=\"matAutocomplete\"  [displayWith]=\"displayConnector\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsConnector | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.connector_no}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector\">\r\n\t\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('connector').invalid\">Please select connector</mat-error>\t\t\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div *ngIf=\"availableTimeSlot !=null\">\r\n\t\t\t\t<div class=\"row\" style=\"padding-bottom:10px\">\r\n\t\t\t\t\t<div fxFlex=\"100\" class=\"pr-4\">\r\n\t\t\t\t\t\t<ul style=\"display:flex;padding-inline-start:5px;margin-top:1px\">\r\n\t\t\t\t\t\t  <li *ngFor=\"let option of availableTimeSlot; let i = index;\" style=\"list-style: none;display: contents;\" >\r\n\t\t\t\t\t\t\t<span class=\"chip\" (click)=\"timeBook(option,$event,i)\" [style.background-color]=\"option===selectedTimeSlot ? 'green' : ''\"> {{option?.from_time}} &nbsp;{{option?.to_time}} &nbsp;\r\n\t\t\t\t\t\t\t</span>&nbsp;&nbsp;\r\n\t\t\t\t\t\t  </li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [min]=\"minDate\" formControlName=\"cdate\" (dateChange)=\"getAvailableSlot()\" >\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t  <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter  date\">help</mat-icon>\r\n\t\t\t\t\t  <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t  <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('cdate').invalid\">Please enter  date</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-2\">\r\n\t\t\t\t\t<mat-label>Start Time</mat-label>\r\n\t\t\t\t\t\t<input matInput placeholder=\"\"  [ngxTimepicker]=\"sTime\" readonly [min]=\"selectedTimeSlot?.from_time\" [max]=\"selectedTimeSlot?.to_time\"\r\n\t\t\t\t\t\tformControlName=\"sTime\" [format]=\"24\" required  [disabled]=\"timeSlotDisabled\" (ngModelChange)=\"startTimeCheck()\" >\r\n\t\t\t\t\t<ngx-material-timepicker #sTime [enableKeyboardInput]=\"true\" ></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter start time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('sTime').invalid\">Please enter start time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>End Time</mat-label>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input matInput placeholder=\"\"[ngxTimepicker]=\"eTime\" readonly [min]=\"miniChargingTime?._i\" [max]=\"maxiChargingTime?._i\"\r\n\t\t\t\t\t\tformControlName=\"eTime\" [format]=\"24\" required [disabled]=\"timeSlotDisabled\" (ngModelChange)=\"timeCalculate()\" >\r\n\t\t\t\t\t<ngx-material-timepicker #eTime [enableKeyboardInput]=\"true\"></ngx-material-timepicker>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter close time\">schedule</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('eTime').hasError('required')\">Please enter end time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('eTime').hasError('confirm')\">End time is not be less then start time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Duration</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"duration\"   readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">duration</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\r\n\t\t \r\n\t\t\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\"  required autocomplete=\"off\" (change)=\"getUserMobile()\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Username</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"uname\"   required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter username\">user</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('uname').hasError('required')\">Please enter username\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Vehicle</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"vehicle\" autocomplete=\"off\" required [matAutocomplete]=\"vehicleAuto\">\r\n\t\t\t\t<mat-autocomplete #vehicleAuto=\"matAutocomplete\"  [displayWith]=\"displayVehicle\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionVehicleList | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.registration_no}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select vehicle registration\">\r\n\t\t\t\t\t\tmodel_training</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('vehicle').invalid\">Please select charger</mat-error>\t\t\r\n\t\t\t</mat-form-field>\r\n\t\t\t<!-- <mat-form-field appearance=\"outline\" fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Vehicle</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"vehicle\"   required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter vehicle\">vehicle</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('vehicle').hasError('required')\">Please enter vehicle\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t\r\n\t\t\t</mat-form-field> -->\r\n\t\t\t<div fxFlex=\"25\" class=\"pr-4\"  style=\"padding-bottom: 25px !important;text-align: center;\">\r\n\t\t\t\t<button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"registerNew()\" class=\"mr-8\"  matTooltip=\"User register\" aria-label=\"Example icon button with a filter list icon\">\r\n\t\t\t\t\t<mat-icon>person_add</mat-icon>\r\n\t\t\t\t  </button>\r\n\t\t\t\t<!-- <button mat-raised-button type=\"button\" color=\"primary\" class=\"mr-8\" \r\n\t\t\t\t(click)=\"registerNew()\" >Register New User</button> -->\r\n\t\t\t\t<button mat-mini-fab color=\"primary\"  type=\"button\" (click)=\"registerVehicle()\"  [disabled]=\"userVehicleDisabled\" class=\"mr-8\"  matTooltip=\"Vechicle register\" aria-label=\"Example icon button with a filter list icon\">\r\n\t\t\t\t\t<mat-icon>electric_car</mat-icon>\r\n\t\t\t\t  </button>\r\n\t\t\t\t<!-- <button mat-raised-button type=\"button\" color=\"primary\" [disabled]=\"userVehicleDisabled\" class=\"mr-8\" \r\n\t\t\t\t(click)=\"registerVehicle()\" >Vechicle Register</button> -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Advance Booking Amount</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"amount\"   readonly autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Auration\">currency_rupee</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Valid Upto</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"validUpto\"   readonly autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Valid upto\">where_to_vote</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"24\" class=\"pr-4\">\r\n\t\t\t\t<mat-checkbox formControlName=\"validationCheck\">Please read before submit</mat-checkbox>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('validationCheck').invalid\">Please select checkbox</mat-error>\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" class=\"mr-8\" (click)=\"submit()\">Confirm</button>\r\n\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t</div>\r\n\r\n\t</form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingService {\r\n  apiUrl1 = `${environment.API_URL2}/chargingStation` ;\r\n  apiUrl2 = `${environment.API_URL2}/booking` ;\r\n  apiUrl3 = `${environment.API_URL2}/usermanagement` ;\r\n  constructor(private http : HttpClient) { }\r\n\r\n  create(params){\r\n    return this.http.post(`${this.apiUrl2}/create/`,params);\r\n  }\r\n  getAvailableTimeInterval(station_id,date,charger_id,connector_no){\r\n    return this.http.get(`${this.apiUrl2}/getAvailableTimeInterval/${station_id}/${date}/${charger_id}/${connector_no}`);\r\n  }\r\n  getUserByMobile(mobile){\r\n    return this.http.get(`${this.apiUrl3}/getUserByMobile/${mobile}`);\r\n  }\r\n  getBookingHistory(params){\r\n    return this.http.post(`${this.apiUrl2}/getBookingHistory/`,params);\r\n  }\r\n  getPendingBookingsCW(params){\r\n    return this.http.post(`${this.apiUrl2}/getPendingBookingsCW/`,params);\r\n  }\r\n  ackBookingCW(params){\r\n    return this.http.post(`${this.apiUrl2}/ackBookingCW/`,params);\r\n  }\r\n  getallbookingscw(params){\r\n    return this.http.post(`${this.apiUrl2}/allbookingscw/`,params);\r\n  }\r\n\r\n\r\n  //booking-config API\r\n  getAllActiveChargingStations(client_id,cpo_id){\r\n    return this.http.get(`${this.apiUrl1}/gtAllActiveChargingStations/${client_id}/${cpo_id}`);\r\n  }\r\n  getAllBookingConfigList(){\r\n    return this.http.get(`${this.apiUrl2}/getAllBookingConfigList/`);\r\n  }\r\n  createBookingConfig(params){\r\n    return this.http.post(`${this.apiUrl2}/createBookingConfig`,params);\r\n  }\r\n  updateBookingConfig(params){\r\n    return this.http.post(`${this.apiUrl2}/updateBookingConfig`,params);\r\n  }\r\n  deleteBookingConfig(id,login_id){\r\n    return this.http.delete(`${this.apiUrl2}/deleteBookingConfig/${id}/${login_id}`);\r\n  }\r\n\r\n  \r\n}\r\n","\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { BookingRoutingModule } from './booking-routing.module';\r\nimport { BookingCrudComponent } from './booking-crud/booking-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { RegisterUserDialogComponent } from './registerUser-dialog/registerUser-dialog.component';\r\nimport { ListApprovedComponent } from './list-approved/list-approved.component';\r\nimport { RegisterVehicleDialogComponent } from './registerVehicle-dialog/registerVehicle-dialog.component';\r\nconst COMPONENTS =[ BookingCrudComponent, CreateComponent, ListComponent,ListApprovedComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent,RegisterUserDialogComponent,RegisterVehicleDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, BookingRoutingModule,FuseSharedModule,MatStepperModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class BookingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl, FormControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Subject } from 'rxjs';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { FuseConfigService } from '@fuse/services/config.service';\r\nimport { AccountService } from 'app/shared/services/account/account.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-registerVehicle-dialog',\r\n  templateUrl: './registerVehicle-dialog.component.html',\r\n  styleUrls: ['./registerVehicle-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class RegisterVehicleDialogComponent implements OnInit {\r\n\r\n  \r\n  registerForm: FormGroup;\r\n \r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  connector_types:any;\r\n  localStorage : any;\r\n  filteredOptionsbrands: Observable<any[]>;\r\n  filteredOptionsModel: Observable<any[]>;\r\n  filteredOptionsCurrType: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  params:any;\r\n \r\n  constructor(\r\n    public dialogRef: MatDialogRef<RegisterVehicleDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, \r\n    private accountService: AccountService,\r\n     private _formBuilder: FormBuilder,private router : Router,private masterService : MasterService,\r\n     private vehicleService : VehicleService,private snackBar: MatSnackBar) {}\r\n\r\n  ngOnInit() {\r\n   \r\n    this.params  = this.data;\r\n    this.initialize();\r\n  }\r\n  initialize(){\r\n    ////\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.form = this._formBuilder.group({\r\n      brand: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      model: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      connector_type : ['', [autocompleteObjectValidator(),Validators.required]],\r\n      registration: ['', [Validators.required,\r\n        Validators.minLength(8),Validators.maxLength(100),\r\n        Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      yearOfManufacture: ['', [Validators.required]],\r\n      engineNumber: ['', [ Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      chassisNumber: ['', [ Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      VINnumber: [''],\r\n      status : this.status == true ? 'Y' : 'N'   \r\n      // vehicle: ['', [Validators.required]],\r\n      // manufacturer: ['', [Validators.required]],\r\n      \r\n    });\r\n\r\n    this.getBrands();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n \r\n\r\n  getBrands(){\r\n    this.masterService.getBrands().subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.brands = data;\r\n        \r\n        this.filteredOptionsbrands = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterbrands(name) : this.brands)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getModelsByBrand(id){\r\n    this.models=[];\r\n    this.connector_types=[];\r\n    this.masterService.getModelsByBrand(id).subscribe(\r\n      (data:any)=>{\r\n        this.models = data;\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getConnectorTypeByModel(id){\r\n    this.connector_types=[];\r\n    this.masterService.getPublishedConnectorTypeByModel(id).subscribe(\r\n      (data:any)=>{\r\n        this.connector_types = data;\r\n        this.filteredOptionsCurrType = this.form.controls.connector_type.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterConnType(name) : this.connector_types)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  onBrandChange(event){\r\n    this.getModelsByBrand(event);\r\n    this.form.get('model').setValue('');\r\n  }\r\n  onModelChange(event){\r\n    this.getConnectorTypeByModel(event);\r\n  }\r\n  onConnectorTypeChange(event){\r\n    ////\r\n    // this.getConnectorTypeByModel(event.value);\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let params = {\r\n          user_id: this.params.id,\r\n          brand_id : formValues.brand.id,\r\n          model_id : formValues.model.id,\r\n          connector_type_id : formValues.connector_type.ct_id,\r\n          registration_no : formValues.registration,\r\n          year_of_manufacture : formValues.yearOfManufacture,\r\n          engine_no : formValues.engineNumber,\r\n          chassis_no : formValues.chassisNumber,\r\n          vin_no : formValues.VINnumber,\r\n          status :  this.status == true ? 'Y' : 'N', \r\n          created_by : this.localStorage.userId\r\n      }\r\n      this.vehicleService.register(params).subscribe(\r\n        (resp:any )=>{\r\n          ////\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.vehicleCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close(resp.data);\r\n          }else{\r\n            if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = resp.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n               this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'registration_no'\" ){\r\n                this.snackBar.open(MessageConstant.registrationDuplicateVehicle, 'Dismiss', { duration: 5000 });\r\n              } if(this.splitted == \"'engine_no'\" ){\r\n                this.snackBar.open(MessageConstant.engineDuplicateVehicle, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'chassis_no'\" ){\r\n                this.snackBar.open(MessageConstant.chassisDuplicateVehicle, 'Dismiss', { duration: 5000 });\r\n              }\r\n\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(MessageConstant.errorMessage,'Dismiss', { duration: 5000 })\r\n          }\r\n  \r\n        },\r\n        (err)=>{\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n\r\n    }\r\n    else{\r\n      return;\r\n    }\r\n  }\r\n \r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  displayBrands(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayModels(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCurrentType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterbrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.models.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterConnType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.connector_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n    style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n    <mat-toolbar class=\"action_toolbar\">End Vehicle Register</mat-toolbar>\r\n        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n            <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n                fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Brand</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"brand\" [matAutocomplete]=\"brandAuto\" required>\r\n                        <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrands\"\r\n                            (optionSelected)='onBrandChange($event.option.value.id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsbrands | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Model</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"model\" [matAutocomplete]=\"modelAuto\" required>\r\n                        <mat-autocomplete #modelAuto=\"matAutocomplete\" [displayWith]=\"displayModels\"\r\n                            (optionSelected)='onModelChange($event.option.value.id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsModel | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('model').invalid\">Please select model\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Connector Type</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"connector_type\" [matAutocomplete]=\"connTypeAuto\"\r\n                            required>\r\n                        <mat-autocomplete #connTypeAuto=\"matAutocomplete\" [displayWith]=\"displayModels\"\r\n                            (optionSelected)='onConnectorTypeChange($event.option.value.id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCurrType | async\" [value]=\"option\">\r\n                                {{option.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('connector_type').invalid\">Please select model\r\n                        </mat-error>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Registration Number</mat-label>\r\n                        <input matInput formControlName=\"registration\" required>\r\n                        <mat-error *ngIf=\"form.controls.registration.hasError('required')\">Please enter registration\r\n                            number</mat-error>\r\n                        <mat-error\r\n                            *ngIf=\"form.controls.registration.hasError('maxlength') || form.controls.registration.hasError('minlength')\">\r\n                            Registration number is incorrect</mat-error>\r\n                        <mat-error *ngIf=\"form.controls.registration.hasError('pattern')\">Special characters not\r\n                            allowed</mat-error>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Year Of Manufacture</mat-label>\r\n                        <input matInput placeholder=\"\" formControlName=\"yearOfManufacture\" required>\r\n                        <mat-error *ngIf=\"form.controls.registration.hasError('required')\">Please enter year Of\r\n                            manufacture</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Engine Number</mat-label>\r\n                        <input matInput formControlName=\"engineNumber\">\r\n\r\n                        <mat-error *ngIf=\"form.get('engineNumber').hasError('pattern')\">Special characters are not\r\n                            allowed\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>Chassis Number</mat-label>\r\n                        <input matInput formControlName=\"chassisNumber\">\r\n\r\n                        <mat-error *ngIf=\"form.get('chassisNumber').hasError('pattern')\">Special characters are not\r\n                            allowed\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                        <mat-label>VIN Number</mat-label>\r\n                        <input matInput formControlName=\"VINnumber\">\r\n                        <mat-error *ngIf=\"form.get('VINnumber').invalid\">Please enter vin number\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n                    <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n                    <button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"closeActionPanel()\">Cancel</button>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n  ","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BookingCrudComponent } from './booking-crud/booking-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './booking-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : BookingCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n    {\r\n        path : 'bookingStationConfig',\r\n        loadChildren: () => import('app/main/booking/booking-config/booking-config.module').then(m => m.BookingConfigModule)\r\n    },\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class BookingRoutingModule{}"],"sourceRoot":"webpack:///"}