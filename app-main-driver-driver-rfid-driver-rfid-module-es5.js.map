{"version":3,"sources":["webpack:///src/app/main/driver/driver-rfid/driver-rfid-routing.module.ts","webpack:///src/app/main/driver/driver-rfid/view-dialog/view-dialog.component.ts","webpack:///src/app/main/driver/driver-rfid/view-dialog/view-dialog.component.html","webpack:///src/app/main/driver/driver-rfid/list/list.component.ts","webpack:///src/app/main/driver/driver-rfid/list/list.component.html","webpack:///src/app/main/driver/driver-rfid/create/create.component.ts","webpack:///src/app/main/driver/driver-rfid/create/create.component.html","webpack:///src/app/main/driver/driver-rfid/driver-rfid.module.ts","webpack:///src/app/main/driver/driver-rfid/action-dialog/action-dialog.component.ts","webpack:///src/app/main/driver/driver-rfid/action-dialog/action-dialog.component.html","webpack:///src/app/main/driver/driver-rfid/driver-rfid-crud/routes.ts","webpack:///src/app/main/driver/driver-rfid/driver-rfid-crud/driver-rfid-crud.component.ts","webpack:///src/app/main/driver/driver-rfid/driver-rfid-crud/driver-rfid-crud.component.html"],"names":["routes","path","component","canActivate","children","DriverRfidRoutingModule","forChild","imports","exports","ViewDialogComponent","selector","templateUrl","styleUrls","RFID_Map_Driver","ListComponent","driverService","dialog","snackBar","fb","cpoService","rfidService","head","dataSource","clientSearch","cpoSearch","rfidNameSearch","driverNameSearch","rfidNoSearch","balanceSearch","statusSearch","selectedCpo_id","form","group","CPO","localStorage","JSON","parse","getItem","columns","field","displayedColumns","map","column","getactivecposcw","userId","filterEntity","filterType","ANYWHERE","event","filterValue","target","value","filter","trim","toLowerCase","paginator","firstPage","cpo_id","getAllRFIDbyCW","subscribe","resp","status","rfidByCpoData","data","i","length","ismapped","statusString","sort","err","id","getactivecposcwwithAll","cposName","role_code","undefined","toSelect","get","setValue","disable","getRfidByCpoData","filteredOptionsCPO","controls","valueChanges","pipe","name","_filterCPO","item","option","includes","element","confirmDialogRef","open","disableClose","afterClosed","result","unmappedRfIdDriver","driver_id","duration","visibleOption","ev","stopPropagation","cpo_name","driver_name","rfid_name","RF_ID_no","balance","exportedData","filteredData","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","onCPOChange","CreateComponent","clientService","router","initialize","client_name","required","getClientName","getUnmappedRFIDByCpoId","getUnmappedDriverByCpoId","setupRFIDFilter","filteredOptionsRFID","setupFilter","control","key","_filterOptions","filteredOptionsDriver","getActiveClientsCW","find","c","client_id","filteredOptionsClient","getCpoByclient","getCpoByClientId","filteredOptionsClientCPO","formValues","params","rfid_id","created_by","createRfidMappingwithDriver","navigate","checked","ref","onSubmit","$event","preventDefault","onClientChange","updateStatus","encapsulation","None","animations","COMPONENTS","COMPONENTS_DYNAMIC","DriverRfidModule","declarations","entryComponents","ActionDialogComponent","TABS_DEMO_ROUTES","redirectTo","pathMatch","DriverRfidCrudComponent","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","label","link"],"mappings":"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","file":"app-main-driver-driver-rfid-driver-rfid-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DriverRfidCrudComponent } from './driver-rfid-crud/driver-rfid-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nimport { TABS_DEMO_ROUTES } from './driver-rfid-crud/routes';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"crud\", component: DriverRfidCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DriverRfidRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss']\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>view-dialog works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nexport class RFID_Map_Driver {\r\n  id: string;\r\n  client_id: number;\r\n  client_name: string;\r\n  cpo_id: number;\r\n  cpo_name: string;\r\n  rfid_id: string;\r\n  rfid_name: string;\r\n  RF_ID_no: string;\r\n  driver_name: string;\r\n  ismapped: string;\r\n  statusString: string;\r\n  expiry_date: string;\r\n  action: string;\r\n  balance: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: RFID_Map_Driver;\r\n  filterType: MatTableFilter;\r\n  head = [['CPO Name', 'Driver Name', 'RFID Name', 'RFID No.', 'Status','balance']];\r\n  public dataSource = new MatTableDataSource<any>([]);\r\n  localStorage: any;\r\n  form: FormGroup;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  cposName: any;\r\n  filteredOptionsCPO: Observable<any[]>;\r\n  rfid: RFID_Map_Driver[];\r\n  columns: any[];\r\n  displayedColumns: string[];\r\n  rfidByCpoData: any[];\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  cpoSearch = false;\r\n  rfidNameSearch = false;\r\n  driverNameSearch = false;\r\n  rfidNoSearch = false;\r\n  balanceSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  selectedCpo_id: any = 0;\r\n\r\n  constructor(\r\n    private driverService: DriverService,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private cpoService: CpoService,\r\n    private rfidService: RfidService\r\n  ) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.form = this.fb.group({\r\n      CPO: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.columns = [\r\n      {\r\n        field: 'cpo_name'\r\n      },\r\n      {\r\n        field: 'driver_name'\r\n      },\r\n      {\r\n        field: 'rfid_name'\r\n      },\r\n      {\r\n        field: 'rfid_no'\r\n      },\r\n      {\r\n        field : 'balance'\r\n      },\r\n      {\r\n        field: 'status'\r\n      },\r\n      {\r\n        field: 'action'\r\n      },\r\n      \r\n    ];\r\n    this.displayedColumns = this.columns.map(column => column.field);\r\n\r\n    this.getactivecposcw(this.localStorage.userId);\r\n    this.filterEntity = new RFID_Map_Driver();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    // this.getRfidByCpoData();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getRfidByCpoData(cpo_id?: number) {\r\n    \r\n    this.rfidService.getAllRFIDbyCW(this.localStorage.userId, cpo_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.rfidByCpoData = resp.data;\r\n          for (var i = 0; i < this.rfidByCpoData.length; i++) {\r\n            if (this.rfidByCpoData[i].ismapped == 'N') {\r\n              this.rfidByCpoData[i].statusString = 'Not Mapped';\r\n            } else {\r\n              this.rfidByCpoData[i].statusString = 'Mapped';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.rfidByCpoData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          // this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => { }\r\n    );\r\n  }\r\n\r\n  getactivecposcw(id) {\r\n    this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.cposName = data;\r\n        if (this.localStorage.role_code != \"END\") {\r\n          if (this.cposName != null && this.cposName != undefined) {\r\n            \r\n            // const toSelect = this.cposName.length == 1 ? this.cposName[0] : this.cposName[1];\r\n            // this.selectedCpo_id = toSelect.cpo_id;\r\n            // this.form.get('CPO').setValue(toSelect);\r\n            // this.form.get('CPO').disable();\r\n            // this.getRfidByCpoData(this.localStorage.cpo_id);\r\n\r\n            const toSelect = this.cposName[0];\r\n            \r\n            this.selectedCpo_id = toSelect.id;\r\n            this.form.get('CPO').setValue(toSelect);\r\n            \r\n            if (this.localStorage.role_code == \"CPO\") {\r\n              this.form.get('CPO').disable();\r\n            }\r\n\r\n            this.getRfidByCpoData(this.selectedCpo_id);\r\n\r\n          }\r\n          this.filteredOptionsCPO = this.form.controls.CPO.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCPO(name) : this.cposName)\r\n          );\r\n        }\r\n      }, (err) => { }\r\n    )\r\n  }\r\n\r\n  displayCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  delete(element) {\r\n    \r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.rfidService.unmappedRfIdDriver(element.driver_id).subscribe(\r\n          (data: any) => {\r\n            this.getRfidByCpoData(this.selectedCpo_id); \r\n            this.snackBar.open('Deleted successfully', 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n  }\r\n\r\n  onCPOChange(cpo_id) {\r\n    this.selectedCpo_id = cpo_id;\r\n    this.getRfidByCpoData(cpo_id);\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n\r\n    if (visibleOption == 'cpoSearch') {\r\n      this.cpoSearch = !this.cpoSearch;\r\n      this.filterEntity.cpo_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'driverNameSearch') {\r\n      this.driverNameSearch = !this.driverNameSearch;\r\n      this.filterEntity.driver_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'rfidNameSearch') {\r\n      this.rfidNameSearch = !this.rfidNameSearch;\r\n      this.filterEntity.rfid_name = \"\";\r\n    }\r\n\r\n    if (visibleOption == 'rfidNoSearch') {\r\n      this.rfidNoSearch = !this.rfidNoSearch;\r\n      this.filterEntity.RF_ID_no = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n    \r\n    if (visibleOption == 'balanceSearch') {\r\n      this.balanceSearch = !this.balanceSearch;\r\n      this.filterEntity.balance = \"\";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var rfidByCpoData = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'CPO Name': rfidByCpoData.cpo_name,\r\n        'Driver Name': rfidByCpoData.driver_name,\r\n        'RFID Name': rfidByCpoData.name,\r\n        'RFID No': rfidByCpoData.RF_ID_no,\r\n        'Status': rfidByCpoData.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Driver List');\r\n    XLSX.writeFile(workBook, 'Driver List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var rfidByCpoData = this.dataSource.filteredData[i];\r\n      var data = [rfidByCpoData.cpo_name, rfidByCpoData.driver_name, rfidByCpoData.name, rfidByCpoData.RF_ID_no, rfidByCpoData.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Driver List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Driver List report.pdf');\r\n\r\n  }\r\n\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n    <div fxFlex=\"100\" class=\"matero-col\">\r\n        <div style=\"text-align: left ;margin-left: 16px;margin-bottom:10px;margin-top: 10px;\">\r\n            <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n                <mat-icon>sim_card_download</mat-icon>\r\n            </button>&nbsp;&nbsp;\r\n            <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n                <mat-icon>picture_as_pdf</mat-icon>\r\n            </button>\r\n            <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n        </div>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" class=\"form-field-full\">\r\n                    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"50\">\r\n                            <mat-label>Select CPO </mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"CPO\" [matAutocomplete]=\"auto2\">\r\n                            <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                                (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                                <mat-option *ngFor=\"let option of filteredOptionsCPO | async\" [value]=\"option\">\r\n                                    {{option.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <div matSuffix style=\"display: flex;\">\r\n                                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                                <mat-icon matSuffix class=\"secondary-text\"\r\n                                    matTooltip=\"Please enter cpo name\">account_circle\r\n                                </mat-icon>\r\n                            </div>\r\n                            <mat-error *ngIf=\"form.get('CPO').invalid\">Please select cpo</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"\">\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n            <mat-table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"driver_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!driverNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Driver Name\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('driverNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"driverNameSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Driver Name \" [(ngModel)]=\"filterEntity.driver_name\">\r\n                            <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('driverNameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.driver_name != null ? row.driver_name : '----'}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rfid_name\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!rfidNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">RFID Name\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('rfidNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"rfidNameSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"RFID Name\" [(ngModel)]=\"filterEntity.rfid_name\">\r\n                            <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('rfidNameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rfid_no\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!rfidNoSearch\" class=\"custom_font_size\" style=\"display: flex;\"> RFID &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('rfidNoSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"rfidNoSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" RFID No.\" [(ngModel)]=\"filterEntity.RF_ID_no\">\r\n                            <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('rfidNoSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.RF_ID_no}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 110px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.ismapped == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let element\">\r\n                        <!-- <mat-icon *ngIf=\"element.ismapped != 'Y'\" color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">commit</mat-icon> -->\r\n\r\n                        <mat-icon *ngIf=\"element.ismapped == 'Y'\" color=\"warn\" matTooltip=\"Remove\"\r\n                            (click)=\"delete(element)\" style=\"cursor:pointer\">delete</mat-icon>\r\n\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"balance\">\r\n                    <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!balanceSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Balance &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('balanceSearch',$event)\">npm run start</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"balanceSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\" Balance.\" [(ngModel)]=\"filterEntity.balance\">\r\n                            <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('balanceSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </mat-header-cell>\r\n                    <mat-cell mat-cell *matCellDef=\"let row\"> {{row.balance}} </mat-cell>\r\n                </ng-container>\r\n\r\n                <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { DriverService } from 'app/shared/services/driver/driver.service';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  client_name: any;\r\n  cposName: any;\r\n  rfid_name: any;\r\n  driver_name: any;\r\n  localStorage: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionsClientCPO: Observable<any[]>;\r\n  filteredOptionsRFID: Observable<any[]>;\r\n  filteredOptionsDriver: Observable<any[]>;\r\n  status: boolean = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private snackBar: MatSnackBar,\r\n    private clientService: ClientService,\r\n    private cpoService: CpoService,\r\n    private rfidService: RfidService,\r\n    private driverService: DriverService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client_name: ['', [Validators.required]],\r\n      cpo_name: ['', [Validators.required]],\r\n      rfid_name: ['', [Validators.required]],\r\n      driver_name: ['', [Validators.required]],\r\n      status: this.status ? 'Y' : 'N'\r\n    });\r\n\r\n    this.getClientName();\r\n  }\r\n\r\n  onCPOChange(cpo_id) {\r\n    this.getUnmappedRFIDByCpoId(cpo_id);\r\n    this.getUnmappedDriverByCpoId(cpo_id);\r\n\r\n    this.form.get('driver_name').setValue(\"\");\r\n    this.form.get('rfid_name').setValue(\"\");\r\n  }\r\n\r\n  getUnmappedRFIDByCpoId(cpo_id) {\r\n    this.rfidService.getUnmappedRFIDByCpoId(cpo_id).subscribe((resp:any) => {\r\n      this.rfid_name = resp.data;\r\n      this.setupRFIDFilter();\r\n    });\r\n  }\r\n\r\n  setupRFIDFilter() {\r\n    this.filteredOptionsRFID = this.setupFilter(this.form.controls.rfid_name, this.rfid_name, 'RF_ID_no');\r\n  }\r\n\r\n  private setupFilter(control: AbstractControl, data: any[], key: string): Observable<any[]> {\r\n    return control.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value[key]),\r\n      map(name => name ? this._filterOptions(name, data, key) : data)\r\n    );\r\n  }\r\n\r\n  private _filterOptions(value: string, data: any[], key: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return data.filter(option => option[key].toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayRFIDName(item: any): string {\r\n    return item?.RF_ID_no || '';\r\n  }\r\n\r\n  getUnmappedDriverByCpoId(cpo_id) {\r\n    this.driverService.getUnmappedDriverByCpoId(cpo_id).subscribe((resp:any) => {\r\n      this.driver_name = resp.data;\r\n      this.filteredOptionsDriver = this.setupFilter(this.form.controls.driver_name, this.driver_name, 'name');\r\n    });\r\n  }\r\n\r\n  displayDriverName(item: any): string {\r\n    return item?.name || '';\r\n  }\r\n\r\n  getClientName() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(data => {\r\n      this.client_name = data;\r\n      const toSelect = this.client_name.find(c => c.id == this.localStorage.client_id);\r\n      this.form.get('client_name').setValue(toSelect);\r\n      this.filteredOptionsClient = this.setupFilter(this.form.controls.client_name, this.client_name, 'name');\r\n      this.getCpoByclient(toSelect.id);\r\n    });\r\n  }\r\n\r\n  onClientChange(event) {\r\n    this.getCpoByclient(event);\r\n    this.form.get('cpo_name').setValue(\"\");\r\n    this.form.get('driver_name').setValue(\"\");\r\n    this.form.get('rfid_name').setValue(\"\");\r\n  }\r\n\r\n  displayClientName(item: any): string {\r\n    return item?.name || '';\r\n  }\r\n\r\n  getCpoByclient(id) {\r\n    this.cpoService.getCpoByClientId(id).subscribe(data => {\r\n      this.cposName = data;\r\n      this.filteredOptionsClientCPO = this.setupFilter(this.form.controls.cpo_name, this.cposName, 'name');\r\n    });\r\n  }\r\n\r\n  displayCPOName(item: any): string {\r\n    return item?.name || '';\r\n  }\r\n\r\n  onSubmit() {\r\n    const formValues = this.form.value;\r\n    \r\n    const params = {\r\n      rfid_id: formValues.rfid_name.rfid_id,\r\n      driver_id: formValues.driver_name.driver_id,\r\n      status: this.status ? 'Y' : 'N',\r\n      created_by: this.localStorage.userId\r\n    };\r\n\r\n    this.rfidService.createRfidMappingwithDriver(params).subscribe(\r\n      (data: any) => {\r\n        if(data.status) {\r\n          this.snackBar.open('DRIVER-RFID mapped!', 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/driverManagement/driverRfid/crud/list']);\r\n        } else {\r\n          this.snackBar.open('Something went wrong!', 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/driverManagement/driverRfid/crud/list']);\r\n        }\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Client Name</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"client_name\" [matAutocomplete]=\"clientNameAuto\">\r\n                <mat-autocomplete #clientNameAuto=\"matAutocomplete\" [displayWith]=\"displayClientName\"\r\n                    (optionSelected)='onClientChange($event.option.value.id)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter client\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('client_name').invalid\">Please enter client name\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>CPO Name</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"cpo_name\" [matAutocomplete]=\"cpoNameAuto\">\r\n                <mat-autocomplete #cpoNameAuto=\"matAutocomplete\" [displayWith]=\"displayCPOName\"\r\n                    (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                    <mat-option *ngFor=\"let option of filteredOptionsClientCPO | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter cpo name\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('cpo_name').invalid\">Please enter CPO name\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>Driver</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"driver_name\" [matAutocomplete]=\"driverAuto\">\r\n                <mat-autocomplete #driverAuto=\"matAutocomplete\" [displayWith]=\"displayDriverName\">\r\n                    <mat-option *ngFor=\"let option of filteredOptionsDriver | async\" [value]=\"option\">\r\n                        {{option.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter Driver name\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('driver_name').invalid\">Please enter Driver name\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                <mat-label>RFID</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"rfid_name\" [matAutocomplete]=\"rfidAuto\">\r\n                <mat-autocomplete #rfidAuto=\"matAutocomplete\" [displayWith]=\"displayRFIDName\">\r\n                    <mat-option *ngFor=\"let option of filteredOptionsRFID | async\" [value]=\"option\">\r\n                        {{option.RF_ID_no}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        matTooltip=\"Please enter RFID name\">account_circle</mat-icon>\r\n                </div>\r\n                <mat-error *ngIf=\"form.get('rfid_name').invalid\">Please enter RFID name\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <div fxFlex=\"50\">\r\n                <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n                    (change)=\"updateStatus($event)\" #toggleElement>\r\n                    {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n            </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n            <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n                routerLink=\"/assetManagement/rfidManagement/cpo-rfid/crud/list\">Cancel</button>\r\n        </div>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DriverRfidRoutingModule } from './driver-rfid-routing.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { DriverRfidCrudComponent } from './driver-rfid-crud/driver-rfid-crud.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\nconst COMPONENTS = [DriverRfidCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n  declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    DriverRfidRoutingModule,\r\n    FuseSharedModule,\r\n  ],\r\n  entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\nexport class DriverRfidModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss']\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>action-dialog works!</p>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path: 'create', canActivate: [AuthGuard], component: CreateComponent },\r\n  { path: 'list', canActivate: [AuthGuard], component: ListComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n@Component({\r\n  selector: 'app-driver-rfid-crud',\r\n  templateUrl: './driver-rfid-crud.component.html',\r\n  styleUrls: ['./driver-rfid-crud.component.scss']\r\n})\r\nexport class DriverRfidCrudComponent implements OnInit {\r\n\r\n\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Clients', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  tempLinks = [];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  dyanmictab: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n\r\n\r\n      if (x.id === \"manageDriver\") {\r\n        this.objectData = x;\r\n        \r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"manageDriverRfid\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'List', link: 'list' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/driverManagement/driverRfid/crud/' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n    <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n      <!-- CENTER -->\r\n      <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n          <!-- HEADER -->\r\n          <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n                  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                        [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}} \r\n                  </span>\r\n  \r\n                  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                          (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                      <mat-icon>menu</mat-icon>\r\n                  </button-->\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n      <a mat-tab-link\r\n         *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n         [routerLink]=\"tabLink.link\"\r\n         routerLinkActive #rla=\"routerLinkActive\"\r\n         [active]=\"rla.isActive\">\r\n        {{tabLink.label}}\r\n      </a>\r\n    </nav>\r\n    <router-outlet ></router-outlet>\r\n  </div>\r\n  "]}