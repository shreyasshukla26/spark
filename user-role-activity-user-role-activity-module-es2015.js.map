{"version":3,"sources":["./src/app/main/user-management/user-role-activity/user-role-activity.module.ts","./src/app/main/user-management/user-role-activity/user-role-activity-routing.module.ts","./src/app/main/user-management/user-role-activity/user-role-activity.component.ts","./src/app/main/user-management/user-role-activity/user-role-activity.component.html"],"names":[],"mappings":"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","file":"user-role-activity-user-role-activity-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { UserRoleActivityRoutingModule } from './user-role-activity-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { UserRoleActivityComponent } from './user-role-activity.component';\r\nconst COMPONENTS =[UserRoleActivityComponent];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, UserRoleActivityRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class UserRoleActivityModule{}","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n//import { TABS_DEMO_ROUTES } from './role-crud/routes';\r\n//import { RoleCrudComponent } from './role-crud/role-crud.component';\r\nimport { UserRoleActivityComponent } from './user-role-activity.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    // {\r\n    //     path : 'crud',component : RoleCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    // },\r\n    {\r\n        path : 'userRole-activityMapping',component : UserRoleActivityComponent,canActivate: [AuthGuard]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class UserRoleActivityRoutingModule{}","import { Component, OnInit ,Injectable, ChangeDetectorRef, ViewChild} from '@angular/core';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MenuConfigService } from 'app/shared/services/menu-config/menu-config.service'; \r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\nexport class TodoItemNodeTest {\r\n  children: TodoItemNodeTest[];\r\n  item: string;\r\n  actionNode:ActionNode[];\r\n  id:number;\r\n  title:string;\r\n  menu_id:string;\r\n  isSelected:boolean = false;\r\n  parent_id:string;\r\n  rm_map_id:string;\r\n}\r\nexport class ActionNode{\r\n  add:boolean;\r\n  delete:boolean;\r\n  download : boolean;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n  actionAll : ActionMenuNode[];\r\n  children: TodoItemFlatNode[];\r\n  actionNode:ActionNode[];\r\n  id:number;\r\n  title:string;\r\n  menu_id:string;\r\n  map_id:string;\r\n  parent_id:string;\r\n  rm_map_id:string;\r\n  isSelected:boolean = false;\r\n}\r\nexport class ActionMenuNode{\r\n  add:boolean;\r\n  delete:boolean;\r\n  download : boolean;\r\n  selectAll:boolean;\r\n}\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemFlatNode[]>([]);\r\n  localStorage : any;\r\n  get data(): TodoItemFlatNode[] { return this.dataChange.value; }\r\n  \r\n  constructor(private _menuConfigService:MenuConfigService,private changeDetectorRef:ChangeDetectorRef) {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    \r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.getRoleMenuList(this.localStorage.project_id,this.localStorage.client_id,this.localStorage.role_id);\r\n    \r\n    \r\n  }\r\n  getRoleMenuList(project_id,client_id,role_id){\r\n    this._menuConfigService.getMenusByClientIdWithAlreadyMappedToRole(project_id,client_id,role_id).subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status == true){\r\n          let menuConfigLit = [];\r\n          let menuChildList = [];\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            let menuCfg = resp.data[index];\r\n            if(menuCfg.parent_id == null){\r\n                menuConfigLit.push(menuCfg);\r\n            }else{\r\n                let parentMenu = this.getParentMenu(menuConfigLit, menuCfg.parent_id);\r\n                menuChildList = parentMenu.children;\r\n                if(undefined == menuChildList) {\r\n                  menuChildList = [];\r\n                  parentMenu.children = menuChildList;\r\n                }\r\n                menuChildList.push(menuCfg);\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n          const data = this.buildFileTree(menuConfigLit, 0);\r\n          this.dataChange.next(data);\r\n         \r\n          \r\n        }else{\r\n          \r\n        }\r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n  getParentMenu(menuConfigList, parent_id) {\r\n    let parentMenu;\r\n    for (let index = 0; index < menuConfigList.length; index++) {\r\n        let menuConfig = menuConfigList[index];\r\n        if(menuConfig.menu_id == parent_id) {\r\n          parentMenu = menuConfig;\r\n          break;\r\n        }else{\r\n            let menuChildList = menuConfig.children;\r\n            if(undefined != menuChildList){\r\n              parentMenu = this.getParentMenu(menuChildList, parent_id);\r\n              if(parentMenu != undefined){\r\n                break;\r\n              }\r\n            }\r\n        }\r\n    }\r\n    return parentMenu;\r\n}\r\n  buildFileTree(menudata, level: number): TodoItemFlatNode[] {\r\n    let todoItemList = [];\r\n    for (let index = 0; index < menudata.length; index++) {\r\n      let menuCfg = menudata[index];\r\n        const node = new TodoItemFlatNode();\r\n        node.item = menuCfg.title;\r\n        node.id = menuCfg.id;\r\n        node.title = menuCfg.title;\r\n        node.menu_id = menuCfg.menu_id;\r\n        node.map_id = menuCfg.map_id;  \r\n       node.parent_id = menuCfg.parent_id;\r\n       node.rm_map_id = menuCfg.rm_map_id;\r\n       this.changeDetectorRef.detectChanges();\r\n        if(menuCfg.children != undefined)\r\n          node.children = this.buildFileTree(menuCfg.children, level + 1);\r\n        todoItemList.push(node);\r\n\r\n    }\r\n    return todoItemList;\r\n  }\r\n  \r\n  insertItem(parent: TodoItemFlatNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({item: name} as TodoItemFlatNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemFlatNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\nexport interface MenuAction {\r\n  name: string;\r\n  completed: boolean;\r\n  subMenu?: MenuAction[];\r\n}\r\n@Component({\r\n  selector: 'app-user-role-activity',\r\n  templateUrl: './user-role-activity.component.html',\r\n  styleUrls: ['./user-role-activity.component.scss'],\r\n  providers: [ChecklistDatabase,DatePipe],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n})\r\nexport class UserRoleActivityComponent implements OnInit {\r\n  clients:any;  \r\n  filteredOptionsClient: Observable<any[]>;\r\n  roles:any;\r\n  filteredOptionsRole:Observable<any[]>;\r\n  roleMenuForm: FormGroup;\r\n  actionMenu =false;\r\n  menuNode = false;\r\n  localStorage : any;\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  menuAction: MenuAction = {\r\n    name: 'select All',\r\n    completed: false,\r\n    subMenu: [\r\n      {name: 'Add/Update', completed: false},\r\n      {name: 'Delete', completed: false},\r\n      {name: 'Download', completed: false}\r\n    ]\r\n  };\r\n  selectedClientID : any;\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  TREE_DATA:any;\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n  @ViewChild('tree') tree;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleCollasped\") collaspedRef: any; \r\n  selectChange = false;\r\n  collaspedChange = false;\r\n  selectedMenus = [];\r\n  menuArray:any;\r\n  constructor(private snackBar: MatSnackBar,private menuConfigService:MenuConfigService,private changeDetectorRef: ChangeDetectorRef,private fb: FormBuilder, private clientService : ClientService,private _database: ChecklistDatabase,\r\n              private roleService:RoleService,private _utilityService:UtilityService) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n   this.getMenuListClientWise();\r\n  \r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.initialize();\r\n  }\r\n \r\n\r\nngAfterViewInit() {\r\n  this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n    this.menuArray = menuItemSelecte;\r\n    if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n      this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    }\r\n    this.changeDetectorRef.detectChanges();\r\n  })\r\n  this.treeControl.expandAll();\r\n}\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.roleMenuForm = this.fb.group({\r\n      client:['', [autocompleteObjectValidator(),Validators.required]],\r\n      role:['', [autocompleteObjectValidator(),Validators.required]],\r\n    });\r\n    this.getClients();\r\n   this.getRolesList(this.localStorage.client_id);\r\n  }\r\n  getMenuListClientWise(){\r\n    this._database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n      this.treeControl.expandAll()\r\n      \r\n    });\r\n  }\r\n  \r\n   \r\n   nodeSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants, node)\r\n      : this.checklistSelection.deselect(...descendants, node);\r\n      this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  checkParentIsSelected(data){\r\n    for(var k=0;k<data.length;k++){\r\n      let node =data[k];\r\n       if(node.children != undefined){\r\n         const children =  node.children;\r\n         this.checkParentIsSelected(children);\r\n         let result = false;\r\n      \r\n        for(var i =0; i < children.length;i++){\r\n               const isSelected = this.selectedMenus.filter(t => { return children[i].menu_id == t.menu_id });\r\n               if(isSelected != null && isSelected.length > 0){\r\n                 result = true;\r\n                 break;\r\n               }\r\n        }\r\n         \r\n         if(result == true){\r\n          const isAlreadyPush = this.selectedMenus.filter(t => { return node.menu_id == t.menu_id });\r\n           if(isAlreadyPush == null || isAlreadyPush.length == 0){\r\n            this.selectedMenus.push(node);\r\n           }   \r\n         }\r\n          \r\n       }\r\n     \r\n }\r\n  }\r\n\r\n  openSubmit(){\r\n    let formValues = this.roleMenuForm.value;\r\n    ////\r\n    this.selectedMenus = [];\r\n    this.selectedMenus = [...this.checklistSelection.selected];\r\n     \r\n    this.checkParentIsSelected(this.dataSource.data);\r\n    \r\n    //;\r\n    let params = {\r\n      role_id :formValues.role.id, \r\n       menus :this.selectedMenus.map(v => ({ menu_id: v.menu_id})),\r\n      status:\"Y\",\r\n      created_by : this.localStorage.userId \r\n    }\r\n\r\n    \r\n   this.menuConfigService.setRoleMenuMapping(params).subscribe(\r\n     (resp:any )=>{\r\n      // \r\n      if(resp.status = true){\r\n        this.snackBar.open(MessageConstant.roleMenuMappedSucess, 'Dismiss', { duration: 5000 });\r\n        this._database.getRoleMenuList(this.localStorage.project_id,formValues.client.id,formValues.role.id)\r\n      }else{\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n       \r\n       \r\n\r\n     },\r\n     (err)=>{\r\n      // \r\n       this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n     }\r\n   )\r\n\r\n      \r\n      \r\n   \r\n\r\n  }\r\n  getClients(){\r\n    \r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        this.clients = data;\r\n\r\n         const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n         this.roleMenuForm.get('client').setValue(toSelect);\r\n          this.selectedClientID = toSelect.id;\r\n        this.filteredOptionsClient = this.roleMenuForm.controls.client.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientModels(name) : this.clients)\r\n        );\r\n\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    //this.dataSource.data =[];\r\n    //this._database.dataChange.next(null);\r\n    //this.checklistSelection.clear();\r\n    //this.descendantsAllSelected( this.checklistSelection.);\r\n    //this._database.getRoleMenuList(this.localStorage.project_id,value.id);\r\n    this.getRolesList(value.id);\r\n    this.roleMenuForm.get('role').setValue('');\r\n    this.selectedClientID = value.id;\r\n    //this.getMenuListClientWise();\r\n  }\r\n\r\n  getRolesList(client_id){\r\n    this.roles = [];\r\n    this.roleService.getActiveRolesByClientId(this.localStorage.project_id,client_id).subscribe(\r\n      (resp:any)=>{\r\n        if(resp.status = true){\r\n          this.roles = resp.data;\r\n            \r\n          const toSelect = this.roles.find(c => c.id == this.localStorage.role_id);\r\n          if(toSelect != null){\r\n            if(toSelect.id = this.localStorage.role_id){\r\n              this.roleMenuForm.get('role').setValue(toSelect);\r\n            }\r\n            \r\n          }\r\n          \r\n         \r\n         this.filteredOptionsRole = this.roleMenuForm.controls.role.valueChanges\r\n         .pipe(\r\n           startWith(''),\r\n           map(value => typeof value === 'string' ? value : value.name),\r\n           map(name => name ? this._filterRoleModels(name) : this.roles)\r\n         );\r\n         //this._database.getRoleMenuList(this.localStorage.project_id,client_id,toSelect.id); \r\n        }\r\n        \r\n\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterRoleModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.roles.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onRoleChange(value){\r\n \r\n    this.checklistSelection.clear();\r\n  this._database.getRoleMenuList(this.localStorage.project_id,this.selectedClientID,value.id);\r\n  }\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n  menu_id = (node:TodoItemFlatNode)=>node.menu_id;\r\n  parent_id = (node:TodoItemFlatNode)=>node.parent_id;\r\n  getChildren = (node: TodoItemFlatNode): TodoItemFlatNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemFlatNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n        ? existingNode\r\n        : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.menu_id = node.menu_id;\r\n    flatNode.parent_id = node.parent_id;\r\n    flatNode.expandable = !!node.children?.length;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    if(node.rm_map_id != null){\r\n      this.nodeSelectionToggle(flatNode);\r\n    }\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  // descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n  //   const descendants = this.treeControl.getDescendants(node);\r\n    \r\n  //   if (!descendants.length) {\r\n  //     return this.checklistSelection.isSelected(node);\r\n  //   }\r\n  //   const selected = this.checklistSelection.isSelected(node);\r\n  //   const allSelected = descendants.every(child => this.checklistSelection.isSelected(child));\r\n  //   if (!selected && allSelected) {\r\n  //     this.checklistSelection.select(node);\r\n     \r\n  //   }\r\n  //   return allSelected;\r\n  // }\r\n\r\n \r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      this.changeDetectorRef.markForCheck();\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n    this.actionMenu=true;\r\n    this.menuNode = true;\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n    \r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\r\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n    this.actionMenu=true;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this._database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this._database.updateItem(nestedNode!, itemValue);\r\n  }\r\n  allComplete: boolean = false;\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.menuAction.subMenu != null && this.menuAction.subMenu.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(node:any): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n   // if (node.this.menuAction.subMenu == null) {\r\n     // return false;\r\n   // }\r\n    //return node.this.menuAction.subMenu.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.menuAction.subMenu  == null) {\r\n      return;\r\n    }\r\n    this.menuAction.subMenu .forEach(t => t.completed = completed);\r\n  }\r\n  updateSelectChange(event){\r\n    this.selectChange = event.checked;\r\n    this.ref.checked = this.selectChange;\r\n    if(this.selectChange == true){\r\n      this.checklistSelection.clear();\r\n      this.selectAll();\r\n     \r\n     // this.treeControl.collapseAll();\r\n    }else{\r\n      this.unSelectAll();\r\n      this.checklistSelection.clear();\r\n      //this.checklistSelection.selected\r\n      //this.treeControl.expandAll();\r\n    }\r\n  }\r\n  updatecollaspedChange(event){\r\n    this.collaspedChange = event.checked;\r\n    this.collaspedRef.checked = this.collaspedChange;\r\n    if(this.collaspedChange == true){\r\n      this.treeControl.collapseAll();\r\n    }else{\r\n      this.treeControl.expandAll();\r\n    }\r\n  }\r\n  selectAll(){\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if(!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n  unSelectAll(){\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if(!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n\t  <!-- CENTER -->\r\n\t  <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n\t\t  <!-- HEADER -->\r\n\t\t  <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n\t\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n\t\t\t\t  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">User Role Activity\r\n\t\t\t\t  </span>\r\n  \r\n\t\t\t\t  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n\t\t\t\t\t\t  (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n\t\t\t\t\t  <mat-icon>menu</mat-icon>\r\n\t\t\t\t  </button-->\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"roleMenuForm\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"roleMenuForm\" >\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"30\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t(optionSelected)='onClientChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"roleMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"30\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"role\" autocomplete=\"off\" [matAutocomplete]=\"roleAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #roleAuto=\"matAutocomplete\" [displayWith]=\"displayRole\"\r\n\t\t\t\t(optionSelected)='onRoleChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter role name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"roleMenuForm.get('client').invalid\">Please select role </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"20\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: 18px;\" >\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"selectChange\"(change)=\"updateSelectChange($event)\" #toggleElement>\r\n\t\t\t\t\t{{selectChange ? 'Select All' : 'Un Select All'}}</mat-slide-toggle> &nbsp;&nbsp;\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"collaspedChange\"(change)=\"updatecollaspedChange($event)\" #toggleCollasped>\r\n\t\t\t\t\t\t{{collaspedChange ? 'Collasped' : 'Un Collasped'}}</mat-slide-toggle>\r\n\t\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" routerLink=\"/chargingStation/crud/list\">Cancel</button> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"20\" style=\"margin-bottom: 18px;\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" style=\"float: right;\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t\t</div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"margin-top:20px ;\">\r\n        <mat-toolbar  style=\"background-color: #00acc1 !important;color:white\" class=\"connector-toolbar\">\r\n          <!-- sidebar toggle button -->\r\n          <h6 class=\"m-0 pl-16 font-normal fz-1\"> \r\n            <button mat-icon-button [style.alignSelf]=\"'center'\"  class=\"mr-16\">\r\n              <mat-icon>list</mat-icon>\r\n            </button> &nbsp;Menu List\r\n          </h6>\r\n        </mat-toolbar>\r\n      </div>\r\n\t</div>\r\n\t<div fxLayout=\"row wrap\"  style=\"padding-top:20px;\">\r\n\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t  <mat-tree #tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t  <mat-checkbox class=\"checklist-leaf-node\"\r\n\t\t\t\t\t\t\t[checked]=\"checklistSelection.isSelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"checklistSelection.isSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t  <div fxLayout=\"row wrap\" style=\"padding-right: 10px;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectAdd\">Add/Update</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDelete\">Delete</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDownload\">Download</mat-checkbox>\r\n\t\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t  </div>           -->\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\t\t\t  \r\n\t\t\t  <button mat-icon-button matTreeNodeToggle\r\n\t\t\t\t\t  [attr.aria-label]=\"'Toggle ' + node.item\">\r\n\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t</mat-icon>\r\n\t\t\t  </button>\r\n\t\t\t  <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n\t\t\t\t\t\t\t[indeterminate]=\"descendantsPartiallySelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t  <!-- <div *ngIf=\"descendantsAllSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t<div class=\"cb-wrapper\" [ngClass]=\"{'cb-vertival': !tmp }\">\r\n\t\t\t\t\t\t\t  <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"allComplete\"  [indeterminate]=\"someComplete(node)\" (change)=\"setAll($event.checked)\" > {{menuAction.name}}</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  <div *ngFor=\"let subMenu of menuAction.subMenu\">\r\n\t\t\t\t\t\t\t\t<mat-checkbox [(ngModel)]=\"subMenu.completed\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"updateAllComplete()\">\r\n\t\t\t\t\t\t\t\t  {{subMenu.name}}\r\n\t\t\t\t\t\t\t\t</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>                   -->\r\n\t\t\t  <!--button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button-->\r\n\t\t\t</mat-tree-node>\r\n\t\t\t\r\n\t\t  </mat-tree>\r\n\t\t  </div>\r\n\t\t \r\n\t\t</div>\r\n\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start start\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t</div> -->\r\n  </form>\r\n</div> \r\n"],"sourceRoot":"webpack:///"}