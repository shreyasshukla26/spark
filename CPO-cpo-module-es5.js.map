{"version":3,"sources":["webpack:///src/app/main/registrationModule/CPO/create/create.component.ts","webpack:///src/app/main/registrationModule/CPO/create/create.component.html","webpack:///src/app/main/registrationModule/CPO/cpo-routing.module.ts","webpack:///src/app/main/registrationModule/CPO/list/list.component.ts","webpack:///src/app/main/registrationModule/CPO/list/list.component.html","webpack:///src/app/main/registrationModule/CPO/cpo.module.ts"],"names":["CreateComponent","fb","q","username","email","gender","reactiveForm1","group","required","city","address","company","mobile","tele","website","date","reactiveForm2","role","pan","name","dob","loginId","password","confirmPassword","empCode","aadhar","form","get","hasError","selector","templateUrl","styleUrls","routes","path","component","data","title","redirectTo","pathMatch","CpoRoutingModule","forChild","imports","exports","ListComponent","COMPONENTS","COMPONENTS_DYNAMIC","CpoModule","declarations","entryComponents"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACec;;AAAqD;;AACrD;;;;;;AASA;;AAAoD;;AACpD;;;;;;AAQA;;AAAqD;;AACrD;;;;;;AASA;;AAAoD;;AACpD;;;;;;AAQA;;AAAsD;;AACtD;;;;;;AAQA;;AAAwD;;AACxD;;;;;;AAQA;;AAAuD;;AACvD;;;;;;AAQA;;AAAyD;;AACzD;;;;;;AAQA;;AAAwD;;AACxD;;;;;;AAQA;;AAAgE;;AAChE;;;;;;AAQA;;AAAuD;;AACvD;;;;;;AAQA;;AAAwD;;AACxD;;;;UD7GDA,e;AAUX,iCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AATpB,eAAAC,CAAA,GAAI;AACFC,oBAAQ,EAAE,EADR;AAEFC,iBAAK,EAAE,EAFL;AAGFC,kBAAM,EAAE;AAHN,WAAJ;AAUE,eAAKC,aAAL,GAAqB,KAAKL,EAAL,CAAQM,KAAR,CAAc;AACjCJ,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWK,QAAZ,CAAL,CADuB;AAEjCJ,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWI,QAAZ,EAAsB,0DAAWJ,KAAjC,CAAL,CAF0B;AAGjCC,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWG,QAAZ,CAAL,CAHyB;AAIjCC,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAJ2B;AAKjCE,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CALwB;AAMjCG,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWH,QAAZ,CAAL,CANwB;AAOjCI,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL,CAPyB;AAQjCK,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWL,QAAZ,CAAL,CAR2B;AASjCM,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWN,QAAZ,CAAL,CATwB;AAUjCO,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWP,QAAZ,CAAL;AAV2B,WAAd,CAArB;AAaA,eAAKQ,aAAL,GAAqB,KAAKf,EAAL,CAAQM,KAAR,CAAc;AACjCU,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWT,QAAZ,CAAL,CAD2B;AAEjCU,eAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWV,QAAZ,EAAsB,0DAAWJ,KAAjC,CAAL,CAF4B;AAGjCe,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWX,QAAZ,CAAL,CAH2B;AAIjCY,eAAG,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWZ,QAAZ,CAAL,CAJ4B;AAKjCJ,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWI,QAAZ,CAAL,CAL0B;AAMjCa,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWb,QAAZ,CAAL,CANwB;AAOjCI,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL,CAPyB;AAQjCc,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWd,QAAZ,CAAL,CARuB;AASjCe,2BAAe,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWf,QAAZ,CAAL,CATgB;AAUjCgB,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWhB,QAAZ,CAAL,CAVwB;AAWjCiB,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWjB,QAAZ,CAAL,CAXyB;AAYjCE,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL;AAZwB,WAAd,CAArB;AAcD;;;;qCAEU,CAAE;;;0CAEGkB,I,EAAiB;AAC/B,mBAAOA,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkBC,QAAlB,CAA2B,UAA3B,IACH,wBADG,GAEHF,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkBC,QAAlB,CAA2B,OAA3B,IACA,mBADA,GAEA,EAJJ;AAKD;;;;;;;yBAhDU5B,e,EAAe,2H;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,8/C;AAAA;AAAA;ACV5B;;AACE;;AACE;;AAGE;;AACE;;AAEE;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACE;;AAAY;;AAAY;;AACxB;;AAAsB;;AAAS;;AAC/B;;AAAsB;;AAAW;;AACjC;;AAAsB;;AAAa;;AACrC;;AACA;;AAEF;;AACF;;AAGA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACA;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAEF;;AACF;;AAEF;;AAEA;;AAAwD;;AAAI;;AAE9D;;AAIF;;AACF;;AAEF;;;;;;AAjIY;;AAAA;;AAYc;;AAAA;;AAUA;;AAAA;;AASA;;AAAA;;AAOI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;;;;;;;;wED5GbA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT6B,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMC,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE,wEAA7B;AAA8CC,YAAI,EAAE;AAAEC,eAAK,EAAE;AAAT;AAApD,OADqB,EAErB;AAAEH,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE,kEAA3B;AAA0CC,YAAI,EAAE;AAAEC,eAAK,EAAE;AAAT;AAAhD,OAFqB,EAGrB;AAAEH,YAAI,EAAE,EAAR;AAAYI,kBAAU,EAAG,QAAzB;AAAmCC,iBAAS,EAAC;AAA7C,OAHqB,CAAvB;;UAWaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,QAAb,CAAsBR,MAAtB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBO,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBR,MAAtB,CAAD,CADD;AAERU,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;AClB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,a;AAEX,iCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,a;AAAa,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP1B;;AAAG;;AAAW;;;;;;;;wEDODA,a,EAAa;gBALzB,uDAKyB;iBALf;AACTd,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,UAAMa,UAAU,GAAG,CAAC,wEAAD,CAAnB;AACA,UAAMC,kBAAkB,GAAG,EAA3B;;UAOaC,S;;;;;cAAAA;;;;2BAAAA,S;AAAS,S;AAAA,kBAJX,CAAC,qEAAD,EAAe,oEAAf,CAIW;;;;4HAATA,S,EAAS;AAAA,yBARF,wEAQE,EAHiC,kEAGjC;AAH8C,oBADxD,qEACwD,EAD1C,oEAC0C;AAG9C,S;AAJoB,O;;;;;wEAI7BA,S,EAAS;gBALrB,sDAKqB;iBALZ;AACRL,mBAAO,EAAE,CAAC,qEAAD,EAAe,oEAAf,CADD;AAERM,wBAAY,YAAMH,UAAN,EAAqBC,kBAArB,GAAyC,kEAAzC,EAFJ;AAGRG,2BAAe,EAAEH;AAHT,W;AAKY,U","file":"CPO-cpo-module-es5.js","sourcesContent":["\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  q = {\r\n    username: '',\r\n    email: '',\r\n    gender: '',\r\n  };\r\n\r\n  reactiveForm1: FormGroup;\r\n  reactiveForm2: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.reactiveForm1 = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      gender: ['', [Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      address: ['', [Validators.required]],\r\n      company: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      tele: ['', [Validators.required]],\r\n      website: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n    });\r\n\r\n    this.reactiveForm2 = this.fb.group({\r\n      role: ['', [Validators.required]],\r\n      pan: ['', [Validators.required, Validators.email]],\r\n      name: ['', [Validators.required]],\r\n      dob: ['', [Validators.required]],\r\n      email: ['', [Validators.required]],\r\n      loginId: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      confirmPassword: ['', [Validators.required]],\r\n      empCode: ['', [Validators.required]],\r\n      aadhar: ['', [Validators.required]],\r\n      address: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <!-- <mat-card-title>Form Horizontal</mat-card-title> -->\r\n\r\n      <form [formGroup]=\"reactiveForm2\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Role</mat-label>\r\n              <mat-select required formControlName=\"role\" required>\r\n                <mat-option>-- Select --</mat-option>\r\n                <mat-option value=\"1\">CPO Owner</mat-option>\r\n                <mat-option value=\"2\">CS Operator</mat-option>\r\n                <mat-option value=\"2\">CS Supervisor</mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('role').invalid\">Please select role\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>PAN No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"pan\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('pan').invalid\">Please enter pan number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Full Name</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"name\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('name').invalid\">Please enter name\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"DOB\" formControlName=\"dob\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n              <mat-error *ngIf=\"reactiveForm2.get('dob').invalid\">Please enter DOB\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Email</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('email').invalid\">Please enter email\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Login Id</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"loginId\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('loginId').invalid\">Please enter login id\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Mobile No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"mobile\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('mobile').invalid\">Please enter mobile number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Password</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"password\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('password').invalid\">Please enter password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Employee Code</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"empCode\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('empCode').invalid\">Please enter employee code\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Confirm Password</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"confirmPassword\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('confirmPassword').invalid\">Please enter confirm password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Aadhar No</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"aadhar\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('aadhar').invalid\">Please enter aadhar number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Address</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"address\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('address').invalid\">Please enter address\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n\r\n      </form>\r\n\r\n      <!-- <div class=\"m-t-16\">{{reactiveForm2.value|json}}</div> -->\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'create', component: CreateComponent, data: { title: 'CPO Registration' } },\r\n  { path: 'list', component: ListComponent, data: { title: 'CPO List' } },\r\n  { path: '', redirectTo : 'create', pathMatch:'full' },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CpoRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>list works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CpoRoutingModule } from './cpo-routing.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\n\r\n\r\nconst COMPONENTS = [CreateComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, CpoRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC, ListComponent],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class CpoModule {}\r\n"]}