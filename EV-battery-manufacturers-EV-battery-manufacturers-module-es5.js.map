{"version":3,"sources":["webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/EV-battery-manufacturers.module.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/EV-battery-manufacturers-crud/EV-battery-manufacturers-crud.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/EV-battery-manufacturers-crud/EV-battery-manufacturers-crud.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/publish/publish.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/publish/publish.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/moderate-list/moderate-list.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/moderate-list/moderate-list.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/create/create.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/create/create.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/EV-battery-manufacturers-crud/routes.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/list/list.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/list/list.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/EV-battery-manufacturers-routing.module.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/action-dialog/action-dialog.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/action-dialog/action-dialog.component.html","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/view-dialog/view-dialog.component.ts","webpack:///src/app/main/EV-space/EV-dealers/EV-battery-manufacturers/view-dialog/view-dialog.component.html"],"names":["COMPONENTS","COMPONENTS_DYNAMIC","EVBatteryManufacturersModule","imports","declarations","entryComponents","EVBatteryManufacturersCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","nav_list","nav_list_with_tab","filter","x","id","objectData","children","y","objectChildData","z","childData","isDefaultRoutePermeted","t","push","label","link","navigate","selector","templateUrl","styleUrls","encapsulation","None","animations","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","EVDealers","PublishComponent","evDealersService","dialog","snackBar","displayedColumns","head","dealIdSearch","compNameSearch","websiteSearch","emailSearch","citySearch","stateSearch","statusSearch","getAllDealers","filterEntity","filterType","ANYWHERE","event","filterValue","target","value","dataSource","trim","toLowerCase","paginator","firstPage","getAllEvDealer","resp","status","evDealers","data","i","length","statusString","sort","open","NoRecordFoundMessage","duration","err","action","buttonAction","params","dialogRef","width","panelClass","autoFocus","disableClose","afterClosed","result","visibleOption","ev","stopPropagation","deal_type_id","company_name","website","email","city_name","state_name","exportedData","filteredData","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","EvComponentDealers","ModerateListComponent","evBatteriesService","fb","getAllModComptDealers","getModerateEvDealerListByKeys","evCompDealers","confirmDialogRef","deleteEvBattery","userId","deleteMessage","errorMessage","deal_type","autocompleteObjectValidator","control","CreateComponent","countryService","datePipe","initialize","form","group","required","pattern","deal_id","cp_name","mobile","addressLine1","addressLine2","pincode","city","state","country","landmark","remarks","getAllCountry","getAllState","getFranchaise","franchise","toSelect","find","c","get","setValue","filteredOptionFranchaise","controls","valueChanges","pipe","_filterFranchise","item","option","includes","countries","filteredOptionCountry","name","_filterCountry","states","filteredOptionState","_filterState","getAllCities","cities","filteredOptionCity","_filterCity","pin_code_id","getCountryStateByPIN","state_id","getCountryByState","countrydata","country_id","getStateByCountry","statedata","getCityByState","Citydata","getStatesByCountry","valid","formValues","address1","address2","PIN","city_id","createdby","createEvBattery","message","hasError","stateId","citiesdata","getCitiesByStates","checked","ref","onSubmit","$event","preventDefault","getStateCountry","onCityChange","onStateChange","onCountryChange","updateStatus","providers","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","EvBattery","ListComponent","evCompSearch","getBatteryById","getPublishEvDealerListByKeys","evBattery","routes","EVBatteryManufacturersRoutingModule","forChild","exports","ActionDialogComponent","evDelarsService","isEditMode","isAvailable","isDirty","validatingForm","assignValues","getAllCity","countryID","stateID","close","modifyby","updateEvBattery","recordUpdateMessage","closeActionPanel","onYesClick","toggleAvailable","ViewDialogComponent","isPublish","isModrate","publishEvBattery","modify_by","moderateEvBattery"],"mappings":"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","file":"EV-battery-manufacturers-EV-battery-manufacturers-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EVBatteryManufacturersRoutingModule } from './EV-battery-manufacturers-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { EVBatteryManufacturersCrudComponent } from './EV-battery-manufacturers-crud/EV-battery-manufacturers-crud.component';\r\nimport { ModerateListComponent } from './moderate-list/moderate-list.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { PublishComponent } from './publish/publish.component';\r\nconst COMPONENTS = [EVBatteryManufacturersCrudComponent, CreateComponent, ListComponent,PublishComponent, ModerateListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        EVBatteryManufacturersRoutingModule,\r\n        FuseSharedModule,\r\n    ],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EVBatteryManufacturersModule { }","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-EV-battery-manufacturers-crud',\r\n  templateUrl: './EV-battery-manufacturers-crud.component.html',\r\n  styleUrls: ['./EV-battery-manufacturers-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class EVBatteryManufacturersCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Manufacturer List', link: 'listManufacturers' },\r\n    // { label: 'Publish List', link: 'listPublish' },\r\n    // { label: 'Moderate List', link: 'listModerate' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"evSpace\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id == \"evDealers \") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"evBatteryManufacturers\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if (this.childData.children != undefined && this.childData.children != null) {\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"manufacturers\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'Manufacturer List', link: 'listManufacturers' });\r\n                        }\r\n                        if (t.id === \"moderate\") {\r\n                          this.tempLinks.push({ label: 'Moderate List', link: 'listModerate' });\r\n                        }\r\n                        if (t.id === \"create\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/evSpace/evDealer/evBatteryManufacturers/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">\r\n                      {{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\n\r\n\r\nexport class EVDealers {\r\n  id: string;\r\n  company_name: string;\r\n  deal_type_id: number;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-publish',\r\n  templateUrl: './publish.component.html',\r\n  styleUrls: ['./publish.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class PublishComponent implements OnInit {\r\n\r\n  filterEntity: EVDealers;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['deal_type_id', 'company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Deal Id', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EVDealers>;\r\n\r\n  evDealers: EVDealers[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  dealIdSearch = false;\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n\r\n\r\n  constructor(private evDealersService: EVDealersService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllDealers();\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EVDealers();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllDealers() {\r\n    this.evDealersService.getAllEvDealer().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evDealers = resp.data;\r\n          for (var i = 0; i < this.evDealers.length; i++) {\r\n            if (this.evDealers[i].status == 'N') {\r\n              this.evDealers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evDealers[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evDealers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.evDealersService.deleteEvDealer(id, this.localStorage.useId).subscribe(\r\n  //         (data: any) => {\r\n  //           this.getAllDealers();\r\n  //           this.cdr.detectChanges();\r\n  //           this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n  //         }, (err) => {\r\n\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllDealers();\r\n    });\r\n  }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getAllDealers();\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'dealIdSearch') {\r\n      this.dealIdSearch = !this.dealIdSearch;\r\n      this.filterEntity.deal_type_id = null;\r\n    }\r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \" \";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \" \";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \" \";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \" \";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \" \";\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Deal Id': evDealers.deal_type_id, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Franchise List');\r\n    XLSX.writeFile(workBook, 'Franchise.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.deal_type_id, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Franchise List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('Franchise-List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"deal_type_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dealIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Deal Id <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dealIdSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Deal Id\" [(ngModel)]=\"filterEntity.deal_type_id\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.deal_type_id}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'modrateAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp; -->\r\n\r\n                        <!-- <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\nexport class EvComponentDealers {\r\n  id: string;\r\n  company_name: string;\r\n  deal_type_id: string;\r\n  deal_type:string;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-moderate-list',\r\n  templateUrl: './moderate-list.component.html',\r\n  styleUrls: ['./moderate-list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class ModerateListComponent implements OnInit {\r\n\r\n  filterEntity: EvComponentDealers;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['deal_type_id','company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Deal Id', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EvComponentDealers>;\r\n\r\n  localStorage: any;\r\n  allChargers: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  dealIdSearch= false;\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  evCompDealers: EvComponentDealers[];\r\n  \r\n  constructor(private evBatteriesService: EVBatteriesService, public dialog: MatDialog,private fb: FormBuilder, \r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EvComponentDealers();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getAllModComptDealers();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllModComptDealers() {\r\n    this.evBatteriesService.getModerateEvDealerListByKeys().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evCompDealers = resp.data;\r\n          for (var i = 0; i < this.evCompDealers.length; i++) {\r\n            if (this.evCompDealers[i].status == 'N') {\r\n              this.evCompDealers[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evCompDealers[i].statusString = 'Moderate';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evCompDealers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.evBatteriesService.deleteEvBattery(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.getAllModComptDealers();\r\n              this.cdr.detectChanges();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 5000 });\r\n            }else{\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n            }\r\n            \r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModComptDealers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getAllModComptDealers();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'dealIdSearch') {\r\n      this.dealIdSearch = !this.dealIdSearch;\r\n      this.filterEntity.deal_type = \"\";\r\n    }\r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \"\";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \"\";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Deal Id': evDealers.deal_type_id, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Ev Component Manufacturers');\r\n    XLSX.writeFile(workBook, 'Ev Component Manufacturers.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.deal_type_id, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Ev Component Manufacturers Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Ev Component Manufacturers report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n      \r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n\r\n                <ng-container matColumnDef=\"deal_type_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!dealIdSearch\" class=\"custom_font_size\" style=\"display: flex;\">Deal Type <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"dealIdSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Deal Type\" [(ngModel)]=\"filterEntity.deal_type\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('dealIdSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.deal_type}} </td>\r\n                </ng-container>\r\n                \r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element,'viewAction')\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Publish\" (click)=\"viewDialog('Publish',element,'publishAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n//import { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport {EVBatteriesService} from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service'\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionFranchaise: Observable<any[]>;\r\n  franchise:any;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  states: any;\r\n  stateName: any;\r\n  cities: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = true;\r\n\r\n  constructor(private fb: FormBuilder, public countryService: CountriesService,private evBatteriesService:EVBatteriesService,\r\n    private snackBar: MatSnackBar, private router: Router, private datePipe: DatePipe,) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\-+ ]*$/)]],\r\n      deal_id: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      website: [''  ],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [ Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks:[''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    this.getFranchaise();\r\n    //this.getAllCity();\r\n  }\r\n  getFranchaise() {\r\n    this.evBatteriesService.getFranchaise().subscribe(\r\n      (resp: any) => {\r\n        this.franchise = resp.data;\r\n        const toSelect = this.franchise.find(c => c.id == '108');\r\n        this.form.get('deal_id').setValue(toSelect);\r\n        this.filteredOptionFranchaise = this.form.controls.deal_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(value => value ? this._filterFranchise(value) : this.franchise)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayFrancise(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  private _filterFranchise(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.franchise.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n  \r\n      let params = {\r\n        company_name: formValues.company_name,\r\n        deal_type_id: formValues.deal_id.id, \r\n        website: formValues.website,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks:formValues.remarks,\r\n        status: this.status == true ? 'M' : 'N',\r\n        createdby: this.localStorage.userId,\r\n      }\r\n      this.evBatteriesService.createEvBattery(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/evSpace/evDealer/evBatteryManufacturers/crud/listModerate']);\r\n          } else {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n    else {\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\" autocomplete=\"off\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Deal Type</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"deal_id\" readonly [matAutocomplete]=\"franciseAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #franciseAuto=\"matAutocomplete\" [displayWith]=\"displayFrancise\">\r\n          <mat-option *ngFor=\"let option of filteredOptionFranchaise | async\" [value]=\"option\">\r\n            {{option.value}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n         <mat-error *ngIf=\"form.get('deal_id').invalid\">Please select deal id\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Deal Id</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"deal_id\" type=\"number\"  autocomplete=\"off\" required>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter deal id\">model_training</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('deal_id').invalid\">Please enter deal id </mat-error>\r\n      </mat-form-field> -->\r\n    \r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Company Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" required autocomplete=\"off\">\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n        <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Website</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"website\"  autocomplete=\"off\" style=\"text-transform:none\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">account_circle\r\n        </mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Contact Person Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\"   style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n      \r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n          (change)=\"getStateCountry()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n        (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n         <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n         <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n          [matAutocomplete]=\"countryAuto\" required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Remarks</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <div fxFlex=\"33\">\r\n        <mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement >\r\n          {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/evSpace/evDealer/evBatteryManufacturers/crud/listFranchise\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ModerateListComponent } from '../moderate-list/moderate-list.component';\r\nimport { ListComponent } from '../list/list.component';\r\nimport { PublishComponent } from '../publish/publish.component'\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  {\r\n    path: 'create', component: CreateComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'listManufacturers', component: ListComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'listModerate', component: ModerateListComponent, canActivate: [AuthGuard]\r\n  },\r\n  // {\r\n  //   path: 'listPublish', component: PublishComponent, canActivate: [AuthGuard]\r\n  // },\r\n  {\r\n    path: '', redirectTo: 'listManufacturers', pathMatch: 'full'\r\n  },\r\n];\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\nexport class EvBattery {\r\n  id: string;\r\n  company_name: string;\r\n  deal_type_id: string;\r\n  deal_type:string;\r\n  value:string;\r\n  website: string;\r\n  email: string;\r\n  cp_name: string;\r\n  mobile: number;\r\n  address1: string;\r\n  address2: string;\r\n  PIN: number;\r\n  landmark: string;\r\n  city_name: string;\r\n  state_id: number;\r\n  state_name: string;\r\n  country_id: number;\r\n  country_name: string;\r\n  remarks: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: EvBattery;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'deal_type_id','company_name', 'website', 'email', 'city_name', 'state_name', 'status', 'action'];\r\n  head = [['Deal Type', 'Company Name', 'Website', 'Email', 'City', 'State', 'Status']]\r\n  dataSource: MatTableDataSource<EvBattery>;\r\n\r\n  evBattery: EvBattery[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  evCompSearch = false;\r\n  compNameSearch = false;\r\n  websiteSearch = false;\r\n  emailSearch = false;\r\n  citySearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n\r\n\r\n  constructor(private evBatteriesService: EVBatteriesService, public dialog: MatDialog, private snackBar: MatSnackBar,\r\n    private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.filterEntity = new EvBattery();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getBatteryById();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getBatteryById() {\r\n    this.evBatteriesService.getPublishEvDealerListByKeys().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.evBattery = resp.data;\r\n          for (var i = 0; i < this.evBattery.length; i++) {\r\n            if (this.evBattery[i].status == 'N') {\r\n              this.evBattery[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evBattery[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evBattery);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  // delete(id) {\r\n  //   this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n  //     disableClose: true\r\n  //   });\r\n  //   this.confirmDialogRef.afterClosed().subscribe(result => {\r\n  //     if (result) {\r\n  //       this.evDealersService.deleteComponentDealer(id, this.localStorage.useId).subscribe(\r\n  //         (data: any) => {\r\n  //           this.getAllComptDealers();\r\n  //           this.cdr.detectChanges();\r\n  //           this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n  //         }, (err) => {\r\n\r\n  //         }\r\n  //       )\r\n  //     }\r\n  //     this.confirmDialogRef = null;\r\n  //   });\r\n\r\n  // }\r\n\r\n  viewDialog(action,data,buttonAction): void {\r\n    let params = {\r\n      action: action,\r\n      data: data,\r\n      buttonAction:buttonAction\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBatteryById();\r\n    });\r\n  }\r\n\r\n  // openDialog(action, data): void {\r\n  //   let params = {\r\n  //     action: action,\r\n  //     data: data\r\n  //   }\r\n  //   const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n  //     width: '1200px',\r\n  //     data: params,\r\n  //     autoFocus: false,\r\n  //     disableClose: true,\r\n  //     panelClass: 'app-action-dialog',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe(result => {\r\n  //     this.getAllComptDealers();\r\n  //     this.cdr.detectChanges();\r\n  //   });\r\n  // }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'evCompSearch') {\r\n      this.evCompSearch = !this.evCompSearch;\r\n      this.filterEntity.deal_type = \"\";\r\n    }\r\n    if (visibleOption == 'compNameSearch') {\r\n      this.compNameSearch = !this.compNameSearch;\r\n      this.filterEntity.company_name = \"\";\r\n    }\r\n    if (visibleOption == 'websiteSearch') {\r\n      this.websiteSearch = !this.websiteSearch;\r\n      this.filterEntity.website = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \" \";\r\n    }\r\n    if (visibleOption == 'citySearch') {\r\n      this.citySearch = !this.citySearch;\r\n      this.filterEntity.city_name = \"\";\r\n    }\r\n    if (visibleOption == 'stateSearch') {\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state_name = \"\";\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = \"\";\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Deal Type': evDealers.deal_type_id, 'Company Name': evDealers.company_name, 'Website': evDealers.website,\r\n        'Email': evDealers.email, 'City': evDealers.city_name, 'State': evDealers.state_name,\r\n        'Status': evDealers.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'EV Battery Manufacturers List');\r\n    XLSX.writeFile(workBook, 'EV Battery Manufacturers.xlsx');\r\n    //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n    //this.preloader.close();\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evDealers = this.dataSource.filteredData[i];\r\n\r\n      var data = [evDealers.deal_type_id, evDealers.company_name, evDealers.website, evDealers.email, evDealers.city_name,\r\n      evDealers.state_name, evDealers.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('EV Battery Manufacturers List', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    // below line for Download PDF document  \r\n    doc.save('EV Battery Manufacturers-List.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;\r\n        margin-left: 10px;\r\n        margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"deal_type_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!evCompSearch\" class=\"custom_font_size\" style=\"display: flex;\">Deal Type <mat-icon\r\n                                matSuffix (click)=\"changeVisibility('evCompSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"evCompSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Deal Type\" [(ngModel)]=\"filterEntity.deal_type\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('evCompSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.deal_type}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"company_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!compNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Company Name\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"compNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Company Name\" [(ngModel)]=\"filterEntity.company_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('compNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.company_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"website\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!websiteSearch\" class=\"custom_font_size\" style=\"display: flex;\">Website\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">\r\n                                search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"websiteSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Website\" [(ngModel)]=\"filterEntity.website\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('websiteSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">search\r\n                            </mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Email \" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"city_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!citySearch\" class=\"custom_font_size\" style=\"display: flex;\">City\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"citySearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City\" [(ngModel)]=\"filterEntity.city_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('citySearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.city_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"viewDialog('Moderate',element,'modrateAction')\"\r\n                            style=\"cursor:pointer\">published_with_changes</mat-icon>&nbsp;&nbsp;\r\n                        <!-- <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon> -->\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EVBatteryManufacturersCrudComponent } from './EV-battery-manufacturers-crud/EV-battery-manufacturers-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './EV-battery-manufacturers-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes: Routes = [\r\n    {\r\n        path: 'crud', component: EVBatteryManufacturersCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class EVBatteryManufacturersRoutingModule { }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EVDealersService } from 'app/shared/services/ev-space/ev-dealers/EV-dealers.service';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n\r\n  batches: any;\r\n  stations: any;\r\n  versions: any;\r\n  isAvailable = false;\r\n  chargingModels: any;\r\n  connector_data: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleAvailable\") toggleAvailable: any;\r\n\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isDirty: boolean = false;\r\n  validatingForm = false;\r\n  menuArray: any;\r\n  filteredOptionFranchaise: Observable<any[]>;\r\n  franchise:any;\r\n  constructor(private fb: FormBuilder, private evDelarsService:EVDealersService,private evBatteriesService:EVBatteriesService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\-+ ]*$/)]],\r\n      deal_id: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      website: ['',],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [ Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id); \r\n    this.getAllCity(this.params.data.state_id); \r\n    this.getFranchaise();\r\n  }\r\n  getFranchaise() {\r\n    this.evBatteriesService.getFranchaise().subscribe(\r\n      (resp: any) => {\r\n        this.franchise = resp.data;\r\n        const toSelect = this.franchise.find(c => c.id == '108');\r\n        this.form.get('deal_id').setValue(toSelect);\r\n        this.filteredOptionFranchaise = this.form.controls.deal_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(value => value ? this._filterFranchise(value) : this.franchise)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayFrancise(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  private _filterFranchise(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.franchise.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if(this.isEditMode){\r\n          const toSelect = this.cities.find(c =>c.id == this.params.data.city_id );\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n        company_name: formValues.company_name,\r\n        deal_type_id: formValues.deal_id.id, \r\n        website: formValues.website,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        mobile: formValues.mobile,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        remarks:formValues.remarks,\r\n        status: this.status == true ? 'M' : 'N',\r\n      }\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modifyby = this.localStorage.userId;\r\n      } else {\r\n          params.createdby = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.evBatteriesService.updateEvBattery(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            } \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      } else {\r\n        this.evBatteriesService.createEvBattery(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }\r\n    }else{\r\n      return\r\n      //this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('deal_id').setValue(params.data.deal_type_id);\r\n    this.form.get('company_name').setValue(params.data.company_name);\r\n    this.form.get('website').setValue(params.data.website);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.status = params.data.status == 'M' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\" autocomplete=\"off\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"deal_id\" readonly [matAutocomplete]=\"franciseAuto\" \r\n            required>\r\n          <mat-autocomplete #franciseAuto=\"matAutocomplete\" [displayWith]=\"displayFrancise\">\r\n            <mat-option *ngFor=\"let option of filteredOptionFranchaise | async\" [value]=\"option\">\r\n              {{option.value}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n           <mat-error *ngIf=\"form.get('deal_id').invalid\">Please select deal id\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Id</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"deal_id\" type=\"number\" autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter deal id\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('deal_id').invalid\">Please enter deal id </mat-error>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Company Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" required autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"website\" autocomplete=\"off\" style=\"text-transform:none\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">web\r\n          </mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" \r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n        \r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"33\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EVBatteriesService } from 'app/shared/services/ev-space/ev-batteries/EV-batteries.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  isPublish: boolean = false;\r\n  isModrate: boolean= false;\r\n  menuArray: any;\r\n  filteredOptionFranchaise: Observable<any[]>;\r\n  franchise:any;\r\n  constructor(private fb: FormBuilder,private evBatteriesService:EVBatteriesService,\r\n    private snackBar: MatSnackBar, public countryService: CountriesService,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n    this.isPublish = this.params.buttonAction == 'publishAction' ? true : false; //convert moderate to publish\r\n    this.isModrate = this.params.buttonAction == 'modrateAction' ? true : false; //convert publish to moderate\r\n    this.form = this.fb.group({\r\n      company_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      deal_id: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      website: ['',],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      landmark: [''],\r\n      remarks: [''],\r\n      status: this.status == true ? 'M' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n    this.getFranchaise();\r\n  }\r\n  getFranchaise() {\r\n    this.evBatteriesService.getFranchaise().subscribe(\r\n      (resp: any) => {\r\n        this.franchise = resp.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.franchise.find(c => c.id == '108');\r\n          this.form.get('deal_id').setValue(toSelect);\r\n        }\r\n        \r\n        this.filteredOptionFranchaise = this.form.controls.deal_id.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(value => value ? this._filterFranchise(value) : this.franchise)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayFrancise(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  private _filterFranchise(value: string): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.franchise.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllState(countryID) {\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n        }\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllCity(stateID) {\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (resp: any) => {\r\n        this.cities = resp;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n        }\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('deal_id').setValue(params.data.deal_type_id);\r\n    this.form.get('company_name').setValue(params.data.company_name);\r\n    this.form.get('website').setValue(params.data.website);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    if(this.isPublish ||this.isEditMode){\r\n      this.status = params.data.status == 'M' ? true : false;\r\n     }\r\n    if(this.isModrate){\r\n      this.status = params.data.status == 'Y' ? true : false;\r\n    }\r\n      \r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n    this.pin_code_id = this.form.value.pincode;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect)\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCityChange(event) {\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  onPublish(){\r\n    if(this.isPublish){\r\n      const params :any = {\r\n        id: this.params.data.id,    \r\n        status: \"Y\",//this.params.data.status === \"M\" ? \"Y\" :\"N\",\r\n        modifyby:this.localStorage.userId\r\n      }\r\n      this.evBatteriesService.publishEvBattery(params).subscribe(\r\n        (resp:any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n        }, (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  onModrate(){\r\n    if(this.isModrate){\r\n      const params:any = {\r\n        id: this.params.data.id,\r\n        status: \"M\",//this.params.data.status === \"Y\" ? \"M\" : \"N\",//\r\n        modify_by:this.localStorage.userId\r\n      }\r\n      this.evBatteriesService.moderateEvBattery(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          }else{\r\n            this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n            this.dialogRef.close();\r\n          }\r\n          \r\n        },(err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage,'Dismiss',{ duration:3000 });\r\n          this.dialogRef.close();\r\n        }\r\n      );\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\" autocomplete=\"off\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Id</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"deal_id\" type=\"number\" autocomplete=\"off\" required>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter deal id\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('deal_id').invalid\">Please enter deal id </mat-error>\r\n        </mat-form-field> -->\r\n           <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Deal Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"deal_id\" readonly [matAutocomplete]=\"franciseAuto\" autocomplete=\"new-password\"\r\n            required>\r\n          <mat-autocomplete #franciseAuto=\"matAutocomplete\" [displayWith]=\"displayFrancise\">\r\n            <mat-option *ngFor=\"let option of filteredOptionFranchaise | async\" [value]=\"option\">\r\n              {{option.value}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n           <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          \r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Company Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"company_name\" type=\"text\" readonly autocomplete=\"off\">\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company name\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('required')\">Please enter company name</mat-error>\r\n          <mat-error *ngIf=\"form.get('company_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"website\" autocomplete=\"off\" style=\"text-transform:none\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter company website\">web\r\n          </mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('website').hasError('required')\">Please enter company website</mat-error> -->\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"off\" readonly\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" >\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\"  autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n  \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\r\n        \" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"off\"\r\n            (change)=\"getStateCountry()\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"off\"\r\n          readonly>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" readonly>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Remarks</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"remarks\"  autocomplete=\"off\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('remarks').invalid\">Please enter remarks\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div fxFlex=\"16\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Moderate' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isPublish\" (click)=\"onPublish()\">Publish</button>\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"  *ngIf=\"isModrate\" (click)=\"onModrate()\">Moderate</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>"]}