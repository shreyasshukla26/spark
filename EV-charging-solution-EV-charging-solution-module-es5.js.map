{"version":3,"sources":["webpack:///src/app/main/miscellaneous/EV-charging-solution/EV-charging-solution.module.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/EV-charging-solution-crud/routes.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/list/list.component.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/list/list.component.html","webpack:///src/app/main/miscellaneous/EV-charging-solution/view-dialog/view-dialog.component.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/view-dialog/view-dialog.component.html","webpack:///src/app/main/miscellaneous/EV-charging-solution/EV-charging-solution-crud/EV-charging-solution-crud.component.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/EV-charging-solution-crud/EV-charging-solution-crud.component.html","webpack:///src/app/main/miscellaneous/EV-charging-solution/create/create.component.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/create/create.component.html","webpack:///src/app/main/miscellaneous/EV-charging-solution/action-dialog/action-dialog.component.ts","webpack:///src/app/main/miscellaneous/EV-charging-solution/action-dialog/action-dialog.component.html","webpack:///src/app/main/miscellaneous/EV-charging-solution/EV-charging-solution-routing.module.ts","webpack:///src/app/shared/services/ev-charging-solution/ev-charging-solution.service.ts"],"names":["COMPONENTS","COMPONENTS_DYNAMIC","EVChargingSolutionModule","imports","declarations","entryComponents","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","EVChargingSolution","resizeColumnSetting","ListComponent","evChargingSolService","dialog","snackBar","cdr","displayedColumns","head","nameSearch","roleSearch","offeringsSearch","projectsSearch","remarksSearch","statusSearch","localStorage","JSON","parse","getItem","defaultColumnSize","getEvChargingSolution","filterEntity","filterType","ANYWHERE","resizeColumnSettings","i","length","columnSetting","coulmnName","csswidth","push","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","getEvChargingSolutionProvider","subscribe","resp","evChargingData","data","status","statusString","name","role","offerings","projects","sort","open","NoRecordFoundMessage","duration","err","id","confirmDialogRef","disableClose","afterClosed","result","deleteEVChargingProvider","userId","deleteMessage","detectChanges","errorMessage","action","params","dialogRef","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","remarks","exportedData","filteredData","evCharging","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","edges","right","cssValue","rectangle","columnElts","document","getElementsByClassName","currentEl","style","requestString","selBox","createElement","position","left","stringify","appendChild","focus","select","execCommand","removeChild","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","autocompleteObjectValidator","control","ViewDialogComponent","fb","router","menuMasterService","isEditMode","initialize","form","group","required","offering","project","assignValues","close","get","hasError","setValue","checked","active","closeActionPanel","updateStatus","EVChargingSolutionCrudComponent","_utilityService","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","children","undefined","y","objectChildData","isDefaultRoutePermeted","z","label","link","navigate","activeMenuItems$","menuItemSelecte","menuArray","title","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","CreateComponent","valid","formValues","created_by","createEVChargingProvider","evChargingSolutionCreate","formInvalid","onSubmit","$event","preventDefault","ActionDialogComponent","modifyby","updateEVChargingProvider","recordUpdateMessage","menuMasterCreate","onYesClick","routes","EVChargingSolutionRoutingModule","forChild","exports","EVChargingSolutionService","http","apiUrl2","API_URL2","post","login_id","providedIn"],"mappings":"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","file":"EV-charging-solution-EV-charging-solution-module-es5.js","sourcesContent":["\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { EVChargingSolutionRoutingModule } from './EV-charging-solution-routing.module';\r\nimport { EVChargingSolutionCrudComponent } from './EV-charging-solution-crud/EV-charging-solution-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ EVChargingSolutionCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, EVChargingSolutionRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class EVChargingSolutionModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { EVChargingSolutionService } from 'app/shared/services/ev-charging-solution/ev-charging-solution.service';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\n\r\n\r\nexport class EVChargingSolution {\r\n  id: number;\r\n  name: string;\r\n  role: string;\r\n  offerings: string;\r\n  projects: string;\r\n  remarks: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\nexport class resizeColumnSetting {\r\n  coulmnName: string;\r\n  csswidth: number;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n  filterEntity: EVChargingSolution;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['name', 'role', 'offerings', 'projects', 'remarks', 'status', 'action'];\r\n  head = [['Name', 'Role', 'Offering', 'Project', 'Remarks', 'Status']]\r\n  dataSource: MatTableDataSource<EVChargingSolution>;\r\n  evChargingData: EVChargingSolution[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dialogRef: any;\r\n  nameSearch = false;\r\n  roleSearch = false;\r\n  offeringsSearch = false;\r\n  projectsSearch = false;\r\n  remarksSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  resizeColumnSettings: resizeColumnSetting[];\r\n  //messageConstant = MessageConstant;\r\n  constructor(private evChargingSolService: EVChargingSolutionService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    \r\n    this.defaultColumnSize();\r\n    this.getEvChargingSolution();\r\n    this.filterEntity = new EVChargingSolution();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n  }\r\n\r\n  defaultColumnSize(){\r\n    this.resizeColumnSettings = [];\r\n    for(var i =0; i < this.displayedColumns.length;i++){\r\n        var columnSetting= new resizeColumnSetting();\r\n        columnSetting.coulmnName = this.displayedColumns[i];\r\n        columnSetting.csswidth = 0;\r\n        this.resizeColumnSettings.push(columnSetting);\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getEvChargingSolution() {\r\n    this.evChargingSolService.getEvChargingSolutionProvider().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.evChargingData = resp.data;\r\n          for (var i = 0; i < this.evChargingData.length; i++) {\r\n            if (this.evChargingData[i].status == 'N') {\r\n              this.evChargingData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.evChargingData[i].statusString = 'Active';\r\n            }\r\n            if(this.evChargingData[i].name == null ){\r\n              this.evChargingData[i].name = '';\r\n            }\r\n            if(this.evChargingData[i].role == null ){\r\n              this.evChargingData[i].role = '';\r\n            }\r\n            if(this.evChargingData[i].offerings == null ){\r\n              this.evChargingData[i].offerings = '';\r\n            }\r\n            if(this.evChargingData[i].projects == null ){\r\n              this.evChargingData[i].projects = '';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.evChargingData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n            this.evChargingSolService.deleteEVChargingProvider(id,this.localStorage.userId).subscribe(\r\n            (resp: any) => {\r\n              if(resp.status == true){\r\n                this.getEvChargingSolution();\r\n                this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n                this.cdr.detectChanges();\r\n              }else{\r\n                this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n              }\r\n            }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getEvChargingSolution();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getEvChargingSolution();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'roleSearch') {\r\n      this.roleSearch = !this.roleSearch;\r\n      this.filterEntity.role = '';\r\n    }\r\n    if (visibleOption == 'offeringsSearch') {\r\n      this.offeringsSearch = !this.offeringsSearch;\r\n      this.filterEntity.offerings = '';\r\n    }\r\n    if (visibleOption == 'projectsSearch') {\r\n      this.projectsSearch = !this.projectsSearch;\r\n      this.filterEntity.projects = '';\r\n    }\r\n    if (visibleOption == 'remarksSearch') {\r\n      this.remarksSearch = !this.remarksSearch;\r\n      this.filterEntity.remarks = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evCharging = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Name': evCharging.name, 'Role': evCharging.role, 'Offering': evCharging.offerings,\r\n        'Project': evCharging.projects, 'Remarks ': evCharging.remarks, 'Status': evCharging.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'EVChargingSolutionProvider.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var evCharging = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [evCharging.name, evCharging.role, evCharging.offerings, evCharging.projects, evCharging.remarks,\r\n      evCharging.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('EV-Charging Solution Provider Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not For Public Use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('EVChargingSolutionProvider report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n  onResizeEnd(event: ResizeEvent, displayedColumns): void {\r\n\t\tif (event.edges.right) {\r\n\t\t\tconst cssValue = event.rectangle.width + 'px';\r\n\t\t\tconst columnElts = document.getElementsByClassName('mat-column-' + displayedColumns);\r\n\t\t\tfor (let i = 0; i < columnElts.length; i++) {\r\n\t\t\t\tconst currentEl = columnElts[i] as HTMLDivElement;\r\n        currentEl.style.width = cssValue;\r\n        this.cdr.detectChanges();\r\n      }\r\n      \r\n      for(var i =0; i < this.resizeColumnSettings.length;i++){\r\n        var columnSetting  = this.resizeColumnSettings[i];\r\n         if(columnSetting.coulmnName ==  displayedColumns){\r\n          columnSetting.csswidth = event.rectangle.width;\r\n         }\r\n        \r\n    }\r\n\t\t}\r\n  }\r\n  changeColumnSize(){\r\n    \r\n    for(var i =0; i < this.resizeColumnSettings.length;i++){\r\n        var columnSetting  = this.resizeColumnSettings[i];\r\n       \r\n       if(columnSetting.csswidth > 0){\r\n        const columnElts = document.getElementsByClassName('mat-column-' + columnSetting.coulmnName);\r\n        for (let i = 0; i < columnElts.length; i++) {\r\n          const currentEl = columnElts[i] as HTMLDivElement;\r\n          currentEl.style.width = columnSetting.csswidth +'px';\r\n          this.cdr.detectChanges();\r\n        }\r\n       }\r\n        \r\n    }\r\n  }\r\n\r\n  responseClick(requestString){\r\n    let selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = JSON.stringify(requestString);\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n        <mat-table  [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table [dataSource]=\"dataSource\"\r\n         matSort matTableFilter class=\"mat-elevation-z8 reszieable\">\r\n\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name  &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                        <input matInput placeholder=\" Name \" [(ngModel)]=\"filterEntity.name\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.name}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.name)\" > {{row.name}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"role\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!roleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Role\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('roleSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"roleSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\" Role \" [(ngModel)]=\"filterEntity.role\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('roleSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\"  matTooltip=\"{{row.role}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.role)\" > {{row.role}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"offerings\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!offeringsSearch\" class=\"custom_font_size\" style=\"display: flex;\">Offering\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('offeringsSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"offeringsSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\"Offering\" [(ngModel)]=\"filterEntity.offerings\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('offeringsSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.offerings}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.offerings)\" > {{row.offerings}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"projects\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!projectsSearch\" class=\"custom_font_size\" style=\"display: flex;\">Projects\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('projectsSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"projectsSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\"Project\" [(ngModel)]=\"filterEntity.projects\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('projectsSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell  [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.projects}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.projects)\" > {{row.projects}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                 [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!remarksSearch\" class=\"custom_font_size\" style=\"display: flex;\">Remarks\r\n                        &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('remarksSearch',$event)\">search\r\n                        </mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"remarksSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                        class=\"list_input\">\r\n                        <input matInput placeholder=\"Remarks\" [(ngModel)]=\"filterEntity.remarks\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('remarksSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" matTooltip=\"{{row.remarks}}\" [matTooltipClass]=\"{ 'tool-tip': true }\" \r\n                style=\"cursor:pointer;\" (dblclick)=\"responseClick(row.remarks)\" > {{row.remarks}} </mat-cell>\r\n            </ng-container>\r\n\r\n\r\n            <ng-container matColumnDef=\"status\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header \r\n                  [ngClass]=\"'w-75'\">\r\n                    <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                    <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                        <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                        <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell [ngClass]=\"'w-75'\" *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                    {{row.statusString}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\" >\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef >\r\n                    <span class=\"custom_font_size\">Action</span>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">\r\n\r\n                    <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                        style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                    <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                        style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                    <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                        delete</mat-icon>\r\n                </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n            <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n\r\n        </mat-table>\r\n        <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { EVChargingSolutionService } from 'app/shared/services/ev-charging-solution/ev-charging-solution.service';\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level:any;\r\n  project:any;\r\n  menuType:any;\r\n  menuIcon:any;\r\n  parentId:any;\r\n  filteredOptionsNavLevel : Observable<any[]>;\r\n  filteredOptionsProject : Observable<any[]>;\r\n  filteredOptionsMenuType : Observable<any[]>;\r\n  filteredOptionsMenuIcon : Observable<any[]>;\r\n  filteredOptionsParentId : Observable<any[]>;\r\n  status = false;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router,private menuMasterService:MenuMasterService,\r\n    private evChargingSolService:EVChargingSolutionService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();  \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required ]],\r\n      role: ['', [Validators.required ]],\r\n      offering: ['', [Validators.required ]],\r\n      project: ['', [Validators.required]],\r\n      remarks: ['', ],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('role').setValue(this.params.data.role);\r\n    this.form.get('offering').setValue(params.data.offerings);\r\n    this.form.get('project').setValue(params.data.projects);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.status = this.params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white; \" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">EV Charging Solution</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\"  type=\"text\"\r\n\t\t\t\t\t\tautocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"role\" maxlength=\"200\" \r\n\t\t\t\t\t\tautocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('role').hasError('required')\">Please enter role</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('role').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Offering</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"offering\"  autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('offering').hasError('required')\">Please enter offering</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('offering').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"project\"  autocomplete=\"off\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').hasError('required')\">Please enter project</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('project').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Remarks</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"remarks\" autocomplete=\"off\" readonly>\r\n\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('remarks').hasError('required')\">Please enter remarks</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('remarks').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\r\n\t\t\t\t<div fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement [disabled]=\"true\">\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-EV-charging-solution-crud',\r\n  templateUrl: './EV-charging-solution-crud.component.html',\r\n  styleUrls: ['./EV-charging-solution-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class EVChargingSolutionCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'EVCharging Solution', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"miscellaneous\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"evChargingSolution\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"evChargingSolution\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'EVCharging Solution', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/miscellaneous/evChargingSolution/crud/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { EVChargingSolutionService } from 'app/shared/services/ev-charging-solution/ev-charging-solution.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  \r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router,private evChargingSolService: EVChargingSolutionService,) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize(); \r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name: ['',[Validators.required]],\r\n      role: ['',  [Validators.required]],\r\n      offering: ['', [ Validators.required]],\r\n      project: ['', [Validators.required]],\r\n      remarks: ['', [Validators.required]],  \r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      \r\n      let params = {\r\n        \r\n        name:formValues.name,\r\n        role:formValues.role,\r\n        offerings:formValues.offering,\r\n        projects:formValues.project,\r\n        remarks:formValues.remarks,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      this.evChargingSolService.createEVChargingProvider(params).subscribe(\r\n        (resp:any) => {\r\n          if(resp.status == true){\r\n            //console.log(params,resp.data);\r\n            this.snackBar.open(MessageConstant.evChargingSolutionCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/miscellaneous/evChargingSolution/crud/list/']);\r\n          }else{\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n\r\n        },(err) =>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n         }\r\n      );\r\n    }\r\n    else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required type=\"text\"\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\"  type=\"text\" formControlName=\"role\" maxlength=\"200\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('role').hasError('required')\">Please enter role</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('role').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Offering</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"offering\"  required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('offering').hasError('required')\">Please enter offering</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('offering').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"project\"  required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('project').hasError('required')\">Please enter project</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('project').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\t\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Remarks</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"remarks\"  required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('remarks').hasError('required')\">Please enter remarks</mat-error>\r\n\t\t\t\t<!-- <mat-error *ngIf=\"form.get('remarks').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error> -->\r\n\t\t\t</mat-form-field>\r\n\t\t\t\r\n\r\n\t\t\t<div fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t</mat-slide-toggle>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" >Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\" routerLink=\"/miscellaneous/evChargingSolution/crud/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { EVChargingSolutionService } from 'app/shared/services/ev-charging-solution/ev-charging-solution.service';\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  nav_level: any;\r\n  project: any;\r\n  menuType: any;\r\n  menuIcon: any;\r\n  parentId: any;\r\n  status = false;\r\n  filteredOptionsNavLevel: Observable<any[]>;\r\n  filteredOptionsProject: Observable<any[]>;\r\n  filteredOptionsMenuType: Observable<any[]>;\r\n  filteredOptionsMenuIcon: Observable<any[]>;\r\n  filteredOptionsParentId: Observable<any[]>;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private menuMasterService: MenuMasterService,\r\n    private evChargingSolService: EVChargingSolutionService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    //console.log(this.params)\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required ]],\r\n      role: ['', [Validators.required ]],\r\n      offering: ['', [Validators.required ]],\r\n      project: ['', [Validators.required]],\r\n      remarks: ['', ],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        name: formValues.name,\r\n        role: formValues.role,\r\n        offerings: formValues.offering,\r\n        projects: formValues.project,\r\n        remarks: formValues.remarks,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modifyby = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.evChargingSolService.updateEVChargingProvider(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.evChargingSolService.createEVChargingProvider(params).subscribe(\r\n          (resp: any) => {\r\n            this.snackBar.open(MessageConstant.menuMasterCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n      this.dialogRef.close(params);\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('role').setValue(this.params.data.role);\r\n    this.form.get('offering').setValue(params.data.offerings);\r\n    this.form.get('project').setValue(params.data.projects);\r\n    this.form.get('remarks').setValue(params.data.remarks);\r\n    this.status = this.params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Ev Charging Solution</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\t\t<form [formGroup]=\"form\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required type=\"text\"\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Role</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"role\" maxlength=\"200\" required\r\n\t\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('role').hasError('required')\">Please enter role</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('role').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Offering</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"offering\" required autocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('offering').hasError('required')\">Please enter offering</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('offering').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Project</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"project\" required autocomplete=\"off\">\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('project').hasError('required')\">Please enter project</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('project').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Remarks</mat-label>\r\n\t\t\t\t\t<input matInput placeholder=\"\" type=\"text\" formControlName=\"remarks\" autocomplete=\"off\">\r\n\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('remarks').hasError('required')\">Please enter remarks</mat-error>\r\n\t\t\t\t\t<!-- <mat-error *ngIf=\"form.get('remarks').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t\t</mat-error> -->\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode\r\n\t\t\t\t\t? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\r\n\t</div>\r\n</div>","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EVChargingSolutionCrudComponent } from './EV-charging-solution-crud/EV-charging-solution-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './EV-charging-solution-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : EVChargingSolutionCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class EVChargingSolutionRoutingModule{}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class EVChargingSolutionService {\r\n    apiUrl2 = `${environment.API_URL2}/charger`;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getEvChargingSolutionProvider() {\r\n        return this.http.get(`${this.apiUrl2}/getAllEVChargingProviderList`);\r\n    }\r\n    createEVChargingProvider(params){\r\n        return this.http.post(`${this.apiUrl2}/CreateEVChargingProvider`,params);\r\n    }\r\n    updateEVChargingProvider(params){\r\n        return this.http.post(`${this.apiUrl2}/updateEVChargingProvider`,params);\r\n    }\r\n    deleteEVChargingProvider(id,login_id){\r\n        return this.http.delete(`${this.apiUrl2}/deleteEVChargingProvider/${id}/${login_id}`);\r\n    }\r\n\r\n    \r\n\r\n   \r\n    \r\n\r\n\r\n\r\n}"]}