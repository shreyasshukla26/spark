{"version":3,"sources":["webpack:///src/app/main/cpo/create/create.component.ts","webpack:///src/app/main/cpo/create/create.component.html","webpack:///src/app/main/cpo/list/list.component.ts","webpack:///src/app/main/cpo/list/list.component.html","webpack:///src/app/main/cpo/cpo-routing.module.ts","webpack:///src/app/main/cpo/action-dialog/action-dialog.component.ts","webpack:///src/app/main/cpo/action-dialog/action-dialog.component.html","webpack:///src/app/main/cpo/cpo.module.ts","webpack:///src/app/main/cpo/cpo-crud/cpo-crud.component.ts","webpack:///src/app/main/cpo/cpo-crud/cpo-crud.component.html","webpack:///src/app/main/cpo/view-dialog/view-dialog.component.ts","webpack:///src/app/main/cpo/view-dialog/view-dialog.component.html","webpack:///src/app/main/cpo/cpo-crud/routes.ts"],"names":["autocompleteObjectValidator","control","value","CreateComponent","fb","cpoService","snackBar","router","clientService","countryService","status","initialize","localStorage","JSON","parse","getItem","getClients","form","group","client","required","name","pattern","cp_name","description","logoPath","mobile","gst_number","tin_number","email","addressLine1","addressLine2","landmark","city","state","country","pincode","getAllCountry","getAllState","subscribe","data","countries","filteredOptionCountry","controls","valueChanges","pipe","_filterCountry","err","states","filteredOptionState","_filterState","getAllCities","cities","filteredOptionCity","_filterCity","getActiveClientsCW","userId","clients","filteredOptionsClient","_filterClientModels","valid","formValues","params","client_id","id","created_by","address1","address2","PIN","city_id","state_id","country_id","gst_no","tin_no","create","resp","open","cpoCreate","duration","navigate","err_code","errorMsg","message","index","lastIndexOf","splitted","substring","cpoDuplicate","mobileDuplicateCPO","emailDuplicateCPO","errorMessage","get","hasError","item","filterValue","toLowerCase","filter","option","includes","pin_code_id","getCountryStateByPIN","undefined","length","getCountryByState","countrydata","toSelect","find","c","setValue","getStateByCountry","statedata","getCityByState","Citydata","event","getStatesByCountry","getCitiesByStates","stateId","citiesdata","checked","ref","onSubmit","$event","preventDefault","getStateCountry","onCountryChange","onStateChange","onCityChange","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","Cpo","ListComponent","dialog","displayedColumns","head","clientSearch","nameSearch","contactPersonSearch","mobileSearch","emailSearch","statusSearch","gstSearch","getCpos","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","getcposcw","cpos","i","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteMessage","action","dialogRef","width","autoFocus","panelClass","visibleOption","ev","stopPropagation","client_name","exportedData","filteredData","chargerModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","routes","path","component","canActivate","children","CpoRoutingModule","forChild","imports","exports","ActionDialogComponent","isEditMode","getAllCity","assignValues","countryID","stateID","close","modify_by","update","recordUpdateMessage","closeActionPanel","onYesClick","COMPONENTS","COMPONENTS_DYNAMIC","CpoModule","declarations","entryComponents","CpoCrudComponent","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","label","link","ViewDialogComponent","TABS_DEMO_ROUTES","redirectTo","pathMatch"],"mappings":"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","file":"app-main-cpo-cpo-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  clients: any;\r\n  localStorage: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  constructor(private fb: FormBuilder,\r\n    private cpoService: CpoService, private snackBar: MatSnackBar,\r\n    private router: Router, private clientService: ClientService, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.getClients();\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      logoPath: [''],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      gst_number: ['', [Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number: ['', [Validators.pattern('\\^[0-9]{11}$')]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: ['',],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        this.countries = data;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (data: any) => {\r\n        this.states = data;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    \r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n\r\n      let params = {\r\n        client_id: formValues.client.id,\r\n        name: formValues.name,\r\n        description: formValues.description,\r\n\r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        gst_no: formValues.gst_number,\r\n        tin_no: formValues.tin_number\r\n      }\r\n\r\n\r\n      this.cpoService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.cpoCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/cpoManagement/crud/list']);\r\n          } else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              var index = this.errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this.errorMsg.substring(index + 1);\r\n              if (this.splitted == \"'client_id'\") {\r\n                this.snackBar.open(MessageConstant.cpoDuplicate, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'mobile'\") {\r\n                this.snackBar.open(MessageConstant.mobileDuplicateCPO, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'email'\") {\r\n                this.snackBar.open(MessageConstant.emailDuplicateCPO, 'Dismiss', { duration: 5000 });\r\n              }\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n\r\n          }\r\n        },\r\n        (err) => {\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"new-password\" [matAutocomplete]=\"clientAuto\"\r\n          required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" autocomplete=\"new-password\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Contact Person Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" autocomplete=\"new-password\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n        </mat-icon>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" autocomplete=\"new-password\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>GST Number</mat-label>\r\n        <input matInput placeholder=\"GST Format(29ABCDF1234F2Z5)\" formControlName=\"gst_number\" autocomplete=\"off\"\r\n          maxlength=\"15\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"GST Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n        <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid GST number</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>TIN Number</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"tin_number\" autocomplete=\"off\" maxlength=\"11\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"TIN Format(01234567890)\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid TIN number</mat-error>\r\n\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" autocomplete=\"new-password\" required\r\n          style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n        <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"new-password\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"new-password\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" autocomplete=\"new-password\"\r\n          (change)=\"getStateCountry()\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"new-password\"\r\n          [matAutocomplete]=\"countryAuto\" required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" [matAutocomplete]=\"stateAuto\" autocomplete=\"new-password\"\r\n          required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" [matAutocomplete]=\"cityAuto\" autocomplete=\"new-password\"\r\n          required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"new-password\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/cpoManagement/crud/list\">Cancel</button>\r\n    </div>\r\n\r\n  </form>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nexport class Cpo {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  client_name: string;\r\n  cp_name: string;\r\n  gst_no: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['client_name', 'name', 'gst_no', 'cp_name', 'status', 'action'];\r\n  head = [['Client Name', 'CPO Name', 'Contact Person Name', 'GSTIN', 'Mobile', 'Email', 'Status']];\r\n  dataSource: MatTableDataSource<Cpo>;\r\n  filterEntity: Cpo;\r\n  filterType: MatTableFilter;\r\n  localStorage: any;\r\n  cpos: Cpo[];\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  nameSearch = false;\r\n  contactPersonSearch = false;\r\n  mobileSearch = false;\r\n  emailSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  gstSearch = false;\r\n  constructor(private cpoService: CpoService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getCpos();\r\n    this.filterEntity = new Cpo();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getCpos() {\r\n\r\n    this.cpoService.getcposcw(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n\r\n        if (data != null) {\r\n          this.cpos = data;\r\n          for (var i = 0; i < this.cpos.length; i++) {\r\n            if (this.cpos[i].status == 'N') {\r\n              this.cpos[i].statusString = 'Inactive';\r\n            } else {\r\n              this.cpos[i].statusString = 'Active';\r\n            }\r\n\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.cpos);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      }, (err) => {\r\n        //;\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.cpoService.delete(id).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getCpos();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getCpos();\r\n    });\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getCpos();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n\r\n    ev.stopPropagation();\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'clientSearch') {\r\n      this.clientSearch = !this.clientSearch;\r\n      this.filterEntity.client_name = '';\r\n    }\r\n    if (visibleOption == 'gstSearch') {\r\n      this.gstSearch = !this.gstSearch;\r\n      this.filterEntity.gst_no = '';\r\n    }\r\n    if (visibleOption == 'contactPersonSearch') {\r\n      this.contactPersonSearch = !this.contactPersonSearch;\r\n      this.filterEntity.cp_name = '';\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Client Name': chargerModel.client_name, 'CPO Name': chargerModel.name, 'Contact Person Name': chargerModel.cp_name,\r\n        'GSTIN': chargerModel.gst_no, 'Mobile': chargerModel.mobile, 'Email': chargerModel.email, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'CPO List');\r\n    XLSX.writeFile(workBook, 'CPO List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.client_name, chrger.name, chrger.cp_name, chrger.gst_no, chrger.mobile, chrger.email, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('CPO List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('CPO List report.pdf');\r\n\r\n  }\r\n  \r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n}\r\n\r\n","<!---mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\n            margin-left: 10px;\r\n            margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n                <ng-container matColumnDef=\"cp_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!contactPersonSearch\" class=\"custom_font_size\" style=\"display: flex;\">Contact\r\n                            Person &nbsp;&nbsp; <mat-icon matSuffix\r\n                                (click)=\"changeVisibility('contactPersonSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"contactPersonSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Contact Person\" [(ngModel)]=\"filterEntity.cp_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('contactPersonSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.cp_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">CPO Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" CPO Name \" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n                <!-- <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container> -->\r\n                <ng-container matColumnDef=\"gst_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!gstSearch\" class=\"custom_font_size\" style=\"display: flex;\">GSTIN Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('gstSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"gstSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" GSTIN \" [(ngModel)]=\"filterEntity.gst_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('gstSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.gst_no}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button> </td> -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TABS_DEMO_ROUTES } from './cpo-crud/routes';\r\nimport { CpoCrudComponent } from './cpo-crud/cpo-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : CpoCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n      // {\r\n      //   path: 'chargingStation',\r\n      //   // loadChildren: () => import('./configuration/charger-station/charging-station.module').then(m => m.ChargingStationModule),\r\n      //   loadChildren: () => import('../charger-station/charging-station.module').then(m => m.ChargingStationModule),\r\n      //   data: { title: 'Charging Station', titleI18n: 'chargingStation' },\r\n      // },\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class CpoRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  clients: any;\r\n  localStorage: any;\r\n  status = false;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n   errorMsg:String;\r\n   splitted:String;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  constructor(private fb: FormBuilder, private cpoService: CpoService, private clientService: ClientService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['',  [autocompleteObjectValidator(),Validators.required]],\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9_#\\- ]*$/)]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      logoPath: [''],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number:['',[Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number:['',[Validators.pattern('\\^[0-9]{11}$')]],\r\n    });\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n    this.getClients();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      const params: any = {\r\n        client_id: formValues.client.id,\r\n        name: formValues.name,\r\n        cp_name: formValues.cp_name,\r\n        description: formValues.description,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        gst_no:formValues.gst_number,\r\n        tin_no: formValues.tin_number,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        this.cpoService.update(params).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }else{\r\n              \r\n                if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n                  this. errorMsg = resp.message;\r\n                  var index=  this. errorMsg.lastIndexOf(\" \");\r\n                  this.splitted = this. errorMsg.substring(index+1); \r\n                  if(this.splitted == \"'client_id'\" ){\r\n                    this.snackBar.open(MessageConstant.cpoDuplicate, 'Dismiss', { duration: 5000 });\r\n                  }if(this.splitted == \"'mobile'\"){\r\n                    this.snackBar.open(MessageConstant.mobileDuplicateCPO, 'Dismiss', { duration: 5000 });\r\n                  }if(this.splitted == \"'email'\"){\r\n                    this.snackBar.open(MessageConstant.emailDuplicateCPO, 'Dismiss', { duration: 5000 });\r\n                  }\r\n                }else{\r\n                  this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n                }\r\n\r\n              \r\n            }\r\n            \r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.cpoService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.cpoCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }else{\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('logoPath').setValue(params.data.logoPath);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('gst_number').setValue(params.data.gst_no);\r\n    this.form.get('tin_number').setValue(params.data.tin_no);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event){\r\n  \r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">CPO</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            required>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"name\" maxlength=\"200\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"cp_name\" maxlength=\"50\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person name\">account_circle\r\n          </mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"mobile\" type=\"number\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>GST Number</mat-label>\r\n          <input matInput placeholder=\"GST Format(29ABCDF1234F2Z5)\" formControlName=\"gst_number\" autocomplete=\"off\"\r\n            maxlength=\"15\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"GST Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n          <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid GST number</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>TIN Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"tin_number\" autocomplete=\"off\" maxlength=\"11\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"TIN Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter digit TIN number</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"email\" required\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"addressLine1\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"addressLine2\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" autocomplete=\"off\" formControlName=\"pincode\" (change)=\"getStateCountry()\"\r\n            required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n            required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { CpoCrudComponent } from './cpo-crud/cpo-crud.component';\r\nimport { CpoRoutingModule } from './cpo-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[CpoCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, CpoRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class CpoModule{}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-cpo-crud',\r\n  templateUrl: './cpo-crud.component.html',\r\n  styleUrls: ['./cpo-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\nexport class CpoCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'CPOs', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    var nav_list = this.localStorage.nav_list_with_tab;\r\n    //console.log(nav_list)\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"cpoManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'CPOs', link: 'list' });\r\n\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/cpoManagement/crud/' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n      <!-- HEADER -->\r\n      <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n          <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n            [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n          </span>\r\n\r\n          <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link *ngFor=\"let tabLink of tabLinks; let i = index\" [routerLink]=\"tabLink.link\" routerLinkActive\r\n      #rla=\"routerLinkActive\" [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  clients: any;\r\n  localStorage: any;\r\n  status = false;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  constructor(private fb: FormBuilder, private cpoService: CpoService, private clientService: ClientService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [Validators.required]],\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: ['', [Validators.required]],\r\n      addressLine2: ['', [Validators.required]],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      logoPath: [''],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number:['',[Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number:['',[Validators.required,Validators.pattern('\\^[0-9]{11}$')]],\r\n    });\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n    this.getClients();\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      const params: any = {\r\n        client_id: formValues.client.id,\r\n        name: formValues.name,\r\n        cp_name: formValues.cp_name,\r\n        description: formValues.description,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        gst_no:formValues.gst_number,\r\n        tin_no: formValues.tin_number\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n        this.cpoService.update(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.cpoService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.cpoCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('logoPath').setValue(params.data.logoPath);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('gst_number').setValue(params.data.gst_no);\r\n    this.form.get('tin_number').setValue(params.data.tin_no);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">CPO</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"client\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"clientAuto\" required>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" formControlName=\"name\" maxlength=\"200\" required>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" formControlName=\"cp_name\" maxlength=\"50\" readonly>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" formControlName=\"mobile\" type=\"number\" readonly>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>GST Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"gst_number\" readonly autocomplete=\"off\" maxlength=\"15\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter GST number\">help</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n          <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid 15 digit GST\r\n            number</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>TIN Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"tin_number\" readonly autocomplete=\"off\" maxlength=\"11\"\r\n            type=\"number\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter TIN number\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('required')\">Please enter TIN number</mat-error>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid 11 digit TIN\r\n            number</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" formControlName=\"email\" required>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" formControlName=\"addressLine1\" required>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" formControlName=\"addressLine2\" required>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" readonly autocomplete=\"off\" formControlName=\"pincode\"\r\n            (change)=\"getStateCountry()\" required>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle disabled class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n            (change)=\"updateStatus($event)\" #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { ListComponent } from '../list/list.component';\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { \r\n    path: 'create', canActivate: [AuthGuard], component: CreateComponent \r\n  },\r\n  { \r\n    path: 'list', canActivate: [AuthGuard], component: ListComponent\r\n  },\r\n  { \r\n    path: '', redirectTo: 'list', pathMatch: 'full' \r\n  },\r\n];\r\n"]}