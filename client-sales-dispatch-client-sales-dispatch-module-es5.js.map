{"version":3,"sources":["webpack:///src/app/main/dispatch-management/client-sales-dispatch/list/list.component.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/list/list.component.html","webpack:///src/app/main/dispatch-management/client-sales-dispatch/add-nickname/add-nickname.component.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/add-nickname/add-nickname.component.html","webpack:///src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-routing.module.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-crud/routes.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch.module.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/action-dialog/action-dialog.component.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/action-dialog/action-dialog.component.html","webpack:///src/app/main/dispatch-management/client-sales-dispatch/view-dialog/view-dialog.component.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/view-dialog/view-dialog.component.html","webpack:///src/app/main/dispatch-management/client-sales-dispatch/create/create.component.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/create/create.component.html","webpack:///src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-crud/client-sales-dispatch-crud.component.ts","webpack:///src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-crud/client-sales-dispatch-crud.component.html"],"names":["$event","stopPropagation","selection","Client","ListComponent","chargerService","dialog","snackBar","fb","chargingStationService","clientService","cpoService","displayedColumns","head","clientSearch","nameSearch","serialSearch","modelSearch","statusSearch","form","group","charClient","charCPO","charStat","localStorage","JSON","parse","getItem","clientCpoStaDetails","filterEntity","filterType","ANYWHERE","getClients","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","id","getAllClientChargers","subscribe","data","allChargers","i","length","status","statusString","sort","open","NoRecordFoundMessage","duration","err","confirmDialogRef","disableClose","afterClosed","result","deleteChargerFromClient","userId","deleteMessage","action","params","dialogRef","width","autoFocus","panelClass","visibleOption","ev","client_name","name","serial_no","model_name","exportedData","filteredData","chargerModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","mobile","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","clientList","role_code","undefined","toSelect","get","setValue","getCPOByClient","client_id","filteredOptionsCharClient","controls","valueChanges","pipe","_filterCharClient","getActiveClientsCW","resp","clientName","find","c","cpoList","stationList","getStationByCPO","cpo_id","filteredOptionsCharCPO","cpo_name","_filterCharCPO","getCpoByClientId","cposName","station","filteredOptionsCharStat","station_name","_filterCharStat","getChargingStationByCpoId","chargingStationName","item","option","includes","numSelected","selected","numRows","isAllSelected","clear","select","row","isSelected","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","autocompleteObjectValidator","control","AddNicknameComponent","datePipe","countryService","isEditMode","maxDate","chargerAs","initialize","dispatch_date","required","assignValues","close","valid","formValues","transform","modify_by","created_by","getUpdateClientCharger","recordUpdateMessage","errorMessage","getProductDispatch","salesDispatch","hasError","checked","ref","chargerAsRef","closeActionPanel","updateStatus","updateChargerAsStatus","providers","routes","path","component","canActivate","children","ClientSalesDispatchRoutingModule","forChild","imports","exports","TABS_DEMO_ROUTES","redirectTo","pathMatch","COMPONENTS","COMPONENTS_DYNAMIC","ClientSalesDispatchModule","declarations","entryComponents","ActionDialogComponent","is_private","onYesClick","ViewDialogComponent","Charger","SerialData","remarks","CreateComponent","masterService","excelSrv","router","cdr","UserInputType","ID","selectedInputType","totalSerial","mappedColumns","unmappedColumns","excelSerial","uploadExcelTable","importSerialNo","selectedChargerSerial","chipSelectedSerialNo","allowFreeTextAddEngineer","separatorKeysCodes","validSerialNo","selectedSerialNo","response_mapped","response_unmapped","returnDataStatus","removable","client","serialNumber","getSerialNo","serialNo","getPlantChargers","chargerSerials","chargerSerialsOrg","filteredOptionSerial","_filterSerial","clients","filteredOptionsClient","_filterClientModels","resetChrgerList","isExist","k","unitType","formDirective","serialBoxEmpty","sub_client_id","dispatch_status","charger_data","map","v","dispatch_by","chargers_mapped","chargers_not_mapped","resetForm","reset","markAsPristine","detectChanges","mappedDataSource","mappedPaginator","unmappedDataSource","unmappedPaginator","evt","files","Error","reader","FileReader","onload","e","bstr","importFromFile","header","Object","getOwnPropertyNames","importedData","slice","arr","obj","j","importPaginator","readAsBinaryString","splice","trigger","openPanel","onSubmit","serialInput","matAutocomplete","ClientSalesDispatchCrudComponent","_utilityService","tabLinks","label","link","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","title","nav_list","nav_list_with_tab","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent"],"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","file":"client-sales-dispatch-client-sales-dispatch-module-es5.js","sourcesContent":["\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\n\r\nexport class Client {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  serial_no : string;\r\n  client_name:string;\r\n  model_name:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['select', 'client_name', 'name','serial_no','model_name','status','action'];\r\n  head = [['Client Name','Name','Serial Number', 'Model Name','Status']]\r\n  dataSource: MatTableDataSource<Client>;\r\n  selection = new SelectionModel<Client>(true, []);\r\n  localStorage : any;\r\n  //clients : Client[];\r\n  allChargers :any;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  nameSearch = false;\r\n  serialSearch = false;\r\n  modelSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  cposName: any;\r\n  clientName:any;\r\n  localData: any;\r\n  chargingStationName: any;\r\n  filteredOptionsCharClient:Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any;\r\n  constructor(private chargerService : ChargerService,public dialog : MatDialog,private snackBar : MatSnackBar,private fb: FormBuilder,\r\n    private chargingStationService: ChargingStationService,private clientService:ClientService,private cpoService: CpoService,) {\r\n   \r\n      this.form = this.fb.group({\r\n        charClient:[''],\r\n        charCPO: [''],\r\n        charStat: ['']\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'));\r\n    //this.getAllClientChargers(this.localStorage.userId);\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllClientChargers(id){\r\n    this.chargerService.getAllClientChargers(id).subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          this.allChargers = data;\r\n          for(var i=0; i < this.allChargers.length;i++){\r\n            if(this.allChargers[i].status == 'N'){\r\n              this.allChargers[i].statusString = 'Inactive';\r\n            }else{\r\n              this.allChargers[i].statusString = 'Active';\r\n            }\r\n          }\r\n        this.dataSource = new MatTableDataSource(this.allChargers);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.chargerService.deleteChargerFromClient(id,this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n            \r\n            this.getAllClientChargers(this.localStorage.userId);\r\n            this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n   \r\n  }\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',   \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n    if(visibleOption == 'clientSearch'){\r\n      this.clientSearch = !this.clientSearch;\r\n      this.filterEntity.client_name= \"\";\r\n    }\r\n    \r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name= \"\";\r\n    }\r\n    if(visibleOption == 'serialSearch'){\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no= \"\";\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.model_name= \"\";\r\n    }\r\n  \r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString= \"\";\r\n    }\r\n   }\r\n\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chargerModel =this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Client Name':chargerModel.client_name,'Name':chargerModel.name,'Serial No':chargerModel.serial_no,\r\n                  'Model Name': chargerModel.model_name,'Status':chargerModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       \r\n      XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n       XLSX.writeFile(workBook, 'Sales Dispatch.xlsx');\r\n   }\r\n\r\n   viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.allChargers();\r\n    });\r\n  }\r\n\r\n  pdfExport(){\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.client_name,chrger.name,chrger.name,chrger.serial_no,chrger.mobile,chrger.model_name,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Product Dispatch Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n   \r\n    // below line for Download PDF document  \r\n    doc.save('Product Dispatch Report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    //console.log(this.clientList)\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n\r\n    } else {\r\n      this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n        (resp: any) => {\r\n          this.clientName = resp;\r\n          const toSelect = this.clientName.find(c => c.id == this.localStorage.client_id);\r\n          if (toSelect != null) {\r\n            this.form.get('charClient').setValue(toSelect);\r\n            this.getCPOByClient(toSelect.id);\r\n          }\r\n          this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharClient(name) : this.clientName)\r\n            );\r\n        }, (err) => { }\r\n      );\r\n    }\r\n  }\r\n  onClientChange(client_id){\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    //console.log(this.cpoList)\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        const toSelect = this.cpoList[0];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    } else {\r\n      this.cpoService.getCpoByClientId(client_id).subscribe(\r\n        (resp: any) => {\r\n          this.cposName = resp;\r\n          const toSelect = this.cposName[0];\r\n          if (toSelect != null) {\r\n            this.form.get('charCPO').setValue(toSelect);\r\n            this.getStationByCPO(toSelect.id);\r\n          }\r\n          this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n            );\r\n        }, (err) => { }\r\n      );\r\n    }\r\n  }\r\n  \r\n  onCPOChange(event) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    //console.log(this.stationList)\r\n    this.station =[];\r\n\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      for(var i = 0; i< this.stationList.length; i++){\r\n        if(id == this.stationList[i].cpo_id){\r\n          this.station.push( this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined) {\r\n        const toSelect = this.station[0];//this.station.find(c => c.cpo_id == id);\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getAllClientChargers(this.localStorage.userId);\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    } else {\r\n      this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n        (resp: any) => {\r\n          this.chargingStationName = resp.data;\r\n          const toSelect = this.chargingStationName[0];\r\n          this.form.get('charStat').setValue(toSelect);\r\n          this.getAllClientChargers(this.localStorage.userId);\r\n          this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n            );\r\n        }, (err) => { }\r\n      )\r\n    }\r\n\r\n  }\r\n  onStationChange(event) {\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    //this.getAllClientChargers(event);\r\n  }\r\n\r\n  filteredOptions() {\r\n    this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharClient(name) : this.clientName)\r\n      );\r\n\r\n    this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n      );\r\n\r\n    this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n      );\r\n  }\r\n\r\n  displayCharClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayCharCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  displayStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n\r\n  private _filterCharClient(name: string): any[] {\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      this.form.get('charCPO').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.form.get('charCPO').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n  private _filterCharCPO(name: string): any[] {\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n  private _filterCharStat(name: string): any[] {\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      const filterValue = name.toLowerCase();\r\n      return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n    } else {\r\n      const filterValue = name.toLowerCase();\r\n      return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Client): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.name + 1}`;\r\n  }\r\n  \r\n}\r\n\r\n","<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n     <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<mat-card style=\"padding:16px  !important;\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" *ngIf=\"localStorage.role_code == 'SA';else notsa\">\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                        (optionSelected)='onClientChange($event.option.value.id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <ng-template #notsa>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select Client</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n                        <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n                            (optionSelected)='onClientChange($event.option.value.client_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                                {{option.client_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                            Please select client \r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    \r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select CPO's</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n                        <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                            (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                                {{option.cpo_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\" >expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                            Please select  CPO\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select Charging Station</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\" readonly>\r\n                        <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayStat\"\r\n                            (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                                {{option.station_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                            Please select charging station\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n    \r\n                </div>\r\n            </ng-template>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                    [aria-label]=\"checkboxLabel()\">\r\n                      </mat-checkbox>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                      <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                    (change)=\"$event ? selection.toggle(row) : null\"\r\n                                    [checked]=\"selection.isSelected(row)\"\r\n                                    [aria-label]=\"checkboxLabel(row)\">\r\n                      </mat-checkbox>\r\n                    </td>\r\n                  </ng-container>\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Model Name \" [(ngModel)]=\"filterEntity.model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                    (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                            <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                    style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                        </td>\r\n                    </tr> -->\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-add-nickname',\r\n  templateUrl: './add-nickname.component.html',\r\n  styleUrls: ['./add-nickname.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class AddNicknameComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<AddNicknameComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1,\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        \r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n  \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"10\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" disabled [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"(click)=\"onYesClick()\">\r\n\t\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientSalesDispatchCrudComponent } from './client-sales-dispatch-crud/client-sales-dispatch-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './client-sales-dispatch-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes: Routes = [\r\n    {\r\n        path: 'crud', component: ClientSalesDispatchCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n    },\r\n\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ClientSalesDispatchRoutingModule { }","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard]},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ClientSalesDispatchRoutingModule } from './client-sales-dispatch-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ClientSalesDispatchCrudComponent } from './client-sales-dispatch-crud/client-sales-dispatch-crud.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { AddNicknameComponent } from './add-nickname/add-nickname.component';\r\nimport {\r\n    NgxMatDatetimePickerModule,\r\n    NgxMatNativeDateModule,\r\n    NgxMatTimepickerModule,\r\n    NgxMatDateFormats,\r\n    NGX_MAT_DATE_FORMATS,\r\n    NgxMatDateAdapter,\r\n} from '@angular-material-components/datetime-picker';\r\n\r\n\r\nconst COMPONENTS = [ClientSalesDispatchCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent,AddNicknameComponent];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, ClientSalesDispatchRoutingModule, NgxMatDatetimePickerModule, FuseSharedModule,\r\n        NgxMatNativeDateModule,\r\n        NgxMatTimepickerModule,],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ClientSalesDispatchModule { }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 1 : 0\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        is_private:this.chargerAs == true? 1:0,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n    this.chargerAs = params.data.is_private = 1 ? true: false;//  is_private:this.chargerAs == true? 1:0,\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"client name\">account_circle</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Name\">account_circle</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Serial number\">help</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">\r\n\t\t\t\t\t\t\thelp</mat-icon>\r\n\t\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1,\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        \r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n  \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"10\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" disabled [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"(click)=\"onYesClick()\">\r\n\t\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit,ViewChild ,ElementRef,ChangeDetectorRef} from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn,AbstractControl,FormArray} from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {ChargerService} from 'app/shared/services/charger/charger.service';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport * as XLSX from 'xlsx';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ExcelService} from 'app/shared/services/excel.service'\r\nimport { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatAutocompleteSelectedEvent,  MatAutocomplete} from '@angular/material/autocomplete';\r\nimport {MatChipInputEvent} from '@angular/material/chips'\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class Charger {\r\n  id: string;\r\n  name : string;\r\n    serial_no : string;\r\n    batch_id : number ;\r\n    station_id : number;\r\n    current_version_id : number ;\r\n    no_of_guns : number;\r\n    Address : string;\r\n    Lat : number;\r\n    Lng : number;\r\n    OTA_Config : string;\r\n    Periodic_Check_Ref_Time : string;\r\n    Periodicity_in_hours : number;\r\n    When_to_Upgrade : string;\r\n    Upgrade_Specific_Time : number;\r\n    is_available : number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  availableString:string;\r\n}\r\nexport class SerialData {\r\n  //SERIAL_No: string;\r\n  serial_no: string = \"\";\r\n  remarks:string = \"\";\r\n  }\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  chargerTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  status = false;\r\n  chargerAs = false;\r\n  UserInputType = [\r\n    { \"name\": \"Table View\", ID: \"D1\"},\r\n    { \"name\": \"Upload CSV\", ID: \"D2\"}\r\n]\r\nfilteredOptionsClient: Observable<any[]>;\r\nclients:any;\r\nselectedInputType = this.UserInputType[0].name;\r\npublic unitValue;\r\nselectedUnitValue : any;\r\ntotalSerial =[];\r\nserialNumber: FormArray;\r\noldUnitCount:number;\r\nchargerSerials:any;\r\nchargerSerialsOrg:any;\r\nfilteredOptionSerial: Observable<any[]>;\r\ndataSource : MatTableDataSource<SerialData>;\r\ndisplayedColumns: string[] = ['serial_no'];\r\nmappedColumns: string[] = ['serial_no','remarks'];\r\nmappedDataSource :MatTableDataSource<SerialData>;\r\nunmappedColumns: string[] = ['serial_no','remarks'];\r\nunmappedDataSource :MatTableDataSource<SerialData>;\r\nexcelSerial= [];\r\n//@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n// @ViewChild('serialTable', { static: false }) serialTable: ElementRef;\r\n// @ViewChild('mapped_table') mapped_table: ElementRef;\r\n// @ViewChild('unmapped_table') unmapped_table: ElementRef;\r\nimportFile: File;\r\nmaxDate = new Date();\r\n  uploadExcelTable:boolean =false;\r\n  importSerialNo: SerialData[] = [];\r\n  unitType:any;\r\n   selectedChargerSerial  = [];\r\n   public chipSelectedSerialNo: Charger[] = [];\r\n   public filteredSerial: Observable<String[]>;\r\n   private allowFreeTextAddEngineer = false;\r\n\r\n \r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  \r\n  @ViewChild('serialInput') serialInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n   validSerialNo = [];\r\n  selectedSerialNo = [];\r\n  response_mapped =[];\r\n  response_unmapped = [];\r\n  returnDataStatus :boolean = false;\r\n  removable = true;\r\n   @ViewChild('importPaginator') importPaginator: MatPaginator;\r\n   @ViewChild('mappedPaginator') mappedPaginator: MatPaginator;\r\n   @ViewChild('unmappedPaginator') unmappedPaginator: MatPaginator;\r\nconstructor(private fb: FormBuilder, private masterService : MasterService,private excelSrv: ExcelService,\r\n    private clientService : ClientService,private snackBar: MatSnackBar,private chargerService:ChargerService,\r\n    private router : Router,public countryService: CountriesService,private datePipe: DatePipe,private cdr :ChangeDetectorRef) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      serialNumber: [''],\r\n      dispatch_date:['',[Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1      \r\n    });\r\n    \r\n    //this.getCountry();\r\n    this.getClients();\r\n    this.getSerialNo();\r\n    //this.getAllCity();\r\n  }\r\n  // ngAfterViewInit() {\r\n  //   this.dataSource.paginator = this.paginator\r\n  //   this.mappedDataSource.paginator = this.mappedPaginator;\r\n  //   this.unmappedDataSource.paginator = this.unmappedPaginator;\r\n  // }\r\n  createSerial(): FormGroup {\r\n    return this.fb.group({\r\n      serialNo: ['', [Validators.required,autocompleteObjectValidator()]],\r\n     \r\n    });\r\n  }\r\n  getSerialNo(){\r\n    this.chargerService.getPlantChargers().subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          this.chargerSerials = data;\r\n          this.chargerSerialsOrg = [...this.chargerSerials];\r\n          this.filteredOptionSerial = this.form.controls.serialNumber.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.serial_no),\r\n            map(serial_no => serial_no ? this._filterSerial(serial_no) : this.chargerSerials)\r\n          );\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getClients(){\r\n    \r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          this.clients = data;\r\n          this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n  displaySerial(item: any): string {\r\n    return item && item.serial_no ? item.serial_no : '';\r\n  }\r\n  private _filterSerial(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    this.chargerSerials = this.resetChrgerList();\r\n   \r\n    \r\n    \r\n    return this.chargerSerials.filter(option => option.serial_no.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  resetChrgerList():any[]{\r\n    var chargerSerials = [];\r\n    if ( this.selectedSerialNo != undefined && this.selectedSerialNo.length > 0) {\r\n      \r\n      var isExist = true;\r\n     \r\n      for(var k =0; k< this.chargerSerialsOrg.length;k++){\r\n          var serialNo = this.chargerSerialsOrg[k];\r\n           isExist = false;\r\n           for(var i =0;i< this.selectedSerialNo.length; i++){\r\n               var selectedSerialNo = this.selectedSerialNo[i];\r\n               if(selectedSerialNo.serial_no == serialNo.serial_no){\r\n                  isExist =true;\r\n               }\r\n           }\r\n\r\n           if(!isExist){\r\n            chargerSerials.push(serialNo);\r\n           }\r\n      }\r\n\r\n  }else{\r\n    chargerSerials= [...this.chargerSerialsOrg];\r\n  }\r\n   return chargerSerials;\r\n  }\r\n\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onSerialSelected(event)\r\n  {\r\n    this.selectedSerialNo.push(event.option.value);\r\n    //this.form.controls['serialNumber'].setValue('');\r\n    this.form.get('serialNumber').setValue('');\r\n    this.chargerSerials = this.resetChrgerList();\r\n    this.unitType += 1;\r\n    this.filteredOptionSerial = this.form.controls.serialNumber.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.serial_no),\r\n          map(serial_no => serial_no ? this._filterSerial(serial_no) : this.chargerSerials)\r\n        );\r\n  }\r\n  onSubmit(formDirective){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      if(this.selectedSerialNo.length == 0 ){\r\n        this.snackBar.open(MessageConstant.serialBoxEmpty, 'Dismiss', { duration: 5000 });\r\n      }else{\r\n        let params = {\r\n          client_id :formValues.client.id, \r\n          sub_client_id:\"12\",\r\n          dispatch_status:\"Y\",\r\n          dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n          charger_data: this.selectedSerialNo.map(v=>({id:v.id,serial_no:v.serial_no})),\r\n          status :  this.status == true ? 'Y' : 'N', \r\n          is_private:this.chargerAs == true? 1:0,\r\n          created_by : this.localStorage.userId, \r\n          dispatch_by:this.localStorage.userId\r\n        }\r\n    \r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data:any )=>{\r\n            if(data.status = true){\r\n              this.returnDataStatus = true;\r\n              this.selectedSerialNo = [];\r\n              this.getClients();\r\n              this.response_mapped = data.data[0].chargers_mapped;\r\n              this.response_unmapped = data.data[0].chargers_not_mapped;\r\n              formDirective.resetForm();\r\n              this.form.reset();\r\n              this.form.markAsPristine();\r\n            }\r\n            if (this.response_mapped.length<0){\r\n            }else{\r\n                 this.cdr.detectChanges();\r\n                  this.mappedDataSource = new MatTableDataSource(this.response_mapped);\r\n                this.mappedDataSource.paginator = this.mappedPaginator;\r\n            }\r\n            if (this.response_unmapped.length<0){\r\n            }else{\r\n              this.cdr.detectChanges();\r\n                  this.unmappedDataSource = new MatTableDataSource(this.response_unmapped);\r\n                  this.unmappedDataSource.paginator = this.unmappedPaginator;\r\n            }\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n          },\r\n          (err)=>{\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n      \r\n    }else{\r\n      return;\r\n    }\r\n     \r\n  \r\n   \r\n    \r\n  }\r\n \r\n  \r\n  \r\n \r\n  uploadedFile(evt: any) {\r\n    let target: DataTransfer = <DataTransfer>(evt.target);\r\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\r\n    this.selectedSerialNo  = [];\r\n    let reader: FileReader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n   \r\n      let bstr: string = e.target.result;\r\n      let data = <any[]>this.excelSrv.importFromFile(bstr);\r\n\r\n      let header: string[] = Object.getOwnPropertyNames(new SerialData());\r\n      let importedData = data.slice(1);\r\n\r\n      this.importSerialNo = importedData.map(arr => {\r\n        let obj = {};\r\n        for (let i = 0; i < header.length; i++) {\r\n          const k = header[i];\r\n          obj[k] = arr[i];\r\n        }\r\n        return <SerialData>obj;\r\n      })\r\n     \r\n     // let tempSerialArray = [];\r\n     \r\n    //  this.importSerialNo.map(element => {\r\n    //   element.Tag = \"Unverified\";\r\n    //  });\r\n        for(var i= 0;i< this.importSerialNo.length;i++){\r\n        for(var j= 0;j<this.chargerSerials.length;j++ ){\r\n              \r\n          if(this.importSerialNo[i].serial_no == this.chargerSerials[j].serial_no)\r\n          {\r\n            \r\n            this.selectedSerialNo.push(this.chargerSerials[j])\r\n          }\r\n        }\r\n          \r\n      }\r\n        // this.selectedSerialNo.push(this.importSerialNo);\r\n      this.uploadExcelTable = true;\r\n      this.cdr.detectChanges();\r\n      this.dataSource = new MatTableDataSource(this.selectedSerialNo);\r\n      this.dataSource.paginator = this.importPaginator;\r\n    }\r\n   \r\n    \r\n    reader.readAsBinaryString(target.files[0]);\r\n\r\n  }\r\n  \r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n \r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  } \r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n  \r\n \r\n  public removeSerial(i): void {\r\n    this.selectedSerialNo.splice(i,1);\r\n    this.chargerSerials = this.resetChrgerList();\r\n    this.unitType -1 ;\r\n    this.filteredOptionSerial = this.form.controls.serialNumber.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.serial_no),\r\n          map(serial_no => serial_no ? this._filterSerial(serial_no) : this.chargerSerials)\r\n        );\r\n  }\r\n  selectionMade(event: Event, trigger: MatAutocompleteTrigger) {\r\n    event.stopPropagation();\r\n    trigger.openPanel();\r\n}\r\nmappedTableExport()\r\n{\r\n   const workSheet = XLSX.utils.json_to_sheet(this.mappedDataSource.data);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Mapped Charger.xlsx');\r\n\r\n}\r\nunmappedTableExport()\r\n{\r\n  const workSheet = XLSX.utils.json_to_sheet(this.unmappedDataSource.data);\r\n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n  XLSX.writeFile(workBook, 'UnMapped Charger.xlsx');\r\n}\r\nbackForm(){\r\n  //this.returnDataStatus= false;\r\n}\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" #formDirective=\"ngForm\" (submit)=\"onSubmit(formDirective)\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" style=\"padding-bottom: 20px;\">\r\n        <mat-label>User Input &nbsp;&nbsp;</mat-label>\r\n        <mat-radio-group name=\"opList\" [(ngModel)]=\"selectedInputType\" [ngModelOptions]=\"{standalone: true}\">\r\n          <mat-radio-button *ngFor=\"let op of UserInputType\" style=\"padding-right:10px\" [value]=\"op.name\" name=\"opList\">\r\n            {{ op.name}}</mat-radio-button>&nbsp;&nbsp;\r\n        </mat-radio-group>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Dispatch Date</mat-label>\r\n        <input matInput [max]=\"maxDate\" [matDatepicker]=\"dp3\" formControlName=\"dispatch_date\" disabled>\r\n\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n          </mat-icon>\r\n          <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </div>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"10\" class=\"pr-4\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxFlex=\"10\" class=\"pr-4\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n          #toggleChargerAsElement>\r\n          {{chargerAs ? 'Private' : 'Public'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n    <div style=\"padding-top:10px;\">\r\n      <div *ngIf=\"selectedInputType=='Table View'\" style=\"display: block  !important;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"display: block  !important;padding-top: 10px;width:100%\"\r\n          fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <!-- <div fxFlex=\"70\" class=\"pr-4\">\r\n            <ul style=\"display:flex;padding-inline-start:5px;padding-top: 20px;\">\r\n              <li *ngFor=\"let option of selectedSerialNo; let i = index;\" style=\"list-style: none;\">\r\n                <span class=\"chip\"> {{option?.serial_no}} &nbsp;\r\n                  <span class=\"material-icons closebtn\" (click)=\"removeSerial(i)\">highlight_off </span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div> -->\r\n          <mat-chip-list aria-label=\"Fish selection\">\r\n            <mat-chip *ngFor=\"let option of selectedSerialNo;let i = index;\" [selectable]=\"selectable\"\r\n              [removable]=\"removable\" (removed)=\"removeSerial(i)\">\r\n              {{option?.serial_no}}\r\n              <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"selectedInputType=='Table View'\" style=\"display: block  !important;padding-top: 10px;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n            <mat-label>Serial No</mat-label>\r\n            <input type=\"text\" #trigger=\"matAutocompleteTrigger\" matInput formControlName=\"serialNumber\" type=\"search\"\r\n              autocomplete=\"off\" [matAutocomplete]=\"seialAuto\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n              </div>\r\n            <mat-autocomplete #seialAuto=\"matAutocomplete\" [displayWith]=\"displaySerial\"\r\n              (optionSelected)='onSerialSelected($event)'>\r\n              <mat-option *ngFor=\"let option of filteredOptionSerial | async\" [value]=\"option\"\r\n                (click)=\"selectionMade($event, trigger)\">\r\n                {{option.serial_no}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n            <mat-error *ngIf=\"form.get('serialNumber').invalid\">Please select part number </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"selectedInputType=='Upload CSV'\" fxLayout=\"column\" style=\"padding-top:30px;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <h5 style=\"text-align: right;\">Click hear to <a href=\"assets/images/serialno.csv\" download>download file\r\n            </a>format (CSV only)</h5>\r\n          <div style=\"text-align: center;\">\r\n            <!--input #fileInput type=\"file\" id=\"file1\" (click)=\"fileInput.value = null\" value=\"\" type=\"file\"\r\n              id='excel-upload' accept=\".csv\" multiple=\"false\" (change)=\"uploadedFile($event)\"-->\r\n\r\n            <input hidden type=\"file\" (click)=\"fileInput.value = null\" value=\"\" id='excel-upload' accept=\".csv\"\r\n              multiple=\"false\" (change)=\"uploadedFile($event)\" #fileInput />\r\n            <button mat-raised-button color=\"primary\" type=\"button\" class=\"add-file-button\" (click)=\"fileInput.click()\"\r\n              aria-label=\"Add file\">\r\n              Browse File\r\n            </button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <!-- <h5 style=\"text-align: right;\">Click hear to <a href=\"assets/images/serialno.csv\" download>download file\r\n          </a>format (CSV only)</h5>\r\n        <div style=\"text-align: center;\">\r\n          <input #fileInput type=\"file\" id=\"file1\" (click)=\"fileInput.value = null\" value=\"\" type=\"file\"\r\n            id='excel-upload' accept=\".csv\" multiple=\"false\" (change)=\"uploadedFile($event)\">\r\n        </div> -->\r\n\r\n        <!-- <label>\r\n                  <i class=\"temp-upload-icon\" for=\"excel-upload\"></i>\r\n                  <input  />\r\n                </label> -->\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <div *ngIf=\"uploadExcelTable\">\r\n            <mat-table #importTable [dataSource]=\"dataSource\" [cdkTable]=\"importTable\">\r\n\r\n              <ng-container matColumnDef=\"serial_no\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef> SERIAL No </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.serial_no }}</mat-cell>\r\n              </ng-container>\r\n              <!--ng-container matColumnDef=\"status\">\r\n                                <th mat-header-cell *matHeaderCellDef>Status </th>\r\n                                <td mat-cell *matCellDef=\"let element\">{{ element.Tag }}</td>\r\n                              </ng-container-->\r\n              <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n              <mat-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #importPaginator [pageSize]=\"5\" [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"returnDataStatus\" class=\"mat-card p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      style=\"padding-top:20px\">\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <div style=\"margin-bottom: 12px;\">\r\n            <span style=\"font-size:16px;\">Charger Mapped</span> &nbsp;&nbsp;\r\n            <img (click)=\"mappedTableExport()\" src=\"/assets/images/excel_icon.png\" width=\"24px\" height=\"auto\"\r\n              style=\"cursor:pointer\" />\r\n            <!-- <span class=\"material-icons\"  (click)=\"mappedTableExport()\" >\r\n                download_for_offline\r\n                </span> -->\r\n\r\n\r\n          </div>\r\n          <div id=\"mapTable\">\r\n            <mat-table #mappedTable [dataSource]=\"mappedDataSource\" [cdkTable]=\"mappedTable\" class=\"mat-elevation-z2\">\r\n\r\n              <ng-container matColumnDef=\"serial_no\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef> SERIAL No </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.serial_no }}</mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef>Remarks </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.remarks }}</mat-cell>\r\n              </ng-container>\r\n              <mat-header-row mat-header-row *matHeaderRowDef=\"mappedColumns\"></mat-header-row>\r\n              <mat-header-row mat-row *matRowDef=\"let row; columns: mappedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #mappedPaginator [pageSize]=\"5\" [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n          </div>\r\n        </div>\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <div style=\"margin-bottom: 12px;\">\r\n            <span style=\"font-size:16px;\">Charger not Mapped</span> &nbsp;&nbsp;\r\n            <img (click)=\"unmappedTableExport()\" src=\"/assets/images/excel_icon.png\" width=\"24px\" height=\"auto\"\r\n              style=\"cursor:pointer\" />\r\n            <!-- <span class=\"material-icons\"   >\r\n                download_for_offline\r\n              </span> -->\r\n\r\n          </div>\r\n\r\n          <div>\r\n            <mat-table #unmappedTable [dataSource]=\"unmappedDataSource\" [cdkTable]=\"unmappedTable\"\r\n              class=\"mat-elevation-z2\">\r\n\r\n              <ng-container matColumnDef=\"serial_no\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef> SERIAL No </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.serial_no }}</mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef>Remarks </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.remarks }}</mat-cell>\r\n              </ng-container>\r\n              <mat-header-row mat-header-row *matHeaderRowDef=\"unmappedColumns\"></mat-header-row>\r\n              <mat-header-row mat-row *matRowDef=\"let row; columns: unmappedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #unmappedPaginator [pageSize]=\"5\" [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:20px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n        routerLink=\"/assetManagement/chargerManagement/salesDispatch/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-client-sales-dispatch-crud',\r\n  templateUrl: './client-sales-dispatch-crud.component.html',\r\n  styleUrls: ['./client-sales-dispatch-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class ClientSalesDispatchCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    { label: 'Sales Dispatch', link: 'list' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    // nav_list.filter((x) => {\r\n    //   if (x.id === \"chargerManagement\") {\r\n    //     this.objectData = x;\r\n    //     this.objectData.children.filter((y) => {\r\n    //       if (y.id === \"crud\") {\r\n    //         this.objectChildData = y;\r\n    //         this.objectChildData.children.filter((z) => {\r\n    //           let isDefaultRoutePermeted = false;\r\n    //             if (z.id === \"salesDispatch\") {\r\n    //               isDefaultRoutePermeted = true;\r\n    //               this.tempLinks.push({ label: 'Sales Dispatch', link: 'list' });\r\n    //             }\r\n    //             if (z.id === \"addNew\") {\r\n    //               this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n    //             }\r\n    //           this.tabLinks = this.tempLinks;\r\n    //           if (!isDefaultRoutePermeted) {\r\n    //             this.router.navigate(['/assetManagement/chargerManagement/salesDispatch/crud/' + this.tempLinks[0].link]);\r\n    //           }\r\n    //         });\r\n\r\n    //       }\r\n\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"]}