{"version":3,"sources":["webpack:///src/app/main/manage-geographics/manage-city/manage-city-crud/routes.ts","webpack:///src/app/main/manage-geographics/manage-city/manage-city.module.ts","webpack:///src/app/main/manage-geographics/manage-city/create/create.component.ts","webpack:///src/app/main/manage-geographics/manage-city/create/create.component.html","webpack:///src/app/main/manage-geographics/manage-city/manage-city-routing.module.ts","webpack:///src/app/main/manage-geographics/manage-city/view-dialog/view-dialog.component.ts","webpack:///src/app/main/manage-geographics/manage-city/view-dialog/view-dialog.component.html","webpack:///src/app/main/manage-geographics/manage-city/manage-city-crud/manage-city-crud.component.ts","webpack:///src/app/main/manage-geographics/manage-city/manage-city-crud/manage-city-crud.component.html","webpack:///src/app/main/manage-geographics/manage-city/list/list.component.ts","webpack:///src/app/main/manage-geographics/manage-city/list/list.component.html","webpack:///src/app/main/manage-geographics/manage-city/action-dialog/action-dialog.component.ts","webpack:///src/app/main/manage-geographics/manage-city/action-dialog/action-dialog.component.html"],"names":["TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","COMPONENTS","COMPONENTS_DYNAMIC","ManageCityModule","imports","declarations","entryComponents","autocompleteObjectValidator","control","value","CreateComponent","fb","snackBar","router","cityService","stateService","countryService","status","initialize","getCountry","localStorage","JSON","parse","getItem","form","group","name","required","pattern","description","state","country","invalid","formValues","params","state_id","id","created_by","userId","create","subscribe","cityData","open","duration","navigate","err_code","errorMsg","message","index","lastIndexOf","splitted","substring","nameDuplicateCity","err","get","hasError","event","checked","ref","item","filterValue","toLowerCase","states","filter","option","includes","countrty_id","getStateByCountry","stateData","filteredOptionState","controls","valueChanges","pipe","_filterState","getStatesByCountry","setValue","getAllCountry","data","countries","filteredOptionCountry","_filterCountry","onSubmit","$event","preventDefault","onCountryChange","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","providers","routes","children","ManageCityRoutingModule","forChild","exports","ViewDialogComponent","datePipe","dialogRef","isEditMode","getState","action","assignValues","close","modify_by","update","errorMessage","getAllState","toSelect","find","c","closeActionPanel","ManageCityCrudComponent","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","undefined","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","push","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","ManageCity","ListComponent","dialog","displayedColumns","head","nameSearch","descriptionSearch","stateSearch","statusSearch","getAllCity","filterEntity","filterType","ANYWHERE","target","dataSource","trim","paginator","firstPage","manageCity","i","length","statusString","sort","confirmDialogRef","disableClose","afterClosed","result","autoFocus","panelClass","width","visibleOption","exportedData","filteredData","cityModel","state_name","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","ActionDialogComponent","onYesClick"],"mappings":"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","file":"manage-city-manage-city-module-es5.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ManageCityCrudComponent } from './manage-city-crud/manage-city-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ManageCityRoutingModule } from './manage-city-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ManageCityCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ManageCityRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ManageCityModule{}","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport{StateService} from 'app/shared/services/geographics/state.service';\r\nimport {CountryService} from 'app/shared/services/geographics/country.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  states :any;\r\n  filteredOptionState: Observable<any[]>;\r\n  countries :any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  countrty_id:any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  constructor(private fb: FormBuilder,\r\n    private snackBar: MatSnackBar,\r\n    private router : Router,public cityService: CityService,public stateService:StateService,public countryService:CountryService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    // this.getState();\r\n   this.getCountry();\r\n   \r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      state :['',[autocompleteObjectValidator(),Validators.required]],\r\n      country :['',[autocompleteObjectValidator(),Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n  \r\n   \r\n \r\n  }\r\n \r\n  onSubmit(){\r\n    if (this.form.invalid){\r\n      return;\r\n    }else{\r\n      let formValues = this.form.value;\r\n      ////\r\n  \r\n      \r\n      let params = {\r\n        name :formValues.name, \r\n        description :formValues.description, \r\n        state_id:formValues.state.id,\r\n        status :  this.status == true ? 'Y' : 'N', \r\n        created_by : this.localStorage.userId \r\n      }\r\n  \r\n      \r\n      this.cityService.create(params).subscribe(\r\n        (cityData:any )=>{\r\n         if(cityData.status == true){\r\n          this.snackBar.open('City Created!', 'Dismiss', { duration: 5000 });\r\n          this.router.navigate(['/manageGeographics/manageCity/list']);\r\n\r\n         } else{\r\n          if(cityData.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n            this. errorMsg = cityData.message;\r\n            var index=  this. errorMsg.lastIndexOf(\" \");\r\n           \r\n            this.splitted = this. errorMsg.substring(index+1); \r\n            if(this.splitted == \"'state_id'\" ){\r\n              this.snackBar.open(MessageConstant.nameDuplicateCity, 'Dismiss', { duration: 5000 });\r\n            }\r\n           \r\n          }else{\r\n            this.snackBar.open(cityData.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n         // this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n         }\r\n        \r\n  \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  // getState(){\r\n  //   this.stateService.getAllState().subscribe(\r\n  //     (data:any)=>{\r\n  //       this.states = data;\r\n  //        this.filteredOptionState = this.form.controls.state.valueChanges\r\n  //          .pipe(\r\n  //            startWith(''),\r\n  //            map(value => typeof value === 'string' ? value : value.name),\r\n  //            map(name => name ? this._filterState(name) : this.states)\r\n  //          );\r\n  //        },(err)=>{\r\n           \r\n  //        }\r\n  //   )\r\n  // }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStatesByCountry(country){\r\n    this.countrty_id = country.id;\r\n    this.stateService.getStateByCountry(this.countrty_id).subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  onCountryChange(event){\r\n   this.getStatesByCountry(event);\r\n   this.states=[];\r\n   this.form.get('state').setValue( \"\");\r\n  }\r\n  getCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label> Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n\t\t\t\t\tformControlName=\"description\">\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">expand_more</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t</mat-slide-toggle>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/manageGeographics/manageCity/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ManageCityCrudComponent } from './manage-city-crud/manage-city-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './manage-city-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : ManageCityCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ManageCityRoutingModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport{StateService} from 'app/shared/services/geographics/state.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  states :any;\r\n  filteredOptionState: Observable<any[]>;\r\n  constructor(private fb: FormBuilder,private cityService: CityService, private stateService:StateService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getState();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      state :['',[autocompleteObjectValidator(),Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      state_id:formValues.state.id,\r\n      status :  this.status == true ? 'Y' : 'N', \r\n      modify_by : this.localStorage.userId,\r\n     \r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.cityService.update(params).subscribe(\r\n      (cityData: any ) => {\r\n        if(cityData.status == true){\r\n          this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }\r\n       \r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.cityService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getState(){\r\n    this.stateService.getAllState().subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n        }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage City</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label> Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"100\" autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" readonly autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"description\">\r\n          <mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\">\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" disabled=\"true\" class=\"example-margin\" color=\"primary\"\r\n          [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-manage-city-crud',\r\n  templateUrl: './manage-city-crud.component.html',\r\n  styleUrls: ['./manage-city-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ManageCityCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Manage City', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"manageGeographics\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"manageCity\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"manageCity\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Manage City', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n\r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/manageGeographics/manageCity/' + this.tempLinks[0].link]);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\n\r\n\r\nexport class ManageCity {\r\n name:string;\r\n description:string;\r\n state:string;\r\n status:string;\r\n statusString:string;\r\n state_name:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n  \r\n})\r\nexport class ListComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = [ 'name', 'description','state','status','action'];\r\n  head = [['City Name','Description','State','Status ']];\r\n  dataSource: MatTableDataSource<ManageCity>;\r\n\r\n  manageCity : ManageCity[];\r\n  filterEntity: ManageCity;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  nameSearch = false;\r\n  descriptionSearch = false;\r\n  stateSearch = false;\r\n  statusSearch = false;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private cityService : CityService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllCity();\r\n    this.filterEntity = new ManageCity();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails')); \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllCity(){\r\n    this.cityService.getAllCity().subscribe(\r\n      (cityData:any)=>{\r\n        this.manageCity = cityData;\r\n        for(var i=0; i < this.manageCity.length;i++){\r\n          if(this.manageCity[i].status == 'N'){\r\n            this.manageCity[i].statusString = 'Inactive';\r\n          }else{\r\n            this.manageCity[i].statusString = 'Active';\r\n          }\r\n          \r\n         \r\n        }\r\n        this.dataSource = new MatTableDataSource(this.manageCity);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    \r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.cityService.delete(id, this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n              if(data.status = true){\r\n                this.getAllCity();\r\n            this.snackBar.open('Deleted successfully','Dismiss',{duration:2000});\r\n              }else{\r\n                this.getAllCity();\r\n                this.snackBar.open('Error while saving data','Dismiss',{duration:2000});\r\n              }\r\n            \r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n  }\r\n\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true  \r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      panelClass: 'app-action-dialog',\r\n      disableClose: true      \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getAllCity();\r\n    });\r\n  }\r\n  viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getAllCity();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption){\r\n   \r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    \r\n    \r\n    if(visibleOption == 'descriptionSearch'){\r\n      this.descriptionSearch = !this.descriptionSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n     if(visibleOption == 'stateSearch'){\r\n      this.stateSearch = !this.stateSearch;\r\n      this.filterEntity.state = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n   \r\n   }\r\n   \r\n   tableExport()\r\n   {\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var cityModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'City Name':cityModel.name,'Description':cityModel.description,\r\n                  'State': cityModel.state_name,'Status ':cityModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Manage City');\r\n       XLSX.writeFile(workBook, 'Manage City.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n   }\r\n\r\n   pdfExport(){\r\n   \r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.description,chrger.state_name,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Manage City Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Manage City report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\");\r\n    return doc;\r\n  \r\n  }\r\n\r\n\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n     <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\"> City Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"City Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descriptionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descriptionSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"state\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stateSearch\" class=\"custom_font_size\" style=\"display: flex;\">State &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"stateSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"State\" [(ngModel)]=\"filterEntity.state\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stateSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.state_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport {CityService} from 'app/shared/services/geographics/city.service';\r\nimport{StateService} from 'app/shared/services/geographics/state.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  states :any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  filteredOptionState: Observable<any[]>;\r\n  constructor(private fb: FormBuilder,private cityService: CityService, private stateService:StateService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    this.getState();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description:['',[Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      state :['',[autocompleteObjectValidator(),Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n     });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    let formValues = this.form.value;\r\n    \r\n    const params: any = {\r\n\r\n      name :formValues.name, \r\n      description :formValues.description, \r\n      state_id:formValues.state.id,\r\n      status :  this.status == true ? 'Y' : 'N', \r\n      modify_by : this.localStorage.userId,\r\n     \r\n  // tslint:disable-next-line: semicolon\r\n  }\r\n// tslint:disable-next-line: no-//\r\n\r\n    if (this.isEditMode){\r\n    params.id = this.params.data.id,\r\n    params.modify_by = this.localStorage.userId;\r\n  } else{\r\n    params.created_by = this.localStorage.userId;\r\n  }\r\n\r\n    if (this.isEditMode){\r\n    this.cityService.update(params).subscribe(\r\n      (cityData: any ) => {\r\n        if(cityData.status == true){\r\n          this.snackBar.open('Record updated successfully!', 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        }else{\r\n          if(cityData.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n            this. errorMsg = cityData.message;\r\n            var index=  this. errorMsg.lastIndexOf(\" \");\r\n            \r\n            this.splitted = this. errorMsg.substring(index+1); \r\n            if(this.splitted == \"'state_id'\" ){\r\n              this.snackBar.open(MessageConstant.nameDuplicateCity, 'Dismiss', { duration: 5000 });\r\n            }\r\n           \r\n          }else{\r\n            this.snackBar.open(cityData.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n        }\r\n       \r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n  }else{\r\n    this.cityService.create(params).subscribe(\r\n      (data: any ) => {\r\n        this.snackBar.open('Rfid created!', 'Dismiss', { duration: 5000 });\r\n        this.dialogRef.close();\r\n      },\r\n      (err) => {\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n    this.dialogRef.close(params);\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getState(){\r\n    this.stateService.getAllState().subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n        }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n\r\n<mat-toolbar class=\"action_toolbar\">Manage City</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label> Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"100\" required autocomplete=\"off\">\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\"> Name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" required autocomplete=\"off\" maxlength=\"100\" autocomplete=\"off\"\r\n            formControlName=\"description\">\r\n          <mat-error *ngIf=\"form.get('description').hasError('required')\">Description required</mat-error>\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\">\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"]}