{"version":3,"sources":["webpack:///src/app/main/asset/vehicle/vehicle-onBoard/publish/publish.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/publish/publish.component.html","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/edit/edit.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/edit/edit.component.html","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/vehicle-onBoard.module.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/list/list.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/list/list.component.html","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/action-modal/action-modal.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/action-modal/action-modal.component.html","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/on-board/on-board.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/on-board/on-board.component.html","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/on-board/routes.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/view-modal/view-modal.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/view-modal/view-modal.component.html","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/vehicle-onBoard-routing.module.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/create/create.component.ts","webpack:///src/app/main/asset/vehicle/vehicle-onBoard/create/create.component.html"],"names":["Configuration","ListPublish","PublishComponent","vehicleService","router","datePipe","dialog","snackBar","displayedColumns","head","vehicleSearch","connTypeSearch","vehicleTypeSearch","publishSearch","localStorage","getItem","getPublishedVModel","filterEntity","filterType","ANYWHERE","subscribe","data","vehicles","i","length","dateConverted","transform","created_date","dataSource","paginator","sort","err","published_with_modification","moderateVModel_CTYpeWithoutModify","open","duration","moderateVModel_CTYpe","params","action","dialogRef","width","panelClass","autoFocus","disableClose","afterClosed","result","moderate","visibleOption","ev","stopPropagation","vm_name","ct_name","vType_name","exportedData","filteredData","chargerModel","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","selector","templateUrl","styleUrls","providers","EditComponent","fb","masterService","activatedRoute","q","username","email","gender","initialize","queryParams","userId","state$","paramMap","pipe","window","history","state","form","group","brand","required","model","chargerType","registration","minLength","maxLength","pattern","yearOfManufacture","engineNumber","chassisNumber","VINnumber","getBrands","brands","id","getModelsByBrand","models","getConnectorTypeByModel","chargerTypes","event","value","get","setValue","formValues","brand_id","model_id","charger_type","registration_no","year_of_manufacture","engine_no","chassis_no","vin_no","status","created_by","register","navigate","hasError","onSubmit","onBrandChange","onModelChange","onChargerTypeChange","COMPONENTS","COMPONENTS_DYNAMIC","VehicleOnBoardModule","imports","declarations","entryComponents","ListModrate","ListComponent","modrateSearch","JSON","parse","getVModel_CTypeMapping","item","stringify","publishVModel_CTYpeWithoutModify","publishedMessage","errorMessage","publishVModel_CTYpe","publish","confirmDialogRef","deleteModrateVehicle","deleteMessage","encapsulation","None","animations","autocompleteObjectValidator","control","ActionModalComponent","isEnabled","connectorType","vehicleType","isModified","isConfirmed","getVehicleTypes","disable","filterOption","assignValues","toSelect","find","c","filteredOptionsBrand","controls","valueChanges","name","_filterBrands","vehicleTypes","vType_id","filteredOptionsVehicleType","_filterVehicleType","vm_id","filteredOptionsModel","_filterModels","ct_id","getAllCTypesExcludingOtherAlreadyMapped","connectorTypes","connectorTypesExcludingVModelId","close","getConnectorTypes","published_by","checked","enable","filterValue","toLowerCase","filter","option","includes","closeActionPanel","changeEdit","onNoClick","onYesClick","OnBoardComponent","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","undefined","title","detectChanges","nav_list","nav_list_with_tab","x","objectData","children","y","objectChildData","z","childData","isDefaultRoutePermeted","t","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","ViewModalComponent","routes","VehicleOnBoardRoutingModule","forChild","exports","CreateComponent","valid","vModel_CTypeMap","vehicleCreate","ref","$event","preventDefault","updateStatus"],"mappings":"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","file":"vehicle-onBoard-vehicle-onBoard-module-es5.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ActionModalComponent} from '../action-modal/action-modal.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewModalComponent} from '../view-modal/view-modal.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { DatePipe } from '@angular/common';\r\ninterface DialogData {\r\n  email: string;\r\n}\r\nexport class Configuration {\r\n  vm_name:string;\r\n  vType_name:string;\r\n  ct_name:string;\r\n  created_date:string;\r\n}\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\nexport class ListPublish {\r\n  vm_name: string;\r\n  ct_name:string;\r\n  vType_name:string;\r\n  created_date:string;\r\n  dateConverted:string;\r\n \r\n}\r\n@Component({\r\n  selector: 'app-publish',\r\n  templateUrl: './publish.component.html',\r\n  styleUrls: ['./publish.component.scss'],\r\n  providers:[DatePipe]\r\n})\r\nexport class PublishComponent implements OnInit {\r\n\r\n  filterEntity: ListPublish;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'vm_name','ct_name','vType_name','created_date','action'];\r\n  head = [['VM_Name', 'CT_Name','VType_Name','Created_Date']];\r\n  dataSource : MatTableDataSource<ListPublish>;\r\n  vehicles : ListPublish[];\r\n\r\n  email: string;\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  vehicleSearch = false;\r\n  connTypeSearch = false;\r\n  vehicleTypeSearch = false;\r\n  publishSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  constructor(private vehicleService : VehicleService,private router : Router,private datePipe:DatePipe,\r\n    public dialog : MatDialog, private snackBar : MatSnackBar){}\r\n\r\n  ngOnInit() {\r\n    this.localStorage = localStorage.getItem('userDetails');\r\n    this.getPublishedVModel();\r\n    this.filterEntity = new ListPublish();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  getPublishedVModel(){\r\n    this.vehicleService.getPublishedVModel().subscribe(\r\n      (data:any)=>{\r\n\r\n        this.vehicles = data;\r\n        for(var i =0; i<this.vehicles.length;i++){\r\n          this.vehicles[i].dateConverted = this.datePipe.transform(this.vehicles[i].created_date, 'dd/MM/yyyy');\r\n        }\r\n        this.dataSource = new MatTableDataSource(this.vehicles);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        \r\n      },\r\n      (err)=>{\r\n      }\r\n    )\r\n  }\r\n  \r\n  moderate(data){\r\n\r\n    if(data.published_with_modification==0){\r\n      this.vehicleService.moderateVModel_CTYpeWithoutModify(data).subscribe(\r\n        (data:any)=>{\r\n          this.snackBar.open('Moderated successfully', 'Dismiss', { duration: 3000 });\r\n          this.getPublishedVModel();\r\n  \r\n        },(err)=>{\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 3000 });\r\n        }\r\n      )\r\n\r\n    }else{\r\n      this.vehicleService.moderateVModel_CTYpe(data).subscribe(\r\n        (data:any)=>{\r\n          //\r\n          this.snackBar.open('Moderated successfully', 'Dismiss', { duration: 3000 });\r\n          this.getPublishedVModel();\r\n  \r\n        },(err)=>{\r\n          //\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 3000 });\r\n        }\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n  openDialog(data): void {\r\n\r\n    let params = {\r\n      action : 'MODERATE',\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionModalComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //\r\n      this.moderate(result);\r\n    });\r\n  }\r\n  viewDialog(data): void {\r\n\r\n    let params = {\r\n      action : 'MODERATE',\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewModalComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //\r\n      this.moderate(result);\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n    if(visibleOption == 'vehicleSearch'){\r\n      this.vehicleSearch = !this.vehicleSearch;\r\n      this.filterEntity.vm_name = '';\r\n    }\r\n    \r\n    if(visibleOption == 'connTypeSearch'){\r\n      this.connTypeSearch = !this.connTypeSearch;\r\n      this.filterEntity.ct_name = '';\r\n    }\r\n    if(visibleOption == 'vehicleTypeSearch'){\r\n      this.vehicleTypeSearch = !this.vehicleTypeSearch;\r\n      this.filterEntity.vType_name = '';\r\n    }\r\n    if(visibleOption == 'publishSearch'){\r\n      this.publishSearch = !this.publishSearch;\r\n      this.filterEntity.dateConverted = '';\r\n    }\r\n   }\r\n   tableExport()\r\n   {\r\n    \r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Vehicle Model ':chargerModel.vm_name,'Connector Type':chargerModel.ct_name,'Vehicle Type':chargerModel.vType_name,\r\n            'Publish Date':chargerModel.dateConverted};\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n     \r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Publish list');\r\n       XLSX.writeFile(workBook, 'Publish List.xlsx');\r\n      \r\n      \r\n   \r\n   }\r\n\r\n   pdfExport(){\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.vm_name,chrger.ct_name,chrger.vType_name,chrger.dateConverted] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Publish List Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Publish_List_report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    \r\n    \r\n  \r\n    return doc;\r\n  \r\n  }\r\n  \r\n}\r\n","<!-- <page-header title=\"Publish Vehicle Model And Charger Mapping\"></page-header> -->\r\n<div>\r\n  <div style=\"text-align: left ;\r\n  margin-left: 10px;\r\n  margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n      <mat-icon>sim_card_download</mat-icon> \r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n      <mat-icon>picture_as_pdf</mat-icon> \r\n    </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div fxFlex=\"100\" class=\"content\" style=\"min-width: auto;\">\r\n      <!-- <mat-card> -->\r\n      <div class=\"mat-elevation-z8\">\r\n        <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n          [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n          <ng-container matColumnDef=\"vm_name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              <span *ngIf=\"!vehicleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model &nbsp;&nbsp;\r\n                <mat-icon matSuffix (click)=\"changeVisibility('vehicleSearch',$event)\">search</mat-icon> </span>\r\n              <mat-form-field *ngIf=\"vehicleSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                <input matInput placeholder=\"Vehicle Model\" [(ngModel)]=\"filterEntity.vm_name\">\r\n                <mat-icon matSuffix (click)=\"changeVisibility('vehicleSearch',$event)\">highlight_off</mat-icon>\r\n              </mat-form-field>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.vm_name}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"ct_name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              <span *ngIf=\"!connTypeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Connector Type &nbsp;&nbsp;\r\n                <mat-icon matSuffix (click)=\"changeVisibility('connTypeSearch',$event)\">search</mat-icon> </span>\r\n              <mat-form-field *ngIf=\"connTypeSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                <input matInput placeholder=\"Connector Type \" [(ngModel)]=\"filterEntity.ct_name\">\r\n                <mat-icon matSuffix (click)=\"changeVisibility('connTypeSearch',$event)\">highlight_off</mat-icon>\r\n              </mat-form-field>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.ct_name}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"vType_name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              <span *ngIf=\"!vehicleTypeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type &nbsp;&nbsp;\r\n                <mat-icon matSuffix (click)=\"changeVisibility('vehicleTypeSearch',$event)\">search</mat-icon> </span>\r\n              <mat-form-field *ngIf=\"vehicleTypeSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                <input matInput placeholder=\"Vehicle Type \" [(ngModel)]=\"filterEntity.vType_name\">\r\n                <mat-icon matSuffix (click)=\"changeVisibility('vehicleTypeSearch',$event)\">highlight_off</mat-icon>\r\n              </mat-form-field>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.vType_name}} </td>\r\n          </ng-container>\r\n\r\n\r\n          <ng-container matColumnDef=\"created_date\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n              <span *ngIf=\"!publishSearch\" class=\"custom_font_size\" style=\"display: flex;\">Publish Date &nbsp;&nbsp;\r\n                <mat-icon matSuffix (click)=\"changeVisibility('publishSearch',$event)\">search</mat-icon> </span>\r\n              <mat-form-field *ngIf=\"publishSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                <input matInput placeholder=\"Published Date\" [(ngModel)]=\"filterEntity.dateConverted\">\r\n                <mat-icon matSuffix (click)=\"changeVisibility('publishSearch',$event)\">highlight_off</mat-icon>\r\n              </mat-form-field>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.dateConverted}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"action\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n              <span class=\"custom_font_size\">Action</span>\r\n            </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              <!-- <button mat-raised-button color=\"primary\" (click)=\"publish(element)\"\r\n                  *ngIf=\"element.status=='M'\">Publish</button> -->\r\n              <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\" style=\"cursor:pointer\">\r\n                visibility</mat-icon>&nbsp;&nbsp;\r\n              <mat-icon color=\"primary\" matTooltip=\"Moderate\" (click)=\"openDialog(element)\" style=\"cursor:pointer\">\r\n                published_with_changes</mat-icon>\r\n\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\r\n      </div>\r\n      <!-- </mat-card> -->\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  q = {\r\n    username: '',\r\n    email: '',\r\n    gender: '',\r\n  };\r\n\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  chargerTypes:any;\r\n  localStorage : any;\r\n  state$:any;\r\n\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private vehicleService : VehicleService,private snackBar: MatSnackBar,\r\n    private router : Router,private activatedRoute : ActivatedRoute) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = localStorage.getItem('userDetails');\r\n\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      const userId = params['userId'];\r\n    });\r\n\r\n    this.state$ = this.activatedRoute.paramMap\r\n      .pipe(map(() => window.history.state));\r\n\r\n    this.form = this.fb.group({\r\n      brand: ['', [Validators.required]],\r\n      model: ['', [Validators.required]],\r\n      chargerType : ['', [Validators.required]],\r\n      registration: ['', [Validators.required,\r\n        Validators.minLength(8),Validators.maxLength(11),\r\n        Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      yearOfManufacture: ['', [Validators.required]],\r\n      engineNumber: ['', [Validators.required]],\r\n      chassisNumber: ['', [Validators.required]],\r\n      VINnumber: ['', [Validators.required]],\r\n      // vehicle: ['', [Validators.required]],\r\n      // manufacturer: ['', [Validators.required]],\r\n      \r\n    });\r\n\r\n    this.getBrands();\r\n  }\r\n\r\n  getBrands(){\r\n    this.masterService.getBrands().subscribe(\r\n      (data:any)=>{\r\n        this.brands = data;\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getModelsByBrand(id){\r\n    this.masterService.getModelsByBrand(id).subscribe(\r\n      (data:any)=>{\r\n        this.models = data;\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getConnectorTypeByModel(id){\r\n    this.masterService.getConnectorTypeByModel(id).subscribe(\r\n      (data:any)=>{\r\n        this.chargerTypes = data;\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n\r\n  onBrandChange(event){\r\n    this.getModelsByBrand(event.value);\r\n    this.form.get('model').setValue(\"\");\r\n  }\r\n  onModelChange(event){\r\n    this.getConnectorTypeByModel(event.value);\r\n  }\r\n  onChargerTypeChange(event){\r\n    ////\r\n    // this.getChargerTypeByModel(event.value);\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    let formValues = this.form.value;\r\n    ////\r\n\r\n    let params = {\r\n        brand_id : formValues.brand,\r\n        model_id : formValues.model,\r\n        charger_type : formValues.chargerType,\r\n        registration_no : formValues.registration,\r\n        year_of_manufacture : formValues.yearOfManufacture,\r\n        engine_no : formValues.engineNumber,\r\n        chassis_no : formValues.chassisNumber,\r\n        vin_no : formValues.VINnumber,\r\n        status : 'Y',\r\n        created_by : this.localStorage.userId\r\n    }\r\n    this.vehicleService.register(params).subscribe(\r\n      (data:any )=>{\r\n        ////\r\n        // this.snackBar.open('Vehicle Registered!', 'Dismiss', { duration: 5000 });\r\n        this.router.navigate(['/registration/vehicle/list']);\r\n\r\n      },\r\n      (err)=>{\r\n        ////\r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <!-- <mat-card-title>Form Horizontal</mat-card-title> -->\r\n\r\n      <form [formGroup]=\"form\" class=\"form-field-full\" (submit)=\"onSubmit()\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Brand</mat-label>\r\n              <mat-select required formControlName=\"brand\" (selectionChange)=\"onBrandChange($event)\" required>\r\n                <!-- <mat-option>-- Select --</mat-option> -->\r\n                <mat-option *ngFor=\"let option of brands\" [value]=\"option.id\">\r\n                  {{option.name}}\r\n                </mat-option>\r\n\r\n              </mat-select>\r\n              <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Model</mat-label>\r\n              <mat-select formControlName=\"model\" (selectionChange)=\"onModelChange($event)\" required>\r\n                <mat-option *ngFor=\"let option of models\" [value]=\"option.id\">\r\n                  {{option.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"form.get('model').invalid\">Please select model\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Charger Type</mat-label>\r\n              <mat-select formControlName=\"chargerType\" (selectionChange)=\"onChargerTypeChange($event)\" required>\r\n\r\n                <mat-option *ngFor=\"let option of chargerTypes\" [value]=\"option.ct_id\">\r\n                  {{option.name}}\r\n                </mat-option>\r\n\r\n              </mat-select>\r\n              <mat-error *ngIf=\"form.get('chargerType').invalid\">Please select charger type\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Registration Number</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"registration\" required>\r\n              <mat-error *ngIf=\"form.controls.registration.hasError('required')\">Please enter registration number\r\n              </mat-error>\r\n              <mat-error\r\n                *ngIf=\"form.controls.registration.hasError('maxlength') || form.controls.registration.hasError('minlength')\">\r\n                Registration number is incorrect</mat-error>\r\n              <mat-error *ngIf=\"form.controls.registration.hasError('pattern')\">Special characters not allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Year Of Manufacture</mat-label>\r\n              <input matInput placeholder=\"Year of manufacture\" formControlName=\"yearOfManufacture\" required>\r\n              <mat-error *ngIf=\"form.controls.registration.hasError('required')\">Please enter year of manufacture\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Engine Number</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"engineNumber\" required>\r\n              <mat-error *ngIf=\"form.get('engineNumber').invalid\">Please enter engine number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Chassis Number</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"chassisNumber\" required>\r\n              <mat-error *ngIf=\"form.get('chassisNumber').invalid\">Please enter chassis number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>VIN Number</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"VINnumber\" required>\r\n              <mat-error *ngIf=\"form.get('VINnumber').invalid\">Please enter VIN number\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n\r\n      </form>\r\n\r\n      <!-- <div class=\"m-t-16\">{{form.value|json}}</div> -->\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { VehicleOnBoardRoutingModule } from './vehicle-onBoard-routing.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { PublishComponent } from './publish/publish.component';\r\nimport { OnBoardComponent } from './on-board/on-board.component';\r\nimport { ActionModalComponent } from './action-modal/action-modal.component';\r\n// import { ChargingStationRoutingModule } from './charging-station-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewModalComponent } from './view-modal/view-modal.component';\r\nconst COMPONENTS =[CreateComponent,ListComponent,EditComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionModalComponent,ViewModalComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, VehicleOnBoardRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC, PublishComponent, OnBoardComponent, ActionModalComponent],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class VehicleOnBoardModule{}","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { ActionModalComponent } from '../action-modal/action-modal.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport {ViewModalComponent} from '../view-modal/view-modal.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { DatePipe } from '@angular/common';\r\n// export interface Vehicle {\r\n//   id : number ;\r\n//   brand_id : number ;\r\n//   model_id = vehicle.model_id,\r\n//   connector_type_id = vehicle.connector_type_id,\r\n//   charger_type_id = vehicle.charger_type_id,\r\n//   registration_no = vehicle.registration_no,\r\n//   year_of_manufacture = vehicle.year_of_manufacture,\r\n//   engine_no = vehicle.engine_no,\r\n//   chassis_no = vehicle.chassis_no,\r\n//   vin_no = vehicle.vin_no,\r\n//   status = vehicle.status ,\r\n//   created_date = vehicle.created_date ,\r\n//   created_by = vehicle.created_by,\r\n//   modify_date = vehicle.modify_date ,\r\n//   modify_by = vehicle.modify_by\r\n// }\r\n\r\nexport class ListModrate {\r\n  vm_name: string;\r\n  ct_name:string;\r\n  vType_name:string;\r\n  created_date:string;\r\n  dateConverted:string;\r\n}\r\n\r\n/**\r\n * @title Table with sorting\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: ListModrate;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'vm_name','ct_name','vType_name','created_date','action'];\r\n  head = [['VM_Name', 'CT_Name','VType_Name','Created_Date']];\r\n  dataSource : MatTableDataSource<ListModrate>;\r\n  vehicles : ListModrate[];\r\n  localStorage : any;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  vehicleSearch = false;\r\n  connTypeSearch = false;\r\n  vehicleTypeSearch = false;\r\n  modrateSearch = false;\r\n  exportedData: any[];\r\n  constructor(private vehicleService : VehicleService,private router : Router,private datePipe:DatePipe,\r\n    public dialog : MatDialog,private snackBar: MatSnackBar){}\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getVModel_CTypeMapping();\r\n    this.filterEntity = new ListModrate();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  getVModel_CTypeMapping(){\r\n    ////\r\n    this.vehicleService.getVModel_CTypeMapping().subscribe(\r\n      (data:any)=>{\r\n        this.vehicles = data;\r\n        for(var i =0; i<this.vehicles.length;i++){\r\n          this.vehicles[i].dateConverted = this.datePipe.transform(this.vehicles[i].created_date, 'dd/MM/yyyy');\r\n        }\r\n        this.dataSource = new MatTableDataSource(this.vehicles);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n      (err)=>{\r\n        ////\r\n      }\r\n    )\r\n  }\r\n\r\n  edit(item){\r\n    ////\r\n    this.router.navigate(['/registration/vehicle/edit',{ state: {data : JSON.stringify(item)} }]);\r\n  }\r\n\r\n  publish(data){\r\n    if(data.published_with_modification==0){\r\n      this.vehicleService.publishVModel_CTYpeWithoutModify(data).subscribe(\r\n        (data:any)=>{\r\n          this.snackBar.open(MessageConstant.publishedMessage, 'Dismiss', { duration: 3000 });\r\n          this.getVModel_CTypeMapping();\r\n  \r\n        },(err)=>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n        }\r\n      )\r\n\r\n    }else{\r\n      this.vehicleService.publishVModel_CTYpe(data).subscribe(\r\n        (data:any)=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.publishedMessage, 'Dismiss', { duration: 3000 });\r\n          this.getVModel_CTypeMapping();\r\n  \r\n        },(err)=>{\r\n          //\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 3000 });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  openDialog(data): void {\r\n\r\n    //\r\n    let params = {\r\n      action : 'PUBLISH',\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionModalComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //\r\n      // this.email = result;\r\n      this.publish(result);\r\n    });\r\n  }\r\n  viewDialog(data): void {\r\n\r\n    let params = {\r\n      action : 'PUBLISH',\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewModalComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      //\r\n      this.publish(result);\r\n    });\r\n  }\r\n  delete(id){\r\n\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.vehicleService.deleteModrateVehicle(id,this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n            this.getVModel_CTypeMapping();\r\n            this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n          },(err)=>{\r\n          \r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n   \r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n    if(visibleOption == 'vehicleSearch'){\r\n      this.vehicleSearch = !this.vehicleSearch;\r\n      this.filterEntity.vm_name = '';\r\n    }\r\n    \r\n    if(visibleOption == 'connTypeSearch'){\r\n      this.connTypeSearch = !this.connTypeSearch;\r\n      this.filterEntity.ct_name = '';\r\n    }\r\n    if(visibleOption == 'vehicleTypeSearch'){\r\n      this.vehicleTypeSearch = !this.vehicleTypeSearch;\r\n      this.filterEntity.vType_name = '';\r\n    }\r\n    if(visibleOption == 'modrateSearch'){\r\n      this.modrateSearch = !this.modrateSearch;\r\n      this.filterEntity.dateConverted = '';\r\n    } \r\n   }\r\n   tableExport()\r\n   {\r\n    \r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Vehicle Model ':chargerModel.vm_name,'Connector Type':chargerModel.ct_name,'Vehicle Type':chargerModel.vType_name,\r\n            'Publish Date':chargerModel.dateConverted};\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n     \r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Modrate list');\r\n       XLSX.writeFile(workBook, 'Modrate List.xlsx');\r\n   }\r\n\r\n   pdfExport(){\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.vm_name,chrger.ct_name,chrger.vType_name,chrger.dateConverted] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Modrate List Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Modrate List report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n\r\n    return doc;\r\n  \r\n  }\r\n}\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div style=\"text-align: left ;\r\n          margin-left: 10px;\r\n          margin-bottom:10px;margin-top: 10px;\">\r\n  <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n    <mat-icon>sim_card_download</mat-icon> \r\n  </button>&nbsp;&nbsp;\r\n  <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n    <mat-icon>picture_as_pdf</mat-icon> \r\n  </button>\r\n  <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n  <div class=\"content\" style=\"min-width: auto;\">\r\n    <!-- <mat-card> -->\r\n\r\n    <!-- <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\"\r\n            routerLink=\"/vehicleManagement/onBoard/create\" title=\"Add more\">\r\n            <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">add_circle_outer</mat-icon>\r\n        </button> -->\r\n\r\n    <div class=\"\">\r\n      <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\"\r\n        matSort class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"vm_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            <span *ngIf=\"!vehicleSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Model &nbsp;&nbsp;\r\n              <mat-icon matSuffix (click)=\"changeVisibility('vehicleSearch',$event)\">search</mat-icon> </span>\r\n            <mat-form-field *ngIf=\"vehicleSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n              <input matInput placeholder=\"Vehicle Model\" [(ngModel)]=\"filterEntity.vm_name\">\r\n              <mat-icon matSuffix (click)=\"changeVisibility('vehicleSearch',$event)\">highlight_off</mat-icon>\r\n            </mat-form-field>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.vm_name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"ct_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            <span *ngIf=\"!connTypeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Connector Type &nbsp;&nbsp;\r\n              <mat-icon matSuffix (click)=\"changeVisibility('connTypeSearch',$event)\">search</mat-icon> </span>\r\n            <mat-form-field *ngIf=\"connTypeSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n              <input matInput placeholder=\"Connector Type \" [(ngModel)]=\"filterEntity.ct_name\">\r\n              <mat-icon matSuffix (click)=\"changeVisibility('connTypeSearch',$event)\">highlight_off</mat-icon>\r\n            </mat-form-field>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ct_name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"vType_name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            <span *ngIf=\"!vehicleTypeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Vehicle Type &nbsp;&nbsp;\r\n              <mat-icon matSuffix (click)=\"changeVisibility('vehicleTypeSearch',$event)\">search</mat-icon> </span>\r\n            <mat-form-field *ngIf=\"vehicleTypeSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n              <input matInput placeholder=\"Vehicle Type \" [(ngModel)]=\"filterEntity.vType_name\">\r\n              <mat-icon matSuffix (click)=\"changeVisibility('vehicleTypeSearch',$event)\">highlight_off</mat-icon>\r\n            </mat-form-field>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.vType_name}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"created_date\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n            <span *ngIf=\"!modrateSearch\" class=\"custom_font_size\" style=\"display: flex;\">Moderate Date &nbsp;&nbsp;\r\n              <mat-icon matSuffix (click)=\"changeVisibility('modrateSearch',$event)\">search</mat-icon> </span>\r\n            <mat-form-field *ngIf=\"modrateSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n              <input matInput placeholder=\" Moderate Date\" [(ngModel)]=\"filterEntity.dateConverted\">\r\n              <mat-icon matSuffix (click)=\"changeVisibility('modrateSearch',$event)\">highlight_off</mat-icon>\r\n            </mat-form-field>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.dateConverted}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\" style=\"cursor:pointer\">visibility\r\n            </mat-icon>&nbsp;&nbsp;\r\n            <mat-icon color=\"primary\" matTooltip=\"Publish\" (click)=\"openDialog(element)\" style=\"cursor:pointer\">\r\n              published_with_changes</mat-icon>&nbsp;&nbsp;\r\n            <!--button mat-raised-button color=\"primary\" (click)=\"openDialog(element)\">Publish</button-->\r\n            <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">delete\r\n            </mat-icon>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\r\n    </div>\r\n    <!-- </mat-card> -->\r\n  </div>\r\n\r\n</div>","\r\n\r\nimport { Component, OnInit,Inject } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\ninterface DialogData {\r\n  email: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-action-modal',\r\n  templateUrl: './action-modal.component.html',\r\n  styleUrls: ['./action-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionModalComponent implements OnInit {\r\n\r\n  params : any;\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  connectorTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  isEnabled = 0;\r\n\r\n  filteredOptionsBrand: Observable<any[]>;\r\n  filteredOptionsModel: Observable<any[]>;\r\n  filteredOptionsVehicleType: Observable<any[]>;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    public dialogRef: MatDialogRef<ActionModalComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n    \r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    // \r\n\r\n    this.form = this.fb.group({\r\n      brand: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      model: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      connectorType : ['', [Validators.required]],\r\n      vehicleType : ['', [autocompleteObjectValidator(),Validators.required]],\r\n      isModified : [''] ,     \r\n      isConfirmed : ['']      \r\n    });\r\n\r\n    this.getBrands();\r\n    this.getVehicleTypes();\r\n    this.form.disable();\r\n    this.filterOption();\r\n    this.assignValues(this.data);\r\n  }\r\n\r\n  getBrands(){\r\n    this.masterService.getBrands().subscribe(\r\n      (data:any)=>{\r\n        this.brands = data;\r\n        const toSelect = this.brands.find(c => c.id == this.params.data.brand_id);\r\n        this.form.get('brand').setValue(toSelect);\r\n        this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterBrands(name) : this.brands)\r\n        );\r\n        this.onBrandChange(toSelect.id);\r\n\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getVehicleTypes(){\r\n    this.masterService.getVehicleTypes().subscribe(\r\n      (data:any)=>{\r\n        this.vehicleTypes = data;\r\n\r\n        const toSelect = this.vehicleTypes.find(c => c.id == this.params.data.vType_id);\r\n        \r\n        this.form.get('vehicleType').setValue(toSelect);\r\n        this.filteredOptionsVehicleType = this.form.controls.vehicleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterVehicleType(name) : this.vehicleTypes)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getModelsByBrand(id){\r\n    this.masterService.getModelsByBrand(id).subscribe(\r\n      (data:any)=>{\r\n        this.models = data;\r\n        \r\n        const toSelect = this.models.find(c => c.id == this.params.data.vm_id);\r\n        this.form.get('model').setValue(toSelect);\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n        this.onModelChange(toSelect.id);\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n\r\n  getAllCTypesExcludingOtherAlreadyMapped(vm_id,ct_id){\r\n    \r\n    this.masterService.getAllCTypesExcludingOtherAlreadyMapped(vm_id,ct_id).subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        const toSelect = this.connectorTypes.find(c => c.id == this.params.data.ct_id);\r\n        this.form.get('connectorType').setValue(toSelect.id);\r\n      },\r\n      (err)=>{\r\n        \r\n      })\r\n    \r\n  }\r\n\r\n  getConnectorTypes(vm_id){\r\n    this.connectorTypes=null;\r\n    this.masterService.connectorTypesExcludingVModelId(vm_id).subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        const toSelect = this.connectorTypes.find(c => c.id == this.params.data.ct_id);\r\n        this.form.get('connectorType').setValue(toSelect.id);\r\n      },\r\n      (err)=>{\r\n        \r\n      })\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onBrandChange(id){\r\n    this.getModelsByBrand(id);\r\n    this.form.get('model').setValue(\"\");\r\n  }\r\n  onModelChange(id){\r\n    \r\n    if(id != this.params.data.vm_id){\r\n      this.getConnectorTypes(id);\r\n    }else{\r\n      this.getAllCTypesExcludingOtherAlreadyMapped(id,this.params.data.ct_id);\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    //\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    //\r\n    //if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let params ={}\r\n      if(this.isEnabled){\r\n       params = {\r\n            id : this.params.data.id,\r\n            ct_id: formValues.connectorType,\r\n            vm_id: formValues.model.id,\r\n            vType_id : formValues.vehicleType.id,\r\n            status : 'P',\r\n            published_with_modification : this.isEnabled,\r\n            published_by : this.localStorage.userId\r\n        }\r\n      }else{\r\n        params = {\r\n          id : this.params.data.id,\r\n          status : 'P',\r\n          published_with_modification : this.isEnabled,\r\n          published_by : this.localStorage.userId\r\n        }\r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    //}\r\n   return;\r\n  }\r\n\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  changeEdit(event){\r\n    //\r\n    if(event.checked){\r\n      this.form.enable();\r\n      this.isEnabled=1;\r\n    }else{\r\n      this.form.disable();\r\n      this.isEnabled=0;\r\n    }\r\n  }\r\n\r\n\r\n  assignValues(data){\r\n    //\r\n\r\n  }\r\n  filterOption(){\r\n    this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterBrands(name) : this.brands)\r\n        );\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n        this.filteredOptionsVehicleType = this.form.controls.vehicleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterVehicleType(name) : this.vehicleTypes)\r\n        );\r\n  }\r\n  displayBrand(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayVehicleType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterBrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.models.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterVehicleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.vehicleTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">{{params.action == 'MODERATE' ? 'Pending' : 'Publish'}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" checked=\"false\" (change)=\"changeEdit($event)\">Edit\r\n        </mat-slide-toggle>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" style=\"padding-top:10px\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Brand</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"brand\" required [matAutocomplete]=\"brandAuto\">\r\n          <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrand\"\r\n            (optionSelected)='onBrandChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsBrand | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select brand\">branding_watermark</mat-icon>\r\n          </div>\r\n            <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Model</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"model\" required [matAutocomplete]=\"modelAuto\">\r\n          <mat-autocomplete #modelAuto=\"matAutocomplete\" [displayWith]=\"displayModel\"\r\n            (optionSelected)='onModelChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsModel | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model\">model_training</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('model').invalid\">Please select model\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Vehicle Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"vehicleType\" required [matAutocomplete]=\"vehicleTypeAuto\">\r\n          <mat-autocomplete #vehicleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayVehicleType\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsVehicleType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select vehicle\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('vehicleType').invalid\">Please select vehicle type\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Vehicle Type</mat-label>\r\n          <mat-label>Connector Type</mat-label>\r\n          <mat-select formControlName=\"connectorType\" required>\r\n\r\n            <mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n              {{option.name}}\r\n            </mat-option>\r\n\r\n          </mat-select>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector type\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('connectorType').invalid\">Please select connector type\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Cancel</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"onYesClick()\" style=\"margin-left: 1%;\">{{params.action ==\r\n          'MODERATE' ? 'Moderate' : 'Publish'}}</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-on-board',\r\n  templateUrl: './on-board.component.html',\r\n  styleUrls: ['./on-board.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class OnBoardComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Live', link: 'publish' },\r\n    // { label: 'Pending', link: 'list' },\r\n    // { label: 'Add New', link: 'create' },\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"vehicleManagement\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"onBoard\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if (this.childData.children != undefined && this.childData.children != null) {\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"live\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'Live', link: 'publish' });\r\n                        }\r\n                        if (t.id === \"pending\") {\r\n                          this.tempLinks.push({ label: 'Pending', link: 'list' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/vehicleManagement/onBoard/onBoard/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\n\r\nimport { CreateComponent } from 'app/main/asset/vehicle/vehicle-onBoard/create/create.component';\r\nimport { EditComponent } from 'app/main/asset/vehicle/vehicle-onBoard/edit/edit.component';\r\nimport { ListComponent } from 'app/main/asset/vehicle/vehicle-onBoard/list/list.component';\r\nimport { PublishComponent } from 'app/main/asset/vehicle/vehicle-onBoard/publish/publish.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent, canActivate:[AuthGuard] },\r\n  { path : 'edit/:id', component : EditComponent , canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate : [AuthGuard] },\r\n  { path : 'publish', component : PublishComponent , canActivate:[AuthGuard]},\r\n  { path: '', redirectTo: 'publish', pathMatch: 'full' },\r\n];\r\n","\r\n\r\nimport { Component, OnInit,Inject } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\ninterface DialogData {\r\n  email: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-modal',\r\n  templateUrl: './view-modal.component.html',\r\n  styleUrls: ['./view-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewModalComponent implements OnInit {\r\n\r\n  params : any;\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  connectorTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  isEnabled = 0;\r\n\r\n  filteredOptionsBrand: Observable<any[]>;\r\n  filteredOptionsModel: Observable<any[]>;\r\n  filteredOptionsVehicleType: Observable<any[]>;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    public dialogRef: MatDialogRef<ViewModalComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n    \r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.params = this.data;\r\n    // \r\n\r\n    this.form = this.fb.group({\r\n      brand: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      model: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      connectorType : ['', [Validators.required]],\r\n      vehicleType : ['', [autocompleteObjectValidator(),Validators.required]],\r\n      isModified : [''] ,     \r\n      isConfirmed : ['']      \r\n    });\r\n\r\n    this.getBrands();\r\n    this.getVehicleTypes();\r\n    this.form.disable();\r\n    this.filterOption();\r\n    this.assignValues(this.data);\r\n  }\r\n\r\n  getBrands(){\r\n    this.masterService.getBrands().subscribe(\r\n      (data:any)=>{\r\n        this.brands = data;\r\n        const toSelect = this.brands.find(c => c.id == this.params.data.brand_id);\r\n        this.form.get('brand').setValue(toSelect);\r\n        this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterBrands(name) : this.brands)\r\n        );\r\n        this.onBrandChange(toSelect.id);\r\n\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getVehicleTypes(){\r\n    this.masterService.getVehicleTypes().subscribe(\r\n      (data:any)=>{\r\n        this.vehicleTypes = data;\r\n\r\n        const toSelect = this.vehicleTypes.find(c => c.id == this.params.data.vType_id);\r\n        \r\n        this.form.get('vehicleType').setValue(toSelect);\r\n        this.filteredOptionsVehicleType = this.form.controls.vehicleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterVehicleType(name) : this.vehicleTypes)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getModelsByBrand(id){\r\n    this.masterService.getModelsByBrand(id).subscribe(\r\n      (data:any)=>{\r\n        this.models = data;\r\n        \r\n        const toSelect = this.models.find(c => c.id == this.params.data.vm_id);\r\n        this.form.get('model').setValue(toSelect);\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n        this.onModelChange(toSelect.id);\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  getAllCTypesExcludingOtherAlreadyMapped(vm_id,ct_id){\r\n    \r\n    this.masterService.getAllCTypesExcludingOtherAlreadyMapped(vm_id,ct_id).subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        const toSelect = this.connectorTypes.find(c => c.id == this.params.data.ct_id);\r\n        this.form.get('connectorType').setValue(toSelect.id);\r\n      },\r\n      (err)=>{\r\n        \r\n      })\r\n    \r\n  }\r\n\r\n  getConnectorTypes(vm_id){\r\n    this.connectorTypes=null;\r\n    this.masterService.connectorTypesExcludingVModelId(vm_id).subscribe(\r\n      (data:any)=>{\r\n        \r\n        this.connectorTypes = data;\r\n        const toSelect = this.connectorTypes.find(c => c.id == this.params.data.ct_id);\r\n        this.form.get('connectorType').setValue(toSelect.id);\r\n      },\r\n      (err)=>{\r\n        \r\n      })\r\n  }\r\n\r\n  onBrandChange(id){\r\n    this.getModelsByBrand(id);\r\n  }\r\n  onModelChange(id){\r\n    \r\n    if(id != this.params.data.vm_id){\r\n      this.getConnectorTypes(id);\r\n    }else{\r\n      this.getAllCTypesExcludingOtherAlreadyMapped(id,this.params.data.ct_id);\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    //\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    //\r\n    //if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n\r\n      let params ={}\r\n      if(this.isEnabled){\r\n       params = {\r\n            id : this.params.data.id,\r\n            ct_id: formValues.connectorType,\r\n            vm_id: formValues.model.id,\r\n            vType_id : formValues.vehicleType.id,\r\n            status : 'P',\r\n            published_with_modification : this.isEnabled,\r\n            published_by : this.localStorage.userId\r\n        }\r\n      }else{\r\n        params = {\r\n          id : this.params.data.id,\r\n          status : 'P',\r\n          published_with_modification : this.isEnabled,\r\n          published_by : this.localStorage.userId\r\n        }\r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    //}\r\n   return;\r\n  }\r\n\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  changeEdit(event){\r\n    //\r\n    if(event.checked){\r\n      this.form.enable();\r\n      this.isEnabled=1;\r\n    }else{\r\n      this.form.disable();\r\n      this.isEnabled=0;\r\n    }\r\n  }\r\n\r\n\r\n  assignValues(data){\r\n    //\r\n\r\n  }\r\n  filterOption(){\r\n    this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterBrands(name) : this.brands)\r\n        );\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n        this.filteredOptionsVehicleType = this.form.controls.vehicleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterVehicleType(name) : this.vehicleTypes)\r\n        );\r\n  }\r\n  displayBrand(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayVehicleType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterBrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.models.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterVehicleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.vehicleTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">{{params.action == 'MODERATE' ? 'Pending' : 'Publish'}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <!-- <mat-slide-toggle class=\"example-margin\" color=\"primary\" \r\n    checked=\"false\" (change)=\"changeEdit($event)\">Edit</mat-slide-toggle> -->\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" style=\"padding-top:10px\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Brand</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"brand\" required [matAutocomplete]=\"brandAuto\">\r\n          <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrand\"\r\n            (optionSelected)='onBrandChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsBrand | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Model</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"model\" required [matAutocomplete]=\"modelAuto\">\r\n          <mat-autocomplete #modelAuto=\"matAutocomplete\" [displayWith]=\"displayModel\"\r\n            (optionSelected)='onModelChange($event.option.value.id)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsModel | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('model').invalid\">Please select model\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Vehicle Type</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"vehicleType\" required [matAutocomplete]=\"vehicleTypeAuto\">\r\n          <mat-autocomplete #vehicleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayVehicleType\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsVehicleType | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-error *ngIf=\"form.get('vehicleType').invalid\">Please select vehicle type\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Vehicle Type</mat-label>\r\n          <mat-label>Connector Type</mat-label>\r\n          <mat-select formControlName=\"connectorType\" required>\r\n\r\n            <mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n              {{option.name}}\r\n            </mat-option>\r\n\r\n          </mat-select>\r\n          <mat-error *ngIf=\"form.get('connectorType').invalid\">Please select connector type\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <button mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Cancel</button>\r\n        <!-- <button mat-raised-button color=\"primary\" (click)=\"onYesClick()\" style=\"margin-left: 1%;\">{{params.action == 'MODERATE' ? 'Moderate' : 'Publish'}}</button> -->\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import {NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OnBoardComponent } from './on-board/on-board.component';\r\nimport { TABS_DEMO_ROUTES } from './on-board/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    // { path : 'onBoard/create', component : OnBoardComponent, children: TABS_DEMO_ROUTES},\r\n    { path : 'onBoard', component : OnBoardComponent,canActivate: [AuthGuard], children: TABS_DEMO_ROUTES},\r\n    { path : '', redirectTo : 'onBoard',pathMatch:'full'}\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class VehicleOnBoardRoutingModule{}","\r\nimport { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  connectorTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  filteredOptionsBrand: Observable<any[]>;\r\n  filteredOptionsModel: Observable<any[]>;\r\n  filteredOptionsVehicleType: Observable<any[]>;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private vehicleService : VehicleService,private snackBar: MatSnackBar,\r\n    private router : Router) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n    ////\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      brand: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      model: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      connectorType : ['', [Validators.required]],\r\n      vehicleType : ['', [autocompleteObjectValidator(),Validators.required]] ,\r\n      status : this.status == true ? 'M' : 'N'       \r\n    });\r\n\r\n    this.getBrands();\r\n    this.getVehicleTypes();\r\n    this.filterOption();\r\n    // this.getconnectorTypes();\r\n  }\r\n\r\n  getBrands(){\r\n    this.masterService.getBrands().subscribe(\r\n      (data:any)=>{\r\n        this.brands = data;\r\n        this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterBrands(name) : this.brands)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  \r\n  getVehicleTypes(){\r\n    this.masterService.getVehicleTypes().subscribe(\r\n      (data:any)=>{\r\n        this.vehicleTypes = data;\r\n        this.filteredOptionsVehicleType = this.form.controls.vehicleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterVehicleType(name) : this.vehicleTypes)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  getModelsByBrand(id){\r\n    this.masterService.getModelsByBrand(id).subscribe(\r\n      (data:any)=>{\r\n        this.models = data;\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n  connectorTypesExcludingVModelId(id){\r\n    this.masterService.connectorTypesExcludingVModelId(id).subscribe(\r\n      (data:any)=>{\r\n        this.connectorTypes = data;\r\n        \r\n      },\r\n      (err)=>{\r\n        ////\r\n      })\r\n  }\r\n\r\n  onBrandChange(event){\r\n    this.getModelsByBrand(event);\r\n    this.form.get('model').setValue(\"\");\r\n    \r\n  }\r\n  onModelChange(event){\r\n    this.connectorTypesExcludingVModelId(event);\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    ////\r\n\r\n    let params = {\r\n        ct_id: formValues.connectorType,\r\n        vm_id: formValues.model.id,\r\n        vType_id : formValues.vehicleType.id,\r\n        status :  this.status == true ? 'M' : 'N', \r\n        created_by : this.localStorage.userId\r\n    }\r\n    \r\n    this.vehicleService.vModel_CTypeMap(params).subscribe(\r\n      (data:any )=>{\r\n        ////\r\n         this.snackBar.open(MessageConstant.vehicleCreate, 'Dismiss', { duration: 5000 });\r\n        this.router.navigate(['/assetManagement/vehicleManagement/onBoard/onBoard/list']);\r\n\r\n      },\r\n      (err)=>{\r\n        ////\r\n        this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n    }else{\r\n      return;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  filterOption(){\r\n    this.filteredOptionsBrand = this.form.controls.brand.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterBrands(name) : this.brands)\r\n        );\r\n        this.filteredOptionsModel = this.form.controls.model.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterModels(name) : this.models)\r\n        );\r\n        this.filteredOptionsVehicleType = this.form.controls.vehicleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterVehicleType(name) : this.vehicleTypes)\r\n        );\r\n  }\r\n  displayBrand(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayModel(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayVehicleType(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterBrands(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.brands.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.models.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filterVehicleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.vehicleTypes.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  \r\n}\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Brand</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"brand\" required [matAutocomplete]=\"brandAuto\">\r\n        <mat-autocomplete #brandAuto=\"matAutocomplete\" [displayWith]=\"displayBrand\"\r\n          (optionSelected)='onBrandChange($event.option.value.id)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsBrand | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select brand\">branding_watermark</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('brand').invalid\">Please select brand\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Model</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"model\" required [matAutocomplete]=\"modelAuto\">\r\n        <mat-autocomplete #modelAuto=\"matAutocomplete\" [displayWith]=\"displayModel\"\r\n          (optionSelected)='onModelChange($event.option.value.id)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionsModel | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select model\">model_training</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('model').invalid\">Please select model\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Vehicle Type</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"vehicleType\" required [matAutocomplete]=\"vehicleTypeAuto\">\r\n        <mat-autocomplete #vehicleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayVehicleType\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsVehicleType | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select vehicle\">help</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('vehicleType').invalid\">Please select vehicle type\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Connector Type</mat-label>\r\n        <mat-select formControlName=\"connectorType\" multiple required>\r\n\r\n          <mat-option *ngFor=\"let option of connectorTypes\" [value]=\"option.id\">\r\n            {{option.name}}\r\n          </mat-option>\r\n\r\n        </mat-select>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select connector type\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('connectorType').invalid\">Please select connector type\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"50\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/vehicleManagement/onBoard/onBoard/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>"]}