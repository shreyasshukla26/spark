{"version":3,"sources":["./src/app/main/dispatch-management/client-sales-dispatch/list/list.component.ts","./src/app/main/dispatch-management/client-sales-dispatch/list/list.component.html","./src/app/main/dispatch-management/client-sales-dispatch/add-nickname/add-nickname.component.ts","./src/app/main/dispatch-management/client-sales-dispatch/add-nickname/add-nickname.component.html","./src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-routing.module.ts","./src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-crud/routes.ts","./src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch.module.ts","./src/app/main/dispatch-management/client-sales-dispatch/action-dialog/action-dialog.component.ts","./src/app/main/dispatch-management/client-sales-dispatch/action-dialog/action-dialog.component.html","./src/app/main/dispatch-management/client-sales-dispatch/view-dialog/view-dialog.component.ts","./src/app/main/dispatch-management/client-sales-dispatch/view-dialog/view-dialog.component.html","./src/app/main/dispatch-management/client-sales-dispatch/create/create.component.ts","./src/app/main/dispatch-management/client-sales-dispatch/create/create.component.html","./src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-crud/client-sales-dispatch-crud.component.ts","./src/app/main/dispatch-management/client-sales-dispatch/client-sales-dispatch-crud/client-sales-dispatch-crud.component.html"],"names":[],"mappings":"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","file":"client-sales-dispatch-client-sales-dispatch-module-es2015.js","sourcesContent":["\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\n\r\nexport class Client {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  serial_no : string;\r\n  client_name:string;\r\n  model_name:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['select', 'client_name', 'name','serial_no','model_name','status','action'];\r\n  head = [['Client Name','Name','Serial Number', 'Model Name','Status']]\r\n  dataSource: MatTableDataSource<Client>;\r\n  selection = new SelectionModel<Client>(true, []);\r\n  localStorage : any;\r\n  //clients : Client[];\r\n  allChargers :any;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  clientSearch = false;\r\n  nameSearch = false;\r\n  serialSearch = false;\r\n  modelSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  cposName: any;\r\n  clientName:any;\r\n  localData: any;\r\n  chargingStationName: any;\r\n  filteredOptionsCharClient:Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  clientCpoStaDetails: any;\r\n  clientList: any;\r\n  cpoList: any;\r\n  stationList: any;\r\n  station: any;\r\n  constructor(private chargerService : ChargerService,public dialog : MatDialog,private snackBar : MatSnackBar,private fb: FormBuilder,\r\n    private chargingStationService: ChargingStationService,private clientService:ClientService,private cpoService: CpoService,) {\r\n   \r\n      this.form = this.fb.group({\r\n        charClient:[''],\r\n        charCPO: [''],\r\n        charStat: ['']\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.clientCpoStaDetails = JSON.parse(localStorage.getItem('clientCpoStaDetails'));\r\n    //this.getAllClientChargers(this.localStorage.userId);\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n    this.getClients();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllClientChargers(id){\r\n    this.chargerService.getAllClientChargers(id).subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          this.allChargers = data;\r\n          for(var i=0; i < this.allChargers.length;i++){\r\n            if(this.allChargers[i].status == 'N'){\r\n              this.allChargers[i].statusString = 'Inactive';\r\n            }else{\r\n              this.allChargers[i].statusString = 'Active';\r\n            }\r\n          }\r\n        this.dataSource = new MatTableDataSource(this.allChargers);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.chargerService.deleteChargerFromClient(id,this.localStorage.userId).subscribe(\r\n          (data:any)=>{\r\n            \r\n            this.getAllClientChargers(this.localStorage.userId);\r\n            this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n   \r\n  }\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',   \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getAllClientChargers(this.localStorage.userId);\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n    if(visibleOption == 'clientSearch'){\r\n      this.clientSearch = !this.clientSearch;\r\n      this.filterEntity.client_name= \"\";\r\n    }\r\n    \r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name= \"\";\r\n    }\r\n    if(visibleOption == 'serialSearch'){\r\n      this.serialSearch = !this.serialSearch;\r\n      this.filterEntity.serial_no= \"\";\r\n    }\r\n    if(visibleOption == 'modelSearch'){\r\n      this.modelSearch = !this.modelSearch;\r\n      this.filterEntity.model_name= \"\";\r\n    }\r\n  \r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString= \"\";\r\n    }\r\n   }\r\n\r\n   tableExport(){\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chargerModel =this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Client Name':chargerModel.client_name,'Name':chargerModel.name,'Serial No':chargerModel.serial_no,\r\n                  'Model Name': chargerModel.model_name,'Status':chargerModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       \r\n      XLSX.utils.book_append_sheet(workBook, workSheet, 'sales disptch');\r\n       XLSX.writeFile(workBook, 'Sales Dispatch.xlsx');\r\n   }\r\n\r\n   viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true \r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      // this.moderate(result);\r\n      this.allChargers();\r\n    });\r\n  }\r\n\r\n  pdfExport(){\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.client_name,chrger.name,chrger.name,chrger.serial_no,chrger.mobile,chrger.model_name,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n      },\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Product Dispatch Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n   \r\n    // below line for Download PDF document  \r\n    doc.save('Product Dispatch Report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    return doc;\r\n  \r\n  }\r\n\r\n  getClients() {\r\n    this.clientList = JSON.parse(localStorage.getItem('ClientList'));\r\n    //console.log(this.clientList)\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      if (this.clientList != null && this.clientList != undefined) {\r\n        const toSelect = this.clientList[0];\r\n        this.form.get('charClient').setValue(toSelect);\r\n        this.getCPOByClient(toSelect.client_id);\r\n      }\r\n      this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.client_name),\r\n          map(name => name ? this._filterCharClient(name) : this.clientList)\r\n        );\r\n\r\n    } else {\r\n      this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n        (resp: any) => {\r\n          this.clientName = resp;\r\n          const toSelect = this.clientName.find(c => c.id == this.localStorage.client_id);\r\n          if (toSelect != null) {\r\n            this.form.get('charClient').setValue(toSelect);\r\n            this.getCPOByClient(toSelect.id);\r\n          }\r\n          this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharClient(name) : this.clientName)\r\n            );\r\n        }, (err) => { }\r\n      );\r\n    }\r\n  }\r\n  onClientChange(client_id){\r\n    this.cpoList = [];\r\n    this.stationList = [];\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoList = JSON.parse(localStorage.getItem('CpoList'));\r\n    //console.log(this.cpoList)\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      if (this.cpoList != null && this.cpoList != undefined) {\r\n        const toSelect = this.cpoList[0];\r\n        this.form.get('charCPO').setValue(toSelect);\r\n        this.getStationByCPO(toSelect.cpo_id);\r\n      }\r\n      this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.cpo_name),\r\n          map(name => name ? this._filterCharCPO(name) : this.cpoList)\r\n        );\r\n    } else {\r\n      this.cpoService.getCpoByClientId(client_id).subscribe(\r\n        (resp: any) => {\r\n          this.cposName = resp;\r\n          const toSelect = this.cposName[0];\r\n          if (toSelect != null) {\r\n            this.form.get('charCPO').setValue(toSelect);\r\n            this.getStationByCPO(toSelect.id);\r\n          }\r\n          this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n            );\r\n        }, (err) => { }\r\n      );\r\n    }\r\n  }\r\n  \r\n  onCPOChange(event) {\r\n    this.stationList = [];\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.stationList = JSON.parse(localStorage.getItem('StationList'));\r\n    //console.log(this.stationList)\r\n    this.station =[];\r\n\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      for(var i = 0; i< this.stationList.length; i++){\r\n        if(id == this.stationList[i].cpo_id){\r\n          this.station.push( this.stationList[i])\r\n        }\r\n      }\r\n      if (this.station != null && this.station != undefined) {\r\n        const toSelect = this.station[0];//this.station.find(c => c.cpo_id == id);\r\n        this.form.get('charStat').setValue(toSelect);\r\n        this.getAllClientChargers(this.localStorage.userId);\r\n      }\r\n      this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.station_name),\r\n          map(station_name => station_name ? this._filterCharStat(station_name) : this.station)\r\n        );\r\n    } else {\r\n      this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n        (resp: any) => {\r\n          this.chargingStationName = resp.data;\r\n          const toSelect = this.chargingStationName[0];\r\n          this.form.get('charStat').setValue(toSelect);\r\n          this.getAllClientChargers(this.localStorage.userId);\r\n          this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n            );\r\n        }, (err) => { }\r\n      )\r\n    }\r\n\r\n  }\r\n  onStationChange(event) {\r\n    this.getAllClientChargers(this.localStorage.userId);\r\n    //this.getAllClientChargers(event);\r\n  }\r\n\r\n  filteredOptions() {\r\n    this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharClient(name) : this.clientName)\r\n      );\r\n\r\n    this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n      );\r\n\r\n    this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n      );\r\n  }\r\n\r\n  displayCharClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  displayCharCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.client_name ? item.client_name : '';\r\n  }\r\n  displayCPO(item: any): string {\r\n    return item && item.cpo_name ? item.cpo_name : '';\r\n  }\r\n  displayStat(item: any): string {\r\n    return item && item.station_name ? item.station_name : '';\r\n  }\r\n\r\n  private _filterCharClient(name: string): any[] {\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      this.form.get('charCPO').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.clientList.filter(option => option.client_name.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.form.get('charCPO').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n  private _filterCharCPO(name: string): any[] {\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.cpoList.filter(option => option.cpo_name.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.form.get('charStat').setValue('');\r\n      const filterValue = name.toLowerCase();\r\n      return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n  private _filterCharStat(name: string): any[] {\r\n    if (this.localStorage.role_code != \"SA\") {\r\n      const filterValue = name.toLowerCase();\r\n      return this.station.filter(option => option.station_name.toLowerCase().includes(filterValue));\r\n    } else {\r\n      const filterValue = name.toLowerCase();\r\n      return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n    }\r\n  }\r\n\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Client): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.name + 1}`;\r\n  }\r\n  \r\n}\r\n\r\n","<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n     <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<mat-card style=\"padding:16px  !important;\">\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" *ngIf=\"localStorage.role_code == 'SA';else notsa\">\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Client</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n                    <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n                        (optionSelected)='onClientChange($event.option.value.id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                        Please select client \r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select CPO's</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n                    <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n                        (optionSelected)='onCPOChange($event.option.value.id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                        Please select CPO\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                    <mat-label>Select Charging Station</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n                    <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n                        (optionSelected)='onStationChange($event.option.value.id)'>\r\n                        <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                            {{option.name}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                    <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                        Please select charging station\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <ng-template #notsa>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\" >\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select Client</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n                        <mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n                            (optionSelected)='onClientChange($event.option.value.client_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n                                {{option.client_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charClient').invalid\">\r\n                            Please select client \r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    \r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select CPO's</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n                        <mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCPO\"\r\n                            (optionSelected)='onCPOChange($event.option.value.cpo_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n                                {{option.cpo_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\" >expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n                            Please select  CPO\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n                        <mat-label>Select Charging Station</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\" readonly>\r\n                        <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayStat\"\r\n                            (optionSelected)='onStationChange($event.option.value.station_id)'>\r\n                            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n                                {{option.station_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">expand_more</mat-icon>\r\n                        <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n                            Please select charging station\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n    \r\n                </div>\r\n            </ng-template>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\" mat-sort>\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                      <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                    [aria-label]=\"checkboxLabel()\">\r\n                      </mat-checkbox>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                      <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                                    (change)=\"$event ? selection.toggle(row) : null\"\r\n                                    [checked]=\"selection.isSelected(row)\"\r\n                                    [aria-label]=\"checkboxLabel(row)\">\r\n                      </mat-checkbox>\r\n                    </td>\r\n                  </ng-container>\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!clientSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"clientSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('clientSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.client_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"serial_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!serialSearch\" class=\"custom_font_size\" style=\"display: flex;\">Serial No\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"serialSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Serial no\" [(ngModel)]=\"filterEntity.serial_no\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('serialSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.serial_no}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"model_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!modelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"modelSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                            <input matInput placeholder=\" Model Name \" [(ngModel)]=\"filterEntity.model_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('modelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.model_name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                    (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                            <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                    style=\"margin-left: 1%;\">Remove</button>  -->\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"\r\n                        </td>\r\n                    </tr> -->\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-add-nickname',\r\n  templateUrl: './add-nickname.component.html',\r\n  styleUrls: ['./add-nickname.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class AddNicknameComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<AddNicknameComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1,\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        \r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n  \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"10\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" disabled [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"(click)=\"onYesClick()\">\r\n\t\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientSalesDispatchCrudComponent } from './client-sales-dispatch-crud/client-sales-dispatch-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './client-sales-dispatch-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes: Routes = [\r\n    {\r\n        path: 'crud', component: ClientSalesDispatchCrudComponent, canActivate: [AuthGuard], children: TABS_DEMO_ROUTES\r\n    },\r\n\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ClientSalesDispatchRoutingModule { }","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard]},\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ClientSalesDispatchRoutingModule } from './client-sales-dispatch-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ClientSalesDispatchCrudComponent } from './client-sales-dispatch-crud/client-sales-dispatch-crud.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { AddNicknameComponent } from './add-nickname/add-nickname.component';\r\nimport {\r\n    NgxMatDatetimePickerModule,\r\n    NgxMatNativeDateModule,\r\n    NgxMatTimepickerModule,\r\n    NgxMatDateFormats,\r\n    NGX_MAT_DATE_FORMATS,\r\n    NgxMatDateAdapter,\r\n} from '@angular-material-components/datetime-picker';\r\n\r\n\r\nconst COMPONENTS = [ClientSalesDispatchCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent, ViewDialogComponent,AddNicknameComponent];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, ClientSalesDispatchRoutingModule, NgxMatDatetimePickerModule, FuseSharedModule,\r\n        NgxMatNativeDateModule,\r\n        NgxMatTimepickerModule,],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC],\r\n    entryComponents: [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ClientSalesDispatchModule { }","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 1 : 0\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        is_private:this.chargerAs == true? 1:0,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n    this.chargerAs = params.data.is_private = 1 ? true: false;//  is_private:this.chargerAs == true? 1:0,\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"client name\">account_circle</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Name\">account_circle</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Serial number\">help</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">\r\n\t\t\t\t\t\t\thelp</mat-icon>\r\n\t\t\t\t\t\t<mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"16\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button>\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerService } from 'app/shared/services/charger/charger.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  chargerAs = false;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  constructor(private fb: FormBuilder, private chargerService: ChargerService, private snackBar: MatSnackBar,private datePipe: DatePipe,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client_name: [''],\r\n      name: ['', ],\r\n      serial_no: [''],\r\n      dispatch_date: ['',[Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1,\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    \r\n  }\r\n \r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n        \r\n        dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n        \r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.chargerService.getUpdateClientCharger(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('client_name').setValue(params.data.client_name);\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('serial_no').setValue(params.data.serial_no);\r\n    this.form.get('dispatch_date').setValue(params.data.dispatch_date);\r\n  \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n\r\n<mat-toolbar class=\"action_toolbar\">Sales Dispatch</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\" mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Client </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"client_name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Name </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"name\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Serial No </mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"serial_no\" readonly autocomplete=\"off\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Dispatch Date</mat-label>\r\n\t\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"dispatch_date\" disabled>\r\n\t\t\t\t\t<mat-datepicker-toggle [disabled]=\"true\" matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div fxFlex=\"16\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" disabled color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"10\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" disabled [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n\t\t\t\t\t  #toggleChargerAsElement>\r\n\t\t\t\t\t  {{chargerAs ? 'Private' : 'Public'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\"(click)=\"onYesClick()\">\r\n\t\t\t\t\t\t{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","import { Component, OnInit,ViewChild ,ElementRef,ChangeDetectorRef} from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn,AbstractControl,FormArray} from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport {ChargerService} from 'app/shared/services/charger/charger.service';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport * as XLSX from 'xlsx';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ExcelService} from 'app/shared/services/excel.service'\r\nimport { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatAutocompleteSelectedEvent,  MatAutocomplete} from '@angular/material/autocomplete';\r\nimport {MatChipInputEvent} from '@angular/material/chips'\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class Charger {\r\n  id: string;\r\n  name : string;\r\n    serial_no : string;\r\n    batch_id : number ;\r\n    station_id : number;\r\n    current_version_id : number ;\r\n    no_of_guns : number;\r\n    Address : string;\r\n    Lat : number;\r\n    Lng : number;\r\n    OTA_Config : string;\r\n    Periodic_Check_Ref_Time : string;\r\n    Periodicity_in_hours : number;\r\n    When_to_Upgrade : string;\r\n    Upgrade_Specific_Time : number;\r\n    is_available : number;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  availableString:string;\r\n}\r\nexport class SerialData {\r\n  //SERIAL_No: string;\r\n  serial_no: string = \"\";\r\n  remarks:string = \"\";\r\n  }\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  chargerTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleChargerAsElement\") chargerAsRef: any;\r\n  status = false;\r\n  chargerAs = false;\r\n  UserInputType = [\r\n    { \"name\": \"Table View\", ID: \"D1\"},\r\n    { \"name\": \"Upload CSV\", ID: \"D2\"}\r\n]\r\nfilteredOptionsClient: Observable<any[]>;\r\nclients:any;\r\nselectedInputType = this.UserInputType[0].name;\r\npublic unitValue;\r\nselectedUnitValue : any;\r\ntotalSerial =[];\r\nserialNumber: FormArray;\r\noldUnitCount:number;\r\nchargerSerials:any;\r\nchargerSerialsOrg:any;\r\nfilteredOptionSerial: Observable<any[]>;\r\ndataSource : MatTableDataSource<SerialData>;\r\ndisplayedColumns: string[] = ['serial_no'];\r\nmappedColumns: string[] = ['serial_no','remarks'];\r\nmappedDataSource :MatTableDataSource<SerialData>;\r\nunmappedColumns: string[] = ['serial_no','remarks'];\r\nunmappedDataSource :MatTableDataSource<SerialData>;\r\nexcelSerial= [];\r\n//@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n// @ViewChild('serialTable', { static: false }) serialTable: ElementRef;\r\n// @ViewChild('mapped_table') mapped_table: ElementRef;\r\n// @ViewChild('unmapped_table') unmapped_table: ElementRef;\r\nimportFile: File;\r\nmaxDate = new Date();\r\n  uploadExcelTable:boolean =false;\r\n  importSerialNo: SerialData[] = [];\r\n  unitType:any;\r\n   selectedChargerSerial  = [];\r\n   public chipSelectedSerialNo: Charger[] = [];\r\n   public filteredSerial: Observable<String[]>;\r\n   private allowFreeTextAddEngineer = false;\r\n\r\n \r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  \r\n  @ViewChild('serialInput') serialInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n   validSerialNo = [];\r\n  selectedSerialNo = [];\r\n  response_mapped =[];\r\n  response_unmapped = [];\r\n  returnDataStatus :boolean = false;\r\n  removable = true;\r\n   @ViewChild('importPaginator') importPaginator: MatPaginator;\r\n   @ViewChild('mappedPaginator') mappedPaginator: MatPaginator;\r\n   @ViewChild('unmappedPaginator') unmappedPaginator: MatPaginator;\r\nconstructor(private fb: FormBuilder, private masterService : MasterService,private excelSrv: ExcelService,\r\n    private clientService : ClientService,private snackBar: MatSnackBar,private chargerService:ChargerService,\r\n    private router : Router,public countryService: CountriesService,private datePipe: DatePipe,private cdr :ChangeDetectorRef) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      serialNumber: [''],\r\n      dispatch_date:['',[Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N',\r\n      chargerAs : this.chargerAs == true ? 0 : 1      \r\n    });\r\n    \r\n    //this.getCountry();\r\n    this.getClients();\r\n    this.getSerialNo();\r\n    //this.getAllCity();\r\n  }\r\n  // ngAfterViewInit() {\r\n  //   this.dataSource.paginator = this.paginator\r\n  //   this.mappedDataSource.paginator = this.mappedPaginator;\r\n  //   this.unmappedDataSource.paginator = this.unmappedPaginator;\r\n  // }\r\n  createSerial(): FormGroup {\r\n    return this.fb.group({\r\n      serialNo: ['', [Validators.required,autocompleteObjectValidator()]],\r\n     \r\n    });\r\n  }\r\n  getSerialNo(){\r\n    this.chargerService.getPlantChargers().subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          this.chargerSerials = data;\r\n          this.chargerSerialsOrg = [...this.chargerSerials];\r\n          this.filteredOptionSerial = this.form.controls.serialNumber.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.serial_no),\r\n            map(serial_no => serial_no ? this._filterSerial(serial_no) : this.chargerSerials)\r\n          );\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  getClients(){\r\n    \r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          this.clients = data;\r\n          this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n        }\r\n       \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n\r\n  }\r\n  displaySerial(item: any): string {\r\n    return item && item.serial_no ? item.serial_no : '';\r\n  }\r\n  private _filterSerial(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    this.chargerSerials = this.resetChrgerList();\r\n   \r\n    \r\n    \r\n    return this.chargerSerials.filter(option => option.serial_no.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  resetChrgerList():any[]{\r\n    var chargerSerials = [];\r\n    if ( this.selectedSerialNo != undefined && this.selectedSerialNo.length > 0) {\r\n      \r\n      var isExist = true;\r\n     \r\n      for(var k =0; k< this.chargerSerialsOrg.length;k++){\r\n          var serialNo = this.chargerSerialsOrg[k];\r\n           isExist = false;\r\n           for(var i =0;i< this.selectedSerialNo.length; i++){\r\n               var selectedSerialNo = this.selectedSerialNo[i];\r\n               if(selectedSerialNo.serial_no == serialNo.serial_no){\r\n                  isExist =true;\r\n               }\r\n           }\r\n\r\n           if(!isExist){\r\n            chargerSerials.push(serialNo);\r\n           }\r\n      }\r\n\r\n  }else{\r\n    chargerSerials= [...this.chargerSerialsOrg];\r\n  }\r\n   return chargerSerials;\r\n  }\r\n\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onSerialSelected(event)\r\n  {\r\n    this.selectedSerialNo.push(event.option.value);\r\n    //this.form.controls['serialNumber'].setValue('');\r\n    this.form.get('serialNumber').setValue('');\r\n    this.chargerSerials = this.resetChrgerList();\r\n    this.unitType += 1;\r\n    this.filteredOptionSerial = this.form.controls.serialNumber.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.serial_no),\r\n          map(serial_no => serial_no ? this._filterSerial(serial_no) : this.chargerSerials)\r\n        );\r\n  }\r\n  onSubmit(formDirective){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n      if(this.selectedSerialNo.length == 0 ){\r\n        this.snackBar.open(MessageConstant.serialBoxEmpty, 'Dismiss', { duration: 5000 });\r\n      }else{\r\n        let params = {\r\n          client_id :formValues.client.id, \r\n          sub_client_id:\"12\",\r\n          dispatch_status:\"Y\",\r\n          dispatch_date: this.datePipe.transform(formValues.dispatch_date,\"yyyy-MM-dd\") ,\r\n          charger_data: this.selectedSerialNo.map(v=>({id:v.id,serial_no:v.serial_no})),\r\n          status :  this.status == true ? 'Y' : 'N', \r\n          is_private:this.chargerAs == true? 1:0,\r\n          created_by : this.localStorage.userId, \r\n          dispatch_by:this.localStorage.userId\r\n        }\r\n    \r\n        this.chargerService.getProductDispatch(params).subscribe(\r\n          (data:any )=>{\r\n            if(data.status = true){\r\n              this.returnDataStatus = true;\r\n              this.selectedSerialNo = [];\r\n              this.getClients();\r\n              this.response_mapped = data.data[0].chargers_mapped;\r\n              this.response_unmapped = data.data[0].chargers_not_mapped;\r\n              formDirective.resetForm();\r\n              this.form.reset();\r\n              this.form.markAsPristine();\r\n            }\r\n            if (this.response_mapped.length<0){\r\n            }else{\r\n                 this.cdr.detectChanges();\r\n                  this.mappedDataSource = new MatTableDataSource(this.response_mapped);\r\n                this.mappedDataSource.paginator = this.mappedPaginator;\r\n            }\r\n            if (this.response_unmapped.length<0){\r\n            }else{\r\n              this.cdr.detectChanges();\r\n                  this.unmappedDataSource = new MatTableDataSource(this.response_unmapped);\r\n                  this.unmappedDataSource.paginator = this.unmappedPaginator;\r\n            }\r\n            this.snackBar.open(MessageConstant.salesDispatch, 'Dismiss', { duration: 5000 });\r\n          },\r\n          (err)=>{\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n      \r\n    }else{\r\n      return;\r\n    }\r\n     \r\n  \r\n   \r\n    \r\n  }\r\n \r\n  \r\n  \r\n \r\n  uploadedFile(evt: any) {\r\n    let target: DataTransfer = <DataTransfer>(evt.target);\r\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\r\n    this.selectedSerialNo  = [];\r\n    let reader: FileReader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n   \r\n      let bstr: string = e.target.result;\r\n      let data = <any[]>this.excelSrv.importFromFile(bstr);\r\n\r\n      let header: string[] = Object.getOwnPropertyNames(new SerialData());\r\n      let importedData = data.slice(1);\r\n\r\n      this.importSerialNo = importedData.map(arr => {\r\n        let obj = {};\r\n        for (let i = 0; i < header.length; i++) {\r\n          const k = header[i];\r\n          obj[k] = arr[i];\r\n        }\r\n        return <SerialData>obj;\r\n      })\r\n     \r\n     // let tempSerialArray = [];\r\n     \r\n    //  this.importSerialNo.map(element => {\r\n    //   element.Tag = \"Unverified\";\r\n    //  });\r\n        for(var i= 0;i< this.importSerialNo.length;i++){\r\n        for(var j= 0;j<this.chargerSerials.length;j++ ){\r\n              \r\n          if(this.importSerialNo[i].serial_no == this.chargerSerials[j].serial_no)\r\n          {\r\n            \r\n            this.selectedSerialNo.push(this.chargerSerials[j])\r\n          }\r\n        }\r\n          \r\n      }\r\n        // this.selectedSerialNo.push(this.importSerialNo);\r\n      this.uploadExcelTable = true;\r\n      this.cdr.detectChanges();\r\n      this.dataSource = new MatTableDataSource(this.selectedSerialNo);\r\n      this.dataSource.paginator = this.importPaginator;\r\n    }\r\n   \r\n    \r\n    reader.readAsBinaryString(target.files[0]);\r\n\r\n  }\r\n  \r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n \r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  } \r\n  updateChargerAsStatus(event){\r\n    this.chargerAs = event.checked;\r\n    this.chargerAsRef.checked = this.chargerAs;\r\n  }\r\n  \r\n \r\n  public removeSerial(i): void {\r\n    this.selectedSerialNo.splice(i,1);\r\n    this.chargerSerials = this.resetChrgerList();\r\n    this.unitType -1 ;\r\n    this.filteredOptionSerial = this.form.controls.serialNumber.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.serial_no),\r\n          map(serial_no => serial_no ? this._filterSerial(serial_no) : this.chargerSerials)\r\n        );\r\n  }\r\n  selectionMade(event: Event, trigger: MatAutocompleteTrigger) {\r\n    event.stopPropagation();\r\n    trigger.openPanel();\r\n}\r\nmappedTableExport()\r\n{\r\n   const workSheet = XLSX.utils.json_to_sheet(this.mappedDataSource.data);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Mapped Charger.xlsx');\r\n\r\n}\r\nunmappedTableExport()\r\n{\r\n  const workSheet = XLSX.utils.json_to_sheet(this.unmappedDataSource.data);\r\n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n  XLSX.writeFile(workBook, 'UnMapped Charger.xlsx');\r\n}\r\nbackForm(){\r\n  //this.returnDataStatus= false;\r\n}\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" #formDirective=\"ngForm\" (submit)=\"onSubmit(formDirective)\">\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" style=\"padding-bottom: 20px;\">\r\n        <mat-label>User Input &nbsp;&nbsp;</mat-label>\r\n        <mat-radio-group name=\"opList\" [(ngModel)]=\"selectedInputType\" [ngModelOptions]=\"{standalone: true}\">\r\n          <mat-radio-button *ngFor=\"let op of UserInputType\" style=\"padding-right:10px\" [value]=\"op.name\" name=\"opList\">\r\n            {{ op.name}}</mat-radio-button>&nbsp;&nbsp;\r\n        </mat-radio-group>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Client</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\" required>\r\n        <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\">\r\n          <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">account_circle</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('client').invalid\">Please select client</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Dispatch Date</mat-label>\r\n        <input matInput [max]=\"maxDate\" [matDatepicker]=\"dp3\" formControlName=\"dispatch_date\" disabled>\r\n\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter expiry date\">help\r\n          </mat-icon>\r\n          <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </div>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('dispatch_date').invalid\">Please enter expiry date\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"10\" class=\"pr-4\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n          #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxFlex=\"10\" class=\"pr-4\">\r\n        <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"chargerAs\" (change)=\"updateChargerAsStatus($event)\"\r\n          #toggleChargerAsElement>\r\n          {{chargerAs ? 'Private' : 'Public'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n    </div>\r\n    <div style=\"padding-top:10px;\">\r\n      <div *ngIf=\"selectedInputType=='Table View'\" style=\"display: block  !important;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"display: block  !important;padding-top: 10px;width:100%\"\r\n          fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <!-- <div fxFlex=\"70\" class=\"pr-4\">\r\n            <ul style=\"display:flex;padding-inline-start:5px;padding-top: 20px;\">\r\n              <li *ngFor=\"let option of selectedSerialNo; let i = index;\" style=\"list-style: none;\">\r\n                <span class=\"chip\"> {{option?.serial_no}} &nbsp;\r\n                  <span class=\"material-icons closebtn\" (click)=\"removeSerial(i)\">highlight_off </span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div> -->\r\n          <mat-chip-list aria-label=\"Fish selection\">\r\n            <mat-chip *ngFor=\"let option of selectedSerialNo;let i = index;\" [selectable]=\"selectable\"\r\n              [removable]=\"removable\" (removed)=\"removeSerial(i)\">\r\n              {{option?.serial_no}}\r\n              <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"selectedInputType=='Table View'\" style=\"display: block  !important;padding-top: 10px;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n            <mat-label>Serial No</mat-label>\r\n            <input type=\"text\" #trigger=\"matAutocompleteTrigger\" matInput formControlName=\"serialNumber\" type=\"search\"\r\n              autocomplete=\"off\" [matAutocomplete]=\"seialAuto\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter serial no\">help</mat-icon>\r\n              </div>\r\n            <mat-autocomplete #seialAuto=\"matAutocomplete\" [displayWith]=\"displaySerial\"\r\n              (optionSelected)='onSerialSelected($event)'>\r\n              <mat-option *ngFor=\"let option of filteredOptionSerial | async\" [value]=\"option\"\r\n                (click)=\"selectionMade($event, trigger)\">\r\n                {{option.serial_no}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n            <mat-error *ngIf=\"form.get('serialNumber').invalid\">Please select part number </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"selectedInputType=='Upload CSV'\" fxLayout=\"column\" style=\"padding-top:30px;\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <h5 style=\"text-align: right;\">Click hear to <a href=\"assets/images/serialno.csv\" download>download file\r\n            </a>format (CSV only)</h5>\r\n          <div style=\"text-align: center;\">\r\n            <!--input #fileInput type=\"file\" id=\"file1\" (click)=\"fileInput.value = null\" value=\"\" type=\"file\"\r\n              id='excel-upload' accept=\".csv\" multiple=\"false\" (change)=\"uploadedFile($event)\"-->\r\n\r\n            <input hidden type=\"file\" (click)=\"fileInput.value = null\" value=\"\" id='excel-upload' accept=\".csv\"\r\n              multiple=\"false\" (change)=\"uploadedFile($event)\" #fileInput />\r\n            <button mat-raised-button color=\"primary\" type=\"button\" class=\"add-file-button\" (click)=\"fileInput.click()\"\r\n              aria-label=\"Add file\">\r\n              Browse File\r\n            </button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <!-- <h5 style=\"text-align: right;\">Click hear to <a href=\"assets/images/serialno.csv\" download>download file\r\n          </a>format (CSV only)</h5>\r\n        <div style=\"text-align: center;\">\r\n          <input #fileInput type=\"file\" id=\"file1\" (click)=\"fileInput.value = null\" value=\"\" type=\"file\"\r\n            id='excel-upload' accept=\".csv\" multiple=\"false\" (change)=\"uploadedFile($event)\">\r\n        </div> -->\r\n\r\n        <!-- <label>\r\n                  <i class=\"temp-upload-icon\" for=\"excel-upload\"></i>\r\n                  <input  />\r\n                </label> -->\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n          <div *ngIf=\"uploadExcelTable\">\r\n            <mat-table #importTable [dataSource]=\"dataSource\" [cdkTable]=\"importTable\">\r\n\r\n              <ng-container matColumnDef=\"serial_no\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef> SERIAL No </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.serial_no }}</mat-cell>\r\n              </ng-container>\r\n              <!--ng-container matColumnDef=\"status\">\r\n                                <th mat-header-cell *matHeaderCellDef>Status </th>\r\n                                <td mat-cell *matCellDef=\"let element\">{{ element.Tag }}</td>\r\n                              </ng-container-->\r\n              <mat-header-row mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n              <mat-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #importPaginator [pageSize]=\"5\" [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"returnDataStatus\" class=\"mat-card p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      style=\"padding-top:20px\">\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <div style=\"margin-bottom: 12px;\">\r\n            <span style=\"font-size:16px;\">Charger Mapped</span> &nbsp;&nbsp;\r\n            <img (click)=\"mappedTableExport()\" src=\"/assets/images/excel_icon.png\" width=\"24px\" height=\"auto\"\r\n              style=\"cursor:pointer\" />\r\n            <!-- <span class=\"material-icons\"  (click)=\"mappedTableExport()\" >\r\n                download_for_offline\r\n                </span> -->\r\n\r\n\r\n          </div>\r\n          <div id=\"mapTable\">\r\n            <mat-table #mappedTable [dataSource]=\"mappedDataSource\" [cdkTable]=\"mappedTable\" class=\"mat-elevation-z2\">\r\n\r\n              <ng-container matColumnDef=\"serial_no\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef> SERIAL No </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.serial_no }}</mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef>Remarks </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.remarks }}</mat-cell>\r\n              </ng-container>\r\n              <mat-header-row mat-header-row *matHeaderRowDef=\"mappedColumns\"></mat-header-row>\r\n              <mat-header-row mat-row *matRowDef=\"let row; columns: mappedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #mappedPaginator [pageSize]=\"5\" [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n          </div>\r\n        </div>\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <div style=\"margin-bottom: 12px;\">\r\n            <span style=\"font-size:16px;\">Charger not Mapped</span> &nbsp;&nbsp;\r\n            <img (click)=\"unmappedTableExport()\" src=\"/assets/images/excel_icon.png\" width=\"24px\" height=\"auto\"\r\n              style=\"cursor:pointer\" />\r\n            <!-- <span class=\"material-icons\"   >\r\n                download_for_offline\r\n              </span> -->\r\n\r\n          </div>\r\n\r\n          <div>\r\n            <mat-table #unmappedTable [dataSource]=\"unmappedDataSource\" [cdkTable]=\"unmappedTable\"\r\n              class=\"mat-elevation-z2\">\r\n\r\n              <ng-container matColumnDef=\"serial_no\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef> SERIAL No </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.serial_no }}</mat-cell>\r\n              </ng-container>\r\n              <ng-container matColumnDef=\"remarks\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef>Remarks </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">{{ element.remarks }}</mat-cell>\r\n              </ng-container>\r\n              <mat-header-row mat-header-row *matHeaderRowDef=\"unmappedColumns\"></mat-header-row>\r\n              <mat-header-row mat-row *matRowDef=\"let row; columns: unmappedColumns;\"></mat-header-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #unmappedPaginator [pageSize]=\"5\" [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:20px\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\"\r\n        routerLink=\"/assetManagement/chargerManagement/salesDispatch/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-client-sales-dispatch-crud',\r\n  templateUrl: './client-sales-dispatch-crud.component.html',\r\n  styleUrls: ['./client-sales-dispatch-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class ClientSalesDispatchCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    { label: 'Sales Dispatch', link: 'list' },\r\n    { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    // nav_list.filter((x) => {\r\n    //   if (x.id === \"chargerManagement\") {\r\n    //     this.objectData = x;\r\n    //     this.objectData.children.filter((y) => {\r\n    //       if (y.id === \"crud\") {\r\n    //         this.objectChildData = y;\r\n    //         this.objectChildData.children.filter((z) => {\r\n    //           let isDefaultRoutePermeted = false;\r\n    //             if (z.id === \"salesDispatch\") {\r\n    //               isDefaultRoutePermeted = true;\r\n    //               this.tempLinks.push({ label: 'Sales Dispatch', link: 'list' });\r\n    //             }\r\n    //             if (z.id === \"addNew\") {\r\n    //               this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n    //             }\r\n    //           this.tabLinks = this.tempLinks;\r\n    //           if (!isDefaultRoutePermeted) {\r\n    //             this.router.navigate(['/assetManagement/chargerManagement/salesDispatch/crud/' + this.tempLinks[0].link]);\r\n    //           }\r\n    //         });\r\n\r\n    //       }\r\n\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}