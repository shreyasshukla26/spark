{"version":3,"sources":["webpack:///src/app/main/error/error.module.ts","webpack:///src/app/main/error/error-routing.module.ts","webpack:///src/app/main/error/list-error/list-error.component.ts","webpack:///src/app/main/error/list-error/list-error.component.html"],"names":["COMPONENTS","COMPONENTS_DYNAMIC","ErrorModule","imports","declarations","entryComponents","routes","path","component","ErrorRoutingModule","forChild","exports","ErrorModel","ListErrorComponent","errorService","dialog","_utilityService","snackBar","cdr","datepipe","fb","currDate","Date","displayedColumns","head","userNameSearch","activitySearch","applicationSearch","emailSearch","errorCodeSearch","errorDesiSearch","projCodeSearch","projNameSearch","urlSearch","convertDateSearch","tempDate","errorForm","group","name","toDate","fromDate","setDate","getDate","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","getErrorList","filterEntity","filterType","ANYWHERE","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","getAllErrorLog","resp","errorsLogs","data","i","length","convertDate","transform","created_date","sort","err","visibleOption","ev","stopPropagation","username","activity_name","application_platform","email","error_code","error_discription","project_code","project_name","url","exportedData","filteredData","errorLogs","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","applyFilter","selector","templateUrl","styleUrls","encapsulation","None","animations","providers"],"mappings":"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","file":"app-main-error-error-module-es5.js","sourcesContent":["\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ListErrorComponent } from './list-error/list-error.component';\r\n\r\nimport { ErrorRoutingModule } from './error-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nconst COMPONENTS =[  ListErrorComponent];\r\nconst COMPONENTS_DYNAMIC =[];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ErrorRoutingModule,FuseSharedModule,MatStepperModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ErrorModule{}","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListErrorComponent } from './list-error/list-error.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'errorList',component : ListErrorComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ErrorRoutingModule{}","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ErrorService } from 'app/shared/services/error/error.service';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\nexport class ErrorModel {\r\n  username: string;\r\n  activity_name: string;\r\n  application_platform: string;\r\n  email: string;\r\n  error_code: string;\r\n  error_discription: string;\r\n  project_code: string;\r\n  project_name: string;\r\n  url: string;\r\n  created_date:string;\r\n  convertDate:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list-error',\r\n  templateUrl: './list-error.component.html',\r\n  styleUrls: ['./list-error.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ListErrorComponent implements OnInit {\r\n  filterEntity: ErrorModel;\r\n  filterType: MatTableFilter;\r\n  errorForm:FormGroup;\r\n  currDate : any = new Date();\r\n  displayedColumns: string[] = ['username', 'activity_name', 'application_platform', 'email', 'error_code', 'error_discription',\r\n    'project_code', 'project_name','convertDate'];\r\n  head = [['User Name ', 'Activity Name', 'Application Platform', 'Email', 'Error Code', 'Error Discription','Project Code','Project Name',\r\n          'Date']];\r\n  dataSource: MatTableDataSource<ErrorModel>;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  dialogRef: any;\r\n\r\n  userNameSearch = false;\r\n  activitySearch = false;\r\n  applicationSearch = false;\r\n  emailSearch = false;\r\n  errorCodeSearch = false;\r\n  errorDesiSearch = false;\r\n  projCodeSearch = false;\r\n  projNameSearch = false;\r\n  urlSearch = false;\r\n  convertDateSearch = false;\r\n  menuArray:any;\r\n  exportedData: any[];\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  tempDate = new Date();\r\n  errorsLogs:any;\r\n  constructor(private errorService: ErrorService, public dialog: MatDialog,private _utilityService:UtilityService,  \r\n    private snackBar: MatSnackBar, private cdr: ChangeDetectorRef, public datepipe: DatePipe, private fb: FormBuilder,) {\r\n    this.errorForm = this.fb.group({\r\n      name:[''],\r\n      toDate : [new Date()],\r\n      fromDate : [new Date(this.tempDate.setDate(this.tempDate.getDate() - 2))]\r\n    });\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n   this.getErrorList();\r\n    this.filterEntity = new ErrorModel();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getErrorList() {\r\n    \r\n    this.errorService.getAllErrorLog().subscribe(\r\n      (resp: any) => {\r\n        //;\r\n        if (resp != null) {\r\n          this.errorsLogs = resp.data;\r\n          for(var i =0;i<this.errorsLogs.length;i++){\r\n            this.errorsLogs[i].convertDate = this.datepipe.transform(this.errorsLogs[i].created_date, 'dd/MM/yyyy hh:mm:ss');\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.errorsLogs);\r\n\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n          this.cdr.detectChanges();\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'userNameSearch') {\r\n      this.userNameSearch = !this.userNameSearch;\r\n      this.filterEntity.username = \"\";\r\n    }\r\n    if (visibleOption == 'activitySearch') {\r\n      this.activitySearch = !this.activitySearch;\r\n      this.filterEntity.activity_name = \"\";\r\n    }\r\n    if (visibleOption == 'applicationSearch') {\r\n      this.applicationSearch = !this.applicationSearch;\r\n      this.filterEntity.application_platform = \"\";\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = \"\";\r\n    }\r\n    if (visibleOption == 'errorCodeSearch') {\r\n      this.errorCodeSearch = !this.errorCodeSearch;\r\n      this.filterEntity.error_code = \"\";\r\n    }\r\n    if (visibleOption == 'errorDesiSearch') {\r\n      this.errorDesiSearch = !this.errorDesiSearch;\r\n      this.filterEntity.error_discription = \"\";\r\n    }\r\n    if (visibleOption == 'projCodeSearch') {\r\n      this.projCodeSearch = !this.projCodeSearch;\r\n      this.filterEntity.project_code = \"\";\r\n    }\r\n    if (visibleOption == 'projNameSearch') {\r\n      this.projNameSearch = !this.projNameSearch;\r\n      this.filterEntity.project_name = \"\";\r\n    }\r\n    if (visibleOption == 'urlSearch') {\r\n      this.urlSearch = !this.urlSearch;\r\n      this.filterEntity.url = \"\";\r\n    }\r\n    if (visibleOption == 'convertDateSearch') {\r\n      this.convertDateSearch = !this.convertDateSearch;\r\n      this.filterEntity.convertDate = \"\";\r\n    }\r\n    \r\n\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var errorLogs = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'User Name ': errorLogs.username, 'Activity': errorLogs.activity_name, 'Application Platform': errorLogs.application_platform,\r\n        'Email': errorLogs.email, 'Error Code': errorLogs.error_code, 'Error Description': errorLogs.error_discription,\r\n        'Project Code': errorLogs.project_code, 'Project Name': errorLogs.project_name,  'Created Date': errorLogs.convertDate\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Error Logs.xlsx');\r\n  }\r\n  pdfExport(){\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var errorLogs = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[errorLogs.username,errorLogs.activity_name,errorLogs.application_platform, errorLogs.email,errorLogs.error_code,\r\n      errorLogs.error_discription,errorLogs.project_code,errorLogs.project_name,errorLogs.convertDate] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Error Logs Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n    // below line for Download PDF document  \r\n    doc.save('Error Logs report.pdf');\r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\");\r\n    return doc;\r\n  }\r\n\r\n\r\n \r\n \r\n}\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n    <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n        <div class=\"center\" fusePerfectScrollbar>\r\n            <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n                    <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                        [@animate]=\"{value:'*',params:{x:'50px'}}\">Error List  </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n        <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n            <mat-icon>sim_card_download</mat-icon> \r\n          </button>&nbsp;&nbsp;\r\n          <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n            <mat-icon>picture_as_pdf</mat-icon> \r\n          </button>&nbsp;&nbsp;\r\n      \r\n        <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n    </div>\r\n    <mat-card style=\"padding:16px  !important;\">\r\n        <mat-card-content>\r\n            <form [formGroup]=\"errorForm\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"30\" style=\"height: 60px; \" class=\"pr-4\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" formControlName=\"name\" #input\r\n                            autocomplete=\"password\">\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                        <mat-label>From Date</mat-label>\r\n                        <input matInput [matDatepicker]=\"errorStratDate\" formControlName=\"fromDate\" #fromDate\r\n                            [max]=\"currDate\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"errorStratDate\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #errorStratDate disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"30\" class=\"pr-4\">\r\n                        <mat-label>To Date</mat-label>\r\n                        <input matInput [matDatepicker]=\"errorEndDate\" formControlName=\"toDate\"\r\n                            [min]=\"!!errorForm.value.fromDate ? errorForm.value.fromDate._d : '2020-01-01'\" [max]=\"currDate\"\r\n                            disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"errorEndDate\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #errorEndDate disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n                    <div fxFlex=\"10\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"Filter\" (click)=\"getErrorList()\"\r\n                            style=\"cursor:pointer; \">filter_alt</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Refresh\" (click)=\"getErrorList()\"\r\n                            style=\"cursor:pointer;\">refresh</mat-icon>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n        <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n            <div class=\"mat-elevation-z8\" >\r\n                <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                    [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                    <ng-container matColumnDef=\"username\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!userNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name\r\n                                &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('userNameSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"userNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                                <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.username\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch',$event)\">\r\n                                    highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"activity_name\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!activitySearch\" class=\"custom_font_size\" style=\"display: flex;\">Activity Name\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('activitySearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"activitySearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Activity Name\" [(ngModel)]=\"filterEntity.activity_name\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('activitySearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.activity_name}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"application_platform\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!applicationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Application Platform\r\n                               \r\n                                &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('applicationSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"applicationSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Application Platform\" [(ngModel)]=\"filterEntity.application_platform\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('applicationSearch',$event)\">\r\n                                    highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.application_platform}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"email\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email\r\n                                &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Email\" [(ngModel)]=\"filterEntity.email\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('emailSearch',$event)\">highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\" > {{row.email}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"error_code\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!errorCodeSearch\" class=\"custom_font_size\"\r\n                                style=\"display: flex;\">Error Code &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('errorCodeSearch',$event)\">search</mat-icon>\r\n                            </span>\r\n                            <mat-form-field *ngIf=\"errorCodeSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Error Code\"\r\n                                    [(ngModel)]=\"filterEntity.error_code\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('errorCodeSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.error_code}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"error_discription\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!errorDesiSearch\" class=\"custom_font_size\" style=\"display: flex;\">Error Description\r\n                                 &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('errorDesiSearch',$event)\">search</mat-icon> \r\n                            </span>\r\n                            <mat-form-field *ngIf=\"errorDesiSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Error Description\" [(ngModel)]=\"filterEntity.error_discription\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('errorDesiSearch',$event)\">\r\n                                    highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.error_discription}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"project_code\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!projCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Project Code\r\n                                \r\n                                &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('projCodeSearch',$event)\">\r\n                                    search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"projCodeSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Project Code\" [(ngModel)]=\"filterEntity.project_code\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('projCodeSearch',$event)\">\r\n                                    highlight_off\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.project_code}} </td>\r\n                    </ng-container>\r\n                   \r\n                    <ng-container matColumnDef=\"project_name\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!projNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Project Name\r\n                                &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('projNameSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"projNameSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Project Name\" [(ngModel)]=\"filterEntity.project_name\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('projNameSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.project_name}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"url\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!urlSearch\" class=\"custom_font_size\" style=\"display: flex;\">URL\r\n                                &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('urlSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"urlSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"URL\" [(ngModel)]=\"filterEntity.url\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('urlSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.url}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"convertDate\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                            <span *ngIf=\"!convertDateSearch\" class=\"custom_font_size\" style=\"display: flex;\">Created Date\r\n                                &nbsp;&nbsp; <mat-icon matSuffix\r\n                                    (click)=\"changeVisibility('convertDateSearch',$event)\">search</mat-icon> </span>\r\n                            <mat-form-field *ngIf=\"convertDateSearch\" appearance=\"outline\" class=\"list_input\" >\r\n                                <input matInput placeholder=\"Created Date\" [(ngModel)]=\"filterEntity.convertDate\">\r\n                                <mat-icon matSuffix (click)=\"changeVisibility('convertDateSearch',$event)\">\r\n                                    highlight_off</mat-icon>\r\n                            </mat-form-field>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.convertDate}} </td>\r\n                    </ng-container>\r\n                   \r\n\r\n                    <!-- <tr mat-header-row  *matHeaderRowDef=\"['lable_code','lable_name', 'lable_charger_type','lable_manufacturer','lable_status','lable_Active']\"></tr> -->\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                    <!-- Row shown when there is no matching data. -->\r\n\r\n                </table>\r\n\r\n                <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->"]}