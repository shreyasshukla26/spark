{"version":3,"sources":["webpack:///src/app/main/client/client-menu/client-menu.component.ts","webpack:///src/app/main/client/client-menu/client-menu.component.html","webpack:///src/app/main/client/list/list.component.ts","webpack:///src/app/main/client/list/list.component.html","webpack:///src/app/main/client/client-crud/routes.ts","webpack:///src/app/main/client/client.module.ts","webpack:///src/app/main/client/action-dialog/action-dialog.component.ts","webpack:///src/app/main/client/action-dialog/action-dialog.component.html","webpack:///src/app/main/client/client-routing.module.ts","webpack:///src/app/main/client/create/create.component.ts","webpack:///src/app/main/client/create/create.component.html","webpack:///src/app/main/client/view-dialog/view-dialog.component.ts","webpack:///src/app/main/client/view-dialog/view-dialog.component.html","webpack:///src/app/main/client/client-crud/client-crud.component.ts","webpack:///src/app/main/client/client-crud/client-crud.component.html"],"names":["autocompleteObjectValidator","control","value","TodoItemNodeTest","isSelected","ActionNode","TodoItemFlatNode","ActionMenuNode","ChecklistDatabase","_menuConfigService","dataChange","localStorage","JSON","parse","getItem","initialize","getClientMenuList","project_id","client_id","getMenuConfig","subscribe","resp","status","menuConfigLit","menuChildList","index","data","length","menuCfg","parent_id","push","parentMenu","getParentMenu","children","undefined","buildFileTree","next","err","menuConfigList","menuConfig","menu_id","menudata","level","todoItemList","node","item","title","id","map_id","parent","name","ClientMenuComponent","snackBar","menuConfigService","changeDetectorRef","fb","clientService","_database","_utilityService","actionMenu","menuNode","selectedMenus","flatNodeMap","Map","menuAction","completed","subMenu","nestedNodeMap","selectedParent","newItemName","checklistSelection","selectChange","collaspedChange","getLevel","isExpandable","expandable","getChildren","hasChild","_","_nodeData","hasNoContent","transformer","existingNode","get","flatNode","set","nodeSelectionToggle","allComplete","treeFlattener","treeControl","dataSource","getMenuListClientWise","activeMenuItems$","menuItemSelecte","menuArray","detectChanges","expandAll","clientMenuForm","group","client","required","getClients","toggle","descendants","getDescendants","select","deselect","markForCheck","k","checkParentIsSelected","result","i","filter","t","isAlreadyPush","formValues","selected","params","menus","map","v","display_order","created_by","userId","setClientMenuMapping","open","clientMenuMappedSucess","duration","clear","getActiveClientsCW","clients","toSelect","find","c","setValue","selectedClientID","filteredOptionsClient","controls","valueChanges","pipe","_filterClientModels","filterValue","toLowerCase","option","includes","descAllSelected","every","child","some","descendantsAllSelected","forEach","checkAllParentsSelection","getParentNode","checkRootNodeSelection","nodeSelected","currentLevel","startIndex","dataNodes","indexOf","currentNode","parentNode","insertItem","expand","itemValue","nestedNode","updateItem","event","checked","ref","selectAll","unSelectAll","collaspedRef","collapseAll","onClientChange","updateSelectChange","updatecollaspedChange","openSubmit","selector","templateUrl","styleUrls","providers","encapsulation","None","animations","tree","$event","stopPropagation","Client","ListComponent","dialog","columnList","head","columnShowHideList","nameSearch","contactPersonSearch","mobileSearch","emailSearch","statusSearch","gstSearch","initializeColumnProperties","filterEntity","filterType","ANYWHERE","target","trim","paginator","firstPage","getClientsCW","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","deleteMessage","action","dialogRef","width","autoFocus","panelClass","visibleOption","gst_no","cp_name","mobile","email","exportedData","filteredData","chargerModel","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","column","isActive","possition","splice","opr","element","tableExport","pdfExport","TABS_DEMO_ROUTES","path","canActivate","component","redirectTo","pathMatch","COMPONENTS","COMPONENTS_DYNAMIC","ClientModule","imports","declarations","entryComponents","ActionDialogComponent","countryService","isEditMode","form","pattern","description","addressLine1","addressLine2","landmark","city","state","country","pincode","logoPath","gst_number","tin_number","assignValues","getAllCountry","getAllState","country_id","getAllCity","state_id","countries","filteredOptionCountry","_filterCountry","countryID","getStateByCountry","states","filteredOptionState","_filterState","stateID","getCityByState","cities","city_id","filteredOptionCity","_filterCity","close","valid","address1","address2","PIN","tin_no","modify_by","update","recordUpdateMessage","err_code","errorMsg","message","lastIndexOf","splitted","substring","clientDuplicate","mobileDuplicateClient","emailDuplicateClient","errorMessage","create","clientCreate","hasError","pin_code_id","getCountryStateByPIN","getCountryByState","countrydata","statedata","Citydata","getStatesByCountry","getCitiesByStates","stateId","citiesdata","closeActionPanel","getStateCountry","onCountryChange","onStateChange","onCityChange","updateStatus","onYesClick","routes","loadChildren","then","m","ClientModuleMappingModule","titleI18n","ClientRoutingModule","forChild","exports","CreateComponent","masterService","router","stateData","getAllCities","navigate","onSubmit","preventDefault","ViewDialogComponent","ClientCrudComponent","cdr","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","y","objectChildData","isDefaultRoutePermeted","z","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent"],"mappings":"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","file":"app-main-client-client-module-es5.js","sourcesContent":["import { Component, OnInit, Injectable, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { RfidService } from 'app/shared/services/rfid/rfid.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MenuConfigService } from 'app/shared/services/menu-config/menu-config.service';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\nexport class TodoItemNodeTest {\r\n  children: TodoItemNodeTest[];\r\n  item: string;\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  isSelected: boolean = false;\r\n  parent_id: string;\r\n}\r\nexport class ActionNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n}\r\n\r\n/** Flat to-do item node with expandable and level information */\r\nexport class TodoItemFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n  actionAll: ActionMenuNode[];\r\n  children: TodoItemFlatNode[];\r\n  actionNode: ActionNode[];\r\n  id: number;\r\n  title: string;\r\n  menu_id: string;\r\n  map_id: string;\r\n  parent_id: string;\r\n  isSelected: boolean = false;\r\n}\r\nexport class ActionMenuNode {\r\n  add: boolean;\r\n  delete: boolean;\r\n  download: boolean;\r\n  selectAll: boolean;\r\n}\r\n@Injectable()\r\nexport class ChecklistDatabase {\r\n  dataChange = new BehaviorSubject<TodoItemFlatNode[]>([]);\r\n  localStorage: any;\r\n  get data(): TodoItemFlatNode[] { return this.dataChange.value; }\r\n\r\n  constructor(private _menuConfigService: MenuConfigService) {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.getClientMenuList(this.localStorage.project_id, this.localStorage.client_id);\r\n\r\n\r\n  }\r\n  getClientMenuList(project_id, client_id) {\r\n    this._menuConfigService.getMenuConfig(project_id, client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          let menuConfigLit = [];\r\n          let menuChildList = [];\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            let menuCfg = resp.data[index];\r\n            if (menuCfg.parent_id == null) {\r\n              menuConfigLit.push(menuCfg);\r\n            } else {\r\n              let parentMenu = this.getParentMenu(menuConfigLit, menuCfg.parent_id);\r\n              menuChildList = parentMenu.children;\r\n              if (undefined == menuChildList) {\r\n                menuChildList = [];\r\n                parentMenu.children = menuChildList;\r\n              }\r\n              menuChildList.push(menuCfg);\r\n            }\r\n          }\r\n\r\n          const data = this.buildFileTree(menuConfigLit, 0);\r\n          this.dataChange.next(data);\r\n\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n  getParentMenu(menuConfigList, parent_id) {\r\n    let parentMenu;\r\n    for (let index = 0; index < menuConfigList.length; index++) {\r\n      let menuConfig = menuConfigList[index];\r\n      if (menuConfig.menu_id == parent_id) {\r\n        parentMenu = menuConfig;\r\n        break;\r\n      } else {\r\n        let menuChildList = menuConfig.children;\r\n        if (undefined != menuChildList) {\r\n          parentMenu = this.getParentMenu(menuChildList, parent_id);\r\n          if (parentMenu != undefined) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return parentMenu;\r\n  }\r\n  buildFileTree(menudata, level: number): TodoItemFlatNode[] {\r\n    let todoItemList = [];\r\n    for (let index = 0; index < menudata.length; index++) {\r\n      let menuCfg = menudata[index];\r\n      const node = new TodoItemFlatNode();\r\n      node.item = menuCfg.title;\r\n      node.id = menuCfg.id;\r\n      node.title = menuCfg.title;\r\n      node.menu_id = menuCfg.menu_id;\r\n      node.map_id = menuCfg.map_id;\r\n      node.parent_id = menuCfg.parent_id;\r\n      if (menuCfg.children != undefined)\r\n        node.children = this.buildFileTree(menuCfg.children, level + 1);\r\n      todoItemList.push(node);\r\n\r\n    }\r\n    return todoItemList;\r\n  }\r\n\r\n  insertItem(parent: TodoItemFlatNode, name: string) {\r\n    if (parent.children) {\r\n      parent.children.push({ item: name } as TodoItemFlatNode);\r\n      this.dataChange.next(this.data);\r\n    }\r\n  }\r\n\r\n  updateItem(node: TodoItemFlatNode, name: string) {\r\n    node.item = name;\r\n    this.dataChange.next(this.data);\r\n  }\r\n}\r\n\r\nexport interface MenuAction {\r\n  name: string;\r\n  completed: boolean;\r\n  subMenu?: MenuAction[];\r\n}\r\n@Component({\r\n  selector: 'app-client-menu',\r\n  templateUrl: './client-menu.component.html',\r\n  styleUrls: ['./client-menu.component.scss'],\r\n  providers: [ChecklistDatabase, DatePipe],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n})\r\nexport class ClientMenuComponent implements OnInit {\r\n  clients: any;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  clientMenuForm: FormGroup;\r\n  actionMenu = false;\r\n  menuNode = false;\r\n  localStorage: any;\r\n  selectedMenus = [];\r\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  menuAction: MenuAction = {\r\n    name: 'select All',\r\n    completed: false,\r\n    subMenu: [\r\n      { name: 'Add/Update', completed: false },\r\n      { name: 'Delete', completed: false },\r\n      { name: 'Download', completed: false }\r\n    ]\r\n  };\r\n  selectedClientID: any;\r\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n  nestedNodeMap = new Map<TodoItemFlatNode, TodoItemFlatNode>();\r\n  TREE_DATA: any;\r\n  /** A selected parent node to be inserted */\r\n  selectedParent: TodoItemFlatNode | null = null;\r\n\r\n  /** The new item's name */\r\n  newItemName = '';\r\n\r\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\r\n\r\n  treeFlattener: MatTreeFlattener<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  dataSource: MatTreeFlatDataSource<TodoItemFlatNode, TodoItemFlatNode>;\r\n\r\n  /** The selection for checklist */\r\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\r\n  @ViewChild('tree') tree;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  @ViewChild(\"toggleCollasped\") collaspedRef: any;\r\n  selectChange = false;\r\n  collaspedChange = false;\r\n  menuArray: any;\r\n  constructor(private snackBar: MatSnackBar, private menuConfigService: MenuConfigService, private changeDetectorRef: ChangeDetectorRef,\r\n    private fb: FormBuilder, private clientService: ClientService, private _database: ChecklistDatabase, private _utilityService: UtilityService) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n    this.getMenuListClientWise();\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.changeDetectorRef.detectChanges();\r\n    })\r\n    this.treeControl.expandAll();\r\n  }\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientMenuForm = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]]\r\n    });\r\n    this.getClients();\r\n\r\n  }\r\n  getMenuListClientWise() {\r\n    this._database.dataChange.subscribe(data => {\r\n      this.dataSource.data = data;\r\n      this.treeControl.expandAll()\r\n\r\n    });\r\n  }\r\n\r\n\r\n  nodeSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants, node)\r\n      : this.checklistSelection.deselect(...descendants, node);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n  checkParentIsSelected(data) {\r\n    for (var k = 0; k < data.length; k++) {\r\n      let node = data[k];\r\n      if (node.children != undefined) {\r\n        const children = node.children;\r\n        this.checkParentIsSelected(children);\r\n        let result = false;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          const isSelected = this.selectedMenus.filter(t => { return children[i].menu_id == t.menu_id });\r\n          if (isSelected != null && isSelected.length > 0) {\r\n            result = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (result == true) {\r\n          const isAlreadyPush = this.selectedMenus.filter(t => { return node.menu_id == t.menu_id });\r\n          if (isAlreadyPush == null || isAlreadyPush.length == 0) {\r\n            this.selectedMenus.push(node);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  openSubmit() {\r\n\r\n    let formValues = this.clientMenuForm.value;\r\n    this.selectedMenus = [];\r\n\r\n    this.selectedMenus = [...this.checklistSelection.selected];\r\n\r\n    this.checkParentIsSelected(this.dataSource.data);\r\n\r\n\r\n    let params = {\r\n      client_id: formValues.client.id,\r\n      menus: this.selectedMenus.map(v => ({ menu_id: v.menu_id, title: v.item, display_order: 0, parent_id: v.parent_id })),\r\n      status: \"Y\",\r\n      created_by: this.localStorage.userId\r\n    }\r\n\r\n\r\n    this.menuConfigService.setClientMenuMapping(params).subscribe(\r\n      (resp: any) => {\r\n        // \r\n        if (resp.status = true) {\r\n          this.snackBar.open(MessageConstant.clientMenuMappedSucess, 'Dismiss', { duration: 5000 });\r\n          this.checklistSelection.clear();\r\n          this._database.getClientMenuList(this.localStorage.project_id, formValues.client.id)\r\n        } else {\r\n          this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n        }\r\n\r\n\r\n\r\n      },\r\n      (err) => {\r\n        // \r\n        this.snackBar.open('Please try again', 'Dismiss', { duration: 5000 });\r\n      }\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n\r\n        const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n        this.clientMenuForm.get('client').setValue(toSelect);\r\n        this.selectedClientID = toSelect.id;\r\n        this.filteredOptionsClient = this.clientMenuForm.controls.client.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterClientModels(name) : this.clients)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value) {\r\n    //this.dataSource.data =[];\r\n    //this._database.dataChange.next(null);\r\n    this.checklistSelection.clear();\r\n    //this.descendantsAllSelected( this.checklistSelection.);\r\n    this._database.getClientMenuList(this.localStorage.project_id, value.id);\r\n\r\n    this.selectedClientID = value.id;\r\n    //this.getMenuListClientWise();\r\n  }\r\n  getLevel = (node: TodoItemFlatNode) => node.level;\r\n\r\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\r\n  menu_id = (node: TodoItemFlatNode) => node.menu_id;\r\n  parent_id = (node: TodoItemFlatNode) => node.parent_id;\r\n  getChildren = (node: TodoItemFlatNode): TodoItemFlatNode[] => node.children;\r\n\r\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\r\n\r\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\r\n\r\n  /**\r\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\r\n   */\r\n  transformer = (node: TodoItemFlatNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.item === node.item\r\n      ? existingNode\r\n      : new TodoItemFlatNode();\r\n    flatNode.item = node.item;\r\n    flatNode.level = level;\r\n    flatNode.menu_id = node.menu_id;\r\n    flatNode.parent_id = node.parent_id;\r\n    flatNode.expandable = !!node.children?.length;\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    if (node.map_id != null) {\r\n      this.nodeSelectionToggle(flatNode);\r\n    }\r\n    return flatNode;\r\n  }\r\n\r\n  /** Whether all the descendants of the node are selected. */\r\n  // descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n  //   const descendants = this.treeControl.getDescendants(node);\r\n\r\n  //   if (!descendants.length) {\r\n  //     return this.checklistSelection.isSelected(node);\r\n  //   }\r\n  //   const selected = this.checklistSelection.isSelected(node);\r\n  //   const allSelected = descendants.every(child => this.checklistSelection.isSelected(child));\r\n  //   if (!selected && allSelected) {\r\n  //     this.checklistSelection.select(node);\r\n\r\n  //   }\r\n  //   return allSelected;\r\n  // }\r\n\r\n\r\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      this.changeDetectorRef.markForCheck();\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    return descAllSelected;\r\n  }\r\n\r\n  /** Whether part of the descendants are selected */\r\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n  }\r\n\r\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\r\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    this.checklistSelection.isSelected(node)\r\n      ? this.checklistSelection.select(...descendants)\r\n      : this.checklistSelection.deselect(...descendants);\r\n\r\n    // Force update for the parent\r\n    descendants.forEach(child => this.checklistSelection.isSelected(child));\r\n    this.checkAllParentsSelection(node);\r\n    this.actionMenu = true;\r\n    this.menuNode = true;\r\n  }\r\n\r\n  /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\r\n  todoLeafItemSelectionToggle(node: TodoItemFlatNode): void {\r\n    this.checklistSelection.toggle(node);\r\n    this.checkAllParentsSelection(node);\r\n\r\n  }\r\n\r\n  /* Checks all the parents when a leaf node is selected/unselected */\r\n  checkAllParentsSelection(node: TodoItemFlatNode): void {\r\n    let parent: TodoItemFlatNode | null = this.getParentNode(node);\r\n    while (parent) {\r\n      this.checkRootNodeSelection(parent);\r\n      parent = this.getParentNode(parent);\r\n    }\r\n    this.actionMenu = true;\r\n  }\r\n\r\n  /** Check root node checked state and change it accordingly */\r\n  checkRootNodeSelection(node: TodoItemFlatNode): void {\r\n    const nodeSelected = this.checklistSelection.isSelected(node);\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const descAllSelected = descendants.length > 0 && descendants.every(child => {\r\n      return this.checklistSelection.isSelected(child);\r\n    });\r\n    if (nodeSelected && !descAllSelected) {\r\n      this.checklistSelection.deselect(node);\r\n    } else if (!nodeSelected && descAllSelected) {\r\n      this.checklistSelection.select(node);\r\n    }\r\n  }\r\n\r\n  /* Get the parent node of a node */\r\n  getParentNode(node: TodoItemFlatNode): TodoItemFlatNode | null {\r\n    const currentLevel = this.getLevel(node);\r\n\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n\r\n      if (this.getLevel(currentNode) < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Select the category so we can insert the new item. */\r\n  addNewItem(node: TodoItemFlatNode) {\r\n    const parentNode = this.flatNodeMap.get(node);\r\n    this._database.insertItem(parentNode!, '');\r\n    this.treeControl.expand(node);\r\n  }\r\n\r\n  /** Save the node to database */\r\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\r\n    const nestedNode = this.flatNodeMap.get(node);\r\n    this._database.updateItem(nestedNode!, itemValue);\r\n  }\r\n  allComplete: boolean = false;\r\n\r\n  updateAllComplete() {\r\n    this.allComplete = this.menuAction.subMenu != null && this.menuAction.subMenu.every(t => t.completed);\r\n  }\r\n\r\n  someComplete(node: any): boolean {\r\n    const descendants = this.treeControl.getDescendants(node);\r\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\r\n    return result && !this.descendantsAllSelected(node);\r\n    // if (node.this.menuAction.subMenu == null) {\r\n    // return false;\r\n    // }\r\n    //return node.this.menuAction.subMenu.filter(t => t.completed).length > 0 && !this.allComplete;\r\n  }\r\n\r\n  setAll(completed: boolean) {\r\n    this.allComplete = completed;\r\n    if (this.menuAction.subMenu == null) {\r\n      return;\r\n    }\r\n    this.menuAction.subMenu.forEach(t => t.completed = completed);\r\n  }\r\n  updateSelectChange(event) {\r\n    this.selectChange = event.checked;\r\n    this.ref.checked = this.selectChange;\r\n    if (this.selectChange == true) {\r\n      this.checklistSelection.clear();\r\n      this.selectAll();\r\n\r\n      // this.treeControl.collapseAll();\r\n    } else {\r\n      this.unSelectAll();\r\n      this.checklistSelection.clear();\r\n      //this.checklistSelection.selected\r\n      //this.treeControl.expandAll();\r\n    }\r\n  }\r\n  updatecollaspedChange(event) {\r\n    this.collaspedChange = event.checked;\r\n    this.collaspedRef.checked = this.collaspedChange;\r\n    if (this.collaspedChange == true) {\r\n      this.treeControl.collapseAll();\r\n    } else {\r\n      this.treeControl.expandAll();\r\n    }\r\n  }\r\n  selectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n  unSelectAll() {\r\n    for (let i = 0; i < this.treeControl.dataNodes.length; i++) {\r\n      if (!this.checklistSelection.isSelected(this.treeControl.dataNodes[i]))\r\n        this.checklistSelection.toggle(this.treeControl.dataNodes[i]);\r\n      this.treeControl.expand(this.treeControl.dataNodes[i])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n\t<div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n\t  <!-- CENTER -->\r\n\t  <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n\t\t  <!-- HEADER -->\r\n\t\t  <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n\t\t\t  <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n\t\t\t\t  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n\t\t\t\t\t\t[@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n\t\t\t\t  </span>\r\n  \r\n\t\t\t\t  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n\t\t\t\t\t\t  (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n\t\t\t\t\t  <mat-icon>menu</mat-icon>\r\n\t\t\t\t  </button-->\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"clientMenuForm\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"clientMenuForm\" >\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t(optionSelected)='onClientChange($event.option.value)' > \r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"clientMenuForm.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"25\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-bottom: 18px;\" >\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"selectChange\"(change)=\"updateSelectChange($event)\" #toggleElement>\r\n\t\t\t\t\t{{selectChange ? 'Select All' : 'Un Select All'}}</mat-slide-toggle> &nbsp;&nbsp;\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"collaspedChange\"(change)=\"updatecollaspedChange($event)\" #toggleCollasped>\r\n\t\t\t\t\t\t{{collaspedChange ? 'Collasped' : 'Un Collasped'}}</mat-slide-toggle>\r\n\t\t\t\t\t<!-- <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" routerLink=\"/chargingStation/crud/list\">Cancel</button> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxFlex=\"25\" style=\"margin-bottom: 18px;\">\r\n\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\" style=\"float: right;\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t\t</div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <div fxFlex=\"100\" fxFlex.lt-sm=\"100\" style=\"margin-top:20px ;\">\r\n        <mat-toolbar  style=\"background-color: #00acc1 !important;color:white\" class=\"connector-toolbar\">\r\n          <!-- sidebar toggle button -->\r\n          <h6 class=\"m-0 pl-16 font-normal fz-1\"> \r\n            <button mat-icon-button [style.alignSelf]=\"'center'\"  class=\"mr-16\">\r\n              <mat-icon>list</mat-icon>\r\n            </button> &nbsp;Menu List\r\n          </h6>\r\n        </mat-toolbar>\r\n      </div>\r\n\t</div>\r\n\t<div fxLayout=\"row wrap\"  style=\"padding-top:20px;\">\r\n\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t  <mat-tree #tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t  <mat-checkbox class=\"checklist-leaf-node\"\r\n\t\t\t\t\t\t\t[checked]=\"checklistSelection.isSelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t\t<!-- <div *ngIf=\"checklistSelection.isSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t  <div fxLayout=\"row wrap\" style=\"padding-right: 10px;\">\r\n\t\t\t\t\t\t\t\t<div fxFlex=\"100\" fxFlex.lt-sm=\"100\" >\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectAdd\">Add/Update</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDelete\">Delete</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<mat-checkbox class=\"checklist-leaf-node\" id=\"selectDownload\">Download</mat-checkbox>\r\n\t\t\t\t\t\t\t\t  </div> \r\n\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t  </div>           -->\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\r\n\t\t\t  <button mat-icon-button disabled></button>\r\n\t\t\t</mat-tree-node>\r\n\t\t  \r\n\t\t\t<mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\r\n\t\t\t  \r\n\t\t\t  <button mat-icon-button matTreeNodeToggle\r\n\t\t\t\t\t  [attr.aria-label]=\"'Toggle ' + node.item\">\r\n\t\t\t\t<mat-icon class=\"mat-icon-rtl-mirror\">\r\n\t\t\t\t  {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n\t\t\t\t</mat-icon>\r\n\t\t\t  </button>\r\n\t\t\t  <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\r\n\t\t\t\t\t\t\t[indeterminate]=\"descendantsPartiallySelected(node)\"\r\n\t\t\t\t\t\t\t(change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\r\n\t\t\t\t\t\t  <!-- <div *ngIf=\"descendantsAllSelected(node)\" style=\"text-align: end;display: flex; margin-left: auto;\">    \r\n\t\t\t\t\t\t\t<div class=\"cb-wrapper\" [ngClass]=\"{'cb-vertival': !tmp }\">\r\n\t\t\t\t\t\t\t  <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"allComplete\"  [indeterminate]=\"someComplete(node)\" (change)=\"setAll($event.checked)\" > {{menuAction.name}}</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  <div *ngFor=\"let subMenu of menuAction.subMenu\">\r\n\t\t\t\t\t\t\t\t<mat-checkbox [(ngModel)]=\"subMenu.completed\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"updateAllComplete()\">\r\n\t\t\t\t\t\t\t\t  {{subMenu.name}}\r\n\t\t\t\t\t\t\t\t</mat-checkbox>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t  </div>                   -->\r\n\t\t\t  <!--button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button-->\r\n\t\t\t</mat-tree-node>\r\n\t\t\t\r\n\t\t  </mat-tree>\r\n\t\t  </div>\r\n\t\t \r\n\t\t</div>\r\n\t\t<!-- <div fxLayout=\"row\" fxLayoutAlign=\"start start\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\"  (click)=\"openSubmit()\">Save</button>\r\n\t\t</div> -->\r\n  </form>\r\n</div> \r\n","\r\nimport { Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nexport class Client {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString: string;\r\n  cp_name: string;\r\n  gst_no: string;\r\n}\r\ninterface CustomColumn {\r\n  possition: number;\r\n  name: string;\r\n  isActive: boolean;\r\n}\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Client;\r\n  filterType: MatTableFilter;\r\n  columnList: string[] = ['name', 'cp_name', 'gst_no', 'status', 'action'];\r\n  head = [['Client Name', 'Contact Person Name', 'GSTN', 'Mobile', 'Email', 'Status']];\r\n  public columnShowHideList: CustomColumn[] = [];\r\n  dataSource: MatTableDataSource<Client>;\r\n\r\n  clients: Client[];\r\n  localStorage: any;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  nameSearch = false;\r\n  contactPersonSearch = false;\r\n  mobileSearch = false;\r\n  emailSearch = false;\r\n  statusSearch = false;\r\n  gstSearch = false;\r\n  exportedData: any[];\r\n  constructor(private clientService: ClientService, public dialog: MatDialog,\r\n    private snackBar: MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getClients();\r\n    this.initializeColumnProperties();\r\n    this.filterEntity = new Client();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getClients() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        if (data != null) {\r\n          this.clients = data;\r\n          for (var i = 0; i < this.clients.length; i++) {\r\n            if (this.clients[i].status == 'N') {\r\n              this.clients[i].statusString = 'Inactive';\r\n            } else {\r\n              this.clients[i].statusString = 'Active';\r\n            }\r\n\r\n\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.clients);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.clientService.delete(id).subscribe(\r\n          (data: any) => {\r\n\r\n            this.getClients();\r\n            this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n          }, (err) => {\r\n\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action, data): void {\r\n\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getClients();\r\n    });\r\n  }\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getClients();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n    //descSearch = false;\r\n    if (visibleOption == 'nameSearch') {\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = '';\r\n    }\r\n    if (visibleOption == 'gstSearch') {\r\n      this.gstSearch = !this.gstSearch;\r\n      this.filterEntity.gst_no = '';\r\n    }\r\n    if (visibleOption == 'contactPersonSearch') {\r\n      this.contactPersonSearch = !this.contactPersonSearch;\r\n      this.filterEntity.cp_name = '';\r\n    }\r\n    if (visibleOption == 'mobileSearch') {\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if (visibleOption == 'emailSearch') {\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = '';\r\n    }\r\n\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n  }\r\n  tableExport() {\r\n\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargerModel = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Client Name': chargerModel.name, 'Contact Person Name': chargerModel.cp_name, 'GSTIN': chargerModel.gst_no,\r\n        'Mobile': chargerModel.mobile, 'Email': chargerModel.email, 'Status': chargerModel.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n\r\n\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Client List');\r\n    XLSX.writeFile(workBook, 'Client List.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chrger.name, chrger.cp_name, chrger.gst_no, chrger.mobile, chrger.email, chrger.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Client List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Client List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n  toggleColumn(column) {\r\n    if (column.isActive) {\r\n      if (column.possition > this.columnList.length - 1) {\r\n        this.columnList.push(column.name);\r\n      } else {\r\n        this.columnList.splice(column.possition, 0, column.name);\r\n      }\r\n    } else {\r\n      let i = this.columnList.indexOf(column.name);\r\n      let opr = i > -1 ? this.columnList.splice(i, 1) : undefined;\r\n    }\r\n  }\r\n\r\n  initializeColumnProperties() {\r\n    this.columnList.forEach((element, index) => {\r\n      this.columnShowHideList.push(\r\n        { possition: index, name: element, isActive: true }\r\n      );\r\n    });\r\n    // After for loop it will look like this\r\n    //   public columnShowHideList = [\r\n    //   { possition: 0, name: 'action', isActive: true },\r\n    //   { possition: 1, name: 'userName', isActive: true },\r\n    //   { possition: 2, name: 'email', isActive: true },\r\n    //   { possition: 3, name: 'contactNo', isActive: true },\r\n    //   { possition: 4, name: 'address', isActive: true }\r\n    // ];\r\n  }\r\n}\r\n\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n    <button\r\n        style=\"float: right\"\r\n        mat-button\r\n        #menuTrigger=\"matMenuTrigger\"\r\n        [matMenuTriggerFor]=\"mainMenuButton\"\r\n    >\r\n        Table columns\r\n    </button>\r\n    <mat-menu #mainMenuButton=\"matMenu\">\r\n        <span\r\n            (click)=\"$event.stopPropagation()\"\r\n            *ngFor=\"let column of columnShowHideList; index as i\"\r\n        >\r\n            <button mat-menu-item>\r\n                <mat-slide-toggle\r\n                    [(ngModel)]=\"column.isActive\"\r\n                    (change)=\"toggleColumn(column)\"\r\n                ></mat-slide-toggle>\r\n                {{ column.name }}\r\n                <br />\r\n            </button>\r\n        </span>\r\n    </mat-menu>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <mat-table\r\n            class=\"orders-table\"\r\n            [exampleEntity]=\"filterEntity\"\r\n            [filterType]=\"filterType\"\r\n            #table\r\n            [dataSource]=\"dataSource\"\r\n            matSort\r\n            matTableFilter\r\n        >\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!nameSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >Client Name &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('nameSearch')\"\r\n                            >search</mat-icon\r\n                        >\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"nameSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 70%\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\" Client Name \"\r\n                            [(ngModel)]=\"filterEntity.name\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('nameSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\">\r\n                    {{ row.name }}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"cp_name\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!contactPersonSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >Contact Person &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('contactPersonSearch')\"\r\n                            >search\r\n                        </mat-icon>\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"contactPersonSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 70%\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\" Contact Person \"\r\n                            [(ngModel)]=\"filterEntity.cp_name\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('contactPersonSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\">\r\n                    {{ row.cp_name }}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"gst_no\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!gstSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >GSTIN &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('gstSearch')\"\r\n                            >search\r\n                        </mat-icon>\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"gstSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 70%\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\" GSTIN \"\r\n                            [(ngModel)]=\"filterEntity.gst_no\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('gstSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let row\">\r\n                    {{ row.gst_no }}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"status\">\r\n                <mat-header-cell\r\n                    mat-header-cell\r\n                    *matHeaderCellDef\r\n                    mat-sort-header\r\n                >\r\n                    <span\r\n                        *ngIf=\"!statusSearch\"\r\n                        class=\"custom_font_size\"\r\n                        style=\"display: flex\"\r\n                        >Status &nbsp;&nbsp;\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('statusSearch')\"\r\n                            >search</mat-icon\r\n                        >\r\n                    </span>\r\n                    <mat-form-field\r\n                        *ngIf=\"statusSearch\"\r\n                        appearance=\"outline\"\r\n                        style=\"width: 100px\"\r\n                        class=\"list_input\"\r\n                    >\r\n                        <input\r\n                            matInput\r\n                            placeholder=\"Status\"\r\n                            [(ngModel)]=\"filterEntity.statusString\"\r\n                        />\r\n                        <mat-icon\r\n                            matSuffix\r\n                            (click)=\"changeVisibility('statusSearch')\"\r\n                            >highlight_off</mat-icon\r\n                        >\r\n                    </mat-form-field>\r\n                </mat-header-cell>\r\n                <mat-cell\r\n                    mat-cell\r\n                    *matCellDef=\"let row\"\r\n                    [style.color]=\"row.status == 'Y' ? 'green' : 'red'\"\r\n                >\r\n                    {{ row.statusString }}\r\n                </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell mat-header-cell *matHeaderCellDef>\r\n                    <span class=\"custom_font_size\">Action</span>\r\n                </mat-header-cell>\r\n                <mat-cell mat-cell *matCellDef=\"let element\">\r\n                    <mat-icon\r\n                        color=\"primary\"\r\n                        matTooltip=\"View\"\r\n                        (click)=\"viewDialog('VIEW', element)\"\r\n                        style=\"cursor: pointer\"\r\n                        >visibility</mat-icon\r\n                    >&nbsp;&nbsp;\r\n\r\n                    <mat-icon\r\n                        color=\"primary\"\r\n                        matTooltip=\"Edit\"\r\n                        (click)=\"openDialog('EDIT', element)\"\r\n                        style=\"cursor: pointer\"\r\n                        >edit</mat-icon\r\n                    >&nbsp;&nbsp;\r\n\r\n                    <mat-icon\r\n                        color=\"warn\"\r\n                        matTooltip=\"Remove\"\r\n                        (click)=\"delete(element.id)\"\r\n                        style=\"cursor: pointer\"\r\n                    >\r\n                        delete</mat-icon\r\n                    >\r\n                </mat-cell>\r\n            </ng-container>\r\n            <mat-header-row\r\n                mat-row\r\n                *matRowDef=\"let row; columns: columnList\"\r\n            ></mat-header-row>\r\n\r\n            <mat-row *matHeaderRowDef=\"columnList; sticky: true\"></mat-row>\r\n        </mat-table>\r\n\r\n        <mat-paginator\r\n            #paginator\r\n            [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n        ></mat-paginator>\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path: 'create', canActivate: [AuthGuard], component: CreateComponent },\r\n  { path: 'list', canActivate: [AuthGuard], component: ListComponent },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { ClientMenuComponent } from './client-menu/client-menu.component';\r\n\r\nconst COMPONENTS =[ClientCrudComponent, CreateComponent, ListComponent,ClientMenuComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ClientRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ClientModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  constructor(private fb: FormBuilder, private clientService: ClientService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      logoPath: [''],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number:['',[Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number:['',[Validators.pattern('\\^[0-9]{11}$')]],\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n  \r\n        name: formValues.name,\r\n        cp_name: formValues.cp_name,\r\n        description: formValues.description,\r\n  \r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        gst_no:formValues.gst_number,\r\n        tin_no: formValues.tin_number,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.clientService.update(params).subscribe(\r\n           (resp: any) => {\r\n              \r\n             if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n             }else{\r\n              if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n                this. errorMsg = resp.message;\r\n                var index=  this. errorMsg.lastIndexOf(\" \");\r\n                this.splitted = this. errorMsg.substring(index+1); \r\n                if(this.splitted == \"'name'\" ){\r\n                  this.snackBar.open(MessageConstant.clientDuplicate, 'Dismiss', { duration: 5000 });\r\n                }if(this.splitted == \"'mobile'\"){\r\n                  this.snackBar.open(MessageConstant.mobileDuplicateClient, 'Dismiss', { duration: 5000 });\r\n                }if(this.splitted == \"'email'\"){\r\n                  this.snackBar.open(MessageConstant.emailDuplicateClient, 'Dismiss', { duration: 5000 });\r\n                }\r\n              }else{\r\n                this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n              }\r\n              this.dialogRef.close();\r\n             }\r\n            \r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.clientService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }else{\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('description').setValue(params.data.description);\r\n\r\n    this.form.get('logoPath').setValue(params.data.logoPath);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('gst_number').setValue(params.data.gst_no);\r\n    this.form.get('tin_number').setValue(params.data.tin_no);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  onCityChange(event){\r\n   //this.form.get('pincode').setValue(\"\");\r\n  }\r\n\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Client</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"mobile\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"email\" required autocomplete=\"off\"\r\n            style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>GST Number</mat-label>\r\n          <input matInput placeholder=\"GST Format(29ABCDF1234F2Z5)\" formControlName=\"gst_number\" autocomplete=\"off\"\r\n            maxlength=\"15\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"GST Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n          <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid GST number</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>TIN Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"tin_number\" autocomplete=\"off\" maxlength=\"11\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"TIN Format(01234567890)\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid TIN number</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine1\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"addressLine2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" autocomplete=\"off\"\r\n            required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n            required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n            (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ?\r\n          'Save' : 'Save'}}</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './client-crud/routes';\r\nimport { ClientMenuComponent } from './client-menu/client-menu.component';\r\nimport { ClientModuleMappingModule } from './client-module-mapping/client-moduleMapping.module';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ClientCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    },\r\n\t{\r\n        path : 'clientMenuMappings',component : ClientMenuComponent,canActivate: [AuthGuard]\r\n    },\r\n    \r\n    {\r\n        path: 'clientModuleMapping',\r\n        loadChildren: () => import('./client-module-mapping/client-moduleMapping.module').then(m => m.ClientModuleMappingModule),\r\n        data: { title: 'Client Module Mapping', titleI18n: 'clientModule' },\r\n    },\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ClientRoutingModule{}","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\n\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n\r\n  form: FormGroup;\r\n  brands: any;\r\n  models: any;\r\n  chargerTypes: any;\r\n  vehicleTypes: any;\r\n  localStorage: any;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  errorMsg: String;\r\n  splitted: String;\r\n  constructor(private fb: FormBuilder, private masterService: MasterService,\r\n    private clientService: ClientService, private snackBar: MatSnackBar,\r\n    private router: Router, public countryService: CountriesService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode: ['', [Validators.required, Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]],\r\n      logoPath: [''],\r\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number: ['', [Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number: ['', [Validators.pattern('\\^[0-9]{11}$')]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getAllCity();\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        this.countries = data;\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (stateData: any) => {\r\n        this.states = stateData;\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getAllCity() {\r\n    this.countryService.getAllCities().subscribe(\r\n      (data: any) => {\r\n        this.cities = data;\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n      ////\r\n\r\n\r\n      let params = {\r\n        name: formValues.name,\r\n        description: formValues.description,\r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        cp_name: formValues.cp_name,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n        gst_no: formValues.gst_number,\r\n        tin_no: formValues.tin_number\r\n      }\r\n\r\n\r\n      this.clientService.create(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/clientManagement/crud/list']);\r\n          } else {\r\n            if (resp.err_code == \"ERROR : ER_DUP_ENTRY\") {\r\n              this.errorMsg = resp.message;\r\n              var index = this.errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this.errorMsg.substring(index + 1);\r\n              if (this.splitted == \"'name'\") {\r\n                this.snackBar.open(MessageConstant.clientDuplicate, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'mobile'\") {\r\n                this.snackBar.open(MessageConstant.mobileDuplicateClient, 'Dismiss', { duration: 5000 });\r\n              } if (this.splitted == \"'email'\") {\r\n                this.snackBar.open(MessageConstant.emailDuplicateClient, 'Dismiss', { duration: 5000 });\r\n              }\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n          }\r\n\r\n\r\n        },\r\n        (err) => {\r\n          ////\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    } else {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  onCityChange(event) {\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        <!-- <span matPrefix class=\"tooltiptext\">Please enter client name</span> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Contact Person Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"cp_name\" maxlength=\"50\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter contact person\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n        <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Mobile</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"mobile\" type=\"number\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile\">settings_cell</mat-icon>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"email\" required autocomplete=\"off\"\r\n          style=\"text-transform: none;\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">email</mat-icon>\r\n        <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>GST Number</mat-label>\r\n        <input matInput placeholder=\"GST Format(29ABCDF1234F2Z5)\" formControlName=\"gst_number\" autocomplete=\"off\"\r\n          maxlength=\"15\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"GST Format(29ABCDF1234F2Z5)\">help</mat-icon>\r\n        <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n        <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid GST number</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>TIN Number</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"tin_number\" autocomplete=\"off\" maxlength=\"11\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"TIN Number Format(01234567890)\">help</mat-icon>\r\n        <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid TIN number</mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 1</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Address Line 2</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n        <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Pin Code</mat-label>\r\n        <input matInput placeholder=\" \" formControlName=\"pincode\" type=\"number\" (change)=\"getStateCountry()\"\r\n          autocomplete=\"off\" required>\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n        </mat-error>\r\n        <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Country</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          required>\r\n        <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n          (optionSelected)='onCountryChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>State</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n        <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n          (optionSelected)='onStateChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>City</mat-label>\r\n        <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n        <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n          <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n        <div matSuffix style=\"display: flex;\">\r\n          <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n        </div>\r\n        <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Landmark</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"landmark\" maxlength=\"50\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n        <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n        (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" type=\"button\" class=\"mr-8\"\r\n        routerLink=\"/clientManagement/crud/list\">Cancel</button>\r\n    </div>\r\n\r\n\r\n\r\n  </form>\r\n</div>","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { VehicleService } from 'app/shared/services/master/vehicle/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n\r\n  constructor(private fb: FormBuilder, private clientService: ClientService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, public countryService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      cp_name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: [''],\r\n      addressLine1: [''],\r\n      addressLine2: [''],\r\n      landmark: [''],\r\n      city: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      pincode:['', [Validators.required ,Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$')]], \r\n      logoPath: [''],\r\n      mobile : ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]] ,\r\n      email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      gst_number:['',[Validators.pattern('\\^[0-9]{2}[a-z|A-Z]{5}[0-9]{4}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}[a-z|A-Z]{1}[0-9|a-z|A-Z]{1}$')]],\r\n      tin_number:['',[Validators.required,Validators.pattern('\\^[0-9]{11}$')]],\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    //this.getCountry();\r\n    this.getAllCountry();\r\n    this.getAllState(this.params.data.country_id);\r\n    this.getAllCity(this.params.data.state_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data: any) => {\r\n        //;\r\n        this.countries = data;\r\n        if (this.isEditMode) {\r\n          //;\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState(countryID){\r\n    this.countryService.getStateByCountry(countryID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.states = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n         \r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(stateID){\r\n    //this.getCitiesByStatesOnInit(state_id);\r\n    this.countryService.getCityByState(stateID).subscribe(\r\n      (data:any)=>{\r\n        //;\r\n        this.cities = data;\r\n        if(this.isEditMode){\r\n          //;\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n         \r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n          startWith(''),\r\n          //tap(() => this.form.controls.chargingModel.setValue(toSelect)),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        }\r\n        \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n\r\n      const params: any = {\r\n  \r\n        name: formValues.name,\r\n        cp_name: formValues.cp_name,\r\n        description: formValues.description,\r\n  \r\n        logoPath: formValues.logoPath,\r\n        mobile: formValues.mobile,\r\n        email: formValues.email,\r\n        address1: formValues.addressLine1,\r\n        address2: formValues.addressLine2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.landmark,\r\n        city_id: formValues.city.id,\r\n        state_id: formValues.state.id,\r\n        country_id: formValues.country.id,\r\n        status: this.status == true ? 'Y' : 'N'\r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n      if (this.isEditMode) {\r\n         this.clientService.update(params).subscribe(\r\n           (data: any) => {\r\n             this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n             this.dialogRef.close();\r\n           },\r\n           (err) => {\r\n             this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n           }\r\n         )\r\n      } else {\r\n        this.clientService.create(params).subscribe(\r\n          (data: any) => {\r\n            this.snackBar.open(MessageConstant.clientCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n  \r\n      }\r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('cp_name').setValue(params.data.cp_name);\r\n    this.form.get('description').setValue(params.data.description);\r\n\r\n    this.form.get('logoPath').setValue(params.data.logoPath);\r\n    this.form.get('mobile').setValue(params.data.mobile);\r\n    this.form.get('email').setValue(params.data.email);\r\n    this.form.get('addressLine1').setValue(params.data.address1);\r\n    this.form.get('addressLine2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('city').setValue(params.data.city_id);\r\n    this.form.get('state').setValue(params.data.state_id);\r\n    this.form.get('country').setValue(params.data.country_id);\r\n    this.form.get('landmark').setValue(params.data.landmark);\r\n    this.form.get('gst_number').setValue(params.data.gst_no);\r\n    this.form.get('tin_number').setValue(params.data.tin_no);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode;\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (data: any) => {\r\n        //this.form.reset();\r\n        if (data != undefined && data != null && data.length > 0) {\r\n          this.state_id = data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata;\r\n                  const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue(\"\");\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        this.cities = citiesdata;\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Client</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\" mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"200\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Contact Person Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"cp_name\" maxlength=\"50\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('required')\">Please enter contact person</mat-error>\r\n          <mat-error *ngIf=\"form.get('cp_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"mobile\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">settings_cell</mat-icon>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"email\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">email</mat-icon>\r\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">Please enter email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">Please enter valid email\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>GST Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"gst_number\" readonly autocomplete=\"off\" maxlength=\"15\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter GST number\">help</mat-icon>\r\n          <!-- <mat-error *ngIf=\"form.get('gst_number').hasError('required')\">Please enter GST number</mat-error> -->\r\n          <mat-error *ngIf=\"form.get('gst_number').hasError('pattern')\">Please enter valid 15 digit GST\r\n            number</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>TIN Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"tin_number\" readonly autocomplete=\"off\" maxlength=\"11\"\r\n            type=\"number\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter TIN number\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('required')\">Please enter TIN number</mat-error>\r\n          <mat-error *ngIf=\"form.get('tin_number').hasError('pattern')\">Please enter valid 11 digit TIN\r\n            number</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"addressLine1\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput readonly placeholder=\"\" formControlName=\"addressLine2\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('addressLine2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n          <input matInput readonly placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\"\r\n            autocomplete=\"off\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"country\" autocomplete=\"off\"\r\n            [matAutocomplete]=\"countryAuto\" required>\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center \" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput readonly formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n            required>\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" readonly matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n            required>\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city\r\n          </mat-error>\r\n        </mat-form-field>\r\n        \r\n      </div>\r\n      <div fxLayout=\"row \" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"landmark\" maxlength=\"50\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-slide-toggle fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\" [checked]=\"status\" disabled\r\n          (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-client-crud',\r\n  templateUrl: './client-crud.component.html',\r\n  styleUrls: ['./client-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ClientCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Clients', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  tempLinks = [];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  dyanmictab: any;\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"clientManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"crud\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"list\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Clients', link: 'list' });\r\n                  }\r\n                  if (z.id === \"create\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n              }\r\n             \r\n              this.tabLinks = this.tempLinks;\r\n              if (!isDefaultRoutePermeted) {\r\n                this.router.navigate(['/clientManagement/crud/' + this.tempLinks[0].link]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}} \r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n"]}