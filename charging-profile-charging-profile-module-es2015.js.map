{"version":3,"sources":["./src/app/main/logs-history/charging-profile/view-dialog/view-dialog.component.ts","./src/app/main/logs-history/charging-profile/view-dialog/view-dialog.component.html","./src/app/main/logs-history/charging-profile/charging-profile-crud/routes.ts","./src/app/main/logs-history/charging-profile/addItem-dialog/addItem-dialog.component.ts","./src/app/main/logs-history/charging-profile/addItem-dialog/addItem-dialog.component.html","./src/app/main/logs-history/charging-profile/charging-profile-routing.module.ts","./src/app/main/logs-history/charging-profile/charging-profile.module.ts","./src/app/main/logs-history/charging-profile/list/list.component.ts","./src/app/main/logs-history/charging-profile/list/list.component.html","./src/app/main/logs-history/charging-profile/charging-profile-crud/charging-profile-crud.component.ts","./src/app/main/logs-history/charging-profile/charging-profile-crud/charging-profile-crud.component.html","./src/app/main/logs-history/charging-profile/action-dialog/action-dialog.component.ts","./src/app/main/logs-history/charging-profile/action-dialog/action-dialog.component.html","./src/app/main/logs-history/charging-profile/create/create.component.ts","./src/app/main/logs-history/charging-profile/create/create.component.html"],"names":[],"mappings":"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","file":"charging-profile-charging-profile-module-es2015.js","sourcesContent":["import { Component, OnInit, Inject, ElementRef, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, FormControl, FormArray } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ChargingProfileService } from 'app/shared/services/charging-profile/charging-profile.service';\r\nimport { AddItemDialogComponent } from '../addItem-dialog/addItem-dialog.component';\r\n\r\nexport interface ChargingProfileSchedule{\r\n  id:number;\r\n  charging_schedule_id:number;\r\n  scheduleData:ChargingSchedulePeriod[]\r\n  status:string;\r\n  created_by:number;\r\n  modifyby:number;\r\n}\r\nexport interface ChargingSchedulePeriod{\r\n  id:number;\r\n  start_period:number;\r\n  limit:number;\r\n  numberof_phase_id:number;\r\n}\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  selectedIndex = 0;\r\n  isFirstTab = true;\r\n  isSecondTab = true;\r\n  chargingProfId: any;\r\n  charProf_forms: FormGroup;\r\n  localStorage: any;\r\n  charProfPurpose: any;\r\n  recurKind: any;\r\n  profileKind: any;\r\n  params: any;\r\n  filteredOptionsCharProfPurp: Observable<any[]>;\r\n  filteredOptionsRecurKind: Observable<any[]>;\r\n  filteredOptionsProfileKind: Observable<any[]>;\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  minDate = new Date();\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  scheduleTab: boolean = false;\r\n  periodTab: boolean = false;\r\n  isEditMode = false;\r\n  status = true;\r\n  tempDate = new Date();\r\n  currDate: any = new Date();\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  //messageConstant = MessageConstant;\r\n  charSchud_forms: FormGroup;\r\n  charRateUnit: any;\r\n  @ViewChild(\"toggleElement2\") ref2: any;\r\n  filteredOptionsCharRate: Observable<any[]>;\r\n  char_ProfileID: any;\r\n  sched_tab: boolean = false;\r\n  status2 = true;\r\n\r\n  schPerio_forms: FormGroup;\r\n  num_Phases: any;\r\n  @ViewChild(\"toggleElement3\") ref3: any;\r\n  status3 = true;\r\n  filteredOptionsNumPhases: Observable<any[]>;\r\n  menuArray: any;\r\n  schu_PeriodData:any;\r\n  char_SchudData:any;\r\n  SchPeriodStatus:string;\r\n  cancleBtn = false;\r\n\r\n  constructor(private fb: FormBuilder, private chargingProfileService: ChargingProfileService,\r\n    private dateService: DateService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,\r\n    public dialog: MatDialog,private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    //const fgroup = this.createAddPerForm();\r\n    this.params = this.data;\r\n    this.chargingProfId = this.params.data.chargingProfileId;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.charProf_forms = this.fb.group({\r\n      stack_level: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      char_proName: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      char_profKind: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      charg_profPur: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      recur_kind: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      toDate: [''],\r\n      fromDate: [''],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.charSchud_forms = this.fb.group({\r\n      duration: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      charging_rate_unit: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      start_schedule: [new Date()],\r\n      charge_rate: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      status2: this.status2 == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.schPerio_forms = this.fb.group({\r\n      periodForm : this.fb.array([]),\r\n      status3: this.status3 == true ? 'Y' : 'N'\r\n     \r\n    });\r\n    if (this.isEditMode) {\r\n      this.getChargingProgilePurpose();\r\n      this.getChargingRecurrencyKind();\r\n      this.getChargingProfileKind();\r\n      this.assignValuesCharProfile(this.params);\r\n      this.assignValuesCharSchedule(this.params);\r\n      this.getChargingRateUnit();\r\n      //this.assignValuesCharPeriod(this.params);\r\n      this.getNum_Phases();\r\n    } \r\n\r\n  }\r\n\r\n  createAddPerForm() {\r\n    return this.fb.group({\r\n      id: new FormControl(''),\r\n      start_period: new FormControl('',[Validators.required, Validators.pattern(/^[0-9]*$/)]),\r\n      limit: new FormControl('',[Validators.required, Validators.pattern(/^[0-9]*$/)]),\r\n      num_phases: new FormControl(''),\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  onTabChange(event) {\r\n    this.selectedIndex = event.index;\r\n  }\r\n  assignValuesCharProfile(params) {\r\n    this.charProf_forms.get('stack_level').setValue(params.data.stack_level);\r\n    this.charProf_forms.get('char_proName').setValue(params.data.charging_profile_name);\r\n    this.charProf_forms.get('toDate').setValue(params.data.validTo);\r\n    this.charProf_forms.get('fromDate').setValue(params.data.validFrom);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n  assignValuesCharSchedule(params) {\r\n    this.getScheduleByProfileId(params.data.chargingProfileId);\r\n }\r\n\r\n  \r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  updateCharProfile() {\r\n    this.isFirstTab = false;\r\n    this.selectedIndex += 1;\r\n  }\r\n\r\n  getChargingProgilePurpose() {\r\n    this.chargingProfileService.getChargingProfilePurpose().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.charProfPurpose = resp.data;\r\n          if (this.isEditMode) {\r\n            const toSelect = this.charProfPurpose.find(c => c.value == this.params.data.chargingProfilePurpose);\r\n            this.charProf_forms.get('charg_profPur').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsCharProfPurp = this.charProf_forms.controls.charg_profPur.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(name => name ? this._filterCharProfPurpose(name) : this.charProfPurpose)\r\n          );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n  private _filterCharProfPurpose(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charProfPurpose.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharProfPur(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  getChargingRecurrencyKind() {\r\n    this.chargingProfileService.getRecurrencyKind().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.recurKind = resp.data;\r\n          if (this.isEditMode) {\r\n            const toSelect = this.recurKind.find(c => c.value == this.params.data.recurrencyKind);\r\n            this.charProf_forms.get('recur_kind').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsRecurKind = this.charProf_forms.controls.recur_kind.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(name => name ? this._filterCharRecurKind(name) : this.recurKind)\r\n          );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n  }\r\n  private _filterCharRecurKind(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.recurKind.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharRecurKind(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n\r\n  getChargingProfileKind() {\r\n    this.chargingProfileService.getChargingProfileKind().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.profileKind = resp.data;\r\n          if (this.isEditMode) {\r\n            const toSelect = this.profileKind.find(c => c.value == this.params.data.chargingProfileKind);\r\n            this.charProf_forms.get('char_profKind').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsProfileKind = this.charProf_forms.controls.char_profKind.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(name => name ? this._filterCharProfileKind(name) : this.profileKind)\r\n          );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n  private _filterCharProfileKind(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.profileKind.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharProfileKind(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n\r\n  //tab-2\r\n  updateCharSchedule() {\r\n    if(this.char_SchudData != undefined && this.char_SchudData != null){\r\n        if(this.schu_PeriodData != undefined && this.schu_PeriodData != null){\r\n          this.isSecondTab = false;\r\n          this.selectedIndex += 1;\r\n        }else{\r\n          this.isSecondTab = true\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 5000 })\r\n          this.cancleBtn = true\r\n        }\r\n    }else{\r\n      this.isSecondTab = true\r\n      this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 5000 })\r\n      this.cancleBtn = true\r\n    }\r\n    \r\n  }\r\n\r\n  getChargingRateUnit() {\r\n    this.chargingProfileService.getChargingRateUnit().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.charRateUnit = resp.data;\r\n          if (this.isEditMode) {\r\n\r\n            if(this.char_SchudData != undefined && this.char_SchudData.charging_rate_unit_id != undefined){\r\n              const toSelect = this.charRateUnit.find(c => c.id == this.char_SchudData.charging_rate_unit_id); //this.char_SchudData.charging_rate_unit_id //this.params.data.ChargingRateUnit\r\n              this.charSchud_forms.get('charging_rate_unit').setValue(toSelect);\r\n            }\r\n          }\r\n          this.filteredOptionsCharRate = this.charSchud_forms.controls.charging_rate_unit.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.value),\r\n            map(name => name ? this._filterCharRateUnit(name) : this.charRateUnit)\r\n          );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  private _filterCharRateUnit(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charRateUnit.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharRate(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  updateStatus2(event) {\r\n    this.status2 = event.checked;\r\n    this.ref2.checked = this.status2;\r\n  }\r\n\r\n  //tab-3\r\n\r\n  updateSchuPeriod() {\r\n    this.dialogRef.close();\r\n  }\r\n  getNum_Phases() {\r\n    this.chargingProfileService.getNumberPhases().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.num_Phases = resp.data;\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  updateStatus3(event) {\r\n    this.status3 = event.checked;\r\n    this.ref3.checked = this.status3;\r\n  }\r\n\r\n  addItem(){\r\n    const PERform = this.schPerio_forms.get('periodForm') as FormArray;\r\n    //const fgroup = this.createAddPerForm();\r\n    PERform.push(this.createAddPerForm());\r\n  }\r\n  setStartPeriod(i) {  \r\n    const dialogRef = this.dialog.open(AddItemDialogComponent, {\r\n      width: '600px',\r\n      data: {i},\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n      //position: {top: '0%', left:'10%'}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined && result != 0 ){ \r\n          const formPre = this.schPerio_forms.get('periodForm') as FormArray;\r\n          formPre.controls[i].get('start_period').setValue(result);\r\n          //this.schPerio_forms.get('periodForm')['controls']\r\n          this.cdr.detectChanges();\r\n        }else{\r\n          return;\r\n        }\r\n      \r\n    });\r\n  }\r\n  removevalue(i){\r\n    const formRemove = this.schPerio_forms.get('periodForm') as FormArray\r\n   if (formRemove.length > 1) {\r\n     formRemove.removeAt(i)\r\n   } else {\r\n     formRemove.reset()\r\n   }\r\n }\r\n\r\n getScheduleByProfileId(charProfileId){\r\n  this.chargingProfileService.getChargerScheduleByProfileId(charProfileId).subscribe(\r\n    (resp:any) => {\r\n      if(resp.status == true){\r\n         this.char_SchudData = resp.data[0];\r\n         this.charSchud_forms.get('duration').setValue(this.char_SchudData.duration);\r\n         this.charSchud_forms.get('start_schedule').setValue(this.char_SchudData.start_schedule);\r\n         //this.charSchud_forms.get('charging_rate_unit').setValue(this.char_SchudData.charging_rate_unit_id);\r\n         this.charSchud_forms.get('charge_rate').setValue(this.char_SchudData.mincharging_rate);\r\n         this.status2 = this.char_SchudData.status == 'Y' ? true : false;\r\n         this.getSchedulePeriodByScheduleId(this.char_SchudData.id);\r\n         this.getChargingRateUnit()\r\n      }\r\n    },(error) =>{\r\n\r\n    }\r\n  );\r\n}\r\n\r\n getSchedulePeriodByScheduleId(charSchudId){\r\n  this.chargingProfileService.getChargerSchedulePeriodByScheduleId(charSchudId).subscribe(\r\n    (resp:any) => {\r\n      if(resp.status == true){\r\n          this.schu_PeriodData =  resp.data\r\n          const formPeriod = this.schPerio_forms.get('periodForm') as FormArray;\r\n          for(var i=0; i< this.schu_PeriodData.length; i++){ \r\n            this.SchPeriodStatus = this.schu_PeriodData[i].status;\r\n             const childForm =   this.createAddPerForm();\r\n             formPeriod.push(childForm);\r\n             formPeriod.controls[i].get('id').setValue(this.schu_PeriodData[i].id);\r\n             formPeriod.controls[i].get('start_period').setValue(this.schu_PeriodData[i].start_period);\r\n             formPeriod.controls[i].get('limit').setValue(this.schu_PeriodData[i].period_limit);\r\n             formPeriod.controls[i].get('num_phases').setValue(this.schu_PeriodData[i].numberof_phase_id);\r\n          }\r\n          this.status3 = this.SchPeriodStatus == 'Y' ? true : false;\r\n      }\r\n\r\n    },(error) =>{\r\n\r\n    }\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"max-height: 22vw;overflow: auto;\">\r\n\r\n  <mat-tab-group [selectedIndex]=\"selectedIndex\" (selectedTabChange)=\"onTabChange($event)\" class=\"pt-0 pb-0 mt-0 mb-0\">\r\n\r\n    <!-- tab-1 -->\r\n    <mat-tab label=\"Create Charging Profile\">\r\n      <div id=\"charProf_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n        <form [formGroup]=\"charProf_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Stack Level</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"stack_level\" type=\"number\" min=\"0\" readonly\r\n                autocomplete=\"off\" id=\"stack_level\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charProf_forms.get('stack_level').hasError('required')\">Please enter stack level\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charProf_forms.get('stack_level').hasError('pattern')\">Special character are not allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Kind</mat-label>\r\n              <input type=\"text\" readonly matInput formControlName=\"char_profKind\" id=\"chargerCreateCModel\"\r\n                [matAutocomplete]=\"chargingProfAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charging profile kind\">help\r\n                </mat-icon>\r\n              </div>\r\n              <mat-autocomplete #chargingProfAuto=\"matAutocomplete\" [displayWith]=\"displayCharProfileKind\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsProfileKind | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_profKind').hasError('required')\">Please select charging profile\r\n                kind\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Name</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"char_proName\" type=\"search\" maxlength=\"50\" readonly\r\n                autocomplete=\"off\" id=\"char_proName\">\r\n              <mat-error *ngIf=\"charProf_forms.get('char_proName').hasError('required')\">Please enter charging profile\r\n                name\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_proName').hasError('pattern')\">Special character are not\r\n                allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Recurrency Kind</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"recur_kind\" required id=\"recur_kind\"\r\n                [matAutocomplete]=\"recuKindAuto\" type=\"search\" autocomplete=\"off\" readonly>\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select recurrency kind \">help</mat-icon>\r\n              </div>\r\n              <mat-autocomplete #recuKindAuto=\"matAutocomplete\" [displayWith]=\"displayCharRecurKind\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsRecurKind | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_profKind').hasError('required')\">Please select recurrency kind\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Purpose</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"charg_profPur\" required id=\"charg_profPur\"\r\n                [matAutocomplete]=\"profPurposeAuto\" type=\"search\" autocomplete=\"off\" readonly>\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging profile purpose \">help\r\n                </mat-icon>\r\n              </div>\r\n              <mat-autocomplete #profPurposeAuto=\"matAutocomplete\" [displayWith]=\"displayCharProfPur\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsCharProfPurp | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('charg_profPur').hasError('required')\">Please select charging profile\r\n                purpose\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"23\" class=\"pr-4\">\r\n              <mat-label>Valid From</mat-label>\r\n              <input matInput [ngxMatDatetimePicker]=\"fDate\" formControlName=\"fromDate\" [min]=\"minDate\" [max]=\"maxDate\"\r\n                [disabled]=\"disabled\" readonly>\r\n\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon class=\"secondary-text\" matTooltip=\"Please enter valid from date and time\">help</mat-icon>\r\n                <mat-icon mat-icon-button type=\"button\" (click)=\"fDate.open(); $event.stopPropagation();\">today\r\n                </mat-icon>\r\n              </div>\r\n              <ngx-mat-datetime-picker #fDate [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n                [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n                [enableMeridian]=\"enableMeridian\">\r\n              </ngx-mat-datetime-picker>\r\n              <mat-error *ngIf=\"charProf_forms.get('fromDate').invalid\">Please enter valid from date and time\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"23\" class=\"pr-4\">\r\n              <mat-label>Valid To</mat-label>\r\n              <input matInput [ngxMatDatetimePicker]=\"tDate\" formControlName=\"toDate\" [min]=\"minDate\" [max]=\"maxDate\"\r\n                [disabled]=\"disabled\" readonly>\r\n\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon class=\"secondary-text\" matTooltip=\"Please enter valid to date and time\">help</mat-icon>\r\n                <mat-icon mat-icon-button type=\"button\" (click)=\"tDate.open(); $event.stopPropagation();\">today\r\n                </mat-icon>\r\n              </div>\r\n              <ngx-mat-datetime-picker #tDate [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n                [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n                [enableMeridian]=\"enableMeridian\">\r\n              </ngx-mat-datetime-picker>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement [disabled]=\"true\">\r\n              {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"updateCharProfile()\">\r\n              {{isEditMode? 'Save' : 'Save'}}</button> -->\r\n            <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"updateCharProfile()\">View\r\n              Next</button>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n    <!-- tab-2 -->\r\n    <mat-tab label=\"Create Charging Schedule\" [disabled]=\"isFirstTab\">\r\n      <div id=\"charSchud_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"charSchud_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"charSchud_forms\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Duration</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"duration\" type=\"number\" min=\"0\" readonly\r\n                autocomplete=\"off\" id=\"duration\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <!-- <mat-icon matSuffix class=\"secondary-text\">add_circle</mat-icon> -->\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('duration').hasError('required')\">Please enter duration</mat-error>\r\n              <mat-error *ngIf=\"charSchud_forms.get('duration').hasError('pattern')\">Only number is allowd</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Rate Unit</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"charging_rate_unit\" id=\"charging_rate_unit\"\r\n                [matAutocomplete]=\"charRateAuto\" type=\"search\" autocomplete=\"off\" readonly>\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charging rate unit\">help</mat-icon>\r\n              </div>\r\n              <mat-autocomplete #charRateAuto=\"matAutocomplete\" [displayWith]=\"displayCharRate\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsCharRate | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charging_rate_unit').hasError('required')\">Please enter charging\r\n                rate unit\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Start Schedule</mat-label>\r\n              <input matInput [matDatepicker]=\"dp3\" formControlName=\"start_schedule\" disabled>\r\n              <div matSuffix style=\"display: flex;\" readonly>\r\n                <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter start schedule\">help\r\n                </mat-icon>\r\n                <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('start_schedule').invalid\">Please enter start schedule</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Min Charge Rate</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"charge_rate\" type=\"number\" min=\"0\" maxlength=\"50\" autocomplete=\"off\"\r\n                id=\"charge_rate\" readonly>\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter min charger rate\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charge_rate').hasError('required')\">Please enter min charger rate only number is allowed\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charge_rate').hasError('pattern')\">Special character are not\r\n                allowed</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status2\" (change)=\"updateStatus2($event)\" #toggleElement2 [disabled]=\"true\">\r\n              {{status2 ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"updateCharSchedule()\">\r\n              {{isEditMode? 'Save' : 'Save'}}</button> -->\r\n            <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"updateCharSchedule()\">View\r\n              Next</button>\r\n              <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\" *ngIf=\"cancleBtn\">Cancel</button>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n    <!-- tab-3 -->\r\n    <mat-tab label=\"Create Schedule Period\" [disabled]=\"isSecondTab\">\r\n      <div id=\"schPerio_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"schPerio_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"schPerio_forms\">\r\n\r\n          <div formArrayName=\"periodForm\">\r\n            <div *ngFor=\"let period of schPerio_forms.get('periodForm')['controls']; let i = index;\" [formGroupName]=\"i\">\r\n\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Start Period(Sec)</mat-label>\r\n                  <input matInput formControlName=\"start_period\" type=\"number\" min=\"0\"  autocomplete=\"off\" readonly>\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter start period\">help</mat-icon>\r\n                  </div>\r\n                  <!-- <mat-error *ngIf=\"period.get('start_period').hasError('required')\">Please enter start period\r\n                  </mat-error> -->\r\n                  <!-- <mat-error *ngIf=\"period.get('start_period').hasError('pattern')\">Only number is allowed\r\n                  </mat-error> -->\r\n                </mat-form-field>\r\n                <!-- <div fxFlex=\"1\" hidden>\r\n                  <mat-icon  matTooltip=\"Set start period\" (click)=\"setStartPeriod(i)\" \r\n                  style=\"font-size: 2rem;color: darkcyan;float: right; margin-bottom: 1.5rem;\">add_circle</mat-icon>\r\n                </div> -->\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Limit</mat-label>\r\n                  <input matInput placeholder=\"\" formControlName=\"limit\" type=\"number\" min=\"0\" \r\n                    autocomplete=\"off\" readonly>\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter limit\">help\r\n                    </mat-icon>\r\n                  </div>\r\n                </mat-form-field>\r\n\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Number Phases</mat-label>\r\n                  <mat-select formControlName=\"num_phases\" disabled>\r\n                    <mat-option *ngFor=\"let option of num_Phases\" [value]=\"option.id\" >\r\n                      {{option.value}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select number phases\">help\r\n                  </mat-icon>\r\n                  <!-- <input type=\"text\" matInput formControlName=\"num_phases\" required id=\"num_phases\"\r\n                    [matAutocomplete]=\"numPhasesAuto\" type=\"search\" autocomplete=\"off\" readonly>\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select number phases\">help\r\n                    </mat-icon>\r\n                  </div>\r\n                  <mat-autocomplete #numPhasesAuto=\"matAutocomplete\" [displayWith]=\"displayNumPhases\">\r\n                    <mat-option *ngFor=\"let option of filteredOptionsNumPhases | async\" [value]=\"option\">\r\n                      {{option.value}}\r\n                    </mat-option>\r\n                  </mat-autocomplete> -->\r\n                  <!-- <mat-error *ngIf=\"period.get('num_phases').hasError('required')\">Please select number phases\r\n                  </mat-error> -->\r\n                </mat-form-field>\r\n\r\n                <!-- <div fxFlex=\"5\" class=\"pr-4\" hidden=\"true\">\r\n                  <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"removevalue(i)\" style=\"cursor:pointer;margin-bottom: 2rem !important;\">delete\r\n                  </mat-icon>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status3\" (change)=\"updateStatus3($event)\" #toggleElement3 [disabled]=\"true\">\r\n              {{status3 ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n              <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n\r\n  </mat-tab-group>\r\n\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\n\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent ,canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn,AbstractControl} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith,tap} from 'rxjs/operators';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addItem-dialog',\r\n  templateUrl: './addItem-dialog.component.html',\r\n  styleUrls: ['./addItem-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\n\r\n\r\nexport class AddItemDialogComponent implements OnInit {\r\n \r\n\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n  valuedilog = {\r\n    seat1: undefined,\r\n    seat2: undefined,\r\n    totelSec:undefined\r\n  }\r\n //totelSec:any;\r\n\r\n  \r\n  @ViewChild(\"toggleElement\") ref: any;\r\n \r\n  \r\n  //messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder,  private dateService : DateService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<AddItemDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    //this.params = this.data;\r\n    //this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      hours: ['', [Validators.pattern(/^[0-9]*$/),Validators.max(24),Validators.min(0)]],\r\n      minute: ['', [Validators.required, Validators.pattern(/^[0-9]*$/),]],\r\n      \r\n    });\r\n    this.form.get('hours').setValue(0);\r\n    this.form.get('minute').setValue(0);\r\n\r\n  \r\n  }\r\n  \r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  seat1Modified(event): void {\r\n      let minute = 60 * event.value.key;\r\n      let second = 60 * event.value.key;\r\n      //this.form.get('minute').setValue(minute);\r\n      //value.seat2 = minute ;\r\n      event.totelSec = minute + second;\r\n    \r\n  }\r\n\r\n  addSeconds(){\r\n    let hours = this.form.get('hours').value;\r\n    let minute = this.form.get('minute').value;\r\n    var totalSec =  ( ( (hours *60) + minute) *60 );\r\n    this.dialogRef.close(totalSec);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">Add Item</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 22vw;overflow: auto;\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Hours</mat-label>\r\n          <input matInput  formControlName=\"hours\" type=\"number\" min=\"0\" max=\"24\"  autocomplete=\"off\">\r\n           <mat-error *ngIf=\"form.get('hours').hasError('max')\">Maximum value is not greater then equal 24\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('hours').hasError('min')\">Maximum value is not greater then equal 0\r\n          </mat-error>\r\n          <!-- <mat-error *ngIf=\"form.get('hour').hasError('required')\">Please enter hours</mat-error>\r\n          <mat-error *ngIf=\"form.get('hour').hasError('pattern')\">Only number is allowed</mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Minute</mat-label>\r\n          <input matInput  formControlName=\"minute\"    type=\"number\" min=\"0\" required autocomplete=\"off\" >\r\n          <!-- <mat-error *ngIf=\"form.get('minute').hasError('required')\">Please enter minute</mat-error>\r\n          <mat-error *ngIf=\"form.get('minute').hasError('pattern')\">Only number is allowed</mat-error> -->\r\n        </mat-form-field>\r\n        \r\n      </div>\r\n      <!-- <div *ngFor=\"let val of newRow; let i = index\"> \r\n        <input type=\"text\" [(ngModel)]=\"val.value\" #name=\"ngModel\" name=\"value{{i}}\">\r\n        <button (click)=\"removevalue(i)\">Remove</button>\r\n      </div> -->\r\n      \r\n      \r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;;\">\r\n        <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n                (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n        <button mat-raised-button type=\"button\" color=\"primary\" class=\"mr-8\" (click)=\"addSeconds()\" [disabled]=\"!form.valid\" >Add</button>\r\n        <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargingProfileCrudComponent } from './charging-profile-crud/charging-profile-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './charging-profile-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ChargingProfileCrudComponent, children : TABS_DEMO_ROUTES\r\n    },\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ChargingProfileRoutingModule{}","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ChargingProfileRoutingModule } from './charging-profile-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ChargingProfileCrudComponent } from './charging-profile-crud/charging-profile-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { AddItemDialogComponent } from './addItem-dialog/addItem-dialog.component';\r\nimport {\r\n    NgxMatDatetimePickerModule, \r\n    NgxMatNativeDateModule, \r\n    NgxMatTimepickerModule ,\r\n    NgxMatDateFormats,\r\n    NGX_MAT_DATE_FORMATS,\r\n    NgxMatDateAdapter,\r\n    \r\n  } from '@angular-material-components/datetime-picker';\r\nconst COMPONENTS =[ChargingProfileCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent,AddItemDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ChargingProfileRoutingModule,FuseSharedModule,NgxMatDatetimePickerModule, \r\n        NgxMatNativeDateModule, \r\n        NgxMatTimepickerModule ,],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargingProfile{}","\r\nimport { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { ChargingProfileService } from 'app/shared/services/charging-profile/charging-profile.service';\r\n\r\nexport class ChargingProfile {\r\n  chargingProfileId: string;\r\n  stack_level:number;\r\n  schedule_id:number;\r\n  schedule_period_id:number;\r\n  charging_profile_name: string;\r\n  validFrom: string;\r\n  validTo: string;\r\n  duration: string;\r\n  startSchedule: string;\r\n  minChargingRate: string;\r\n  startPeriod: string;\r\n  limit: string;\r\n  numberPhases: string;\r\n  ChargingRateUnit: string;\r\n  chargingProfilePurpose: string;\r\n  chargingProfileKind: string;\r\n  recurrencyKind: string;\r\n  status: string;\r\n  statusString: string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: ChargingProfile;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['charging_profile_name','stack_level', 'chargingProfilePurpose', 'chargingProfileKind','status','action'];\r\n  head = [['Charging Profile Name','Stack Level', 'Charging Profile Kind','Charging Profile Purpose',  'Recurrency Kind','Duration',\r\n    'Number Phase','Min Charging Rate','Charging Rate Unit','Status']];\r\n\r\n  dataSource: MatTableDataSource<ChargingProfile>;\r\n\r\n  chargingProList: ChargingProfile[];\r\n  localStorage: any;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  dialogRef: any;\r\n  charProNameSearch = false;\r\n  charProPurSearch = false;\r\n  recuKindSearch = false;\r\n  durationSearch = false;\r\n  numPhasesSearch =false;\r\n  charProfKindSearch = false;\r\n  stack_levelSearch= false;\r\n  statusSearch =false;\r\n  exportedData: any[];\r\n  constructor(private clientService: ClientService, public dialog: MatDialog, private chargingProfileService: ChargingProfileService,\r\n    private snackBar: MatSnackBar,private cdr: ChangeDetectorRef) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getChargingProfile();\r\n    this.filterEntity = new ChargingProfile();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getChargingProfile() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.chargingProfileService.getAllChargingProfileList().subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.chargingProList = resp.data;\r\n          for (var i = 0; i < this.chargingProList.length; i++) {\r\n            if (this.chargingProList[i].status == 'N') {\r\n              this.chargingProList[i].statusString = 'Inactive';\r\n            } else {\r\n              this.chargingProList[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.chargingProList);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      },\r\n      (err) => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.chargingProfileService.chargingProfileDelete(id,this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if(resp.status == true){\r\n              this.getChargingProfile();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 2000 });\r\n              this.cdr.detectChanges();\r\n            }else{\r\n                this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n            }\r\n            \r\n          }, (err) => {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true, \r\n      panelClass: 'app-action-dialog',   \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getChargingProfile();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n  viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1200px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getChargingProfile();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption) {\r\n    if (visibleOption == 'charProNameSearch') {\r\n      this.charProNameSearch = !this.charProNameSearch;\r\n      this.filterEntity.charging_profile_name = '';\r\n    }\r\n    if (visibleOption == 'charProfKindSearch') {\r\n      this.charProfKindSearch = !this.charProfKindSearch;\r\n      this.filterEntity.chargingProfileKind = '';\r\n    }\r\n    if (visibleOption == 'charProPurSearch') {\r\n      this.charProPurSearch = !this.charProPurSearch;\r\n      this.filterEntity.chargingProfilePurpose = '';\r\n    }\r\n\r\n    if (visibleOption == 'recuKindSearch') {\r\n      this.recuKindSearch = !this.recuKindSearch;\r\n      this.filterEntity.recurrencyKind = '';\r\n    }\r\n\r\n    if (visibleOption == 'durationSearch') {\r\n      this.durationSearch = !this.durationSearch;\r\n      this.filterEntity.duration = '';\r\n    }\r\n    if (visibleOption == 'numPhasesSearch') {\r\n      this.numPhasesSearch = !this.numPhasesSearch;\r\n      this.filterEntity.numberPhases = '';\r\n    }\r\n    if (visibleOption == 'stack_levelSearch') {\r\n      this.stack_levelSearch = !this.stack_levelSearch;\r\n      this.filterEntity.stack_level = null;\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = null;\r\n    }\r\n  }\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargingProf = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {\r\n        'Charging Profile Name': chargingProf.charging_profile_name,'Stack Level': chargingProf.stack_level, 'Charging Profile Kind': chargingProf.chargingProfileKind,\r\n        'Charging Profile Purpose': chargingProf.chargingProfilePurpose, 'Recurrency Kind': chargingProf.recurrencyKind, 'Duration': chargingProf.duration,\r\n        'Number Phases': chargingProf.numberPhases, 'Min Charging Rate': chargingProf.minChargingRate, 'Charging Rate Unit': chargingProf.ChargingRateUnit,\r\n        'Valid From': chargingProf.validFrom, 'Valid To': chargingProf.validTo, 'Start Schedule': chargingProf.startSchedule,'Status': chargingProf.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'Charging Profile List');\r\n    XLSX.writeFile(workBook, 'Charging Profile.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chargingProf = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [chargingProf.charging_profile_name,chargingProf.stack_level, chargingProf.chargingProfileKind, chargingProf.chargingProfilePurpose,\r\n      chargingProf.recurrencyKind,chargingProf.duration,chargingProf.numberPhases,chargingProf.minChargingRate,chargingProf.ChargingRateUnit,\r\n      chargingProf.statusString]; //chargingProf.validFrom,chargingProf.validTo,chargingProf.startSchedule,\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Charging Profile List Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not for Public use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Charging Profile List report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\")\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n\r\n                <ng-container matColumnDef=\"charging_profile_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charProNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charging Profile\r\n                            Name <mat-icon matSuffix (click)=\"changeVisibility('charProNameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"charProNameSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charging Profile Name\" [(ngModel)]=\"filterEntity.charging_profile_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charProNameSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charging_profile_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"stack_level\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!stack_levelSearch\" class=\"custom_font_size\" style=\"display: flex;\">Stack Level\r\n                             <mat-icon matSuffix (click)=\"changeVisibility('stack_levelSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"stack_levelSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charging Profile Name\" [(ngModel)]=\"filterEntity.stack_level\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('stack_levelSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.stack_level}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"chargingProfilePurpose\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charProPurSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charging Profile Purpose\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charProPurSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"charProPurSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charging Profile Purpose \" [(ngModel)]=\"filterEntity.chargingProfilePurpose\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charProPurSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.chargingProfilePurpose}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"chargingProfileKind\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!charProfKindSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charging Profile Kind\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('charProfKindSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"charProfKindSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charging Profile Kind\" [(ngModel)]=\"filterEntity.chargingProfileKind\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('charProfKindSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.chargingProfileKind}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"recurrencyKind\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!recuKindSearch\" class=\"custom_font_size\" style=\"display: flex;\">Recurrency Kind\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('recuKindSearch',$event)\">\r\n                                search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"recuKindSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Recurrency Kind\" [(ngModel)]=\"filterEntity.recurrencyKind\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('recuKindSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.recurrencyKind}} </td>\r\n                </ng-container> -->\r\n                <!-- <ng-container matColumnDef=\"duration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!durationSearch\" class=\"custom_font_size\" style=\"display: flex;\">Duration\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('durationSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"durationSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Duration\" [(ngModel)]=\"filterEntity.duration\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('durationSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" >{{row.duration}} </td>\r\n                </ng-container> -->\r\n                <!-- <ng-container matColumnDef=\"numberPhases\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!numPhasesSearch\" class=\"custom_font_size\" style=\"display: flex;\">No.Phases\r\n                            &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('numPhasesSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"numPhasesSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Number Phases\" [(ngModel)]=\"filterEntity.numberPhases\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('numPhasesSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" >{{row.numberPhases}} </td>\r\n                </ng-container> -->\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.chargingProfileId)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[ 10,30, 50, 100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license -->","\r\nimport { ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ChargingProfileService } from 'app/shared/services/charging-profile/charging-profile.service';\r\nimport { Router } from '@angular/router';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charging-profile-crud',\r\n  templateUrl: './charging-profile-crud.component.html',\r\n  styleUrls: ['./charging-profile-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargingProfileCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Charging Profile', link: 'list' },\r\n    // { label: 'Add New', link: 'create' },\r\n  ];\r\n\r\n  menuArray: any;\r\n  schTab: boolean;\r\n  perTab: boolean;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"logsandHistory\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"chargingProfile\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != null && this.objectChildData.children != undefined) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"chargingProfile\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Charging Profile', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/logsandHistory/chargingProfile/crud/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\" \r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\" >\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, FormControl, FormArray } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ChargingProfileService } from 'app/shared/services/charging-profile/charging-profile.service';\r\nimport { AddItemDialogComponent } from '../addItem-dialog/addItem-dialog.component';\r\n\r\nexport interface ChargingProfileSchedule {\r\n  charging_schedule_id: number;\r\n  scheduleData: ChargingSchedulePeriod[]\r\n  status: string;\r\n  modifyby: number;\r\n}\r\nexport interface ChargingSchedulePeriod {\r\n  id: number;\r\n  start_period: number;\r\n  limit: number;\r\n  numberof_phase_id: number;\r\n}\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  selectedIndex = 0;\r\n  isFirstTab = true;\r\n  isSecondTab = true;\r\n  chargingProfId: any;\r\n  charProf_forms: FormGroup;\r\n  localStorage: any;\r\n  charProfPurpose: any;\r\n  recurKind: any;\r\n  profileKind: any;\r\n  params: any;\r\n  filteredOptionsCharProfPurp: Observable<any[]>;\r\n  filteredOptionsRecurKind: Observable<any[]>;\r\n  filteredOptionsProfileKind: Observable<any[]>;\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  public minDate: moment.Moment;\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  scheduleTab: boolean = false;\r\n  periodTab: boolean = false;\r\n  isEditMode = false;\r\n  status = true;\r\n  tempDate = new Date();\r\n  currDate: any = new Date();\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  //messageConstant = MessageConstant;\r\n  charSchud_forms: FormGroup;\r\n  charRateUnit: any;\r\n  @ViewChild(\"toggleElement2\") ref2: any;\r\n  filteredOptionsCharRate: Observable<any[]>;\r\n  status2 = true;\r\n  schPerio_forms: FormGroup;\r\n  num_Phases: any;\r\n  @ViewChild(\"toggleElement3\") ref3: any;\r\n  status3 = true;\r\n  filteredOptionsNumPhases: Observable<any[]>;\r\n  menuArray: any;\r\n  schu_PeriodData: any;\r\n  char_SchudData: any;\r\n  SchPeriodStatus: string;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private chargingProfileService: ChargingProfileService, private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private datePipe: DatePipe,\r\n    public dialog: MatDialog, private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n    const fgroup = this.createAddPerForm();\r\n    this.params = this.data;\r\n  \r\n    this.chargingProfId = this.params.data.chargingProfileId;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.charProf_forms = this.fb.group({\r\n      stack_level: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      char_proName: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      char_profKind: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      charg_profPur: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      recur_kind: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      toDate: [''],\r\n      fromDate: [''],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.charSchud_forms = this.fb.group({\r\n      duration: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      charging_rate_unit: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      start_schedule: [new Date()],\r\n      charge_rate: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      status2: this.status2 == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.schPerio_forms = this.fb.group({\r\n      periodForm: this.fb.array([]),\r\n      status3: this.status3 == true ? 'Y' : 'N'\r\n\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.getChargingProgilePurpose();\r\n      this.getChargingRecurrencyKind();\r\n      this.getChargingProfileKind();\r\n      this.assignValuesCharProfile(this.params);\r\n      this.assignValuesCharSchedule(this.params);\r\n      this.getChargingRateUnit();\r\n      //this.assignValuesCharPeriod(this.params);\r\n      this.getNum_Phases(fgroup);\r\n    }\r\n  }\r\n  createAddPerForm() {\r\n    return this.fb.group({\r\n      id: new FormControl(''),\r\n      start_period: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\r\n      limit: new FormControl(''),\r\n      num_phases: new FormControl(''),\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  assignValuesCharProfile(params) {\r\n    this.charProf_forms.get('stack_level').setValue(params.data.stack_level);\r\n    this.charProf_forms.get('char_proName').setValue(params.data.charging_profile_name);\r\n    this.charProf_forms.get('toDate').setValue(params.data.validTo);\r\n    this.charProf_forms.get('fromDate').setValue(params.data.validFrom);\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n  assignValuesCharSchedule(params) {\r\n    this.getScheduleByProfileId(params.data.chargingProfileId);\r\n  }\r\n\r\n  //tab-1\r\n  updateCharProfile() {\r\n\r\n    if (this.charProf_forms.valid) {\r\n      let formValues = this.charProf_forms.value;\r\n\r\n      const params: any = {\r\n        stack_level: formValues.stack_level,\r\n        charging_profile_name: formValues.char_proName,\r\n        charging_profile_kind_id: formValues.char_profKind.id,\r\n        recurrency_kind_id: formValues.recur_kind.id,\r\n        charging_profile_purpose_id: formValues.charg_profPur.id,\r\n        valid_from: this.datePipe.transform(formValues.fromDate, \"yyyy-MM-dd HH:mm:ss\"),\r\n        valid_to: this.datePipe.transform(formValues.toDate, \"yyyy-MM-dd HH:mm:ss\"),\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.chargingProfileId,\r\n          params.modifyby = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n      if (this.isEditMode) {\r\n        this.chargingProfileService.updateChargingProfile(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.isFirstTab = false;\r\n              this.selectedIndex += 1;\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.chargingProfileService.chargingProfileCreation(params).subscribe(\r\n          (resp: any) => {\r\n\r\n            this.snackBar.open(MessageConstant.chargingProfileCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n\r\n      }\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n  onTabChange(event) {\r\n    this.selectedIndex = event.index;\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  getChargingProgilePurpose() {\r\n    this.chargingProfileService.getChargingProfilePurpose().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.charProfPurpose = resp.data;\r\n          if (this.isEditMode) {\r\n            const toSelect = this.charProfPurpose.find(c => c.value == this.params.data.chargingProfilePurpose);\r\n            this.charProf_forms.get('charg_profPur').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsCharProfPurp = this.charProf_forms.controls.charg_profPur.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharProfPurpose(name) : this.charProfPurpose)\r\n            );\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n  private _filterCharProfPurpose(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charProfPurpose.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharProfPur(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  getChargingRecurrencyKind() {\r\n    this.chargingProfileService.getRecurrencyKind().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.recurKind = resp.data;\r\n          \r\n          if (this.isEditMode) {\r\n            const toSelect = this.recurKind.find(c => c.value == this.params.data.recurrencyKind);\r\n            this.charProf_forms.get('recur_kind').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsRecurKind = this.charProf_forms.controls.recur_kind.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharRecurKind(name) : this.recurKind)\r\n            );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n  }\r\n  private _filterCharRecurKind(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.recurKind.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharRecurKind(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  getChargingProfileKind() {\r\n    this.chargingProfileService.getChargingProfileKind().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.profileKind = resp.data;\r\n          if (this.isEditMode) {\r\n            const toSelect = this.profileKind.find(c => c.value == this.params.data.chargingProfileKind);\r\n            this.charProf_forms.get('char_profKind').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsProfileKind = this.charProf_forms.controls.char_profKind.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharProfileKind(name) : this.profileKind)\r\n            );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n  private _filterCharProfileKind(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.profileKind.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharProfileKind(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  //tab-2\r\n  updateCharSchedule() {\r\n    if (this.charSchud_forms.valid) {\r\n      let formValues = this.charSchud_forms.value;\r\n\r\n      if (this.char_SchudData != undefined && this.char_SchudData != null) {\r\n        const params: any = {\r\n          charging_profile_id: this.params.data.chargingProfileId,\r\n          duration: formValues.duration,\r\n          start_schedule: this.datePipe.transform(formValues.start_schedule, \"yyyy-MM-dd\"),\r\n          mincharging_rate: formValues.charge_rate,\r\n          charging_rate_unit_id: formValues.charging_rate_unit.id,\r\n          status: this.status2 == true ? 'Y' : 'N'\r\n        }\r\n\r\n        if (this.isEditMode) {\r\n          params.id = this.char_SchudData.id,\r\n            params.modifyby = this.localStorage.userId;\r\n        } else {\r\n          params.created_by = this.localStorage.userId;\r\n        }\r\n        if (this.isEditMode) {\r\n          this.chargingProfileService.updateChargingSchedule(params).subscribe(\r\n            (resp: any) => {\r\n              if (resp.status == true) {\r\n                this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                if(this.schu_PeriodData != undefined && this.schu_PeriodData != null){\r\n                  this.isSecondTab = false;\r\n                  this.selectedIndex += 1;\r\n                }else{\r\n                  this.snackBar.open(MessageConstant.errorMessageForChargingProfilePeriod, 'Dismiss', { duration: 5000 });\r\n                }\r\n                \r\n              } else {\r\n                this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n              }\r\n            },\r\n            (err) => {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          )\r\n        } else {\r\n          this.chargingProfileService.chargingScheduleCreation(params).subscribe(\r\n            (resp: any) => {\r\n\r\n              this.snackBar.open(MessageConstant.chargingScheduleCreate, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            },\r\n            (err) => {\r\n\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          )\r\n\r\n        }\r\n\r\n      } else {\r\n        this.snackBar.open(MessageConstant.errorMessageForChargingProfileSchedule, 'Dismiss', { duration: 5000 });\r\n        //return\r\n      }\r\n\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getChargingRateUnit() {\r\n    this.chargingProfileService.getChargingRateUnit().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.charRateUnit = resp.data;\r\n          if (this.isEditMode) {\r\n\r\n            if (this.char_SchudData != undefined && this.char_SchudData.charging_rate_unit_id != undefined) {\r\n              const toSelect = this.charRateUnit.find(c => c.id == this.char_SchudData.charging_rate_unit_id); //this.char_SchudData.charging_rate_unit_id //this.params.data.ChargingRateUnit\r\n              this.charSchud_forms.get('charging_rate_unit').setValue(toSelect);\r\n            }\r\n          }\r\n          this.filteredOptionsCharRate = this.charSchud_forms.controls.charging_rate_unit.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharRateUnit(name) : this.charRateUnit)\r\n            );\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  private _filterCharRateUnit(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charRateUnit.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharRate(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  updateStatus2(event) {\r\n    this.status2 = event.checked;\r\n    this.ref2.checked = this.status2;\r\n  }\r\n\r\n  //tab-3\r\n\r\n  updateSchuPeriod() {\r\n    if (this.schPerio_forms.valid) {\r\n      let formValues = this.schPerio_forms.value;\r\n\r\n        let perForm = [];\r\n        formValues.periodForm.forEach(item => {\r\n          perForm.push({\r\n            id: item.id,\r\n            start_period: item.start_period,\r\n            period_limit: item.limit,\r\n            numberof_phase_id: item.num_phases,\r\n          })\r\n        });\r\n        const params: ChargingProfileSchedule = {\r\n          charging_schedule_id: this.char_SchudData.id, //this.params.data.schedule_id,\r\n          scheduleData: perForm,\r\n          status: this.status3 == true ? 'Y' : 'N',\r\n          modifyby: this.localStorage.userId\r\n        }\r\n\r\n        // if (this.isEditMode) {\r\n        //     params.id = this.params.data.schedule_period_id,\r\n        //     params.modifyby = this.localStorage.userId;\r\n        // } else {\r\n        //     params.created_by = this.localStorage.userId;\r\n        // }\r\n        \r\n        if (this.isEditMode) {\r\n          this.chargingProfileService.updateChargingSchedulePeriod(params).subscribe(\r\n            (resp: any) => {\r\n              if (resp.status == true) {\r\n                this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n                this.dialogRef.close();\r\n              } else {\r\n                this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n              }\r\n            },\r\n            (err) => {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          )\r\n        } else {\r\n          this.chargingProfileService.chargingSchedulePeriodCreation(params).subscribe(\r\n            (resp: any) => {\r\n\r\n              this.snackBar.open(MessageConstant.chargingSchedulePeriodCreate, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            },\r\n            (err) => {\r\n\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          )\r\n        }\r\n\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getNum_Phases(fgroup: FormGroup) {\r\n    this.chargingProfileService.getNumberPhases().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.num_Phases = resp.data;\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  updateStatus3(event) {\r\n    this.status3 = event.checked;\r\n    this.ref3.checked = this.status3;\r\n  }\r\n\r\n  addItem() {\r\n    const PERform = this.schPerio_forms.get('periodForm') as FormArray;\r\n    //const fgroup = this.createAddPerForm();\r\n    PERform.push(this.createAddPerForm());\r\n\r\n  }\r\n  setStartPeriod(i) {\r\n    const dialogRef = this.dialog.open(AddItemDialogComponent, {\r\n      width: '600px',\r\n      data: { i },\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog'\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result != undefined && result != 0) {\r\n        const formPre = this.schPerio_forms.get('periodForm') as FormArray;\r\n        formPre.controls[i].get('start_period').setValue(result);\r\n        //this.schPerio_forms.get('periodForm')['controls']\r\n        this.cdr.detectChanges();\r\n      } else {\r\n        return;\r\n      }\r\n\r\n    });\r\n  }\r\n  removevalue(i) {\r\n    const formRemove = this.schPerio_forms.get('periodForm') as FormArray\r\n    if (formRemove.length > 1) {\r\n      formRemove.removeAt(i)\r\n    } else {\r\n      formRemove.reset()\r\n    }\r\n  }\r\n\r\n  getScheduleByProfileId(charProfileId) {\r\n    this.chargingProfileService.getChargerScheduleByProfileId(charProfileId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.char_SchudData = resp.data[0];\r\n          \r\n          this.charSchud_forms.get('duration').setValue(this.char_SchudData.duration);\r\n          this.charSchud_forms.get('start_schedule').setValue(this.char_SchudData.start_schedule);\r\n          //this.charSchud_forms.get('charging_rate_unit').setValue(this.char_SchudData.charging_rate_unit_id);\r\n          this.charSchud_forms.get('charge_rate').setValue(this.char_SchudData.mincharging_rate);\r\n          this.status2 = this.char_SchudData.status == 'Y' ? true : false;\r\n          this.getSchedulePeriodByScheduleId(this.char_SchudData.id);\r\n          this.getChargingRateUnit()\r\n        }\r\n      }, (error) => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  getSchedulePeriodByScheduleId(charSchudId) {\r\n    this.chargingProfileService.getChargerSchedulePeriodByScheduleId(charSchudId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.schu_PeriodData = resp.data\r\n          \r\n          const formPeriod = this.schPerio_forms.get('periodForm') as FormArray;\r\n          for (var i = 0; i < this.schu_PeriodData.length; i++) {\r\n            this.SchPeriodStatus = this.schu_PeriodData[i].status;\r\n            const childForm = this.createAddPerForm();\r\n            formPeriod.push(childForm);\r\n            formPeriod.controls[i].get('id').setValue(this.schu_PeriodData[i].id);\r\n            formPeriod.controls[i].get('start_period').setValue(this.schu_PeriodData[i].start_period);\r\n            formPeriod.controls[i].get('limit').setValue(this.schu_PeriodData[i].period_limit);\r\n            formPeriod.controls[i].get('num_phases').setValue(this.schu_PeriodData[i].numberof_phase_id);\r\n          }\r\n          this.status3 = this.SchPeriodStatus == 'Y' ? true : false;\r\n        }\r\n\r\n      }, (error) => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div style=\"max-height: 22vw;overflow: auto;\">\r\n\r\n  <mat-tab-group [selectedIndex]=\"selectedIndex\" (selectedTabChange)=\"onTabChange($event)\" class=\"pt-0 pb-0 mt-0 mb-0\">\r\n    <!-- tab-1 -->\r\n    <mat-tab label=\"Create Charging Profile\">\r\n      <div id=\"charProf_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n        <form [formGroup]=\"charProf_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Stack Level</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"stack_level\" type=\"number\" min=\"0\" required\r\n                autocomplete=\"off\" id=\"stack_level\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charProf_forms.get('stack_level').hasError('required')\">Please enter stack level\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charProf_forms.get('stack_level').hasError('pattern')\">Special character are not allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Kind</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"char_profKind\" required id=\"chargerCreateCModel\"\r\n                [matAutocomplete]=\"chargingProfAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charging profile kind\">help\r\n                </mat-icon>\r\n              </div>\r\n              <mat-autocomplete #chargingProfAuto=\"matAutocomplete\" [displayWith]=\"displayCharProfileKind\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsProfileKind | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_profKind').hasError('required')\">Please select charging profile\r\n                kind\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Name</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"char_proName\" type=\"search\" maxlength=\"50\" required\r\n                autocomplete=\"off\" id=\"char_proName\">\r\n              <mat-error *ngIf=\"charProf_forms.get('char_proName').hasError('required')\">Please enter charging profile\r\n                name\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_proName').hasError('pattern')\">Special character are not\r\n                allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Recurrency Kind</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"recur_kind\" required id=\"recur_kind\"\r\n                [matAutocomplete]=\"recuKindAuto\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select recurrency kind \">help</mat-icon>\r\n              </div>\r\n              <mat-autocomplete #recuKindAuto=\"matAutocomplete\" [displayWith]=\"displayCharRecurKind\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsRecurKind | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_profKind').hasError('required')\">Please select recurrency kind\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Purpose</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"charg_profPur\" required id=\"charg_profPur\"\r\n                [matAutocomplete]=\"profPurposeAuto\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging profile purpose \">help\r\n                </mat-icon>\r\n              </div>\r\n              <mat-autocomplete #profPurposeAuto=\"matAutocomplete\" [displayWith]=\"displayCharProfPur\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsCharProfPurp | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('charg_profPur').hasError('required')\">Please select charging profile\r\n                purpose\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"23\" class=\"pr-4\">\r\n              <mat-label>Valid From</mat-label>\r\n              <input matInput [ngxMatDatetimePicker]=\"fDate\" formControlName=\"fromDate\" [min]=\"minDate\" [max]=\"maxDate\"\r\n                [disabled]=\"disabled\" readonly required>\r\n\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon class=\"secondary-text\" matTooltip=\"Please enter valid from date and time\">help</mat-icon>\r\n                <mat-icon mat-icon-button type=\"button\" (click)=\"fDate.open(); $event.stopPropagation();\">today\r\n                </mat-icon>\r\n              </div>\r\n              <ngx-mat-datetime-picker #fDate [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n                [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n                [enableMeridian]=\"enableMeridian\">\r\n              </ngx-mat-datetime-picker>\r\n              <mat-error *ngIf=\"charProf_forms.get('fromDate').invalid\">Please enter valid from date and time\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"23\" class=\"pr-4\">\r\n              <mat-label>Valid To</mat-label>\r\n              <input matInput [ngxMatDatetimePicker]=\"tDate\" formControlName=\"toDate\" [min]=\"minDate\" [max]=\"maxDate\"\r\n                [disabled]=\"disabled\" readonly required>\r\n\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon class=\"secondary-text\" matTooltip=\"Please enter valid to date and time\">help</mat-icon>\r\n                <mat-icon mat-icon-button type=\"button\" (click)=\"tDate.open(); $event.stopPropagation();\">today\r\n                </mat-icon>\r\n              </div>\r\n              <ngx-mat-datetime-picker #tDate [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n                [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n                [enableMeridian]=\"enableMeridian\">\r\n              </ngx-mat-datetime-picker>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n              {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"updateCharProfile()\">\r\n              {{isEditMode? 'Save' : 'Save'}}</button>\r\n            <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n    <!-- tab-2 -->\r\n    <mat-tab label=\"Create Charging Schedule\" [disabled]='isFirstTab'>\r\n      <div id=\"charSchud_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"charSchud_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"charSchud_forms\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Duration</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"duration\" type=\"number\" min=\"0\" required\r\n                autocomplete=\"off\" id=\"duration\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <!-- <mat-icon matSuffix class=\"secondary-text\">add_circle</mat-icon> -->\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('duration').hasError('required')\">Please enter duration</mat-error>\r\n              <mat-error *ngIf=\"charSchud_forms.get('duration').hasError('pattern')\">Only number is allowd</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Rate Unit</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"charging_rate_unit\" required id=\"charging_rate_unit\"\r\n                [matAutocomplete]=\"charRateAuto\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charging rate unit\">help</mat-icon>\r\n              </div>\r\n              <mat-autocomplete #charRateAuto=\"matAutocomplete\" [displayWith]=\"displayCharRate\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsCharRate | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charging_rate_unit').hasError('required')\">Please enter charging\r\n                rate unit\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Start Schedule</mat-label>\r\n              <input matInput [matDatepicker]=\"dp3\" formControlName=\"start_schedule\" disabled>\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter start schedule\">help\r\n                </mat-icon>\r\n                <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('start_schedule').invalid\">Please enter start schedule</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Min Charge Rate</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"charge_rate\" type=\"number\" min=\"0\" maxlength=\"50\" required\r\n                autocomplete=\"off\" id=\"charge_rate\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter min charger rate\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charge_rate').hasError('required')\">Please enter min charger rate only number is allowed\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charge_rate').hasError('pattern')\">Special character are not\r\n                allowed</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status2\" (change)=\"updateStatus2($event)\" #toggleElement2>\r\n              {{status2 ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"updateCharSchedule()\">\r\n              {{isEditMode? 'Save' : 'Save'}}</button>\r\n            <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n    <!-- tab-3 -->\r\n    <mat-tab label=\"Create Schedule Period\" [disabled]=\"isSecondTab\">\r\n      <div id=\"schPerio_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"schPerio_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"schPerio_forms\">\r\n\r\n          <div formArrayName=\"periodForm\">\r\n            <div *ngFor=\"let period of schPerio_forms.get('periodForm')['controls']; let i = index;\" [formGroupName]=\"i\">\r\n\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Start Period(Sec)</mat-label>\r\n                  <input matInput formControlName=\"start_period\" type=\"number\" min=\"0\" required autocomplete=\"off\">\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter start period\">help</mat-icon>\r\n                  </div>\r\n                  <mat-error *ngIf=\"period.get('start_period').hasError('required')\">Please enter start period\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"period.get('start_period').hasError('pattern')\">Only number is allowed\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <div fxFlex=\"1\" >\r\n                  <mat-icon  matTooltip=\"Set start period\" (click)=\"setStartPeriod(i)\" \r\n                  style=\"font-size: 2rem;color: darkcyan;float: right; margin-bottom: 1.5rem;\">add_circle</mat-icon>\r\n                </div>\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Limit</mat-label>\r\n                  <input matInput placeholder=\"\" formControlName=\"limit\" type=\"number\" min=\"0\" \r\n                    autocomplete=\"off\">\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter limit\">help\r\n                    </mat-icon>\r\n                  </div>\r\n                  <!-- <mat-error *ngIf=\"period.get('limit').hasError('required')\">Please enter limit\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"period.get('limit').hasError('pattern')\">Only number is allowed\r\n                  </mat-error> -->\r\n                </mat-form-field>\r\n\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Number Phases</mat-label>\r\n                  <mat-select formControlName=\"num_phases\">\r\n                    <mat-option *ngFor=\"let option of num_Phases\" [value]=\"option.id\">\r\n                      {{option.value}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select number phases\">help\r\n                  </mat-icon>\r\n                  <mat-error *ngIf=\"period.get('num_phases').hasError('required')\">Please select number phases\r\n                  </mat-error>\r\n                </mat-form-field>\r\n\r\n                <!-- <div fxFlex=\"5\" class=\"pr-4\">\r\n                  <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"removevalue(i)\" style=\"cursor:pointer;margin-bottom: 2rem !important;\">delete\r\n                  </mat-icon>\r\n                </div> -->\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status3\" (change)=\"updateStatus3($event)\" #toggleElement3>\r\n              {{status3 ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n          \r\n          \r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <div fxFlex=\"100\" class=\"pr-4\">\r\n              <button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"updateSchuPeriod()\">\r\n                {{isEditMode? 'Save' : 'Save'}}</button>\r\n              <button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n              <!-- <div style=\"float: right;\">\r\n                <button mat-mini-fab color=\"primary\" class=\"mr-8 pt-2\" type=\"button\" (click)=\"addItem()\"\r\n                  matTooltip=\"Add Item\">\r\n                  <mat-icon>add</mat-icon>\r\n                </button>\r\n              </div> -->\r\n            </div>  \r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n\r\n</div>","import { Component, OnInit, ViewChild ,ChangeDetectorRef} from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, ValidatorFn, AbstractControl, FormArray, FormControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ChargingProfileService } from 'app/shared/services/charging-profile/charging-profile.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { DatePipe } from '@angular/common';\r\nimport { DateService } from 'app/shared/services/utility/date.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { AddItemDialogComponent } from '../addItem-dialog/addItem-dialog.component'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface ChargingProfileSchedule{\r\n  charging_schedule_id:number;\r\n  scheduleData:ChargingSchedulePeriod[]\r\n  status:string;\r\n  created_by:number;\r\n}\r\nexport interface ChargingSchedulePeriod{\r\n  start_period:number;\r\n  limit:number;\r\n  numberof_phase_id:number;\r\n}\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n \r\n  selectedIndex = 0;\r\n  isFirstTab = true;\r\n  isSecondTab = true;\r\n  charProf_forms: FormGroup;\r\n  localStorage: any;\r\n  charProfPurpose: any;\r\n  recurKind: any;\r\n  profileKind: any;\r\n  //params:any;\r\n  filteredOptionsCharProfPurp: Observable<any[]>;\r\n  filteredOptionsRecurKind: Observable<any[]>;\r\n  filteredOptionsProfileKind: Observable<any[]>;\r\n  public date: moment.Moment;\r\n  public disabled = false;\r\n  public showSpinners = true;\r\n  public showSeconds = true;\r\n  public touchUi = false;\r\n  public enableMeridian = false;\r\n  minDate = new Date();\r\n  public maxDate: moment.Moment;\r\n  public stepHour = 1;\r\n  public stepMinute = 1;\r\n  public stepSecond = 1;\r\n  status = true;\r\n  tempDate = new Date();\r\n  currDate: any = new Date();\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  charSchud_forms: FormGroup;\r\n  charRateUnit: any;\r\n  @ViewChild(\"toggleElement2\") ref2: any;\r\n  filteredOptionsCharRate: Observable<any[]>;\r\n  status2 = true;\r\n\r\n  schPerio_forms: FormGroup;\r\n  num_Phases: any;\r\n  @ViewChild(\"toggleElement3\") ref3: any;\r\n  status3 = true;\r\n  filteredOptionsNumPhases: Observable<any[]>;\r\n  char_scheduleID: any;\r\n  chargingScheduleID:any;\r\n  chargingProfileID:any;\r\n  \r\n  \r\n  constructor(private fb: FormBuilder, private chargingProfileService: ChargingProfileService, private snackBar: MatSnackBar,\r\n    private router: Router, private datePipe: DatePipe, private dateService: DateService,public dialog: MatDialog,private cdr: ChangeDetectorRef) {\r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    const fgroup = this.createAddPerForm();\r\n    this.charProf_forms = this.fb.group({\r\n      stack_level: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      char_proName: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_]*$/)]],\r\n      char_profKind: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      charg_profPur: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      recur_kind: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      toDate: [''],\r\n      fromDate: [''],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.charSchud_forms = this.fb.group({\r\n      duration: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n      charging_rate_unit: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      start_schedule: [new Date()],\r\n      charge_rate: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]]\r\n    });\r\n\r\n    // this.schPerio_forms = this.fb.group({\r\n      \r\n    //   start_period: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n    //   limit: ['', [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n    //   num_phases: ['', [autocompleteObjectValidator(), Validators.required]],\r\n    //   second:['']\r\n    // });\r\n\r\n    this.schPerio_forms = this.fb.group({\r\n      periodForm : this.fb.array([fgroup])\r\n     \r\n    });\r\n\r\n    this.getChargingProgilePurpose();\r\n    this.getChargingRecurrencyKind();\r\n    this.getChargingProfileKind();\r\n    this.getChargingRateUnit();\r\n    this.getNum_Phases(fgroup);\r\n\r\n  }\r\n\r\n  \r\n  createAddPerForm() {\r\n    return this.fb.group({\r\n      start_period: new FormControl('',[Validators.required, Validators.pattern(/^[0-9]*$/)]),\r\n      limit: new FormControl(''),\r\n      num_phases: new FormControl(''),\r\n     \r\n    });\r\n  }\r\n  \r\n\r\n  charProfSubmit() {\r\n    if (this.charProf_forms.valid) {\r\n      let formValues = this.charProf_forms.value;\r\n\r\n      let params = {\r\n        stack_level: formValues.stack_level,\r\n        charging_profile_name: formValues.char_proName,\r\n        charging_profile_kind_id: formValues.char_profKind.id,\r\n        recurrency_kind_id: formValues.recur_kind.id,\r\n        charging_profile_purpose_id: formValues.charg_profPur.id,\r\n        valid_to: this.datePipe.transform(formValues.toDate, \"yyyy-MM-dd HH:mm:ss\"),\r\n        valid_from: this.datePipe.transform(formValues.fromDate, \"yyyy-MM-dd HH:mm:ss\"),\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      this.chargingProfileService.chargingProfileCreation(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            this.snackBar.open(MessageConstant.chargingProfileCreate, 'Dismiss', { duration: 5000 });\r\n            this.chargingProfileID = resp.data[0].id;\r\n            this.isFirstTab = false;\r\n            this.selectedIndex += 1;\r\n          } else {\r\n            this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n\r\n        }, (err) => {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      );\r\n\r\n    }else{\r\n        this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  onTabChange(event) {\r\n    this.selectedIndex = event.index;\r\n  }\r\n\r\n  getChargingProgilePurpose() {\r\n    this.chargingProfileService.getChargingProfilePurpose().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.charProfPurpose = resp.data;\r\n          this.filteredOptionsCharProfPurp = this.charProf_forms.controls.charg_profPur.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharProfPurpose(name) : this.charProfPurpose)\r\n            );\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n  private _filterCharProfPurpose(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charProfPurpose.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharProfPur(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  getChargingRecurrencyKind() {\r\n    this.chargingProfileService.getRecurrencyKind().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.recurKind = resp.data;\r\n          this.filteredOptionsRecurKind = this.charProf_forms.controls.recur_kind.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharRecurKind(name) : this.recurKind)\r\n            );\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n  }\r\n  private _filterCharRecurKind(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.recurKind.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharRecurKind(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  getChargingProfileKind() {\r\n    this.chargingProfileService.getChargingProfileKind().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.profileKind = resp.data;\r\n          this.filteredOptionsProfileKind = this.charProf_forms.controls.char_profKind.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharProfileKind(name) : this.profileKind)\r\n            );\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n  private _filterCharProfileKind(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.profileKind.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharProfileKind(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n  //tab-2\r\n\r\n  getChargingRateUnit() {\r\n    this.chargingProfileService.getChargingRateUnit().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.charRateUnit = resp.data;\r\n          this.filteredOptionsCharRate = this.charSchud_forms.controls.charging_rate_unit.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterCharRateUnit(name) : this.charRateUnit)\r\n            );\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  private _filterCharRateUnit(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.charRateUnit.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharRate(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  updateStatus2(event) {\r\n    this.status2 = event.checked;\r\n    this.ref2.checked = this.status2;\r\n  }\r\n\r\n  charSchuSubmit() {\r\n    \r\n      if (this.charSchud_forms.valid) {\r\n        let formValues = this.charSchud_forms.value;\r\n\r\n        let params = {\r\n          charging_profile_id: this.chargingProfileID,\r\n          duration: formValues.duration,\r\n          charging_rate_unit_id: formValues.charging_rate_unit.id,\r\n          start_schedule: this.datePipe.transform(formValues.start_schedule, \"yyyy-MM-dd\"),\r\n          mincharging_rate: formValues.charge_rate,\r\n          status: this.status == true ? 'Y' : 'N',\r\n          created_by: this.localStorage.userId,\r\n        }\r\n        this.chargingProfileService.chargingScheduleCreation(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n            \r\n              this.snackBar.open(MessageConstant.chargingScheduleCreate, 'Dismiss', { duration: 5000 });\r\n              this.chargingScheduleID = resp.data[0].id;\r\n              this.isSecondTab = false;\r\n              this.selectedIndex += 1;\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n\r\n      }else{\r\n        this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n      }\r\n    \r\n  }\r\n\r\n  //tab-3\r\n\r\n  getNum_Phases(fgroup:FormGroup) {\r\n    this.chargingProfileService.getNumberPhases().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.num_Phases = resp.data;\r\n          this.filteredOptionsNumPhases = fgroup.controls.num_phases.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.value),\r\n              map(name => name ? this._filterNumPhases(name) : this.num_Phases)\r\n            );\r\n        } else {\r\n          this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n        }\r\n      }, (err) => {\r\n        ////\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  private _filterNumPhases(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.num_Phases.filter(option => option.value.toLowerCase().includes(filterValue));\r\n  }\r\n  displayNumPhases(item: any): string {\r\n    return item && item.value ? item.value : '';\r\n  }\r\n\r\n  updateStatus3(event) {\r\n    this.status3 = event.checked;\r\n    this.ref3.checked = this.status3;\r\n  }\r\n\r\n  schuPeriodSubmit() {\r\n  \r\n      if (this.schPerio_forms.valid) {\r\n        let formValues = this.schPerio_forms.value;\r\n        let perForm =[];\r\n\r\n        formValues.periodForm.forEach(item => {\r\n          perForm.push({\r\n            start_period : item.start_period ,\r\n            period_limit : item.limit,\r\n            numberof_phase_id : item.num_phases.id,\r\n          })\r\n        });\r\n\r\n        let params : ChargingProfileSchedule = {\r\n          charging_schedule_id:  this.chargingScheduleID,\r\n          scheduleData:perForm,\r\n          // start_period: formValues.start_period,\r\n          // limit: formValues.limit,\r\n          // numberof_phase_id: formValues.num_phases.id,\r\n          //mincharging_rate: 12,\r\n          status: this.status == true ? 'Y' : 'N',\r\n          created_by: this.localStorage.userId,\r\n        }\r\n\r\n        this.chargingProfileService.chargingSchedulePeriodCreation(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.chargingSchedulePeriodCreate, 'Dismiss', { duration: 5000 });\r\n              this.router.navigate(['/logsandHistory/chargingProfile/crud/list']);\r\n            } else {\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.statusFalse, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n\r\n      } else {\r\n\r\n        this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n      }\r\n  }\r\n\r\n  addItem(){\r\n    const PERform = this.schPerio_forms.get('periodForm') as FormArray;\r\n    const fgroup = this.createAddPerForm();\r\n    PERform.push(fgroup);\r\n    this.filteredOptionsNumPhases = fgroup.controls.num_phases.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => typeof value === 'string' ? value : value.value),\r\n      map(name => name ? this._filterNumPhases(name) : this.num_Phases)\r\n    );\r\n  }\r\n  \r\n  setStartPeriod(i) {  \r\n    const dialogRef = this.dialog.open(AddItemDialogComponent, {\r\n      width: '600px',\r\n      data: {i},\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n      //position: {top: '0%', left:'10%'}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result != undefined && result != 0 ){\r\n          const formPre = this.schPerio_forms.get('periodForm') as FormArray;\r\n          formPre.controls[i].get('start_period').setValue(result);\r\n          //this.schPerio_forms.get('periodForm')['controls']\r\n          this.cdr.detectChanges();\r\n        }else{\r\n          return;\r\n        }\r\n      \r\n    });\r\n  }\r\n  removevalue(i){\r\n     const formRemove = this.schPerio_forms.get('periodForm') as FormArray\r\n    if (formRemove.length > 1) {\r\n      formRemove.removeAt(i)\r\n    } else {\r\n      formRemove.reset()\r\n    }\r\n\r\n    //formRemove.removeAt(i);\r\n  }\r\n  \r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n  <mat-tab-group [selectedIndex]=\"selectedIndex\" (selectedTabChange)=\"onTabChange($event)\" class=\"pt-0 pb-0 mt-0 mb-0\">\r\n    <!-- tab-1 -->\r\n    <mat-tab label=\"Create Charging Profile\">\r\n      <div id=\"charProf_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\r\n        <form [formGroup]=\"charProf_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"charProfSubmit()\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Stack Level</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"stack_level\" type=\"number\" min=\"0\" required\r\n                autocomplete=\"off\" id=\"stack_level\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charProf_forms.get('stack_level').hasError('required')\">Please enter stack level\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charProf_forms.get('stack_level').hasError('pattern')\">Special character are not allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Kind</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"char_profKind\" required id=\"chargerCreateCModel\"\r\n                [matAutocomplete]=\"chargingProfAuto\" id=\"chargingModelAutomat\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charging profile kind\">help\r\n                </mat-icon>\r\n              </div>\r\n              <mat-autocomplete #chargingProfAuto=\"matAutocomplete\" [displayWith]=\"displayCharProfileKind\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsProfileKind | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_profKind').hasError('required')\">Please select charging profile\r\n                kind\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Name</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"char_proName\" type=\"search\" maxlength=\"50\" required\r\n                autocomplete=\"off\" id=\"char_proName\">\r\n              <mat-error *ngIf=\"charProf_forms.get('char_proName').hasError('required')\">Please enter charging profile\r\n                name\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_proName').hasError('pattern')\">Special character are not\r\n                allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Recurrency Kind</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"recur_kind\" required id=\"recur_kind\"\r\n                [matAutocomplete]=\"recuKindAuto\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select recurrency kind \">help</mat-icon>\r\n              </div>\r\n              <mat-autocomplete #recuKindAuto=\"matAutocomplete\" [displayWith]=\"displayCharRecurKind\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsRecurKind | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('char_profKind').hasError('required')\">Please select recurrency kind\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Profile Purpose</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"charg_profPur\" required id=\"charg_profPur\"\r\n                [matAutocomplete]=\"profPurposeAuto\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging profile purpose \">help\r\n                </mat-icon>\r\n              </div>\r\n              <mat-autocomplete #profPurposeAuto=\"matAutocomplete\" [displayWith]=\"displayCharProfPur\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsCharProfPurp | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charProf_forms.get('charg_profPur').hasError('required')\">Please select charging profile\r\n                purpose\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"23\" class=\"pr-4\">\r\n              <mat-label>Valid From</mat-label>\r\n              <input matInput [ngxMatDatetimePicker]=\"fDate\" formControlName=\"fromDate\" [min]=\"minDate\" [max]=\"maxDate\"\r\n                [disabled]=\"disabled\" readonly required>\r\n\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon class=\"secondary-text\" matTooltip=\"Please enter valid from date and time\">help</mat-icon>\r\n                <mat-icon mat-icon-button type=\"button\" (click)=\"fDate.open(); $event.stopPropagation();\">today\r\n                </mat-icon>\r\n              </div>\r\n              <ngx-mat-datetime-picker #fDate [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n                [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n                [enableMeridian]=\"enableMeridian\">\r\n              </ngx-mat-datetime-picker>\r\n              <mat-error *ngIf=\"charProf_forms.get('fromDate').invalid\">Please enter valid from date and time\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"23\" class=\"pr-4\">\r\n              <mat-label>Valid To</mat-label>\r\n              <input matInput [ngxMatDatetimePicker]=\"tDate\" formControlName=\"toDate\" [min]=\"minDate\" [max]=\"maxDate\"\r\n                [disabled]=\"disabled\" readonly required>\r\n\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon class=\"secondary-text\" matTooltip=\"Please enter valid to date and time\">help</mat-icon>\r\n                <mat-icon mat-icon-button type=\"button\" (click)=\"tDate.open(); $event.stopPropagation();\">today\r\n                </mat-icon>\r\n              </div>\r\n              <ngx-mat-datetime-picker #tDate [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n                [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\" [touchUi]=\"touchUi\"\r\n                [enableMeridian]=\"enableMeridian\">\r\n              </ngx-mat-datetime-picker>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"15\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n              {{status ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n            <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n              routerLink=\"/logsandHistory/chargingProfile/crud/list\">Cancel</button>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n    <!-- tab-2 -->\r\n    <mat-tab label=\"Create Charging Schedule\" [disabled]=\"isFirstTab\">\r\n      <div id=\"charSchud_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"charSchud_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"charSchud_forms\" (submit)=\"charSchuSubmit()\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Duration</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"duration\" type=\"number\" min=\"0\" required\r\n                autocomplete=\"off\" id=\"duration\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <!-- <mat-icon matSuffix class=\"secondary-text\">add_circle</mat-icon> -->\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter duration\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('duration').hasError('required')\">Please enter duration</mat-error>\r\n              <mat-error *ngIf=\"charSchud_forms.get('duration').hasError('pattern')\">Only number is allowd</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Charging Rate Unit</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"charging_rate_unit\" required id=\"charging_rate_unit\"\r\n                [matAutocomplete]=\"charRateAuto\" type=\"search\" autocomplete=\"off\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter charging rate unit\">help</mat-icon>\r\n              </div>\r\n              <mat-autocomplete #charRateAuto=\"matAutocomplete\" [displayWith]=\"displayCharRate\">\r\n                <mat-option *ngFor=\"let option of filteredOptionsCharRate | async\" [value]=\"option\">\r\n                  {{option.value}}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charging_rate_unit').hasError('required')\">Please enter charging\r\n                rate unit\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Start Schedule</mat-label>\r\n              <input matInput [matDatepicker]=\"dp3\" formControlName=\"start_schedule\" disabled>\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter start schedule\">help\r\n                </mat-icon>\r\n                <mat-datepicker-toggle [for]=\"dp3\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('start_schedule').invalid\">Please enter start schedule</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n              <mat-label>Min Charge Rate</mat-label>\r\n              <input matInput placeholder=\"\" formControlName=\"charge_rate\" type=\"number\" maxlength=\"50\" min=\"0\" required\r\n                autocomplete=\"off\" id=\"charge_rate\">\r\n              <div matSuffix style=\"display: flex;\">\r\n                <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter min charger rate\">help</mat-icon>\r\n              </div>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charge_rate').hasError('required')\">Please enter min charger rate\r\n                only number is allowed\r\n              </mat-error>\r\n              <mat-error *ngIf=\"charSchud_forms.get('charge_rate').hasError('pattern')\">Only number is allowed\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"15\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status2\" (change)=\"updateStatus2($event)\" #toggleElement2>\r\n              {{status2 ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n            <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n              routerLink=\"/logsandHistory/chargingProfile/crud/list\">Cancel</button>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n    <!-- tab-3 -->\r\n    <mat-tab label=\"Create Schedule Period\" [disabled]=\"isSecondTab\">\r\n      <div id=\"schPerio_forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form [formGroup]=\"schPerio_forms\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\"\r\n          fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"schPerio_forms\" (submit)=\"schuPeriodSubmit()\">\r\n\r\n          <div formArrayName=\"periodForm\">\r\n            <div *ngFor=\"let period of schPerio_forms.get('periodForm')['controls']; let i = index;\" [formGroupName]=\"i\">\r\n\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Start Period(Sec)</mat-label>\r\n                  <input matInput formControlName=\"start_period\" type=\"number\" min=\"0\" required autocomplete=\"off\">\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <!-- <mat-icon matSuffix class=\"secondary-text\" >add</mat-icon> -->\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter start period\">help</mat-icon>\r\n                  </div>\r\n                  <mat-error *ngIf=\"period.get('start_period').hasError('required')\">Please enter start period\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"period.get('start_period').hasError('pattern')\">Only number is allowed\r\n                  </mat-error>\r\n                </mat-form-field>\r\n                <div fxFlex=\"1\" >\r\n                  <mat-icon  matTooltip=\"Set start period\" (click)=\"setStartPeriod(i)\" \r\n                  style=\"font-size: 2rem;color: darkcyan;float: right; margin-bottom: 1.5rem;\">add_circle</mat-icon>\r\n                </div>\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Limit</mat-label>\r\n                  <input matInput placeholder=\"\" formControlName=\"limit\" type=\"number\" min=\"0\"\r\n                    autocomplete=\"off\">\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter limit\">help\r\n                    </mat-icon>\r\n                  </div>\r\n                  <!-- <mat-error *ngIf=\"period.get('limit').hasError('required')\">Please enter limit\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"period.get('limit').hasError('pattern')\">Only number is allowed\r\n                  </mat-error> -->\r\n                </mat-form-field>\r\n\r\n\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"28\" class=\"pr-4\">\r\n                  <mat-label>Number Phases</mat-label>\r\n                  <input type=\"text\" matInput formControlName=\"num_phases\" required id=\"num_phases\"\r\n                    [matAutocomplete]=\"numPhasesAuto\" type=\"search\" autocomplete=\"off\">\r\n                  <div matSuffix style=\"display: flex;\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n                    <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select number phases\">help\r\n                    </mat-icon>\r\n                  </div>\r\n                  <mat-autocomplete #numPhasesAuto=\"matAutocomplete\" [displayWith]=\"displayNumPhases\">\r\n                    <mat-option *ngFor=\"let option of filteredOptionsNumPhases | async\" [value]=\"option\">\r\n                      {{option.value}}\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                  <mat-error *ngIf=\"period.get('num_phases').hasError('required')\">Please select number phases\r\n                  </mat-error>\r\n                </mat-form-field>\r\n\r\n                <div fxFlex=\"5\" class=\"pr-4\">\r\n                  <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"removevalue(i)\" style=\"cursor:pointer;margin-bottom: 2rem !important;\">delete\r\n                  </mat-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n            <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"15\" class=\"pr-4\" class=\"example-margin\"\r\n              color=\"primary\" [checked]=\"status3\" (change)=\"updateStatus3($event)\" #toggleElement3>\r\n              {{status3 ? 'Active' : 'Inactive'}}\r\n            </mat-slide-toggle>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 10px;\">\r\n            <div fxFlex=\"100\" class=\"pr-4\">\r\n              <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n              <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n                routerLink=\"/logsandHistory/chargingProfile/crud/list\">Cancel</button>\r\n              <div style=\"float: right;\">\r\n                <button mat-mini-fab color=\"primary\" class=\"mr-8 pt-2\" type=\"button\" (click)=\"addItem()\"\r\n                  matTooltip=\"Add Item\">\r\n                  <mat-icon>add</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n</div>"],"sourceRoot":"webpack:///"}