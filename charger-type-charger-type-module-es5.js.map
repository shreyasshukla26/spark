{"version":3,"sources":["webpack:///src/app/main/asset/charger-type/view-dialog/view-dialog.component.ts","webpack:///src/app/main/asset/charger-type/view-dialog/view-dialog.component.html","webpack:///src/app/main/asset/charger-type/charger-type-routing.module.ts","webpack:///src/app/main/asset/charger-type/create/create.component.ts","webpack:///src/app/main/asset/charger-type/create/create.component.html","webpack:///src/app/main/asset/charger-type/charger-type.module.ts","webpack:///src/app/main/asset/charger-type/charger-type-crud/routes.ts","webpack:///src/app/main/asset/charger-type/charger-type-crud/charger-type-crud.component.ts","webpack:///src/app/main/asset/charger-type/charger-type-crud/charger-type-crud.component.html","webpack:///src/app/main/asset/charger-type/list/list.component.ts","webpack:///src/app/main/asset/charger-type/list/list.component.html","webpack:///src/app/main/asset/charger-type/action-dialog/action-dialog.component.ts","webpack:///src/app/main/asset/charger-type/action-dialog/action-dialog.component.html"],"names":["ViewDialogComponent","fb","chargerTypeService","snackBar","dialogRef","data","isViewMode","status","initialize","localStorage","JSON","parse","getItem","params","action","form","group","name","required","pattern","description","assignValues","close","get","hasError","setValue","event","checked","ref","closeActionPanel","updateStatus","selector","templateUrl","styleUrls","encapsulation","None","animations","routes","path","component","canActivate","children","ChargerTypeRoutingModule","forChild","imports","exports","CreateComponent","masterService","router","value","valid","formValues","created_by","userId","create","subscribe","resp","open","chargerCreateMessage","duration","navigate","err","errorMessage","formInvalid","onSubmit","$event","preventDefault","COMPONENTS","COMPONENTS_DYNAMIC","ChargerTypeModule","declarations","entryComponents","TABS_DEMO_ROUTES","redirectTo","pathMatch","ChargerTypeCrudComponent","fuseNavigationService","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","menuItemSelecte","menuArray","undefined","title","detectChanges","sysMenuItemSelectedValue$","test","nav_list","nav_list_with_tab","filter","x","id","objectData","y","objectChildData","z","childData","isDefaultRoutePermeted","t","push","label","link","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","Charger","ListComponent","dialog","displayedColumns","head","nameSearch","descSearch","statusSearch","getChargerTypes","filterEntity","filterType","ANYWHERE","filterValue","target","dataSource","trim","toLowerCase","paginator","firstPage","chargers","i","length","statusString","sort","NoRecordFoundMessage","confirmDialogRef","disableClose","afterClosed","result","deleteMessage","width","panelClass","autoFocus","visibleOption","ev","stopPropagation","exportedData","filteredData","chrger","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","ActionDialogComponent","isEditMode","modify_by","update","recordUpdateMessage","chargerNCreate","onYesClick"],"mappings":"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","file":"charger-type-charger-type-module-es5.js","sourcesContent":["import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isViewMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  messageConstant:MessageConstant;\r\n  constructor(private fb: FormBuilder,private chargerTypeService: ChargerTypeService, private snackBar: MatSnackBar,\r\n              public dialogRef: MatDialogRef<ViewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isViewMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['',  [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',  [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]]\r\n    });\r\n\r\n    if (this.isViewMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  \r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n     style=\"cursor:pointer;color:white\"  class=\"material-icons-outlined\">clear</mat-icon>\r\n     \r\n<mat-toolbar class=\"action_toolbar\">Model</mat-toolbar>\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" readonly formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n\r\n\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-slide-toggle style=\"padding-bottom:3.24\" disabled style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\"\r\n          class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n\r\n        <button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TABS_DEMO_ROUTES } from './charger-type-crud/routes';\r\nimport { ChargerTypeCrudComponent } from './charger-type-crud/charger-type-crud.component';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : ChargerTypeCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class ChargerTypeRoutingModule{}","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n  form: FormGroup;\r\n  brands:any;\r\n  models:any;\r\n  chargerTypes:any;\r\n  vehicleTypes:any;\r\n  localStorage : any;\r\n  messageConstant:MessageConstant;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  status = false;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private chargerTypeService : ChargerTypeService,private snackBar: MatSnackBar,\r\n    private router : Router) {\r\n       \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      name: ['', [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['', [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      status: [{value:false},  [Validators.required]]\r\n    });\r\n   \r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      let params = {\r\n        name :formValues.name, \r\n        description :formValues.description, \r\n        status :  this.status == true ? 'Y' : 'N', \r\n        created_by : this.localStorage.userId \r\n      }\r\n      \r\n      this.chargerTypeService.create(params).subscribe(\r\n        (resp:any )=>{\r\n          \r\n          if(resp != null){\r\n            this.snackBar.open(MessageConstant.chargerCreateMessage, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/assetManagement/chargerTypeManagement/crud/list']);\r\n          } \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n}\r\n\r\n\r\n","<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n  <form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n    fxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n        <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n        <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n        <mat-label>Description</mat-label>\r\n        <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n        <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description</mat-icon>\r\n\r\n\r\n        <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n      <mat-slide-toggle style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\" class=\"example-margin\" color=\"primary\"\r\n        [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n        {{status ? 'Active' : 'Inactive'}}\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n      <button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n      <button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n        routerLink=\"/assetManagement/chargerTypeManagement/crud/list\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\n// import { ClientCrudComponent } from './client-crud/client-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nimport { ChargerTypeCrudComponent } from './charger-type-crud/charger-type-crud.component';\r\nimport { ChargerTypeRoutingModule } from './charger-type-routing.module';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nconst COMPONENTS =[ChargerTypeCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, ChargerTypeRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class ChargerTypeModule{}","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent, canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseNavigationService } from '@fuse/components/navigation/navigation.service';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-charger-type-crud',\r\n  templateUrl: './charger-type-crud.component.html',\r\n  styleUrls: ['./charger-type-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ChargerTypeCrudComponent implements OnInit {\r\n\r\n  tabLinks = [\r\n    // { label: 'Charger Models', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  test: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private fuseNavigationService: FuseNavigationService, private router: Router,\r\n    private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fuseNavigationService.sysMenuItemSelectedValue$.subscribe(menuItemSelecte => {\r\n      this.test = menuItemSelecte;\r\n    })\r\n    //this.menuArray = this.test //JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"assetManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != undefined && this.objectData.children != null) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"chargerTypeManagement\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  this.childData = z;\r\n                  if (z.id === \"crud\") {\r\n                    let isDefaultRoutePermeted = false;\r\n                    if (this.childData.children != undefined && this.childData.children != null) {\r\n                      this.childData.children.filter((t) => {\r\n                        if (t.id === \"chargerModels\") {\r\n                          isDefaultRoutePermeted = true;\r\n                          this.tempLinks.push({ label: 'Charger Models', link: 'list' });\r\n                        }\r\n                        if (t.id === \"addNew\") {\r\n                          this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                        }\r\n                      });\r\n                    }\r\n\r\n                    this.tabLinks = this.tempLinks;\r\n                    if (!isDefaultRoutePermeted) {\r\n                      this.router.navigate(['/assetManagement/chargerTypeManagement/crud/' + this.tempLinks[0].link]);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\"> {{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n","\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nexport class Charger {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  address: string;\r\n  logoPath: string;\r\n  mobile: string;\r\n  email: string;\r\n  status: string;\r\n  created_date: string;\r\n  createdby: number;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ListComponent implements OnInit {\r\n  filterEntity: Charger;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = [ 'name', 'description','status','action'];\r\n  head = [['Name', 'Description','Status']];\r\n  dataSource: MatTableDataSource<Charger>;\r\n\r\n  chargers : Charger[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  dialogRef: any;\r\n  nameSearch = false;\r\n  descSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  constructor(private chargerTypeService : ChargerTypeService,public dialog : MatDialog,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getChargerTypes();\r\n    this.filterEntity = new Charger();\r\n           this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getChargerTypes(){\r\n    this.chargerTypeService.getChargerTypes().subscribe(\r\n      (data:any)=>{\r\n        if(data != null){\r\n          \r\n          this.chargers = data;\r\n        \r\n          for(var i=0; i < this.chargers.length;i++){\r\n            if(this.chargers[i].status == 'N'){\r\n              this.chargers[i].statusString = 'Inactive';\r\n            }else{\r\n              this.chargers[i].statusString = 'Active';\r\n            }\r\n           \r\n          }\r\n          \r\n          this.dataSource = new MatTableDataSource(this.chargers);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 3000 })\r\n          return;\r\n        }\r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n  });\r\n\r\n  //this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if ( result )\r\n      {\r\n        this.chargerTypeService.delete(id).subscribe(\r\n          (data:any)=>{\r\n            this.getChargerTypes();\r\n            this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:2000});\r\n          },(err)=>{\r\n        } \r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n  });\r\n    \r\n  }\r\n\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog' ,\r\n      autoFocus: false,\r\n      disableClose: true \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getChargerTypes();\r\n    });\r\n  }\r\n  viewDialog(action,data) : void{\r\n    let params = {\r\n      action : action,\r\n      data : data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '800px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true    \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      // this.moderate(result);\r\n      this.getChargerTypes();\r\n    });\r\n  }\r\n  changeVisibility(visibleOption,ev){\r\n    // visibleOption = !visibleOption;\r\n    //nameSearch = false;\r\n      //descSearch = false;\r\n      ev.stopPropagation();\r\n    if(visibleOption == 'nameSearch'){\r\n      this.nameSearch = !this.nameSearch;\r\n      this.filterEntity.name = \"\";\r\n    }\r\n    \r\n    if(visibleOption == 'descSearch'){\r\n      this.descSearch = !this.descSearch;\r\n      this.filterEntity.description = \"\";\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString= \"\";\r\n    }\r\n   }\r\n   tableExport()          \r\n   {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n       var chrger = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'Model Name':chrger.name,'Description':chrger.description,'Status':chrger.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n      \r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n       XLSX.writeFile(workBook, 'Models.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n     \r\n   \r\n   }\r\n\r\n   pdfExport(){\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.name,chrger.description,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Model Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Model report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    \r\n    \r\n  \r\n    return doc;\r\n  \r\n  }\r\n  \r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n\r\n        <div class=\"\">\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort>\r\n\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\r\n                </ng-container>\r\n\r\n                <!-- Name Column -->\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!nameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Model Name &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"nameSearch\" appearance=\"outline\" style=\"width: 190px\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Model Name\" [(ngModel)]=\"filterEntity.name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('nameSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!descSearch\" class=\"custom_font_size\" style=\"display: flex;\"> Description\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"descSearch\" appearance=\"outline\" style=\"width: 190px\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('descSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 110px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\"> Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <!-- <button mat-raised-button color=\"primary\"\r\n                                (click)=\"openDialog('EDIT',element)\">Edit</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"delete(element.id)\"\r\n                                style=\"margin-left: 1%;\">Remove</button>  -->\r\n\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <button  (click)=\"tableExport()\" mat-fab color=\"primary\" matTooltip=\"export to excel\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;position:fixed;bottom:30px;right:20px\">\r\n    <mat-icon>downloading</mat-icon>\r\n  </button> -->\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { ChargerTypeService } from 'app/shared/services/charger-type/charger-type.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  status = false;\r\n\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  messageConstant:MessageConstant;\r\n  constructor(private fb: FormBuilder,private chargerTypeService: ChargerTypeService, private snackBar: MatSnackBar,\r\n              public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: MtxDialogData) {}\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize(){\r\n\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n    \r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      name: ['',  [Validators.required,Validators.pattern(/^[a-zA-Z0-9 ]*$/)]],\r\n      description: ['',  [Validators.pattern(/^[a-zA-Z0-9 ]*$/)]]\r\n    });\r\n\r\n    if (this.isEditMode){\r\n      this.assignValues(this.params);\r\n    }\r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick(){\r\n    if(this.form.valid){\r\n      let formValues = this.form.value;\r\n    \r\n      const params: any = {\r\n  \r\n        name : formValues.name,\r\n        description : formValues.description,\r\n        status : this.status == true ? 'Y' : 'N'\r\n    // tslint:disable-next-line: semicolon\r\n    }\r\n  // tslint:disable-next-line: no-//\r\n  \r\n      if (this.isEditMode){\r\n      params.id = this.params.data.id,\r\n      params.modify_by = this.localStorage.userId;\r\n    } else{\r\n      params.created_by = this.localStorage.userId;\r\n    }\r\n  \r\n      if (this.isEditMode){\r\n      this.chargerTypeService.update(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }else{\r\n      this.chargerTypeService.create(params).subscribe(\r\n        (data: any ) => {\r\n          this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n          this.dialogRef.close();\r\n        },\r\n        (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n  \r\n    }\r\n    this.dialogRef.close(params);\r\n    }\r\n    return;\r\n   \r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n\r\n  assignValues(params){\r\n    this.form.get('name').setValue(params.data.name);\r\n    this.form.get('description').setValue(params.data.description);    \r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <page-header title=\"Add Vehicle\"></page-header> -->\r\n<!-- <page-header title=\"Vehicle On-Board\"></page-header> -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n     style=\"cursor:pointer;color:white\"  class=\"material-icons-outlined\">clear</mat-icon>\r\n<mat-toolbar class=\"action_toolbar\">Model</mat-toolbar>\r\n\r\n<div style=\"padding:24px\">\r\n  <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n    <form [formGroup]=\"form\" class=\"mat-elevation-z4  \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n      name=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('name').hasError('required')\">Please enter name</mat-error>\r\n\r\n          <mat-error *ngIf=\"form.get('name').hasError('pattern')\">Special character is not allowed </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Description</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"description\" maxlength=\"100\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter description\">description</mat-icon>\r\n\r\n\r\n          <mat-error *ngIf=\"form.get('description').hasError('pattern')\">Special character is not allowed </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-slide-toggle style=\"padding-bottom:3.24\" style=\"margin-bottom: 10px;\" fxFlex=\"50\" class=\"pr-4\"\r\n          class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\" #toggleElement>\r\n          {{status ? 'Active' : 'Inactive'}}\r\n        </mat-slide-toggle>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"margin-top:10px;\">\r\n        <button mat-raised-button color=\"primary\" class=\"mr-8\" (click)=\"onYesClick()\">{{isEditMode ? 'Save' :\r\n          'Save'}}</button>\r\n        <button mat-raised-button color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"]}