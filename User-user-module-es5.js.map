{"version":3,"sources":["webpack:///src/app/main/user-management/user/list/list.component.ts","webpack:///src/app/main/user-management/user/list/list.component.html","webpack:///src/app/main/user-management/user/action-dialog/action-dialog.component.ts","webpack:///src/app/main/user-management/user/action-dialog/action-dialog.component.html","webpack:///src/app/main/user-management/user/user-crud/routes.ts","webpack:///src/app/main/user-management/user/view-dialog/view-dialog.component.ts","webpack:///src/app/main/user-management/user/view-dialog/view-dialog.component.html","webpack:///src/app/main/user-management/user/user.module.ts","webpack:///src/app/main/user-management/user/user-crud/user-crud.component.ts","webpack:///src/app/main/user-management/user/user-crud/user-crud.component.html","webpack:///src/app/main/user-management/user/user-routing.module.ts","webpack:///src/app/main/user-management/user/create/create.component.ts","webpack:///src/app/main/user-management/user/create/create.component.html"],"names":["Users","ListComponent","dialog","userService","snackBar","head","displayedColumns","f_NameSearch","lNameSearch","employeeCodeSearch","emailSearch","mobileSearch","userNameSearch","statusSearch","localStorage","JSON","parse","getItem","getAllUsers","filterEntity","filterType","ANYWHERE","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","getUsersCW","userId","subscribe","resp","users","data","i","length","status","statusString","employee_code","email","mobile","sort","open","NoRecordFoundMessage","duration","err","id","confirmDialogRef","disableClose","afterClosed","result","deleteMessage","message","params","action","dialogRef","width","autoFocus","panelClass","updateUser","update","recordUpdateMessage","err_code","errorMsg","index","lastIndexOf","splitted","substring","userDuplicate","mobileDuplicateUser","emailDuplicateUser","panDuplicateUser","aadharDuplicateUser","errorMessage","visibleOption","f_name","l_name","username","exportedData","usersModel","aadhar","address1","push","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","filteredData","chrger","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","selector","templateUrl","styleUrls","encapsulation","None","animations","autocompleteObjectValidator","control","ActionDialogComponent","fb","chargingStationService","datePipe","countryService","cpoService","roleService","clientService","isEditMode","maxDate","stationValid","cpoValid","confirmValidator","error","required","form","controls","u_password","confirm","initialize","group","client","roleType","cpoType","charStat","pattern","m_name","pan","u_empCode","u_dob","u_email","u_mobile","u_altmobile","u_userID","u_aadhar","u_addressline1","u_addressline2","pincode","u_landmark","country","state","city","assignValues","getAllCountry","getAllState","getClients","getCity","close","formValues","invalid","formInvalid","client_id","cpo_id","char_Station","user_type","code","role_id","m_Name","l_Name","PAN","dob","transform","alt_mobile","address2","PIN","landmark","country_id","state_id","city_id","can_expire","registration_origin","created_by","modify_by","create","chargerNCreate","get","hasError","setValue","checked","ref","isPasswordFieldType","isPasswordConfirmFieldType","project_id","getActiveRolesByClientId","role_types","toSelect","find","c","onRoleChange","filteredOptionsRole","valueChanges","pipe","name","_filterRoleType","object","clearValidators","getCpoTypes","countries","filteredOptionCountry","_filterCountry","states","filteredOptionState","_filterState","getCitiesByStates","getAllCities","cities","filteredOptionCity","_filterCity","item","option","includes","pin_code_id","getCountryStateByPIN","undefined","getCountryByState","countrydata","getStateByCountry","statedata","getCityByState","Citydata","getStatesByCountry","stateId","citiesdata","getCpoByClientId","cpo_types","getStationByCPO","filteredOptionsCpo","_filterCpoType","getActiveClientsCW","clients","getRoleTypes","filteredOptionsClient","_filterClientModels","getChargingStationByCpoId","chargingStationName","station_id","filteredOptionsCharStat","_filterCharStat","closeActionPanel","onClientChange","getStateCountry","onCountryChange","onStateChange","onCityChange","updateStatus","onYesClick","providers","active","TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","ViewDialogComponent","COMPONENTS","COMPONENTS_DYNAMIC","UserModule","imports","declarations","entryComponents","UserCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","nav_list","nav_list_with_tab","x","objectData","children","y","objectChildData","z","isDefaultRoutePermeted","label","link","navigate","activeMenuItems$","menuItemSelecte","menuArray","title","detectChanges","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","routes","UserRoutingModule","forChild","exports","$event","preventDefault","CreateComponent","masterService","isSubmit","u_confirmPassword","selectedClient","stateData","setValidators","password","userCreated"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatDialog,MatDialogRef } from '@angular/material/dialog';\r\nimport {FuseConfirmDialogComponent} from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nexport class Users {\r\n  f_name: string;\r\n  l_name: string;\r\n  employee_code: string;\r\n  email: string;\r\n  mobile: string;\r\n  username: string;\r\n  aadhar: string;\r\n  address1: string;\r\n  address2: string;\r\n  city: string;\r\n  state: string;\r\n  country: string;\r\n  modify_date: string;\r\n  modifyby: number;\r\n  statusString:string;\r\n  status:string;\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations\r\n  \r\n})\r\nexport class ListComponent implements OnInit {\r\n \r\n  head = [['First Name', 'Last Name','Employee Code','Email','Mobile','Username','Aadhar','Address1','Address2','Status']];\r\n  displayedColumns: string[] = [ 'f_name', 'l_name','employee_code','email','mobile','username','status','action'];\r\n  dataSource: MatTableDataSource<Users>;\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n  users : Users[];\r\n  filterEntity: Users;\r\n  filterType: MatTableFilter;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  f_NameSearch = false;\r\n  lNameSearch = false;\r\n  employeeCodeSearch = false;\r\n  emailSearch = false;\r\n  mobileSearch = false;\r\n  userNameSearch = false;\r\n   statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage : any;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  constructor(public dialog : MatDialog,private userService : UserService,\r\n    private snackBar : MatSnackBar) {\r\n    // Create 100 users\r\n    // const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\r\n\r\n    // Assign the data to the data source for the table to render\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.getAllUsers();\r\n    this.filterEntity = new Users();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getAllUsers(){\r\n    this.userService.getUsersCW(this.localStorage.userId).subscribe(\r\n      (resp:any)=>{\r\n        if(resp != null){\r\n          this.users = resp.data;\r\n          for(var i=0; i < this.users.length;i++){\r\n            if(this.users[i].status == 'Y'){\r\n              this.users[i].statusString = 'Active';\r\n            }else{\r\n              this.users[i].statusString = 'Inactive';\r\n            }\r\n            if(this.users[i].employee_code == null){\r\n              this.users[i].employee_code = '';\r\n            }\r\n\r\n            if(this.users[i].email == null){\r\n              this.users[i].email = '';\r\n            }\r\n\r\n            if(this.users[i].mobile == null){\r\n              this.users[i].mobile = '';\r\n            }\r\n\r\n            \r\n           \r\n          }\r\n          this.dataSource = new MatTableDataSource(this.users);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }else{\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss',{duration : 5000 })\r\n          return;\r\n        }\r\n        \r\n        \r\n      },(err)=>{\r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n  delete(id){\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n    disableClose: true\r\n  });\r\n\r\n//this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n  this.confirmDialogRef.afterClosed().subscribe(result => {\r\n    if ( result )\r\n    {\r\n      this.userService.delete(id,this.localStorage.userId).subscribe(\r\n        (data:any)=>{\r\n          if(data.status == true){\r\n            this.getAllUsers();\r\n          this.snackBar.open(MessageConstant.deleteMessage,'Dismiss',{duration:5000});\r\n          }else{\r\n            this.snackBar.open(data.message,'Dismiss',{duration:5000});\r\n          }\r\n          \r\n        },(err)=>{\r\n          \r\n        }\r\n      )\r\n    }\r\n    this.confirmDialogRef = null;\r\n  });\r\n \r\n}\r\n\r\nviewDialog(data):void{\r\n  let params = {\r\n    action : 'View',\r\n    data : data\r\n  }\r\n\r\n  const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n    width: '1000px',\r\n    data: params,\r\n    autoFocus: false,\r\n    panelClass: 'app-action-dialog',\r\n    disableClose: true    \r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if(result != null){\r\n      this.updateUser(result);\r\n     }\r\n        \r\n  });\r\n}\r\n\r\n  openDialog(action,data): void {\r\n    \r\n    let params = {\r\n      action : action,\r\n      data : data,\r\n      \r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1000px',\r\n      data: params,   \r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true   \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      if(result != null){\r\n        this.updateUser(result);\r\n       }\r\n      //this.getAllUsers();\r\n    });\r\n  }\r\n\r\n  updateUser(data){\r\n    \r\n      this.userService.update(data).subscribe(\r\n        (data:any)=>{\r\n          if(data.status == true){\r\n            this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n            this.getAllUsers();\r\n          }else{\r\n            if(data.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = data.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n             \r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'username'\" ){\r\n                this.snackBar.open(MessageConstant.userDuplicate, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'mobile'\"){\r\n                this.snackBar.open(MessageConstant.mobileDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'email'\"){\r\n                this.snackBar.open(MessageConstant.emailDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n              if(this.splitted == \"'PAN'\"){\r\n                this.snackBar.open(MessageConstant.panDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'aadhar'\"){\r\n                this.snackBar.open(MessageConstant.aadharDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }else{\r\n              this.snackBar.open(data.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(data.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n  \r\n        },(err)=>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    \r\n  }\r\n  changeVisibility(visibleOption){\r\n    \r\n    if(visibleOption == 'f_NameSearch'){\r\n      this.f_NameSearch = !this.f_NameSearch;\r\n      this.filterEntity.f_name = '';\r\n    }\r\n    \r\n    if(visibleOption == 'lNameSearch'){\r\n      this.lNameSearch = !this.lNameSearch;\r\n      this.filterEntity.l_name = '';\r\n    }\r\n    if(visibleOption == 'employeeCodeSearch'){\r\n      this.employeeCodeSearch = !this.employeeCodeSearch;\r\n      this.filterEntity.employee_code = '';\r\n    }\r\n    if(visibleOption == 'emailSearch'){\r\n      this.emailSearch = !this.emailSearch;\r\n      this.filterEntity.email = '';\r\n    }\r\n    if(visibleOption == 'mobileSearch'){\r\n      this.mobileSearch = !this.mobileSearch;\r\n      this.filterEntity.mobile = '';\r\n    }\r\n    if(visibleOption == 'userNameSearch'){\r\n      this.userNameSearch = !this.userNameSearch;\r\n      this.filterEntity.username = '';\r\n    }\r\n    if(visibleOption == 'statusSearch'){\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n   }\r\n   \r\n   tableExport()\r\n   {\r\n     // const tab = document.getElementById('mapTable');\r\n     // const ws: XLSX.WorkSheet=XLSX.utils.table_to_sheet(tab);//converts a DOM TABLE element to a worksheet\r\n     // const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n     // XLSX.utils.book_append_sheet(wb, ws, 'Mapped Charger');\r\n   \r\n     // /* save to file */\r\n     // XLSX.writeFile(wb, 'Mapped Charger.xlsx');\r\n     //this.preloader.open();\r\n     this.exportedData = [];\r\n    for (let i = 0; i < this.users.length; i++) {\r\n       var usersModel = this.users[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = {'First Name':usersModel.f_name,'Last Name':usersModel.l_name,'Employee Code':usersModel.employee_code,\r\n                  'Email': usersModel.email,'Mobile ':usersModel.mobile,'Username ':usersModel.username,'Aadhar ':usersModel.aadhar,\r\n                  'Address1 ':usersModel.address1,'Address2 ':usersModel.address1,\r\n                'Status':usersModel.statusString};\r\n      this.exportedData.push(data);\r\n    }\r\n    \r\n\r\n     const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n       const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n       XLSX.utils.book_append_sheet(workBook, workSheet, 'Users');\r\n       XLSX.writeFile(workBook, 'Users.xlsx');\r\n     //XLSX.writeFileAsync('OCPP Logs.xlsx',workBook, this.cb)\r\n      //this.preloader.close();\r\n     \r\n   \r\n   }\r\n\r\n   pdfExport(){\r\n    //this.preloader.open();\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n      \r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var chrger = this.dataSource.filteredData[i];\r\n     //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n     //statusString: `statusString${i}`});\r\n     var data =[chrger.f_name,chrger.l_name,chrger.employee_code,chrger.email,chrger.mobile,chrger.username,chrger.aadhar,chrger.address1,chrger.address1,chrger.statusString] ;\r\n     \r\n     this.exportedData.push(data);\r\n   }\r\n   var img = new Image();\r\n   var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n   imgRight.src =srcSparkEV;\r\n   var createdDate = new Date().toLocaleString(('en-GB'));\r\n   img.src = src;\r\n   doc.setFontSize(11);\r\n   doc.setTextColor(100);\r\n   doc.setFontSize(18);\r\n   \r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla',fillColor:[11, 148, 68]},\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n        \r\n      },\r\n     \r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage:data=>{\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n        \r\n        doc.text('Users Report' ,doc.internal.pageSize.getWidth() / 2, 11, { align: 'center'});\r\n        \r\n        doc.setTextColor(211,211,211);\r\n        doc.setFontSize(60);\r\n        doc.setGState( doc.GState({opacity: 0.6}));\r\n        doc.text('Confidential/Not for Public use',25,285,null,60, );\r\n        doc.setGState( doc.GState({opacity: 1}));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:'+ createdDate ,15, 18);\r\n        \r\n        doc.text('Generated By:'+ this.localStorage.f_Name ,195, 18,{ align: 'right'});\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n  \r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n    //this.preloader.close();\r\n    // below line for Download PDF document  \r\n    doc.save('Users report.pdf');\r\n   \r\n  }\r\n  addWaterMark(doc){\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n     //Print Page 1 of 4 for example\r\n     \r\n     doc.text('Page ' +  String(i) + ' of ' + String(newpage),210-20,297-10,null,null,\"right\")\r\n    \r\n    \r\n  \r\n    return doc;\r\n  \r\n  }\r\n}\r\n\r\n","<!--mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"password\">\r\n</mat-form-field-->\r\n<div style=\"text-align: left ;\r\nmargin-left: 10px;\r\nmargin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab  color=\"primary\" (click)=\"tableExport()\"  matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon> \r\n      </button>&nbsp;&nbsp;\r\n      <button mat-mini-fab  color=\"primary\" (click)=\"pdfExport()\"  matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon> \r\n      </button>\r\n    <!-- <img      src=\"/assets/images/excel_icon.png\" matTooltip=\"export to excel\" width=\"36px\" height=\"auto\" style=\"cursor:pointer;margin-bottom: 18px;float:inline-end;\"/> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <div>\r\n            <table mat-table matTableFilter [dataSource]=\"dataSource\" [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\" matSort class=\"mat-elevation-z8\">\r\n                <ng-container matColumnDef=\"f_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!f_NameSearch\" class=\"custom_font_size\" style=\"display: flex;\">First Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('f_NameSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"f_NameSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"First Name\" [(ngModel)]=\"filterEntity.f_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('f_NameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.f_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"l_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!lNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Last Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('lNameSearch')\">search</mat-icon>\r\n                        </span>\r\n                        <mat-form-field *ngIf=\"lNameSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Last Name\" [(ngModel)]=\"filterEntity.l_name\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('lNameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.l_name}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"employee_code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!employeeCodeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Employee Code\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('employeeCodeSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"employeeCodeSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Employee Code\" [(ngModel)]=\"filterEntity.employee_code\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('employeeCodeSearch')\">highlight_off\r\n                            </mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.employee_code}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!emailSearch\" class=\"custom_font_size\" style=\"display: flex;\">Email &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"emailSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Email\" [(ngModel)]=\"filterEntity.email\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('emailSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobile\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!mobileSearch\" class=\"custom_font_size\" style=\"display: flex;\">Mobile &nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"mobileSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Mobile\" [(ngModel)]=\"filterEntity.mobile\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('mobileSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.mobile}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"username\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!userNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">User Name\r\n                            &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch')\">search\r\n                            </mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"userNameSearch\" appearance=\"outline\" style=\"width: 250px;\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"User Name\" [(ngModel)]=\"filterEntity.username\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('userNameSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status&nbsp;&nbsp;\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 250px\"\r\n                            class=\"list_input\">\r\n                            <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('statusSearch')\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                        {{row.statusString}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef >\r\n                        <span class=\"custom_font_size\" style=\"display: flex;\">Action </span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog(element)\"\r\n                            style=\"cursor:pointer\">visibility</mat-icon>&nbsp;\r\n                        <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                            style=\"cursor:pointer\">edit</mat-icon>&nbsp;\r\n\r\n                        <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                            delete</mat-icon>&nbsp;\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n\r\n            </table>\r\n\r\n            <mat-paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl, FormControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { CountriesService } from 'app/shared/services/countries.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations,\r\n  providers: [DatePipe]\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  role_types: any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  cpo_types: any;\r\n  clients: any;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  stationValid:boolean  =false;\r\n  chargingStationName:any;\r\n  cpoValid:boolean = false;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar,private chargingStationService: ChargingStationService, private datePipe: DatePipe, public countryService: CountriesService, private userService: UserService,\r\n    private cpoService: CpoService, private roleService: RoleService, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private clientService: ClientService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      roleType: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpoType:['',[autocompleteObjectValidator(),Validators.required]],\r\n      charStat: ['',[autocompleteObjectValidator(),Validators.required]],\r\n      f_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      m_name: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      l_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      pan: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_empCode: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_dob: ['', [Validators.required]],\r\n      u_email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      u_mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['', [Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_userID: ['', [Validators.pattern(/^[a-zA-Z0-9._]*$/), Validators.required]],\r\n      u_aadhar: [''],\r\n\r\n      u_addressline1: ['', [Validators.required]],\r\n      u_addressline2: [''],\r\n      pincode: ['', [Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$'), Validators.required]],\r\n      u_landmark: [''],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getRoleTypes(project_id,client_id);\r\n    this.getClients();\r\n    //this.getCpoTypes(this.localStorage);\r\n    this.getCity();\r\n \r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    let params;\r\n    if(this.form.invalid){\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 3000 });\r\n    }else{\r\n      params= {\r\n        client_id:formValues.client.id,\r\n        cpo_id: formValues.cpoType == null ? 0  : formValues.cpoType.id,\r\n        char_Station: formValues.charStat == null ? 0  : formValues.charStat.id,\r\n        user_type:formValues.roleType.code,\r\n        role_id:formValues.roleType.id,\r\n        f_Name: formValues.f_name,\r\n        m_Name: formValues.m_name,\r\n        l_Name: formValues.l_name,\r\n        PAN: formValues.pan,\r\n        employee_code: formValues.u_empCode,\r\n        dob: this.datePipe.transform(formValues.u_dob, \"yyyy-MM-dd\"),\r\n        email : formValues.u_email,\r\n        mobile : formValues.u_mobile,\r\n        alt_mobile: formValues.u_altmobile,\r\n        username : formValues.u_userID,\r\n        aadhar : formValues.u_aadhar,\r\n        //password: formValues.u_confirmPassword,\r\n        address1: formValues.u_addressline1,\r\n        address2: formValues.u_addressline2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.u_landmark,\r\n        country_id: formValues.country.id,\r\n        state_id: formValues.state.id,\r\n        city_id: formValues.city.id,\r\n        can_expire:\"Y\",\r\n        status :  this.status == true ? 'Y' : 'N',\r\n        registration_origin:\"WEB\",\r\n        created_by: this.localStorage.userId\r\n      }\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n      if(this.isEditMode ){\r\n        this.userService.update(params).subscribe(\r\n          (resp:any) => {\r\n            if(resp.status == true){\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            }\r\n          },(err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        );\r\n      }else{\r\n        this.userService.create(params).subscribe(\r\n          (data: any ) => {\r\n            this.snackBar.open(MessageConstant.chargerNCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n    \r\n      }\r\n    \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    //this.form.get('roleType').setValue(params.data.role_types.id);\r\n\r\n    this.form.get('f_name').setValue(params.data.f_name);\r\n    this.form.get('m_name').setValue(params.data.m_name);\r\n    this.form.get('l_name').setValue(params.data.l_name);\r\n    this.form.get('pan').setValue(params.data.PAN);\r\n    this.form.get('u_empCode').setValue(params.data.employee_code);\r\n    this.form.get('u_dob').setValue(params.data.dob);\r\n    this.form.get('u_email').setValue(params.data.email);\r\n    this.form.get('u_mobile').setValue(params.data.mobile);\r\n    this.form.get('u_altmobile').setValue(params.data.alt_mobile);\r\n    this.form.get('u_userID').setValue(params.data.username);\r\n    this.form.get('u_aadhar').setValue(params.data.aadhar);\r\n\r\n    this.form.get('u_addressline1').setValue(params.data.address1);\r\n    this.form.get('u_addressline2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('u_landmark').setValue(params.data.landmark);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.u_password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType() {\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType() {\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  getRoleTypes(project_id,client_id) {\r\n\r\n    this.roleService.getActiveRolesByClientId(project_id,client_id).subscribe(\r\n      (resp: any) => {\r\n        this.role_types = resp.data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.role_types.find(c => c.id == this.params.data.role_id);\r\n          this.form.get('roleType').setValue(toSelect);\r\n          this.onRoleChange(toSelect)\r\n          this.filteredOptionsRole = this.form.controls.roleType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterRoleType(name) : this.role_types)\r\n          );\r\n        }  \r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  onRoleChange(object){\r\n    //console.log(object);\r\n    if(object.code == 'ADMIN'){\r\n\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue(null);\r\n      this.form.get('charStat').setValue(null);\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'EU'){\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'CPO'){\r\n      this.cpoValid = true;\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('charStat').clearValidators();\r\n      this.stationValid = false;\r\n    }\r\n    else if(object.code == 'SC'){\r\n      this.cpoValid = true;\r\n      this.stationValid = true;\r\n    }\r\n   else if(object.code == 'SO'){\r\n      this.cpoValid = true;\r\n      \r\n      this.stationValid = true;\r\n   }\r\n   else{\r\n    this.form.get('cpoType').clearValidators();\r\n    this.form.get('charStat').clearValidators();\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n        this.cpoValid = false;\r\n        this.stationValid = false;\r\n    }\r\n    \r\n    this.form.get(\"cpoType\").setValue('');\r\n    this.form.get(\"charStat\").setValue('');\r\n    this.getCpoTypes(this.localStorage.client_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n          if (toSelect != null) {\r\n            this.getCitiesByStates(toSelect);\r\n          }\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        \r\n        this.cities = resp.data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n          }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n\r\n\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterRoleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.role_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode.trim();\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (resp: any) => {\r\n        //this.form.reset();\r\n        if (resp.data != undefined && resp.data != null && resp.data.length > 0) {\r\n          this.state_id = resp.data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == resp.data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = resp.data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata.data;\r\n                  const toSelect = this.states.find(c => c.id == resp.data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = resp.data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata.data;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue('');\r\n    this.form.get('city').setValue('');\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  onCityChange(event){\r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCpoTypes(client_id) {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cpo_types = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cpo_types.find(c => c.id == this.params.data.cpo_id);\r\n          if( toSelect != null){\r\n            this.form.get('cpoType').setValue(toSelect);\r\n            this.getStationByCPO(toSelect.id);\r\n          }\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n          this.getRoleTypes(this.localStorage.project_id,toSelect.id);\r\n          this.getCpoTypes(toSelect.id);\r\n        }\r\n          this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterClientModels(name) : this.clients)\r\n            );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    this.form.get('cpoType').setValue(\"\");\r\n    this.form.get('roleType').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    this.getRoleTypes(this.localStorage.project_id,value.id);\r\n    this.getCpoTypes(value.id);\r\n  }\r\n  getStationByCPO(id) {\r\n    this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n      (data: any) => {\r\n        this.chargingStationName = data.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargingStationName.find(c => c.id == this.params.data.station_id);\r\n          this.form.get('charStat').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n          );\r\n      },\r\n      (err) => {\r\n        ////\r\n      })\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage User</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            required>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n          (optionSelected)='onClientChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n            </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n          <mat-label>Roles</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"roleType\" autocomplete=\"off\" [matAutocomplete]=\"roleTypeAuto\" required>\r\n          <mat-autocomplete #roleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayRole\" (optionSelected)='onRoleChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select roles\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('roleType').invalid\">Please select roles </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"cpoValid\">\r\n          <mat-label>CPO</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpoType\" autocomplete=\"off\" [matAutocomplete]=\"cpoTypeAuto\" required>\r\n          <mat-autocomplete #cpoTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpoType').invalid\">Please select cpo type\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\"  *ngIf=\"stationValid\">\r\n          <mat-label>Select Charging Station</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n          <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n            Please select charging station\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"f_name\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('required')\">First name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Middle Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"m_name\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Middle name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('m_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"l_name\" required>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('required')\">Last name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Date Of Birth</mat-label>\r\n          <input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"u_dob\" disabled>\r\n\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter dob\">help</mat-icon>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('u_dob').invalid\">Please enter date of birth</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_email\" required  style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Employee Code</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_empCode\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter emplyee code\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_empCode').invalid\">Please enter employee code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_empCode').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_userID\" required autocomplete=\"off\" style=\"text-transform: none;\" >\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter user name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_userID').invalid\">Please enter username\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\" formControlName=\"u_password\"\r\n          required autocomplete=\"off\">\r\n        <mat-icon (click)=\"togglePasswordFieldType()\" matSuffix matTooltip=\"Please enter password\">{{isPasswordFieldType\r\n          ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_password').invalid\">Please enter password</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n          formControlName=\"u_confirmPassword\" required>\r\n        <mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix matTooltip=\"Please enter confirm password\">\r\n          {{isPasswordConfirmFieldType ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('required')\">Please confirm your password!</mat-error>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('confirm')\">Password is inconsistent! </mat-error>\r\n      </mat-form-field> -->\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_mobile\" type=\"number\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile number\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Alternate Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_altmobile\" type=\"number\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter secondary mobile\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_altmobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pan Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"pan\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pan card\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pan').invalid\">Please enter pan number\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pan').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Aadhar Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_aadhar\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter aadhar\">help</mat-icon>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      \r\n      <h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline1\" required autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline2\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required\r\n            autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n            required>\r\n\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" required>\r\n\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" required>\r\n\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_landmark\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button type=\"button\" color=\"accent\" class=\"m-t-8\" (click)=\"close()\">Cancel</button>\r\n\r\n        <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" style=\"margin-left: 1%;\"\r\n          (click)=\"onYesClick()\">Save</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent , canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators,ValidatorFn,AbstractControl,FormControl  } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { DatePipe } from '@angular/common';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\n\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ActionDialogComponent } from 'app/main/client/action-dialog/action-dialog.component';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  status = false;\r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  role_types: any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  countries: any;\r\n  stateName: any;\r\n  cities: any;\r\n  states: any;\r\n  pin_code_id: any;\r\n  country_id: any;\r\n  state_id: any;\r\n  cpo_types: any;\r\n  clients: any;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  @ViewChild(\"toggleElement\") ref: any;\r\n  maxDate = new Date();\r\n  stationValid:boolean  =false;\r\n  chargingStationName:any;\r\n  cpoValid:boolean = false;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar,private chargingStationService: ChargingStationService, private datePipe: DatePipe, public countryService: CountriesService, private userService: UserService,\r\n    private cpoService: CpoService, private roleService: RoleService, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n     @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private clientService: ClientService) { }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.params = this.data;\r\n\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      roleType: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      cpoType:['',[autocompleteObjectValidator(),Validators.required]],\r\n      charStat: ['',[autocompleteObjectValidator(),Validators.required]],\r\n      f_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      m_name: ['', [Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      l_name: ['', [Validators.pattern(/^[a-zA-Z]*$/), Validators.required]],\r\n      pan: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_empCode: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_dob: ['', [Validators.required]],\r\n      u_email: ['', [Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      u_mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['', [Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_userID: ['', [Validators.pattern(/^[a-zA-Z0-9._]*$/), Validators.required]],\r\n      u_aadhar: [''],\r\n\r\n      u_addressline1: ['', [Validators.required]],\r\n      u_addressline2: [''],\r\n      pincode: ['', [Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$'), Validators.required]],\r\n      u_landmark: [''],\r\n      country: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n    }\r\n    this.getAllCountry();\r\n    this.getAllState();\r\n    //this.getRoleTypes(project_id,client_id);\r\n    this.getClients();\r\n    //this.getCpoTypes(this.localStorage);\r\n    this.getCity();\r\n \r\n  }\r\n\r\n  close() {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  onYesClick() {\r\n    let formValues = this.form.value;\r\n    let params;\r\n    if(this.form.invalid){\r\n      return;\r\n    }else{\r\n      params= {\r\n        client_id:formValues.client.id,\r\n        cpo_id: formValues.cpoType == null ? 0  : formValues.cpoType.id,\r\n        char_Station: formValues.charStat == null ? 0  : formValues.charStat.id,\r\n        user_type:formValues.roleType.code,\r\n        role_id:formValues.roleType.id,\r\n        f_Name: formValues.f_name,\r\n        m_Name: formValues.m_name,\r\n        l_Name: formValues.l_name,\r\n        PAN: formValues.pan,\r\n        employee_code: formValues.u_empCode,\r\n        dob: this.datePipe.transform(formValues.u_dob, \"yyyy-MM-dd\"),\r\n        email : formValues.u_email,\r\n        mobile : formValues.u_mobile,\r\n        alt_mobile: formValues.u_altmobile,\r\n        username : formValues.u_userID,\r\n        aadhar : formValues.u_aadhar,\r\n        //password: formValues.u_confirmPassword,\r\n        address1: formValues.u_addressline1,\r\n        address2: formValues.u_addressline2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.u_landmark,\r\n        country_id: formValues.country.id,\r\n        state_id: formValues.state.id,\r\n        city_id: formValues.city.id,\r\n        can_expire:\"Y\",\r\n        status :  this.status == true ? 'Y' : 'N',\r\n        registration_origin:\"WEB\",\r\n        created_by: this.localStorage.userId\r\n  \r\n        // tslint:disable-next-line: semicolon\r\n      }\r\n      if (this.isEditMode) {\r\n        params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n        params.created_by = this.localStorage.userId;\r\n      }\r\n  \r\n  \r\n      this.dialogRef.close(params);\r\n    }\r\n    \r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    //this.form.get('roleType').setValue(params.data.role_types.id);\r\n\r\n    this.form.get('f_name').setValue(params.data.f_name);\r\n    this.form.get('m_name').setValue(params.data.m_name);\r\n    this.form.get('l_name').setValue(params.data.l_name);\r\n    this.form.get('pan').setValue(params.data.PAN);\r\n    this.form.get('u_empCode').setValue(params.data.employee_code);\r\n    this.form.get('u_dob').setValue(params.data.dob);\r\n    this.form.get('u_email').setValue(params.data.email);\r\n    this.form.get('u_mobile').setValue(params.data.mobile);\r\n    this.form.get('u_altmobile').setValue(params.data.alt_mobile);\r\n    this.form.get('u_userID').setValue(params.data.username);\r\n    this.form.get('u_aadhar').setValue(params.data.aadhar);\r\n\r\n    this.form.get('u_addressline1').setValue(params.data.address1);\r\n    this.form.get('u_addressline2').setValue(params.data.address2);\r\n    this.form.get('pincode').setValue(params.data.PIN);\r\n    this.form.get('u_landmark').setValue(params.data.landmark);\r\n\r\n    this.status = params.data.status == 'Y' ? true : false;\r\n  }\r\n\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.ref.checked = this.status;\r\n  }\r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.u_password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType() {\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType() {\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  getRoleTypes(project_id,client_id) {\r\n\r\n    this.roleService.getActiveRolesByClientId(project_id,client_id).subscribe(\r\n      (resp: any) => {\r\n        this.role_types = resp.data;\r\n        \r\n        if(this.isEditMode){\r\n          const toSelect = this.role_types.find(c => c.id == this.params.data.role_id);\r\n          this.form.get('roleType').setValue(toSelect);\r\n          this.onRoleChange(toSelect)\r\n          this.filteredOptionsRole = this.form.controls.roleType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterRoleType(name) : this.role_types)\r\n          );\r\n        }  \r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  onRoleChange(object){\r\n    //console.log(object);\r\n    if(object.code == 'ADMIN'){\r\n\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue(null);\r\n      this.form.get('charStat').setValue(null);\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'EU'){\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'CPO'){\r\n      this.cpoValid = true;\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('charStat').clearValidators();\r\n      this.stationValid = false;\r\n    }\r\n    else if(object.code == 'SC'){\r\n      this.cpoValid = true;\r\n      this.stationValid = true;\r\n    }\r\n   else if(object.code == 'SO'){\r\n      this.cpoValid = true;\r\n      \r\n      this.stationValid = true;\r\n   }\r\n   else{\r\n    this.form.get('cpoType').clearValidators();\r\n    this.form.get('charStat').clearValidators();\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n        this.cpoValid = false;\r\n        this.stationValid = false;\r\n    }\r\n    \r\n    this.form.get(\"cpoType\").setValue('');\r\n    this.form.get(\"charStat\").setValue('');\r\n    this.getCpoTypes(this.localStorage.client_id);\r\n  }\r\n  getAllCountry() {\r\n    this.countryService.getAllCountry().subscribe(\r\n      (resp: any) => {\r\n        this.countries = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.countries.find(c => c.id == this.params.data.country_id);\r\n          this.form.get('country').setValue(toSelect);\r\n          this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getAllState() {\r\n    this.countryService.getAllState().subscribe(\r\n      (resp: any) => {\r\n        this.states = resp;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.states.find(c => c.id == this.params.data.state_id);\r\n          this.form.get('state').setValue(toSelect);\r\n          this.filteredOptionState = this.form.controls.state.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              // tap(() => this.form.controls.currentVersion.setValue(toSelect)),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterState(name) : this.states)\r\n            );\r\n          if (toSelect != null) {\r\n            this.getCitiesByStates(toSelect);\r\n          }\r\n        }\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  getCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        \r\n        this.cities = resp.data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.cities.find(c => c.id == this.params.data.city_id);\r\n          this.form.get('city').setValue(toSelect);\r\n          this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n          }\r\n         \r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n\r\n\r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterRoleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.role_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getStateCountry() {\r\n\r\n    this.pin_code_id = this.form.value.pincode.trim();\r\n\r\n    //;\r\n    this.countryService.getCountryStateByPIN(this.pin_code_id).subscribe(\r\n      (resp: any) => {\r\n        //this.form.reset();\r\n        if (resp.data != undefined && resp.data != null && resp.data.length > 0) {\r\n          this.state_id = resp.data[0].state_id;\r\n          //;\r\n          this.countryService.getCountryByState(this.state_id).subscribe(\r\n            (countrydata: any) => {\r\n              //this.form.reset();\r\n              this.countries = countrydata;\r\n              const toSelect = this.countries.find(c => c.id == resp.data[0].country_id);\r\n              this.form.get('country').setValue(toSelect);\r\n\r\n              this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCountry(name) : this.countries)\r\n                );\r\n              //; \r\n              this.country_id = resp.data[0].country_id;\r\n              this.countryService.getStateByCountry(this.country_id).subscribe(\r\n                (statedata: any) => {\r\n                  //this.form.reset();\r\n                  this.states = statedata.data;\r\n                  const toSelect = this.states.find(c => c.id == resp.data[0].state_id);\r\n                  this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionState = this.form.controls.state.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterState(name) : this.states)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n              //; \r\n              this.state_id = resp.data[0].state_id;\r\n              this.countryService.getCityByState(this.state_id).subscribe(\r\n                (Citydata: any) => {\r\n                  //this.form.reset();\r\n                  this.cities = Citydata.data;\r\n                  //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                  // this.form.get('state').setValue(toSelect);\r\n\r\n                  this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                    .pipe(\r\n                      startWith(''),\r\n                      map(value => typeof value === 'string' ? value : value.name),\r\n                      map(name => name ? this._filterCity(name) : this.cities)\r\n                    );\r\n\r\n                }, (err) => {\r\n\r\n                }\r\n              )\r\n            }, (err) => {\r\n\r\n            }\r\n          )\r\n        } else {\r\n\r\n        }\r\n\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onCountryChange(event) {\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n\r\n\r\n    //this.form.get('pincode').setValue(\"\");\r\n    this.form.get('state').setValue('');\r\n    this.form.get('city').setValue('');\r\n  }\r\n  getStatesByCountry(state) {\r\n    this.state_id = state.id;\r\n    this.countryService.getStateByCountry(this.state_id).subscribe(\r\n      (statedata: any) => {\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterState(name) : this.states)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  onStateChange(event) {\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue(\"\");\r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  onCityChange(event){\r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCityByState(this.state_id).subscribe(\r\n      (citiesdata: any) => {\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n        // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n        // this.form.get('state').setValue(toSelect);\r\n\r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCity(name) : this.cities)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId) {\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id).subscribe(\r\n      (countrydata: any) => {\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n\r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCountry(name) : this.countries)\r\n          );\r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayCountry(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCity(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCpoTypes(client_id) {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data: any) => {\r\n        this.cpo_types = data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.cpo_types.find(c => c.id == this.params.data.cpo_id);\r\n          if( toSelect != null){\r\n            this.form.get('cpoType').setValue(toSelect);\r\n            this.getStationByCPO(toSelect.id);\r\n          }\r\n        }\r\n        this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n          );\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n\r\n  }\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getClients() {\r\n\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data: any) => {\r\n        this.clients = data;\r\n        if (this.isEditMode) {\r\n\r\n          const toSelect = this.clients.find(c => c.id == this.params.data.client_id);\r\n          this.form.get('client').setValue(toSelect);\r\n          this.getRoleTypes(this.localStorage.project_id,toSelect.id);\r\n          this.getCpoTypes(toSelect.id);\r\n        }\r\n          this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterClientModels(name) : this.clients)\r\n            );\r\n\r\n           \r\n        \r\n\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    this.form.get('cpoType').setValue(\"\");\r\n    this.form.get('roleType').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n    this.getRoleTypes(this.localStorage.project_id,value.id);\r\n    this.getCpoTypes(value.id);\r\n  }\r\n  getStationByCPO(id) {\r\n    this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n      (data: any) => {\r\n        this.chargingStationName = data.data;\r\n        if (this.isEditMode) {\r\n          const toSelect = this.chargingStationName.find(c => c.id == this.params.data.station_id);\r\n          this.form.get('charStat').setValue(toSelect);\r\n        }\r\n        this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n          );\r\n      },\r\n      (err) => {\r\n        ////\r\n      })\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<!-- close button on popup -->\r\n<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n  style=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon> \r\n  \r\n<mat-toolbar class=\"action_toolbar\">Manage User</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"mat-elevation-z4 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\tname=\"form\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Client</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n            readonly>\r\n          <mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n          (optionSelected)='onClientChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle</mat-icon>\r\n            </div>\r\n          <mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n          <mat-label>Roles</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"roleType\" autocomplete=\"off\" [matAutocomplete]=\"roleTypeAuto\" readonly>\r\n          <mat-autocomplete #roleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayRole\" (optionSelected)='onRoleChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select roles\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('roleType').invalid\">Please select roles </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"cpoValid\">\r\n          <mat-label>CPO</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"cpoType\" autocomplete=\"off\" [matAutocomplete]=\"cpoTypeAuto\" readonly>\r\n          <mat-autocomplete #cpoTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\">\r\n            <mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo type\">help</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('cpoType').invalid\">Please select cpo type\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\"  *ngIf=\"stationValid\">\r\n          <mat-label>Select Charging Station</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n          <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\" readonly>\r\n            <mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help\r\n            </mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('charStat').invalid\">\r\n            Please select charging station\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"f_name\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('required')\">First name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('f_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Middle Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"m_name\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Middle name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('m_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"l_name\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('required')\">Last name is required</mat-error>\r\n          <mat-error *ngIf=\"form.get('l_name').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Date Of Birth</mat-label>\r\n          <input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"u_dob\" disabled>\r\n\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter dob\">help</mat-icon>\r\n            <mat-datepicker-toggle matSuffix [disabled]=\"true\"  [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('u_dob').invalid\">Please enter date of birth</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_email\" readonly  style=\"text-transform: none;\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('required')\">Please enter email</mat-error>\r\n          <mat-error *ngIf=\"form.get('u_email').hasError('pattern')\">Please enter valid email</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Employee Code</mat-label>\r\n          <input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_empCode\" readonly>\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter emplyee code\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_empCode').invalid\">Please enter employee code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_empCode').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_userID\" readonly autocomplete=\"off\" style=\"text-transform: none;\" >\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter user name\">account_circle</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_userID').invalid\">Please enter username\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\" formControlName=\"u_password\"\r\n          required autocomplete=\"off\">\r\n        <mat-icon (click)=\"togglePasswordFieldType()\" matSuffix matTooltip=\"Please enter password\">{{isPasswordFieldType\r\n          ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_password').invalid\">Please enter password</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n          formControlName=\"u_confirmPassword\" required>\r\n        <mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix matTooltip=\"Please enter confirm password\">\r\n          {{isPasswordConfirmFieldType ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('required')\">Please confirm your password!</mat-error>\r\n        <mat-error *ngIf=\"form.get('u_confirmPassword').hasError('confirm')\">Password is inconsistent! </mat-error>\r\n      </mat-form-field> -->\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_mobile\" type=\"number\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile number\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('required')\">Please enter mobile\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('u_mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Alternate Mobile Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_altmobile\" readonly type=\"number\" autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter secondary mobile\">phone_android</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_altmobile').hasError('pattern')\">Mobile number must be 10 digit\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pan Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"pan\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pan card\">help</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pan').invalid\">Please enter pan number\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pan').hasError('pattern')\">Special character are not allowed</mat-error>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n          <mat-label>Aadhar Number</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_aadhar\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter aadhar\">help</mat-icon>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n\r\n      \r\n      <h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 1</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline1\"  readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline1').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Address Line 2</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_addressline2\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_addressline2').invalid\">Please enter address line\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Pin Code</mat-label>\r\n\r\n          <input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" readonly\r\n            autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n          </mat-error>\r\n          <mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>Country</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n          readonly>\r\n\r\n          <mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n            (optionSelected)='onCountryChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>State</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\" readonly>\r\n\r\n          <mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n            (optionSelected)='onStateChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n          <mat-label>City</mat-label>\r\n          <input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\" readonly>\r\n\r\n          <mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n          (optionSelected)='onCityChange($event.option.value)'>\r\n            <mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n              {{option.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <div matSuffix style=\"display: flex;\">\r\n            <mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n            <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city</mat-icon>\r\n          </div>\r\n          <mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n        <mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n          <mat-label>Landmark</mat-label>\r\n          <input matInput placeholder=\"\" formControlName=\"u_landmark\" readonly autocomplete=\"off\">\r\n          <mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n          <mat-error *ngIf=\"form.get('u_landmark').invalid\">Please enter landmark\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n          <mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\" (change)=\"updateStatus($event)\"\r\n            #toggleElement>\r\n            {{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n        <button mat-raised-button type=\"button\" color=\"accent\" class=\"m-t-8\" (click)=\"close()\">Cancel</button>\r\n\r\n        <!-- <button mat-raised-button color=\"primary\" type=\"button\" class=\"m-t-8\" style=\"margin-left: 1%;\"\r\n          (click)=\"onYesClick()\">Save</button> -->\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { UserCrudComponent } from './user-crud/user-crud.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[UserCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ActionDialogComponent,ViewDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, UserRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class UserModule{}","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-user-crud',\r\n  templateUrl: './user-crud.component.html',\r\n  styleUrls: ['./user-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class UserCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'User', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  childData: any;\r\n  constructor(private router: Router, private cdr: ChangeDetectorRef, private _utilityService: UtilityService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"userManagement\") {\r\n        this.objectData = x;\r\n        if (this.objectData.children != null && this.objectData.children != undefined) {\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"localUser\") {\r\n              this.objectChildData = y;\r\n              if (this.objectChildData.children != undefined && this.objectChildData.children != null) {\r\n                this.objectChildData.children.filter((z) => {\r\n                  let isDefaultRoutePermeted = false;\r\n                  if (z.id === \"user\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'User', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                  this.tabLinks = this.tempLinks;\r\n                  if (!isDefaultRoutePermeted) {\r\n                    this.router.navigate(['/userManagement/user/' + this.tempLinks[0].link]);\r\n                  }\r\n                });\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte => {\r\n      this.menuArray = menuItemSelecte;\r\n      if (this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined) {\r\n        this.menuArray = JSON.parse(localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"dashboard-project\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0 \" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet ></router-outlet>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserCrudComponent } from './user-crud/user-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './user-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : '',component : UserCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n    \r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class UserRoutingModule{}","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup,FormControl,ValidatorFn,AbstractControl } from '@angular/forms';\r\nimport { MasterService } from 'app/shared/services/master/master.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'app/shared/services/user/user.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport {CountriesService} from 'app/shared/services/countries.service';\r\nimport {MessageConstant} from 'app/shared/utils/message.constant';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { RoleService } from 'app/shared/services/user/role.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n} \r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations   : fuseAnimations,\r\n  providers:[DatePipe]\r\n})\r\nexport class CreateComponent implements OnInit {\r\n \r\n  isPasswordFieldType: boolean;\r\n  isPasswordConfirmFieldType: boolean;\r\n  form: FormGroup;\r\n  localStorage : any;\r\n  params: any;\r\n  role_types:any;\r\n  filteredOptionsRole: Observable<any[]>;\r\n  filteredOptionsCpo: Observable<any[]>;\r\n  filteredOptionsClient: Observable<any[]>;\r\n  filteredOptionCountry: Observable<any[]>;\r\n  filteredOptionState: Observable<any[]>;\r\n  filteredOptionCity: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  countries:any;\r\n  stateName:any;\r\n  cities:any;\r\n  states:any;\r\n  pin_code_id:any;\r\n  country_id:any;\r\n  state_id:any;\r\n  cpo_types:any;\r\n  clients:any;\r\n  status = true;\r\n  errorMsg:String;\r\n  splitted:String;\r\n  chargingStationName: any;\r\n  isSubmit=true;\r\n  @ViewChild(\"activeElement\") active:any;\r\n  maxDate=new Date();\r\n  stationValid:boolean  =false;\r\n  cpoValid:boolean = false;\r\n  selectedClient:any;\r\n  constructor(private fb: FormBuilder, private masterService : MasterService,\r\n    private userService : UserService,private snackBar: MatSnackBar,private chargingStationService: ChargingStationService,\r\n    private router : Router,private datePipe: DatePipe, private clientService : ClientService,\r\n    public countryService: CountriesService,private roleService:RoleService,private cpoService:CpoService) {\r\n     \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n    \r\n  }\r\n\r\n  initialize(){\r\n   \r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      client: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      roleType: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      cpoType:['', [autocompleteObjectValidator(), Validators.required]],\r\n      charStat: ['', [autocompleteObjectValidator(), Validators.required]],\r\n      f_name: ['', [Validators.pattern(/^[a-zA-Z]*$/),Validators.required]],\r\n      m_name: ['' ,[Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      l_name: ['', [Validators.pattern(/^[a-zA-Z]*$/),Validators.required]],\r\n      pan: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_empCode: ['', [Validators.pattern(/^[a-zA-Z0-9]*$/)]],\r\n      u_dob: ['', [Validators.required]],\r\n      u_email: ['', [Validators.required,Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')]],\r\n      u_mobile: ['', [Validators.required ,Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_altmobile: ['', [Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\r\n      u_userID: ['', [Validators.pattern(/^[a-zA-Z0-9._]*$/),Validators.required]],\r\n      u_aadhar: [''],\r\n\t    u_password: ['', [Validators.required,Validators.pattern('^[a-zA-Z0-9](?=.*?[_#?!@$%^&*-]).{6,}$')]],\r\n      u_confirmPassword: ['', [this.confirmValidator]],\r\n      u_addressline1: ['', [Validators.required]],\r\n      u_addressline2: [''],\r\n      pincode: ['', [Validators.pattern('^[1-9]{1}[0-9]{2}\\\\s{0,1}[0-9]{3}$'),Validators.required]],\r\n      u_landmark: [''],\r\n      country: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      state: ['', [autocompleteObjectValidator(),Validators.required]],\r\n      city: ['', [Validators.required]],\r\n      status : this.status == true ? 'Y' : 'N'\r\n    });\r\n   //this.filteredOptions();\r\n   \r\n   this.getAllCountry();\r\n    this.getAllState();\r\n    this.getClients();\r\n   this.getRoleTypes(this.localStorage.project_id,this.localStorage.client_id);\r\n   //this.getCpoTypes(this.localStorage.client_id);\r\n   \r\n  }\r\n  \r\n  getRoleTypes(project_id,client_id){\r\n    this.roleService.getActiveRolesByClientId(project_id,client_id).subscribe(\r\n      (resp:any)=>{\r\n        this.role_types = resp.data;\r\n        this.filteredOptionsRole = this.form.controls.roleType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterRoleType(name) : this.role_types)\r\n          );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n    //this.role_types = this.userService.getRoleTypes();\r\n  }\r\n  onRoleChange(object){\r\n    //console.log(object);\r\n    if(object.code == 'ADMIN'){\r\n\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue(null);\r\n      this.form.get('charStat').setValue(null);\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'EU'){\r\n      this.cpoValid = false;\r\n      this.stationValid = false;\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('cpoType').clearValidators();\r\n      this.form.get('charStat').clearValidators();\r\n    }\r\n    else if(object.code == 'CPO'){\r\n      this.cpoValid = true;\r\n      this.form.get('charStat').setValue('');\r\n      this.form.get('charStat').clearValidators();\r\n      this.stationValid = false;\r\n    }\r\n    else if(object.code == 'SC'){\r\n      this.cpoValid = true;\r\n      this.stationValid = true;\r\n    }\r\n   else if(object.code == 'SO'){\r\n      this.cpoValid = true;\r\n      \r\n      this.stationValid = true;\r\n   }\r\n   else{\r\n    this.form.get('cpoType').clearValidators();\r\n    this.form.get('charStat').clearValidators();\r\n      this.form.get('cpoType').setValue('');\r\n      this.form.get('charStat').setValue('');\r\n        this.cpoValid = false;\r\n        this.stationValid = false;\r\n    }\r\n    \r\n    this.form.get(\"cpoType\").setValue('');\r\n    this.form.get(\"charStat\").setValue('');\r\n    this.getCpoTypes(this.selectedClient);\r\n  }\r\n\r\n  getAllCountry(){\r\n    this.countryService.getAllCountry().subscribe(\r\n      (data:any)=>{\r\n        this.countries = data;\r\n         this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCountry(name) : this.countries)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  getAllState(){\r\n    this.countryService.getAllState().subscribe(\r\n      (stateData:any)=>{\r\n        this.states = stateData;\r\n         this.filteredOptionState = this.form.controls.state.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterState(name) : this.states)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  getAllCity(){\r\n    this.countryService.getAllCities().subscribe(\r\n      (resp:any)=>{\r\n        this.cities = resp.data;\r\n         this.filteredOptionCity = this.form.controls.city.valueChanges\r\n           .pipe(\r\n             startWith(''),\r\n             map(value => typeof value === 'string' ? value : value.name),\r\n             map(name => name ? this._filterCity(name) : this.cities)\r\n           );\r\n         },(err)=>{\r\n           \r\n         }\r\n    )\r\n  }\r\n  \r\n  displayRole(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterRoleType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.role_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\r\n    if (!control.value) {\r\n      return { error: true, required: true };\r\n    } else if (control.value !== this.form.controls.u_password.value) {\r\n      return { error: true, confirm: true };\r\n    }\r\n  }\r\n  togglePasswordFieldType(){\r\n    this.isPasswordFieldType = !this.isPasswordFieldType;\r\n  }\r\n  togglePasswordConfirmFieldType(){\r\n    this.isPasswordConfirmFieldType = !this.isPasswordConfirmFieldType;\r\n  }\r\n  onSubmit(){\r\n\r\n    let formValues = this.form.value;\r\n    if(formValues.roleType.code == \"CPO\"){\r\n      this.form.get('cpoType').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if(formValues.roleType.code == \"SC\"){\r\n      this.form.get('cpoType').setValidators([autocompleteObjectValidator(),Validators.required])\r\n      this.form.get('charStat').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if(formValues.roleType.code == \"SO\"){\r\n      this.form.get('cpoType').setValidators([autocompleteObjectValidator(),Validators.required])\r\n      this.form.get('charStat').setValidators([autocompleteObjectValidator(),Validators.required])\r\n    }\r\n    if (this.form.invalid){\r\n        return;\r\n    }else{\r\n      let params = {\r\n        client_id:formValues.client.id,\r\n        cpo_id: formValues.cpoType == null ? 0  : formValues.cpoType.id,\r\n        char_Station: formValues.charStat == null ? 0  : formValues.charStat.id,\r\n        user_type:formValues.roleType.code,\r\n        f_Name: formValues.f_name,\r\n        role_id:formValues.roleType.id,\r\n        m_Name: formValues.m_name,\r\n        l_Name: formValues.l_name,\r\n        PAN: formValues.pan,\r\n        employee_code: formValues.u_empCode,\r\n        dob: this.datePipe.transform(formValues.u_dob, \"yyyy-MM-dd\"),\r\n        email : formValues.u_email,\r\n        mobile : formValues.u_mobile,\r\n        alt_mobile: formValues.u_altmobile,\r\n        username : formValues.u_userID,\r\n        aadhar : formValues.u_aadhar,\r\n        password: formValues.u_confirmPassword,\r\n        address1: formValues.u_addressline1,\r\n        address2: formValues.u_addressline2,\r\n        PIN: formValues.pincode,\r\n        landmark: formValues.u_landmark,\r\n        country_id: formValues.country.id,\r\n        state_id: formValues.state.id,\r\n        city_id: formValues.city.id,\r\n        can_expire:\"Y\",\r\n        status :  this.status == true ? 'Y' : 'N',\r\n        registration_origin:\"WEB\",\r\n        created_by : this.localStorage.userId \r\n      }\r\n      \r\n     \r\n      \r\n  \r\n      \r\n      this.userService.create(params).subscribe(\r\n        (resp:any )=>{\r\n          if(resp.status == true){\r\n            this.snackBar.open(MessageConstant.userCreated, 'Dismiss', { duration: 5000 });\r\n            this.router.navigate(['/userManagement/user/list']);\r\n          }else{\r\n            if(resp.err_code == \"ERROR : ER_DUP_ENTRY\"){\r\n              this. errorMsg = resp.message;\r\n              var index=  this. errorMsg.lastIndexOf(\" \");\r\n              this.splitted = this. errorMsg.substring(index+1); \r\n              if(this.splitted == \"'username'\" ){\r\n                this.snackBar.open(MessageConstant.userDuplicate, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'mobile'\"){\r\n                this.snackBar.open(MessageConstant.mobileDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }if(this.splitted == \"'email'\"){\r\n                this.snackBar.open(MessageConstant.emailDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n              if(this.splitted == \"'PAN'\"){\r\n                this.snackBar.open(MessageConstant.panDuplicateUser, 'Dismiss', { duration: 5000 });\r\n              }\r\n            }else{\r\n              this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n            }\r\n            //this.snackBar.open(resp.message, 'Dismiss', { duration: 5000 });\r\n          }\r\n  \r\n        },\r\n        (err)=>{\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      )\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  updateStatus(event){\r\n    this.status = event.checked;\r\n  \r\n  }\r\n  getStateCountry(){\r\n    \r\n    this.pin_code_id = this.form.value.pincode;\r\n  \r\n  //;\r\n  this.countryService.getCountryStateByPIN(this.pin_code_id ).subscribe(\r\n    (data:any)=>{\r\n      //this.form.reset();\r\n      if(data != undefined && data != null && data.length > 0){\r\n        this.state_id = data[0].state_id;\r\n        //;\r\n        this.countryService.getCountryByState(this.state_id ).subscribe(\r\n          (countrydata:any)=>{\r\n            //this.form.reset();\r\n            this.countries = countrydata;\r\n            const toSelect = this.countries.find(c => c.id == data[0].country_id);\r\n            this.form.get('country').setValue(toSelect);\r\n            \r\n            this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCountry(name) : this.countries)\r\n            );\r\n            //; \r\n            this.country_id = data[0].country_id;\r\n            this.countryService.getStateByCountry(this.country_id ).subscribe(\r\n              (statedata:any)=>{\r\n                //this.form.reset();\r\n                this.states = statedata;\r\n                const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n                this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionState = this.form.controls.state.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterState(name) : this.states)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n            //; \r\n            this.state_id = data[0].state_id;\r\n            this.countryService.getCityByState(this.state_id ).subscribe(\r\n              (Citydata:any)=>{\r\n                //this.form.reset();\r\n                this.cities = Citydata;\r\n                //const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n               // this.form.get('state').setValue(toSelect);\r\n                \r\n                this.filteredOptionCity = this.form.controls.city.valueChanges\r\n                .pipe(\r\n                  startWith(''),\r\n                  map(value => typeof value === 'string' ? value : value.name),\r\n                  map(name => name ? this._filterCity(name) : this.cities)\r\n                );\r\n                \r\n              },(err)=>{\r\n                \r\n              }\r\n            )\r\n          },(err)=>{\r\n            \r\n          }\r\n        )\r\n      }else{\r\n\r\n      }\r\n     \r\n      \r\n    },(err)=>{\r\n      \r\n    }\r\n    )\r\n  }\r\n  onCountryChange(event){\r\n    this.countries = [];\r\n    this.getAllCountry();\r\n    this.getStatesByCountry(event);\r\n    \r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n    this.form.get('state').setValue( \"\");\r\n    this.form.get('city').setValue( \"\");\r\n  }\r\n  getStatesByCountry(state){\r\n     this.state_id = state.id;\r\n     this.countryService.getStateByCountry(this.state_id ).subscribe(\r\n      (statedata:any)=>{\r\n        //this.form.reset();\r\n        this.states = statedata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionState = this.form.controls.state.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterState(name) : this.states)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  onStateChange(event){\r\n    this.getCitiesByStates(event);\r\n    this.getCountryByState(event);\r\n    this.form.get('city').setValue( \"\");\r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  onCityChange(event){\r\n   \r\n    //this.form.get('pincode').setValue( \"\");\r\n  }\r\n  getCitiesByStates(stateId){\r\n    this.state_id = stateId.id;\r\n     this.countryService.getCityByState(this.state_id ).subscribe(\r\n      (citiesdata:any)=>{\r\n        //this.form.reset();\r\n        this.cities = citiesdata;\r\n       // const toSelect = this.states.find(c => c.id == data[0].state_id);\r\n       // this.form.get('state').setValue(toSelect);\r\n        \r\n        this.filteredOptionCity = this.form.controls.city.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCity(name) : this.cities)\r\n        );\r\n        \r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  getCountryByState(stateId){\r\n    this.state_id = stateId.id;\r\n    this.countryService.getCountryByState(this.state_id ).subscribe(\r\n      (countrydata:any)=>{\r\n        //this.form.reset();\r\n        this.countries = countrydata;\r\n        const toSelect = this.countries.find(c => c.id == countrydata[0].id);\r\n        this.form.get('country').setValue(toSelect);\r\n        \r\n        this.filteredOptionCountry = this.form.controls.country.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCountry(name) : this.countries)\r\n        );\r\n       \r\n     },(err)=>{\r\n       \r\n     }\r\n   )\r\n  }\r\n  displayCountry(item: any): string {\r\n  return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCountry(name: string): any[] {\r\n  const filterValue = name.toLowerCase();\r\n  return this.countries.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayState(item: any): string {\r\n   return item && item.name ? item.name : '';\r\n  }\r\n  private _filterState(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.states.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCity(item: any): string {\r\n   return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCity(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n   return this.cities.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  getCpoTypes(client_id){\r\n    \r\n    //this.cpo_types = this.userService.getCPOTypes();\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (data:any)=>{\r\n        this.cpo_types = data;\r\n        this.filteredOptionsCpo = this.form.controls.cpoType.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterCpoType(name) : this.cpo_types)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n\r\n  onCPOChange(event) {\r\n    this.form.get('charStat').setValue(\"\");\r\n    this.getStationByCPO(event);\r\n  }\r\n\r\n  displayCpo(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCpoType(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cpo_types.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getClients(){\r\n    this.localStorage = JSON.parse( localStorage.getItem('userDetails'));\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (data:any)=>{\r\n        this.clients = data;\r\n\r\n         const toSelect = this.clients.find(c => c.id == this.localStorage.client_id);\r\n         this.form.get('client').setValue(toSelect);\r\n         this.selectedClient = toSelect.id;\r\n\r\n        this.filteredOptionsClient = this.form.controls.client.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => typeof value === 'string' ? value : value.name),\r\n          map(name => name ? this._filterClientModels(name) : this.clients)\r\n        );\r\n      },(err)=>{\r\n        \r\n      }\r\n    )\r\n  }\r\n  displayClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterClientModels(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clients.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  onClientChange(value){\r\n    this.getRoleTypes(this.localStorage.project_id,value.id);\r\n    this.selectedClient = value.id;\r\n    this.getCpoTypes(value.id)\r\n    this.form.get('cpoType').setValue(\"\");\r\n    this.form.get('roleType').setValue('');\r\n    this.form.get('charStat').setValue('');\r\n  }\r\n\r\n  getStationByCPO(id) {\r\n    this.chargingStationService.getChargingStationByCpoId(id).subscribe(\r\n      (data: any) => {\r\n        this.chargingStationName = data.data;\r\n        this.filteredOptionsCharStat = this.form.controls.charStat.valueChanges\r\n          .pipe(\r\n            startWith(''),\r\n            map(value => typeof value === 'string' ? value : value.name),\r\n            map(name => name ? this._filterCharStat(name) : this.chargingStationName)\r\n          );\r\n      },\r\n      (err) => {\r\n        ////\r\n      })\r\n  }\r\n  displayCharStat(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  private _filterCharStat(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.chargingStationName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n}\r\n\r\n\r\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<form [formGroup]=\"form\" class=\"mat-card mat-elevation-z4 p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\"\r\n\t\tfxFlex=\"1 0 auto\" name=\"form\" (submit)=\"onSubmit()\" *ngIf=\"isSubmit\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Client</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"client\" autocomplete=\"off\" [matAutocomplete]=\"clientAuto\"\r\n\t\t\t\t\trequired>\r\n\t\t\t\t<mat-autocomplete #clientAuto=\"matAutocomplete\" [displayWith]=\"displayClient\"\r\n\t\t\t\t\t(optionSelected)='onClientChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter client name\">account_circle\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('client').invalid\">Please select client </mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Roles</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"roleType\" autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"roleTypeAuto\" required>\r\n\t\t\t\t<mat-autocomplete #roleTypeAuto=\"matAutocomplete\" [displayWith]=\"displayRole\"\r\n\t\t\t\t\t(optionSelected)='onRoleChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsRole | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select role\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('roleType').invalid\">Please select roles </mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"cpoValid\">\r\n\t\t\t\t<mat-label>CPO</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"cpoType\" autocomplete=\"off\"\r\n\t\t\t\t\t[matAutocomplete]=\"cpoTypeAuto\">\r\n\t\t\t\t<mat-autocomplete #cpoTypeAuto=\"matAutocomplete\" [displayWith]=\"displayCpo\"\r\n\t\t\t\t\t(optionSelected)='onCPOChange($event.option.value.id)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCpo | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select cpo type\">help</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('cpoType').invalid\">Please select cpo type\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"18\" class=\"pr-4\" *ngIf=\"stationValid\">\r\n\t\t\t\t<mat-label>Select Charging Station</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n\t\t\t\t<mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\">\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('charStat').invalid\">\r\n\t\t\t\t\tPlease select charging station\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>First Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"f_name\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('f_name').hasError('required')\">First name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('f_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Middle Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"m_name\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter Middle name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('m_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Last Name</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"l_name\" required>\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter first name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('l_name').hasError('required')\">Last name is required</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('l_name').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Date Of Birth</mat-label>\r\n\t\t\t\t<input matInput [matDatepicker]=\"dp3\" [max]=\"maxDate\" formControlName=\"u_dob\" disabled>\r\n\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon style=\"padding-top:7px;\" class=\"secondary-text\" matTooltip=\"Please enter dob\">help\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n\t\t\t\t\t<mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_dob').invalid\">Please enter date of birth\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_email\" required\r\n\t\t\t\t\tstyle=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter email\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_email').hasError('required')\">Please enter email</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_email').hasError('pattern')\">Please enter valid email</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Employee Code</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" autocomplete=\"off\" formControlName=\"u_empCode\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter emplyee code\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_empCode').invalid\">Please enter employee code\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_empCode').hasError('pattern')\">Special character are not allowed\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Username</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_userID\" required autocomplete=\"off\"\r\n\t\t\t\t\tstyle=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter user name\">account_circle\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_userID').invalid\">Please enter user name\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Password</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" [type]=\"isPasswordFieldType ? 'text' : 'password'\"\r\n\t\t\t\t\tformControlName=\"u_password\" required autocomplete=\"off\" style=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon (click)=\"togglePasswordFieldType()\" matSuffix matTooltip=\"Please enter password\">\r\n\t\t\t\t\t{{isPasswordFieldType ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_password').hasError('required')\">Please enter password</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_password').hasError('pattern')\">Password should be 6 characters with one\r\n\t\t\t\t\tspecial character</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Confirm Password</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" [type]=\"isPasswordConfirmFieldType ? 'text' : 'password'\"\r\n\t\t\t\t\tformControlName=\"u_confirmPassword\" required style=\"text-transform: none;\">\r\n\t\t\t\t<mat-icon (click)=\"togglePasswordConfirmFieldType()\" matSuffix\r\n\t\t\t\t\tmatTooltip=\"Please enter confirm password\">{{isPasswordConfirmFieldType ? 'visibility_off' :\r\n\t\t\t\t\t'visibility'}}</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_confirmPassword').hasError('required')\">Please confirm your password!\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_confirmPassword').hasError('confirm')\">Password is inconsistent!\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_mobile\" type=\"number\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter mobile number\">phone_android\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_mobile').hasError('required')\">Please enter mobile\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_mobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Alternate Mobile Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_altmobile\" type=\"number\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter secondary mobile\">phone_android\r\n\t\t\t\t</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_altmobile').hasError('pattern')\">Mobile number must be 10 digit\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pan Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"pan\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pan card\">help</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pan').invalid\">Please enter pan\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pan').hasError('pattern')\">Special character are not allowed</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"32.5\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Aadhar Number</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_aadhar\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter aadhar\">help</mat-icon>\r\n\t\t\t</mat-form-field>\r\n\r\n\t\t</div>\r\n\r\n\r\n\t\t<h3 style=\"padding-top:10px;padding-bottom:10px;\">Address Information</h3>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 1</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_addressline1\" required autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_addressline1').invalid\">Please enter address line\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Address Line 2</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_addressline2\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter address line\">home</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_addressline2').invalid\">Please enter address line\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Pin Code</mat-label>\r\n\r\n\t\t\t\t<input matInput placeholder=\" \" formControlName=\"pincode\" (change)=\"getStateCountry()\" required\r\n\t\t\t\t\tautocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter pin code\">fiber_pin</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('required')\">Please enter pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('pincode').hasError('pattern')\">Please enter valid pin code\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Country</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"country\" autocomplete=\"off\" [matAutocomplete]=\"countryAuto\"\r\n\t\t\t\t\trequired>\r\n\r\n\t\t\t\t<mat-autocomplete #countryAuto=\"matAutocomplete\" [displayWith]=\"displayCountry\"\r\n\t\t\t\t\t(optionSelected)='onCountryChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCountry | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select country\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('country').invalid\">Please select country</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>State</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"state\" autocomplete=\"off\" [matAutocomplete]=\"stateAuto\"\r\n\t\t\t\t\trequired>\r\n\r\n\t\t\t\t<mat-autocomplete #stateAuto=\"matAutocomplete\" [displayWith]=\"displayState\"\r\n\t\t\t\t\t(optionSelected)='onStateChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionState | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select state\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('state').invalid\">Please select state</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>City</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput formControlName=\"city\" autocomplete=\"off\" [matAutocomplete]=\"cityAuto\"\r\n\t\t\t\t\trequired>\r\n\r\n\t\t\t\t<mat-autocomplete #cityAuto=\"matAutocomplete\" [displayWith]=\"displayCity\"\r\n\t\t\t\t\t(optionSelected)='onCityChange($event.option.value)'>\r\n\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionCity | async\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t<div matSuffix style=\"display: flex;\">\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select city\">location_city\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('city').invalid\">Please select city</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t</div>\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t<mat-label>Landmark</mat-label>\r\n\t\t\t\t<input matInput placeholder=\"\" formControlName=\"u_landmark\" autocomplete=\"off\">\r\n\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please enter landmark\">emoji_flags</mat-icon>\r\n\t\t\t\t<mat-error *ngIf=\"form.get('u_landmark').invalid\">Please enter landmark\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\r\n\t\t\t\t<mat-slide-toggle class=\"example-margin\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t(change)=\"updateStatus($event)\" #toggleElement>\r\n\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}</mat-slide-toggle>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top:10px\">\r\n\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\trouterLink=\"/userManagement/user/list\">Cancel</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>"]}