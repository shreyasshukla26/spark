{"version":3,"sources":["webpack:///src/app/main/booking/booking-config/booking-config-crud/routes.ts","webpack:///src/app/main/booking/booking-config/booking-config-crud/booking-config-crud.component.ts","webpack:///src/app/main/booking/booking-config/booking-config-crud/booking-config-crud.component.html","webpack:///src/app/main/booking/booking-config/create/create.component.ts","webpack:///src/app/main/booking/booking-config/create/create.component.html","webpack:///src/app/main/booking/booking-config/list/list.component.ts","webpack:///src/app/main/booking/booking-config/list/list.component.html","webpack:///src/app/main/booking/booking-config/booking-config.module.ts","webpack:///src/app/main/booking/booking-config/action-dialog/action-dialog.component.ts","webpack:///src/app/main/booking/booking-config/action-dialog/action-dialog.component.html","webpack:///src/app/main/booking/booking-config/view-dialog/view-dialog.component.ts","webpack:///src/app/main/booking/booking-config/view-dialog/view-dialog.component.html","webpack:///src/app/main/booking/booking-config/booking-config-routing.module.ts"],"names":["TABS_DEMO_ROUTES","path","component","canActivate","redirectTo","pathMatch","BookingConfigCrudComponent","router","cdr","_utilityService","tabLinks","tempLinks","activeMenuItems$","subscribe","menuItemSelecte","menuArray","undefined","title","JSON","parse","localStorage","getItem","detectChanges","nav_list","nav_list_with_tab","filter","x","id","objectData","children","y","objectChildData","isDefaultRoutePermeted","z","push","label","link","navigate","selector","templateUrl","styleUrls","encapsulation","None","animations","SunnyTabContentComponent","template","RainyTabContentComponent","FoggyTabContentComponent","$event","stopPropagation","selection","ChargingStation","autocompleteObjectValidator","control","value","CreateComponent","fb","snackBar","menuMasterService","clientService","cpoService","chargingStationService","bookingConfig","displayedColumns","idSearch","staNameSearch","typeSearch","copNameSearch","cityNameSearch","address1Search","descriptionSearch","pinSearch","statusSearch","showTable","selectedList","status","initialize","form","group","buff_time","required","pattern","bookingValid_time","minChar_Durn","maxChar_Durn","bookingCanl_time","advBook_amtTime","advBook_amt","listform","charClient","charCPO","charStat","filterEntity","filterType","ANYWHERE","getClients","event","filterValue","target","dataSource","trim","toLowerCase","paginator","firstPage","cpoId","getAllActiveChargingStations","clientId","resp","activeChar_station","data","i","length","statusString","sort","open","NoRecordFoundMessage","duration","err","numSelected","selected","numRows","isAllSelected","clear","forEach","row","select","visibleOption","ev","state_name","cpo_name","city_name","address1","description","PIN","chargingStation","stationId","formValues","valid","params","stations","buffer_time","booking_validity_time","min_charging_duration","max_charging_duration","booking_cancellation_time","adv_booking_time","adv_booking_amount","created_by","userId","createBookingConfig","statioin_mapped","bookingConfigCreate","station_not_mapped","bookingConfigAlReadyMapped","errorMessage","formInvalid","get","hasError","checked","active","getActiveClientsCW","clientName","filteredOptionsCharClient","controls","valueChanges","pipe","name","_filterCharClient","option","includes","item","client_id","getAllActiveChargingStation","setValue","getCPOByClient","getCpoByClientId","cposName","filteredOptionsCharCPO","_filterCharCPO","cpo_id","onClientChange","onCPOChange","onSubmit","preventDefault","updateStatus","BookingStationConfig","ListComponent","dialog","head","cpoSearch","stationNameSearch","bufferTimeSearch","bookvalTimeSearch","minCharDurSearch","disp_ordSearch","advBookTimeSearch","advBookAmtSearch","clientNameSearch","getBookingConfig","getAllBookingConfigList","bookingConfigData","confirmDialogRef","disableClose","componentInstance","confirmMessage","afterClosed","result","deleteBookingConfig","deleteMessage","action","dialogRef","width","panelClass","autoFocus","client_name","station_name","exportedData","filteredData","bookingconfig","station_id","workSheet","json_to_sheet","workBook","book_new","book_append_sheet","doc","img","Image","imgRight","src","srcSparkEV","createdDate","Date","toLocaleString","setFontSize","setTextColor","autoTable","body","theme","headStyles","fontStyle","fillColor","styles","cellPadding","fontSize","margin","top","didDrawCell","didDrawPage","addImage","text","internal","pageSize","getWidth","align","setGState","GState","opacity","f_Name","addWaterMark","output","save","newpage","getNumberOfPages","String","tableExport","pdfExport","COMPONENTS","COMPONENTS_DYNAMIC","BookingConfigModule","imports","declarations","entryComponents","ActionDialogComponent","isEditMode","char_station","assignValues","close","map","charSta","modify_by","updateBookingConfig","recordUpdateMessage","selectedListStation","station","toSelect","find","c","closeActionPanel","onYesClick","ViewDialogComponent","routes","BookingConfigRoutingModule","forChild","exports"],"mappings":"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","file":"app-main-booking-booking-config-booking-config-module-es5.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from '@angular/router';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\n\r\nimport { CreateComponent } from '../create/create.component';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n  { path : 'create', component : CreateComponent ,canActivate:[AuthGuard] },\r\n  { path : 'list', component : ListComponent ,canActivate:[AuthGuard] },\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n];\r\n","import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { UtilityService } from 'app/shared/services/utility/utility.service';\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n  selector: 'app-booking-config-crud',\r\n  templateUrl: './booking-config-crud.component.html',\r\n  styleUrls: ['./booking-config-crud.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class BookingConfigCrudComponent implements OnInit {\r\n  // Nav bar demo\r\n  tabLinks = [\r\n    // { label: 'Booking Config', link: 'list' },\r\n    // { label: 'Add New', link: 'create' }\r\n  ];\r\n  menuArray: any;\r\n  localStorage: any;\r\n  objectData: any;\r\n  objectChildData: any;\r\n  tempLinks = [];\r\n  constructor(private router: Router,private cdr: ChangeDetectorRef,private _utilityService:UtilityService) {\r\n\r\n  }\r\n  ngAfterViewInit(){\r\n    this._utilityService.activeMenuItems$.subscribe(menuItemSelecte=> {\r\n      this.menuArray = menuItemSelecte;\r\n      if(this.menuArray == null || this.menuArray == undefined || this.menuArray.title == null || this.menuArray.title == undefined){\r\n        this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n      }\r\n      this.cdr.detectChanges();\r\n    })\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    let nav_list = this.localStorage.nav_list_with_tab;\r\n    nav_list.filter((x) => {\r\n      if (x.id === \"bookingManagement\") {\r\n        this.objectData = x;\r\n        if(this.objectData.children != null && this.objectData.children != undefined){\r\n          this.objectData.children.filter((y) => {\r\n            if (y.id === \"bookingStationConfig\") {\r\n              this.objectChildData = y;\r\n              let isDefaultRoutePermeted = false;\r\n              if(this.objectChildData.children != null && this.objectChildData.children != undefined){\r\n                this.objectChildData.children.filter((z) => {\r\n                  if (z.id === \"bookingConfig\") {\r\n                    isDefaultRoutePermeted = true;\r\n                    this.tempLinks.push({ label: 'Booking Details', link: 'list' });\r\n                  }\r\n                  if (z.id === \"addNew\") {\r\n                    this.tempLinks.push({ label: 'Add New', link: 'create' });\r\n                  }\r\n                });\r\n                this.tabLinks = this.tempLinks;\r\n                if (!isDefaultRoutePermeted) {\r\n                  this.router.navigate(['/bookingManagement/bookingStationConfig/crud/' + this.tempLinks[0].link]);\r\n                }\r\n              } \r\n              \r\n  \r\n            }\r\n  \r\n          });\r\n        }\r\n        \r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'sunny-routed-content',\r\n  template: 'Having a lot of light from the sun.',\r\n})\r\nexport class SunnyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'rainy-routed-content',\r\n  template: 'A rainy period of time is one when it rains a lot',\r\n})\r\nexport class RainyTabContentComponent { }\r\n\r\n@Component({\r\n  selector: 'foggy-routed-content',\r\n  template: 'If the weather is foggy, there is fog',\r\n})\r\nexport class FoggyTabContentComponent { }\r\n","<div style=\"display: block;width: 100%;\">\r\n  <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\" fusePerfectScrollbar>\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n\r\n                <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                      [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                </span>\r\n\r\n                <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                        (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                    <mat-icon>menu</mat-icon>\r\n                </button-->\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n<nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n    <a mat-tab-link\r\n       *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n       [routerLink]=\"tabLink.link\"\r\n       routerLinkActive #rla=\"routerLinkActive\"\r\n       [active]=\"rla.isActive\">\r\n      {{tabLink.label}}\r\n    </a>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { PATTERNS } from 'app/shared/utils/validation-patterns';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ChargingStationService } from 'app/shared/services/charging-station/charging-station.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nexport class ChargingStation {\r\n  id: number;\r\n  //station_id: number;\r\n  station_name: string;\r\n  cpo_name: string;\r\n  code: string;\r\n  address1: string;\r\n  PIN: number;\r\n  description: string;\r\n  city_name: string;\r\n  state_name: string;\r\n  lat: number;\r\n  lng: number;\r\n  mobile: number;\r\n  email: string;\r\n  created_date: string;\r\n  commissioned_dt: string;\r\n  o_time: string;\r\n  c_time: string;\r\n  createdby: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\n\r\n\r\nexport class CreateComponent implements OnInit {\r\n\r\n  filterEntity: ChargingStation;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['select', 'id', 'station_name', 'cpo_name', 'city_name', 'address1', 'description', 'PIN', 'status'];\r\n  selection = new SelectionModel<ChargingStation>(true, []);\r\n  dataSource: MatTableDataSource<ChargingStation>;\r\n  activeChar_station: ChargingStation[];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  idSearch = false;\r\n  staNameSearch = false;\r\n  typeSearch = false;\r\n  copNameSearch = false;\r\n  cityNameSearch = false;\r\n  address1Search = false;\r\n  descriptionSearch = false;\r\n  pinSearch = false;\r\n  statusSearch = false;\r\n  showTable = false;\r\n  chargingStation: any\r\n  selectedList = [];\r\n  clientId: number;\r\n  cpoId: number;\r\n\r\n  form: FormGroup;\r\n  listform: FormGroup;\r\n  localStorage: any;\r\n  status = true;\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  cposName: any;\r\n  clientName: any;\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, private router: Router, private menuMasterService: MenuMasterService,\r\n    private clientService: ClientService, private cpoService: CpoService, private chargingStationService: ChargingStationService,\r\n    private bookingConfig: BookingService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    this.form = this.fb.group({\r\n      buff_time: ['', [Validators.required, Validators.pattern(/^[0-9 ]*$/)]],\r\n      bookingValid_time: ['', [Validators.required]],\r\n      minChar_Durn: ['', [Validators.required]],\r\n      maxChar_Durn: ['', [Validators.required]],\r\n      bookingCanl_time: ['', [Validators.required, Validators.pattern(/^[0-9 ]*$/)]],\r\n      advBook_amtTime: ['', [Validators.required]],\r\n      advBook_amt: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    this.listform = this.fb.group({\r\n      charClient: ['', [autocompleteObjectValidator()]],\r\n      charCPO: ['', [autocompleteObjectValidator()]],\r\n      charStat: ['', [autocompleteObjectValidator()]]\r\n    });\r\n\r\n    this.filterEntity = new ChargingStation();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n    this.getClients();\r\n    //this.getCPOByClient();\r\n    //this.getMenuMaster();\r\n\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  getAllActiveChargingStation() {\r\n    this.cpoId = null || undefined ? 0 : this.cpoId; \r\n    this.bookingConfig.getAllActiveChargingStations(this.clientId, this.cpoId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.activeChar_station = resp.data;\r\n              for (var i = 0; i < this.activeChar_station.length; i++) {\r\n                if (this.activeChar_station[i].status == 'N') {\r\n                  this.activeChar_station[i].statusString = 'Inactive';\r\n                } else {\r\n                  this.activeChar_station[i].statusString = 'Active';\r\n                }\r\n              }\r\n              this.dataSource = new MatTableDataSource(this.activeChar_station);\r\n              this.dataSource.paginator = this.paginator;\r\n              this.dataSource.sort = this.sort;\r\n              this.showTable = true;\r\n  \r\n            } else {\r\n              this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n              return;\r\n            }\r\n  \r\n          },\r\n          (err) => { }\r\n        );\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n  changeVisibility(visibleOption, ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'idSearch') {\r\n      this.idSearch = !this.idSearch;\r\n      this.filterEntity.id = null;\r\n    }\r\n    if (visibleOption == 'staNameSearch') {\r\n      this.staNameSearch = !this.staNameSearch;\r\n      this.filterEntity.state_name = '';\r\n    }\r\n    if (visibleOption == 'copNameSearch') {\r\n      this.copNameSearch = !this.copNameSearch;\r\n      this.filterEntity.cpo_name = '';\r\n    }\r\n    if (visibleOption == 'cityNameSearch') {\r\n      this.cityNameSearch = !this.cityNameSearch;\r\n      this.filterEntity.city_name = '';\r\n    }\r\n    if (visibleOption == 'address1Search') {\r\n      this.address1Search = !this.address1Search;\r\n      this.filterEntity.address1 = '';\r\n    }\r\n    if (visibleOption == 'descriptionSearch') {\r\n      this.descriptionSearch = !this.descriptionSearch;\r\n      this.filterEntity.description = '';\r\n    }\r\n    if (visibleOption == 'pinSearch') {\r\n      this.pinSearch = !this.pinSearch;\r\n      this.filterEntity.PIN = null;\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.chargingStation = this.selection.selected//.map(v => ([v.station_id])).join(\", \");\r\n    this.selectedList = [];\r\n    for (var i = 0; i < this.chargingStation.length; i++) {\r\n      var stationId = this.chargingStation[i].id;\r\n      this.selectedList.push(stationId);\r\n    }\r\n    let formValues = this.form.value;\r\n\r\n    if (this.form.valid) {\r\n      let params = {\r\n        stations: this.selectedList,\r\n        buffer_time: formValues.buff_time,\r\n        booking_validity_time: formValues.bookingValid_time,\r\n        min_charging_duration: formValues.minChar_Durn,\r\n        max_charging_duration: formValues.maxChar_Durn,\r\n        booking_cancellation_time: formValues.bookingCanl_time,\r\n        adv_booking_time: formValues.advBook_amtTime,\r\n        adv_booking_amount: formValues.advBook_amt,\r\n        status: this.status == true ? 'Y' : 'N',\r\n        created_by: this.localStorage.userId,\r\n      }\r\n\r\n      this.bookingConfig.createBookingConfig(params).subscribe(\r\n        (resp: any) => {\r\n          if (resp.status == true) {\r\n            \r\n                if(resp.data[0].statioin_mapped != null){\r\n                  this.snackBar.open(MessageConstant.bookingConfigCreate, 'Dismiss', { duration: 5000 });\r\n                  this.router.navigate(['/bookingManagement/bookingStationConfig/crud/list']);\r\n                }else \r\n                    if(resp.data[0].station_not_mapped != null){\r\n                          this.snackBar.open(MessageConstant.bookingConfigAlReadyMapped, 'Dismiss', { duration: 5000 });\r\n                          this.router.navigate(['/bookingManagement/bookingStationConfig/crud/create']);\r\n                      }\r\n              else{\r\n                this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n              }                   \r\n          }else{\r\n            this.snackBar.open(MessageConstant.bookingConfigAlReadyMapped, 'Dismiss', { duration: 5000 });\r\n           }      \r\n\r\n        }, (err) => {\r\n          this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n        }\r\n      );\r\n    } else {\r\n      this.snackBar.open(MessageConstant.formInvalid, 'Dismiss', { duration: 5000 });\r\n    }\r\n\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.clientName = resp;\r\n          this.filteredOptionsCharClient = this.listform.controls.charClient.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharClient(name) : this.clientName)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  onClientChange(client_id) {\r\n    this.activeChar_station = [];\r\n    this.dataSource = null\r\n    this.cpoId =0;\r\n    this.clientId = client_id;\r\n    this.getAllActiveChargingStation();\r\n    this.listform.get('charCPO').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.cposName = resp;\r\n          this.filteredOptionsCharCPO = this.listform.controls.charCPO.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n            );\r\n        }\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  onCPOChange(cpo_id) {\r\n    this.activeChar_station = [];\r\n    this.dataSource = null;\r\n    this.showTable = false;\r\n    this.cpoId = cpo_id;\r\n    this.getAllActiveChargingStation();\r\n\r\n  }\r\n\r\n  filteredOptions() {\r\n    this.filteredOptionsCharClient = this.listform.controls.charClient.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharClient(name) : this.clientName)\r\n      );\r\n\r\n    this.filteredOptionsCharCPO = this.listform.controls.charCPO.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n      );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n<div class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<mat-card style=\"padding:16px!important;\">\r\n\t\t<mat-card-content>\r\n\t\t\t<form [formGroup]=\"listform\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Select Client</mat-label>\r\n\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\">\r\n\t\t\t\t\t\t<mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n\t\t\t\t\t\t\t(optionSelected)='onClientChange($event.option.value.id)'>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"listform.get('charClient').invalid\">\r\n\t\t\t\t\t\t\tPlease select client\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Select CPO's</mat-label>\r\n\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\">\r\n\t\t\t\t\t\t<mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n\t\t\t\t\t\t\t(optionSelected)='onCPOChange($event.option.value.id)'>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"listform.get('charCPO').invalid\">\r\n\t\t\t\t\t\t\tPlease select CPO\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<!-- <mat-form-field appearance=\"outline\" style=\"height: 60px; \" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Select Charging Station</mat-label>\r\n\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charStat\" [matAutocomplete]=\"auto2\">\r\n\t\t\t\t\t\t<mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayCharStat\"\r\n\t\t\t\t\t\t\t(optionSelected)='onStationChange($event.option.value.id)'>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharStat | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">\r\n\t\t\t\t\t\t\texpand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"listform.get('charStat').invalid\">\r\n\t\t\t\t\t\t\tPlease select charging station\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field> -->\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n\r\n\t<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n\t\t<div class=\"content\" style=\"min-width: auto;\" > \r\n\r\n\t\t\t<mat-table [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table [dataSource]=\"dataSource\" matSort\r\n\t\t\t\tmatTableFilter>\r\n\r\n\t\t\t\t<!-- Checkbox Column -->\r\n\t\t\t\t<ng-container matColumnDef=\"select\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef>\r\n\t\t\t\t\t\t<mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]=\"selection.hasValue() && isAllSelected()\"\r\n\t\t\t\t\t\t\t\t\t\t[indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n\t\t\t\t\t\t</mat-checkbox>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\">\r\n\t\t\t\t\t\t<mat-checkbox (click)=\"$event.stopPropagation()\"\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"$event ? selection.toggle(row) : null\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]=\"selection.isSelected(row)\">\r\n\t\t\t\t\t\t</mat-checkbox>\r\n\t\t\t\t\t</mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container matColumnDef=\"id\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!idSearch\" class=\"custom_font_size\" style=\"display: flex;\">Id &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('idSearch',$event)\">search</mat-icon>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"idSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Id \" [(ngModel)]=\"filterEntity.id\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('idSearch',$event)\">highlight_off\r\n\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.id}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"station_name\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!staNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name\r\n\t\t\t\t\t\t\t&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('staNameSearch',$event)\">search\r\n\t\t\t\t\t\t\t</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"staNameSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n\t\t\t\t\t\t\tclass=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Station Name\" [(ngModel)]=\"filterEntity.station_name\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('staNameSearch',$event)\">highlight_off\r\n\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.station_name}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"cpo_name\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!copNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Cpo Name\r\n\t\t\t\t\t\t\t&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('copNameSearch',$event)\">search\r\n\t\t\t\t\t\t\t</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"copNameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\" Cpo Name\" [(ngModel)]=\"filterEntity.cpo_name\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('copNameSearch',$event)\">highlight_off</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container matColumnDef=\"city_name\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!cityNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">City Name\r\n\t\t\t\t\t\t\t&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('cityNameSearch',$event)\">search\r\n\t\t\t\t\t\t\t</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"cityNameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"City Name\" [(ngModel)]=\"filterEntity.city_name\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('cityNameSearch',$event)\">highlight_off</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.city_name}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-container matColumnDef=\"address1\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!address1Search\" class=\"custom_font_size\" style=\"display: flex;\">Address\r\n\t\t\t\t\t\t\t&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('address1Search',$event)\">search\r\n\t\t\t\t\t\t\t</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"address1Search\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Address\" [(ngModel)]=\"filterEntity.address1\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('address1Search',$event)\">highlight_off</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.address1}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"description\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!descriptionSearch\" class=\"custom_font_size\" style=\"display: flex;\">Description\r\n\t\t\t\t\t\t\t&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch',$event)\">search\r\n\t\t\t\t\t\t\t</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"descriptionSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Description\" [(ngModel)]=\"filterEntity.description\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('descriptionSearch',$event)\">highlight_off</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.description}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"PIN\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!pinSearch\" class=\"custom_font_size\" style=\"display: flex;\">Pincode\r\n\t\t\t\t\t\t\t&nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('pinSearch',$event)\">search\r\n\t\t\t\t\t\t\t</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"pinSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Pincode\" [(ngModel)]=\"filterEntity.PIN\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('pinSearch',$event)\">highlight_off</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\"> {{row.PIN}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t<ng-container matColumnDef=\"status\">\r\n\t\t\t\t\t<mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n\t\t\t\t\t\t<span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n\t\t\t\t\t\t<mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n\t\t\t\t\t\t\t<input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n\t\t\t\t\t\t\t<mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t</mat-header-cell>\r\n\t\t\t\t\t<mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n\t\t\t\t\t\t{{row.statusString}} </mat-cell>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t\r\n\t\t\t\t<mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n\t\t\t\t<mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n\t\t\t</mat-table>\r\n\t\t\t<mat-paginator #paginator [pageSizeOptions]=\"[5,10,20,25]\"></mat-paginator>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<mat-card style=\"padding:16px !important;\">\r\n\t\t<mat-card-content>\r\n\r\n\t\t\t<form [formGroup]=\"form\" class=\" p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\t\tname=\"form\" (submit)=\"onSubmit()\" (keydown.enter)=\"$event.preventDefault()\">\r\n\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Buffering Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"buff_time\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('buff_time').hasError('required')\">Please enter buffering time\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('buff_time').hasError('pattern')\">Only number is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Booking validity Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"bookingValid_time\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"number\" min=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('bookingValid_time').hasError('required')\">Please enter booking\r\n\t\t\t\t\t\t\tvalidity time</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Min Charging Duration</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"minChar_Durn\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('minChar_Durn').hasError('required')\">Please enter min charging\r\n\t\t\t\t\t\t\tduration</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('minChar_Durn').hasError('pattern')\">Special character are not\r\n\t\t\t\t\t\t\tallowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Max Charging Duration</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"maxChar_Durn\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('maxChar_Durn').hasError('required')\">Please enter max charging\r\n\t\t\t\t\t\t\tduration</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('maxChar_Durn').hasError('pattern')\">Special character are not\r\n\t\t\t\t\t\t\tallowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Booking Cancle Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"bookingCanl_time\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"number\" min=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('bookingCanl_time').hasError('required')\">Please enter booking cancle\r\n\t\t\t\t\t\t\ttime</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Adv Booking Amount Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"advBook_amtTime\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"number\" min=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('advBook_amtTime').hasError('required')\">Please enter advance booking\r\n\t\t\t\t\t\t\tamount time</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Adv Booking Amount</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"advBook_amt\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('advBook_amt').hasError('required')\">Please enter advance booking\r\n\t\t\t\t\t\t\tamount</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div fxFlex=\"25\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"pt-4\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" class=\"mr-8\">Save</button>\r\n\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"mr-8\" type=\"button\"\r\n\t\t\t\t\t\trouterLink=\"/bookingManagement/bookingStationConfig/crud/list\">Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n\r\n</div>","\r\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActionDialogComponent } from '../action-dialog/action-dialog.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { MatTableFilter } from 'mat-table-filter';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewDialogComponent } from '../view-dialog/view-dialog.component';\r\nimport { jsPDF } from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\n\r\n\r\nexport class BookingStationConfig {\r\n  id: number;\r\n  station_id: number;\r\n  station_name:string;\r\n  cpo_name:string;\r\n  client_name:string;\r\n  buffer_time: number;\r\n  booking_validity_time: number;\r\n  min_charging_duration: number;\r\n  max_charging_duration: number;\r\n  booking_cancellation_time: number;\r\n  adv_booking_time: number;\r\n  adv_booking_amount: number;\r\n  address1:string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n/**\r\n * @title Data table with sorting, pagination, and filtering.\r\n */\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ListComponent implements OnInit {\r\n\r\n\r\n  filterEntity: BookingStationConfig;\r\n  filterType: MatTableFilter;\r\n  displayedColumns: string[] = ['station_name','cpo_name', 'buffer_time', 'booking_validity_time','client_name', 'min_charging_duration', \r\n        'adv_booking_amount', 'status', 'action'];\r\n  head = [['Station Id', 'Buffer Time', 'Booking Validity Time', 'Min Charging Duration', 'Adv Booking Time', 'Adv Booking Amount', 'Max Charging Duration',\r\n    , 'Status']]\r\n  dataSource: MatTableDataSource<BookingStationConfig>;\r\n  bookingConfigData: BookingStationConfig[];\r\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  dialogRef: any;\r\n  cpoSearch = false;\r\n  stationNameSearch = false;\r\n  bufferTimeSearch = false;\r\n  bookvalTimeSearch = false;\r\n  minCharDurSearch = false;\r\n  disp_ordSearch = false;\r\n  advBookTimeSearch = false;\r\n  advBookAmtSearch = false;\r\n  clientNameSearch = false;\r\n  //nav_idSearch = false;\r\n  statusSearch = false;\r\n  exportedData: any[];\r\n  localStorage: any;\r\n  //messageConstant = MessageConstant;\r\n  constructor(public dialog: MatDialog, private bookingConfig: BookingService, private snackBar: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.getBookingConfig();\r\n    this.filterEntity = new BookingStationConfig();\r\n    this.filterType = MatTableFilter.ANYWHERE;\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  getBookingConfig() {\r\n    this.bookingConfig.getAllBookingConfigList().subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.bookingConfigData = resp.data;\r\n          for (var i = 0; i < this.bookingConfigData.length; i++) {\r\n            if (this.bookingConfigData[i].status == 'N') {\r\n              this.bookingConfigData[i].statusString = 'Inactive';\r\n            } else {\r\n              this.bookingConfigData[i].statusString = 'Active';\r\n            }\r\n          }\r\n          this.dataSource = new MatTableDataSource(this.bookingConfigData);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n\r\n  delete(id) {\r\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.bookingConfig.deleteBookingConfig(id, this.localStorage.userId).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n           \r\n              this.getBookingConfig();\r\n              this.snackBar.open(MessageConstant.deleteMessage, 'Dismiss', { duration: 3000 });\r\n              this.cdr.detectChanges();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n            }\r\n          }, (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 2000 });\r\n          }\r\n        )\r\n      }\r\n      this.confirmDialogRef = null;\r\n    });\r\n\r\n  }\r\n\r\n  viewDialog(action, data): void {\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ViewDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      panelClass: 'app-action-dialog',\r\n      autoFocus: false,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      // this.moderate(result);\r\n      this.getBookingConfig();\r\n    });\r\n  }\r\n  openDialog(action, data): void {\r\n    // this.snackBar.open('Unable to proceed, In prgress','Dismiss');\r\n    // return false;\r\n    let params = {\r\n      action: action,\r\n      data: data\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n      width: '1400px',\r\n      data: params,\r\n      autoFocus: false,\r\n      disableClose: true,\r\n      panelClass: 'app-action-dialog',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.getBookingConfig();\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  changeVisibility(visibleOption, ev) {\r\n\r\n    ev.stopPropagation();\r\n    if (visibleOption == 'cpoSearch') {\r\n      this.cpoSearch = !this.cpoSearch;\r\n      this.filterEntity.cpo_name = '';\r\n    }\r\n    if (visibleOption == 'clientNameSearch') {\r\n      this.clientNameSearch = !this.clientNameSearch;\r\n      this.filterEntity.client_name = '';\r\n    }\r\n    if (visibleOption == 'stationNameSearch') {\r\n      this.stationNameSearch = !this.stationNameSearch;\r\n      this.filterEntity.station_name = '';\r\n    }\r\n    if (visibleOption == 'bufferTimeSearch') {\r\n      this.bufferTimeSearch = !this.bufferTimeSearch;\r\n      this.filterEntity.buffer_time = null;\r\n    }\r\n    if (visibleOption == 'bookvalTimeSearch') {\r\n      this.bookvalTimeSearch = !this.bookvalTimeSearch;\r\n      this.filterEntity.booking_validity_time = null;\r\n    }\r\n    if (visibleOption == 'minCharDurSearch') {\r\n      this.minCharDurSearch = !this.minCharDurSearch;\r\n      this.filterEntity.min_charging_duration = null;\r\n    }\r\n    if (visibleOption == 'advBookTimeSearch') {\r\n      this.advBookTimeSearch = !this.advBookTimeSearch;\r\n      this.filterEntity.adv_booking_time = null;\r\n    }\r\n    if (visibleOption == 'advBookAmtSearch') {\r\n      this.advBookAmtSearch = !this.advBookAmtSearch;\r\n      this.filterEntity.adv_booking_amount = null;\r\n    }\r\n    if (visibleOption == 'statusSearch') {\r\n      this.statusSearch = !this.statusSearch;\r\n      this.filterEntity.statusString = '';\r\n    }\r\n\r\n  }\r\n\r\n  tableExport() {\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var bookingconfig = this.dataSource.filteredData[i];\r\n      var data = {\r\n        'Station Id': bookingconfig.station_id, 'Buffer Time': bookingconfig.buffer_time, 'Booking Validity Time': bookingconfig.booking_validity_time, 'Min Charging Duration': bookingconfig.min_charging_duration,\r\n        'Adv Booking Time': bookingconfig.adv_booking_time, 'Adv Booking Amount ': bookingconfig.adv_booking_amount, 'Max Charging Duration': bookingconfig.max_charging_duration,\r\n        'Status': bookingconfig.statusString\r\n      };\r\n      this.exportedData.push(data);\r\n    }\r\n    const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\r\n    XLSX.writeFile(workBook, 'Booking Station Config.xlsx');\r\n  }\r\n\r\n  pdfExport() {\r\n    var doc = new jsPDF({ // set needed dimensions for any elemen\r\n\r\n    });\r\n    this.exportedData = [];\r\n    for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n      var bookingconfig = this.dataSource.filteredData[i];\r\n      //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n      //statusString: `statusString${i}`});\r\n      var data = [bookingconfig.station_id, bookingconfig.buffer_time, bookingconfig.booking_validity_time, bookingconfig.min_charging_duration, bookingconfig.adv_booking_time,\r\n      bookingconfig.adv_booking_amount, bookingconfig.max_charging_duration, bookingconfig.statusString];\r\n\r\n      this.exportedData.push(data);\r\n    }\r\n    var img = new Image();\r\n    var imgRight = new Image();\r\n    var src = 'assets/images/logos/logo_sparkev_main.png';\r\n    var srcSparkEV = 'assets/images/logos/logo_SparkEV_black.png';\r\n    imgRight.src = srcSparkEV;\r\n    var createdDate = new Date().toLocaleString(('en-GB'));\r\n    img.src = src;\r\n    doc.setFontSize(11);\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(18);\r\n\r\n    (doc as any).autoTable({\r\n      head: this.head,\r\n      body: this.exportedData,\r\n      theme: 'grid',\r\n      headStyles: { fontStyle: 'majalla', fillColor: [11, 148, 68] },\r\n      styles: {\r\n        cellPadding: 1,\r\n        fontSize: 8,\r\n\r\n      },\r\n\r\n      margin: { top: 22 },\r\n      didDrawCell: data => {\r\n      },\r\n      didDrawPage: data => {\r\n        doc.addImage(img , 15, 7, 15, 6);\r\n        doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n        doc.text('Booking Station Config Report', doc.internal.pageSize.getWidth() / 2, 11, { align: 'center' });\r\n\r\n        doc.setTextColor(211, 211, 211);\r\n        doc.setFontSize(60);\r\n        doc.setGState(doc.GState({ opacity: 0.6 }));\r\n        doc.text('Confidential/Not For Public Use', 25, 285, null, 60,);\r\n        doc.setGState(doc.GState({ opacity: 1 }));\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(9);\r\n        doc.text('Date:' + createdDate, 15, 18);\r\n\r\n        doc.text('Generated By:' + this.localStorage.f_Name, 195, 18, { align: 'right' });\r\n        doc = this.addWaterMark(doc);\r\n      }\r\n    })\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow')\r\n\r\n    // below line for Download PDF document  \r\n    doc.save('Booking Station Config report.pdf');\r\n\r\n  }\r\n  addWaterMark(doc) {\r\n    var newpage = doc.getNumberOfPages();\r\n    const i = doc.internal.getNumberOfPages();\r\n    doc.setTextColor(100);\r\n    doc.setFontSize(10);\r\n    //Print Page 1 of 4 for example\r\n    doc.text('Page ' + String(i) + ' of ' + String(newpage), 210 - 20, 297 - 10, null, null, \"right\");\r\n    return doc;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"text-align: left ;margin-left: 10px;margin-bottom:10px;margin-top: 10px;\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"tableExport()\" matTooltip=\"Excel Download\">\r\n        <mat-icon>sim_card_download</mat-icon>\r\n    </button>&nbsp;&nbsp;\r\n    <button mat-mini-fab color=\"primary\" (click)=\"pdfExport()\" matTooltip=\"PDF Download\">\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"page-layout simple fullwidth\" style=\"overflow: scroll;\">\r\n    <div class=\"content\" style=\"min-width: auto;\">\r\n\r\n        <mat-table  [exampleEntity]=\"filterEntity\" [filterType]=\"filterType\" #table\r\n        [dataSource]=\"dataSource\" matSort matTableFilter>\r\n\r\n        <ng-container matColumnDef=\"cpo_name\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!cpoSearch\" class=\"custom_font_size\" style=\"display: flex;\">Cpo Name &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"cpoSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Cpo Name \" [(ngModel)]=\"filterEntity.cpo_name\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('cpoSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.cpo_name}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"client_name\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!clientNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Client Name &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('clientNameSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"clientNameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Client Name \" [(ngModel)]=\"filterEntity.client_name\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('clientNameSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.client_name}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"station_name\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!stationNameSearch\" class=\"custom_font_size\" style=\"display: flex;\">Station Name &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('stationNameSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"stationNameSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Station Name \" [(ngModel)]=\"filterEntity.station_name\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('stationNameSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.station_name}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"buffer_time\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!bufferTimeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Buffer Time &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('bufferTimeSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"bufferTimeSearch\" appearance=\"outline\" style=\"width: 70%;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Buffer Time \" [(ngModel)]=\"filterEntity.buffer_time\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('bufferTimeSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.buffer_time}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"booking_validity_time\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!bookvalTimeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Booking validity Time\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('bookvalTimeSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"bookvalTimeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\"Booking validity Time \" [(ngModel)]=\"filterEntity.booking_validity_time\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('bookvalTimeSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.booking_validity_time}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"min_charging_duration\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!minCharDurSearch\" class=\"custom_font_size\" style=\"display: flex;\">Min Charging Duration\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('minCharDurSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"minCharDurSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Min Charging Duration\" [(ngModel)]=\"filterEntity.min_charging_duration\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('minCharDurSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.min_charging_duration}} </mat-cell>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"adv_booking_time\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!advBookTimeSearch\" class=\"custom_font_size\" style=\"display: flex;\">Adv Booking Time\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('advBookTimeSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"advBookTimeSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Icon\" [(ngModel)]=\"filterEntity.adv_booking_time\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('advBookTimeSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.adv_booking_time}} </mat-cell>\r\n        </ng-container> -->\r\n        <ng-container matColumnDef=\"adv_booking_amount\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!advBookAmtSearch\" class=\"custom_font_size\" style=\"display: flex;\">Adv Booking Amount\r\n                    &nbsp;&nbsp; <mat-icon matSuffix (click)=\"changeVisibility('advBookAmtSearch',$event)\">search\r\n                    </mat-icon> </span>\r\n                <mat-form-field *ngIf=\"advBookAmtSearch\" appearance=\"outline\" style=\"width: 70%;\"\r\n                    class=\"list_input\">\r\n                    <input matInput placeholder=\" Adv Booking Amount \" [(ngModel)]=\"filterEntity.adv_booking_amount\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('advBookAmtSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\"> {{row.adv_booking_amount}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"status\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                <span *ngIf=\"!statusSearch\" class=\"custom_font_size\" style=\"display: flex;\">Status &nbsp;&nbsp;\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">search</mat-icon> </span>\r\n                <mat-form-field *ngIf=\"statusSearch\" appearance=\"outline\" style=\"width: 100px;\" class=\"list_input\">\r\n                    <input matInput placeholder=\"Status\" [(ngModel)]=\"filterEntity.statusString\">\r\n                    <mat-icon matSuffix (click)=\"changeVisibility('statusSearch',$event)\">highlight_off</mat-icon>\r\n                </mat-form-field>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let row\" [style.color]=\"row.status == 'Y' ? 'green' : 'red'\">\r\n                {{row.statusString}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell mat-header-cell *matHeaderCellDef >\r\n                <span class=\"custom_font_size\">Action</span>\r\n            </mat-header-cell>\r\n            <mat-cell mat-cell *matCellDef=\"let element\">\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"View\" (click)=\"viewDialog('VIEW',element)\"\r\n                    style=\"cursor:pointer\">visibility</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"primary\" matTooltip=\"Edit\" (click)=\"openDialog('EDIT',element)\"\r\n                    style=\"cursor:pointer\">edit</mat-icon>&nbsp;&nbsp;\r\n\r\n                <mat-icon color=\"warn\" matTooltip=\"Remove\" (click)=\"delete(element.id)\" style=\"cursor:pointer\">\r\n                    delete</mat-icon>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-header-row>\r\n\r\n        <mat-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator #paginator [pageSizeOptions]=\"[10,30,50,100]\"></mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","\r\nimport { NgModule } from '@angular/core'; \r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { ActionDialogComponent } from './action-dialog/action-dialog.component';\r\nimport { BookingConfigRoutingModule } from './booking-config-routing.module';\r\nimport { BookingConfigCrudComponent } from './booking-config-crud/booking-config-crud.component';\r\nimport { FuseSharedModule  } from '@fuse/shared.module';\r\nimport { ViewDialogComponent } from './view-dialog/view-dialog.component';\r\nconst COMPONENTS =[ BookingConfigCrudComponent, CreateComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC =[ViewDialogComponent,ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports:[SharedModule, BookingConfigRoutingModule,FuseSharedModule],\r\n    declarations : [COMPONENTS,COMPONENTS_DYNAMIC],\r\n    entryComponents : [COMPONENTS_DYNAMIC]\r\n})\r\n\r\nexport class BookingConfigModule{}","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\n\r\nexport class ChargingStation {\r\n  id: number;\r\n  station_name: string;\r\n  cpo_name: string;\r\n  code: string;\r\n  address1: string;\r\n  PIN: number;\r\n  description: string;\r\n  city_name: string;\r\n  state_name: string;\r\n  lat: number;\r\n  lng: number;\r\n  mobile: number;\r\n  email: string;\r\n  created_date: string;\r\n  commissioned_dt: string;\r\n  o_time: string;\r\n  c_time: string;\r\n  createdby: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-action-dialog',\r\n  templateUrl: './action-dialog.component.html',\r\n  styleUrls: ['./action-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\n\r\n\r\nexport class ActionDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  activeChar_station: ChargingStation[];\r\n  booking_config: any\r\n  selectedList = [];\r\n  clientId: number;\r\n  cpoId: number;\r\n  status = false;\r\n  chargingStation: any\r\n  charStation:any\r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  cposName: any;\r\n  clientName: any;\r\n  @ViewChild(\"activeElement\") active: any;\r\n  menuArray: any;\r\n\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private bookingConfig: BookingService,\r\n    private clientService: ClientService, private cpoService: CpoService,) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      charClient: ['', [autocompleteObjectValidator()]],\r\n      charCPO: ['', [autocompleteObjectValidator()]],\r\n      char_station: ['',],\r\n      buff_time: ['', [Validators.required, Validators.pattern(/^[0-9 ]*$/)]],\r\n      bookingValid_time: ['', [Validators.required]],\r\n      minChar_Durn: ['', [Validators.required]],\r\n      maxChar_Durn: ['', [Validators.required]],\r\n      bookingCanl_time: ['', [Validators.required, Validators.pattern(/^[0-9 ]*$/)]],\r\n      advBook_amtTime: ['', [Validators.required]],\r\n      advBook_amt: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    \r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n      this.getClients();\r\n      this.getCPOByClient(this.params.data.client_id);\r\n      this.clientId = this.params.data.client_id;\r\n      this.cpoId = this.params.data.cpo_id;\r\n      this.getAllActiveChargingStation();\r\n    }\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  onYesClick() {\r\n    if (this.form.valid) {\r\n      let formValues = this.form.value;\r\n     \r\n      // for(var i = 0; i < formValues.char_station.length; i++){\r\n      //   var stationId = formValues.char_station[i].id;\r\n      //   this.selectedList.push(stationId);\r\n      // }\r\n      const params: any = {\r\n        stations: formValues.char_station.map(charSta =>({station_id:charSta.id,id:this.params.data.id })),//this.params.data.station_id, //formValues.rfidlist.map(v => ({ id: v.rfid_id })),\r\n        buffer_time: formValues.buff_time,\r\n        booking_validity_time: formValues.bookingValid_time,\r\n        min_charging_duration: formValues.minChar_Durn,\r\n        max_charging_duration: formValues.maxChar_Durn,\r\n        booking_cancellation_time: formValues.bookingCanl_time,\r\n        adv_booking_time: formValues.advBook_amtTime,\r\n        adv_booking_amount: formValues.advBook_amt,\r\n        status: this.status == true ? 'Y' : 'N'\r\n      }\r\n      if (this.isEditMode) {\r\n          params.id = this.params.data.id,\r\n          params.modify_by = this.localStorage.userId;\r\n      } else {\r\n          params.created_by = this.localStorage.userId;\r\n      }\r\n\r\n      if (this.isEditMode) {\r\n        this.bookingConfig.updateBookingConfig(params).subscribe(\r\n          (resp: any) => {\r\n            if (resp.status == true) {\r\n              this.snackBar.open(MessageConstant.recordUpdateMessage, 'Dismiss', { duration: 5000 });\r\n              this.dialogRef.close();\r\n            } else {\r\n              this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n            }\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      } else {\r\n        this.bookingConfig.createBookingConfig(params).subscribe(\r\n          (resp: any) => {\r\n            this.snackBar.open(MessageConstant.bookingConfigCreate, 'Dismiss', { duration: 5000 });\r\n            this.dialogRef.close();\r\n          },\r\n          (err) => {\r\n            this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n          }\r\n        )\r\n      }\r\n      this.dialogRef.close(params);\r\n    } else {\r\n      this.snackBar.open(MessageConstant.errorMessage, 'Dismiss', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n\r\n  assignValues(params) {\r\n    this.form.get('buff_time').setValue(params.data.buffer_time);\r\n    this.form.get('bookingValid_time').setValue(this.params.data.booking_validity_time);\r\n    this.form.get('minChar_Durn').setValue(params.data.min_charging_duration);\r\n    this.form.get('maxChar_Durn').setValue(params.data.max_charging_duration);\r\n    this.form.get('bookingCanl_time').setValue(params.data.booking_cancellation_time);\r\n    this.form.get('advBook_amtTime').setValue(params.data.adv_booking_time);\r\n    this.form.get('advBook_amt').setValue(params.data.adv_booking_amount);\r\n    //this.form.get('char_station').setValue(params.data.station_name);\r\n    this.status = this.params.data.status == 'Y' ? true : false;\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n  getAllActiveChargingStation() {\r\n    this.cpoId = null || undefined ? 0 : this.cpoId;  \r\n    this.bookingConfig.getAllActiveChargingStations(this.clientId, this.cpoId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.activeChar_station = resp.data;\r\n       \r\n          var selectedListStation = [];\r\n            for (let i = 0; i < this.activeChar_station.length; i++) {\r\n              var station = this.activeChar_station[i];\r\n              if(station.id != null && station.id != undefined){\r\n                if(this.params.data.station_id == station.id){\r\n                  selectedListStation.push(station);\r\n                }\r\n                \r\n              }\r\n          }\r\n          this.form.get('char_station').setValue(selectedListStation);\r\n       \r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      },\r\n      (err) => { }\r\n    );\r\n\r\n  }\r\n\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.clientName = resp;\r\n          if(this.isEditMode){\r\n            //;\r\n            const toSelect = this.clientName.find(c => c.id == this.params.data.client_id);\r\n            this.form.get('charClient').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharClient(name) : this.clientName)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  onClientChange(client_id) {\r\n    this.activeChar_station = [];\r\n    this.cpoId=0;\r\n    this.clientId = client_id;\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n    this.getAllActiveChargingStation();\r\n    \r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.cposName = resp;\r\n          if(this.isEditMode){\r\n            //;\r\n            const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n            this.form.get('charCPO').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n            );\r\n        }\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  onCPOChange(cpo_id) {\r\n    this.activeChar_station = [];\r\n    this.cpoId = cpo_id;\r\n    this.getAllActiveChargingStation();\r\n\r\n  }\r\n\r\n  filteredOptions() {\r\n    this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharClient(name) : this.clientName)\r\n      );\r\n\r\n    this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n      );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white\" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n\r\n<div class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n\t<mat-card style=\"padding:16px !important;\">\r\n\t\t<mat-card-content>\r\n\r\n\t\t\t<form [formGroup]=\"form\" class=\" p-24 \" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\"\r\n\t\t\t\tname=\"form\">\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\"  fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Select Client</mat-label>\r\n\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n\t\t\t\t\t\t<mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n\t\t\t\t\t\t\t(optionSelected)='onClientChange($event.option.value.id)'>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more\r\n\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('charClient').invalid\">\r\n\t\t\t\t\t\t\tPlease select client\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\"  fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Select CPO's</mat-label>\r\n\t\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n\t\t\t\t\t\t<mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n\t\t\t\t\t\t\t(optionSelected)='onCPOChange($event.option.value.id)'>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n\t\t\t\t\t\t\tPlease select CPO\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\" >\r\n\t\t\t\t\t\t<mat-label>Charging Station</mat-label>\r\n\t\t\t\t\t\t<mat-select formControlName=\"char_station\" multiple disabled=\"true\">\r\n\t\t\t\t\t\t  <mat-option *ngFor=\"let option of activeChar_station\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.station_name}} \r\n\t\t\t\t\t\t  </mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help</mat-icon>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Buffering Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"buff_time\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('buff_time').hasError('required')\">Please enter buffering time\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('buff_time').hasError('pattern')\">Only number is allowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Booking validity Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"bookingValid_time\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"number\" min=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('bookingValid_time').hasError('required')\">Please enter booking\r\n\t\t\t\t\t\t\tvalidity time</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Min Charging Duration</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"minChar_Durn\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('minChar_Durn').hasError('required')\">Please enter min charging\r\n\t\t\t\t\t\t\tduration</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('minChar_Durn').hasError('pattern')\">Special character are not\r\n\t\t\t\t\t\t\tallowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Max Charging Duration</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"maxChar_Durn\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('maxChar_Durn').hasError('required')\">Please enter max charging\r\n\t\t\t\t\t\t\tduration</mat-error>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('maxChar_Durn').hasError('pattern')\">Special character are not\r\n\t\t\t\t\t\t\tallowed\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Booking Cancle Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"bookingCanl_time\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"number\" min=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('bookingCanl_time').hasError('required')\">Please enter booking cancle\r\n\t\t\t\t\t\t\ttime</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Adv Booking Amount Time</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"advBook_amtTime\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"number\" min=\"0\" required>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('advBook_amtTime').hasError('required')\">Please enter advance booking\r\n\t\t\t\t\t\t\tamount time</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label>Adv Booking Amount</mat-label>\r\n\t\t\t\t\t\t<input matInput formControlName=\"advBook_amt\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\" required>\r\n\t\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('advBook_amt').hasError('required')\">Please enter advance booking\r\n\t\t\t\t\t\t\tamount</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement>\r\n\t\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t\t<button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\" (click)=\"onYesClick()\">\r\n\t\t\t\t\t\t{{isEditMode? 'Save' : 'Save'}}</button>\r\n\t\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\r\n\t\t</mat-card-content>\r\n\t</mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit, Inject, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MtxDialogData } from '@ng-matero/extensions';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, tap } from 'rxjs/operators';\r\nimport { MessageConstant } from 'app/shared/utils/message.constant';\r\nimport { ViewEncapsulation } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MenuMasterService } from 'app/shared/services/menu-master/menu-master.service';\r\nimport { CpoService } from 'app/shared/services/cpo/cpo.service';\r\nimport { ClientService } from 'app/shared/services/client/client.service';\r\nimport { BookingService } from 'app/shared/services/booking/booking.service';\r\n\r\nexport class ChargingStation {\r\n  id: number;\r\n  //station_id: number;\r\n  station_name: string;\r\n  cpo_name: string;\r\n  code: string;\r\n  address1: string;\r\n  PIN: number;\r\n  description: string;\r\n  city_name: string;\r\n  state_name: string;\r\n  lat: number;\r\n  lng: number;\r\n  mobile: number;\r\n  email: string;\r\n  created_date: string;\r\n  commissioned_dt: string;\r\n  o_time: string;\r\n  c_time: string;\r\n  createdby: string;\r\n  status: string;\r\n  statusString: string;\r\n\r\n}\r\n\r\n\r\nfunction autocompleteObjectValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (typeof control.value === 'string') {\r\n      return { 'invalidAutocompleteObject': { value: control.value } }\r\n    }\r\n    return null  /* valid option selected */\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-view-dialog',\r\n  templateUrl: './view-dialog.component.html',\r\n  styleUrls: ['./view-dialog.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: fuseAnimations\r\n})\r\nexport class ViewDialogComponent implements OnInit {\r\n\r\n  params: any;\r\n  isEditMode = false;\r\n  form: FormGroup;\r\n  localStorage: any;\r\n  \r\n  filteredOptionsCharClient: Observable<any[]>;\r\n  filteredOptionsCharCPO: Observable<any[]>;\r\n  filteredOptionsCharStat: Observable<any[]>;\r\n  cposName: any;\r\n  clientName: any;\r\n  clientId: number;\r\n  cpoId: number;\r\n  charStation:any\r\n  status = false;\r\n  activeChar_station: ChargingStation[];\r\n\r\n  @ViewChild(\"activeElement\") active: any;\r\n  menuArray: any;\r\n\r\n  // messageConstant = MessageConstant;\r\n  constructor(private fb: FormBuilder, private snackBar: MatSnackBar, public dialogRef: MatDialogRef<ViewDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData, private router: Router, private menuMasterService: MenuMasterService,\r\n    private cpoService:CpoService,private clientService:ClientService,private bookingConfig:BookingService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initialize();\r\n\r\n  }\r\n\r\n  initialize() {\r\n    this.localStorage = JSON.parse(localStorage.getItem('userDetails'));\r\n    this.menuArray  = JSON.parse( localStorage.getItem('activeMenuItems'));\r\n    this.params = this.data;\r\n    this.isEditMode = this.params.action == 'CREATE' ? false : true;\r\n\r\n    this.form = this.fb.group({\r\n      charClient: ['', [autocompleteObjectValidator()]],\r\n      charCPO: ['', [autocompleteObjectValidator()]],\r\n      char_station: ['',],\r\n      buff_time: ['', [Validators.required, Validators.pattern(/^[0-9 ]*$/)]],\r\n      bookingValid_time: ['', [Validators.required]],\r\n      minChar_Durn: ['', [Validators.required]],\r\n      maxChar_Durn: ['', [Validators.required]],\r\n      bookingCanl_time: ['', [Validators.required, Validators.pattern(/^[0-9 ]*$/)]],\r\n      advBook_amtTime: ['', [Validators.required]],\r\n      advBook_amt: ['', [Validators.required]],\r\n      status: this.status == true ? 'Y' : 'N'\r\n    });\r\n\r\n    if (this.isEditMode) {\r\n      this.assignValues(this.params);\r\n      this.getClients();\r\n      this.getCPOByClient(this.params.data.client_id);\r\n      this.clientId = this.params.data.client_id;\r\n      this.cpoId = this.params.data.cpo_id;\r\n      this.getAllActiveChargingStation();\r\n    }\r\n\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n  closeActionPanel() {\r\n    this.dialogRef.close();\r\n  }\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'You must enter a value'\r\n      : form.get('email').hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  assignValues(params) {\r\n    this.form.get('buff_time').setValue(params.data.buffer_time);\r\n    this.form.get('bookingValid_time').setValue(this.params.data.booking_validity_time);\r\n    this.form.get('minChar_Durn').setValue(params.data.min_charging_duration);\r\n    this.form.get('maxChar_Durn').setValue(params.data.max_charging_duration);\r\n    this.form.get('bookingCanl_time').setValue(params.data.booking_cancellation_time);\r\n    this.form.get('advBook_amtTime').setValue(params.data.adv_booking_time);\r\n    this.form.get('advBook_amt').setValue(params.data.adv_booking_amount);\r\n    this.status = this.params.data.status == 'Y' ? true : false;\r\n  }\r\n  updateStatus(event) {\r\n    this.status = event.checked;\r\n    this.active.checked = this.status;\r\n  }\r\n\r\n  getClients() {\r\n    this.clientService.getActiveClientsCW(this.localStorage.userId).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.clientName = resp;\r\n          if(this.isEditMode){\r\n            //;\r\n            const toSelect = this.clientName.find(c => c.id == this.params.data.client_id);\r\n            this.form.get('charClient').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharClient(name) : this.clientName)\r\n            );\r\n        }\r\n      }, (err) => {\r\n\r\n      }\r\n    )\r\n  }\r\n  private _filterCharClient(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.clientName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharClient(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  onClientChange(client_id) {\r\n    this.activeChar_station = [];\r\n    this.clientId = client_id;\r\n    this.getAllActiveChargingStation();\r\n    this.form.get('charCPO').setValue(\"\");\r\n    this.getCPOByClient(client_id);\r\n  }\r\n\r\n  getCPOByClient(client_id) {\r\n    this.cpoService.getCpoByClientId(client_id).subscribe(\r\n      (resp: any) => {\r\n        if (resp != null) {\r\n          this.cposName = resp;\r\n          if(this.isEditMode){\r\n            //;\r\n            const toSelect = this.cposName.find(c => c.id == this.params.data.cpo_id);\r\n            this.form.get('charCPO').setValue(toSelect);\r\n          }\r\n          this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n            .pipe(\r\n              startWith(''),\r\n              map(value => typeof value === 'string' ? value : value.name),\r\n              map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n            );\r\n        }\r\n\r\n      }, (err) => { }\r\n    )\r\n  }\r\n  private _filterCharCPO(name: string): any[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.cposName.filter(option => option.name.toLowerCase().includes(filterValue));\r\n  }\r\n  displayCharCPO(item: any): string {\r\n    return item && item.name ? item.name : '';\r\n  }\r\n  onCPOChange(cpo_id) {\r\n    this.activeChar_station = [];\r\n    //this.showTable = false;\r\n    this.cpoId = cpo_id;\r\n    this.getAllActiveChargingStation();\r\n\r\n  }\r\n\r\n  filteredOptions() {\r\n    this.filteredOptionsCharClient = this.form.controls.charClient.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharClient(name) : this.clientName)\r\n      );\r\n\r\n    this.filteredOptionsCharCPO = this.form.controls.charCPO.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => typeof value === 'string' ? value : value.name),\r\n        map(name => name ? this._filterCharCPO(name) : this.cposName)\r\n      );\r\n  }\r\n\r\n  getAllActiveChargingStation() {\r\n    this.cpoId = null || undefined ? 0 : this.cpoId;  \r\n    this.bookingConfig.getAllActiveChargingStations(this.clientId, this.cpoId).subscribe(\r\n      (resp: any) => {\r\n        if (resp.status == true) {\r\n          this.activeChar_station = resp.data;\r\n          var selectedListStation = [];\r\n            for (let i = 0; i < this.activeChar_station.length; i++) {\r\n              var station = this.activeChar_station[i];\r\n              if(station.id != null && station.id != undefined){\r\n                if(this.params.data.station_id == station.id){\r\n                  selectedListStation.push(station);\r\n                }\r\n                \r\n              }\r\n          }\r\n          this.form.get('char_station').setValue(selectedListStation);\r\n       \r\n\r\n        } else {\r\n          this.snackBar.open(MessageConstant.NoRecordFoundMessage, 'Dismiss', { duration: 3000 })\r\n          return;\r\n        }\r\n      },\r\n      (err) => { }\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-icon id=\"dialog_action_close\" matTooltip=\"Close window\" (click)=\"closeActionPanel()\"\r\n\tstyle=\"cursor:pointer;color:white; \" class=\"material-icons-outlined\">clear</mat-icon>\r\n\r\n\r\n<mat-toolbar class=\"action_toolbar\">{{menuArray?.title}}</mat-toolbar>\r\n<div style=\"padding:24px;max-height: 32vw;overflow: auto;\">\r\n\t<div id=\"forms\" class=\"page-layout simple fullwidth mat-dialog\" fxLayout=\"column\">\r\n\t\t<form [formGroup]=\"form\" class=\"\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\">\r\n\t\t\t\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\"  fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Select Client</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charClient\" [matAutocomplete]=\"autoClient\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #autoClient=\"matAutocomplete\" [displayWith]=\"displayCharClient\"\r\n\t\t\t\t\t\t(optionSelected)='onClientChange($event.option.value.id)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharClient | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select client\">expand_more\r\n\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('charClient').invalid\">\r\n\t\t\t\t\t\tPlease select client\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\"  fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Select CPO's</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"charCPO\" [matAutocomplete]=\"auto1\" readonly>\r\n\t\t\t\t\t<mat-autocomplete #auto1=\"matAutocomplete\" [displayWith]=\"displayCharCPO\"\r\n\t\t\t\t\t\t(optionSelected)='onCPOChange($event.option.value.id)'>\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptionsCharCPO | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option.name}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select CPO\">expand_more</mat-icon>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('charCPO').invalid\">\r\n\t\t\t\t\t\tPlease select CPO\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Charging Station</mat-label>\r\n\t\t\t\t\t<mat-select formControlName=\"char_station\" multiple disabled=\"true\">\r\n\t\t\t\t\t  <mat-option *ngFor=\"let option of activeChar_station\" [value]=\"option\">\r\n\t\t\t\t\t\t{{option.station_name}} \r\n\t\t\t\t\t  </mat-option>\r\n\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t<mat-icon matSuffix class=\"secondary-text\" matTooltip=\"Please select charging station\">help</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Buffering Time</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"buff_time\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\tmin=\"0\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('buff_time').hasError('required')\">Please enter buffering time\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('buff_time').hasError('pattern')\">Only number is allowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Booking validity Time</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"bookingValid_time\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\ttype=\"number\" min=\"0\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('bookingValid_time').hasError('required')\">Please enter booking\r\n\t\t\t\t\t\tvalidity time</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Min Charging Duration</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"minChar_Durn\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\tmin=\"0\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter nav Id\">help</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('minChar_Durn').hasError('required')\">Please enter min charging\r\n\t\t\t\t\t\tduration</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('minChar_Durn').hasError('pattern')\">Special character are not\r\n\t\t\t\t\t\tallowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Max Charging Duration</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"maxChar_Durn\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\tmin=\"0\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon matSuffix class=\"secondary-text\"  matTooltip=\"Please enter title\">badge</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('maxChar_Durn').hasError('required')\">Please enter max charging\r\n\t\t\t\t\t\tduration</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('maxChar_Durn').hasError('pattern')\">Special character are not\r\n\t\t\t\t\t\tallowed\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Booking Cancle Time</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"bookingCanl_time\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\ttype=\"number\" min=\"0\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('bookingCanl_time').hasError('required')\">Please enter booking cancle\r\n\t\t\t\t\t\ttime</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Adv Booking Amount Time</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"advBook_amtTime\" maxlength=\"50\" autocomplete=\"off\"\r\n\t\t\t\t\t\ttype=\"number\" min=\"0\" readonly>\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('advBook_amtTime').hasError('required')\">Please enter advance booking\r\n\t\t\t\t\t\tamount time</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"20px\" fxFlex=\"1 0 auto\">\r\n\t\t\t\t<mat-form-field appearance=\"outline\" fxFlex=\"33.33\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label>Adv Booking Amount</mat-label>\r\n\t\t\t\t\t<input matInput formControlName=\"advBook_amt\" maxlength=\"50\" autocomplete=\"off\" type=\"number\"\r\n\t\t\t\t\t\tmin=\"0\" readonly>\r\n\t\t\t\t\t<!-- <mat-icon  matSuffix class=\"secondary-text\"  matTooltip=\"Please enter icon url\">burst_mode</mat-icon> -->\r\n\t\t\t\t\t<mat-error *ngIf=\"form.get('advBook_amt').hasError('required')\">Please enter advance booking\r\n\t\t\t\t\t\tamount</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\r\n\t\t\t\t<div fxFlex=\"12\" class=\"pr-4\">\r\n\t\t\t\t\t<mat-label class=\"sm-txt mr-20\">Status</mat-label>\r\n\t\t\t\t\t<mat-slide-toggle class=\"example-margin sm-txt mt-10\" color=\"primary\" [checked]=\"status\"\r\n\t\t\t\t\t\t(change)=\"updateStatus($event)\" #activeElement [disabled]=\"true\">\r\n\t\t\t\t\t\t{{status ? 'Active' : 'Inactive'}}\r\n\t\t\t\t\t</mat-slide-toggle>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t<!-- button mat-raised-button color=\"primary\" type=\"button\" class=\"mr-8\"\r\n      (click)=\"onYesClick()\">{{isEditMode ? 'Save' : 'Save'}}</button> -->\r\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"warn\" class=\"mr-8\" (click)=\"close()\">Cancel</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</form>\r\n\t</div>\r\n</div>","\r\nimport { NgModule} from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BookingConfigCrudComponent } from './booking-config-crud/booking-config-crud.component';\r\nimport { TABS_DEMO_ROUTES } from './booking-config-crud/routes';\r\nimport { AuthGuard } from 'app/shared/interceptors/auth-gaurd';\r\nconst routes : Routes = [\r\n    {\r\n        path : 'crud',component : BookingConfigCrudComponent,canActivate: [AuthGuard], children : TABS_DEMO_ROUTES\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports : [RouterModule.forChild(routes)],\r\n    exports : [RouterModule]\r\n})\r\n\r\nexport class BookingConfigRoutingModule{}"]}