{"version":3,"sources":["./src/app/main/asset/rfid-management/rfid-recharge/energy-consumption-logs/energy-consumption-logs.component.ts","./src/app/main/asset/rfid-management/rfid-recharge/energy-consumption-logs/energy-consumption-logs.component.html","./src/app/main/asset/rfid-management/rfid-recharge/list/list.component.ts","./src/app/main/asset/rfid-management/rfid-recharge/list/list.component.html","./src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge.module.ts","./src/app/main/asset/rfid-management/rfid-recharge/recharge-history/recharge-history.component.ts","./src/app/main/asset/rfid-management/rfid-recharge/recharge-history/recharge-history.component.html","./src/app/shared/services/rfid/rfid.service.ts","./src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-crud/rfid-recharge-crud.component.ts","./src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-crud/rfid-recharge-crud.component.html","./src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-routing.module.ts","./src/app/main/asset/rfid-management/rfid-recharge/action-dialog/action-dialog.component.ts","./src/app/main/asset/rfid-management/rfid-recharge/action-dialog/action-dialog.component.html","./src/app/main/asset/rfid-management/rfid-recharge/rfid-recharge-crud/routes.ts"],"names":[],"mappings":"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","file":"rfid-recharge-rfid-recharge-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { CpoService } from \"app/shared/services/cpo/cpo.service\";\r\n\r\nexport class RECHARGE_HISTORY {\r\n    id: string;\r\n    cpo_id: string;\r\n    rf_id_no: string;\r\n    cpo_name: string;\r\n    billed_amt: string;\r\n    start_time: string;\r\n    stop_time: string;\r\n    transaction_id: string;\r\n    station_id: string;\r\n    transaction_date: string;\r\n    duration: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-energy-consumption-logs\",\r\n    templateUrl: \"./energy-consumption-logs.component.html\",\r\n    styleUrls: [\"./energy-consumption-logs.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class EnergyConsumptionLogsComponent implements OnInit {\r\n    filterEntity: RECHARGE_HISTORY;\r\n    filterType: MatTableFilter;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n\r\n    head = [\r\n        [\r\n            \"CPO Name\",\r\n            \"RFID No\",\r\n            \"Bill Amount\",\r\n            \"Start Amount\",\r\n            \"Stop Amount\",\r\n            \"Transaction Date\",\r\n            \"Duration\",\r\n        ],\r\n    ];\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    localStorage: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientNameSearch = false;\r\n    cpoSearch = false;\r\n    durationSearch = false;\r\n    stationNameSearch = false;\r\n    rfidNoSearch = false;\r\n    amountSearch = false;\r\n    billedAmountSearch = false;\r\n    startTimeSearch = false;\r\n    stopTimeSearch = false;\r\n    transactionDateSearch = false;\r\n    chargAmountSearch = false;\r\n    createdDateSearch = false;\r\n    statusSearch = false;\r\n    transactionid = false;\r\n    stationid = false;\r\n    tranactionDate = false;\r\n    exportedData: any[];\r\n    cposName: any;\r\n    clientName: any;\r\n    form: FormGroup;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    selectedCpo_id: any;\r\n    localClient: any;\r\n    rfidRechargeHistory: any;\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private fb: FormBuilder,\r\n        private cpoService: CpoService,\r\n        private rfidService: RfidService,\r\n        private datePipe: DatePipe\r\n    ) {\r\n        this.form = this.fb.group({\r\n            CPO: [\"\", Validators.required],\r\n            toDate: [\"\"],\r\n            fromDate: [\"\"],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.columns = [\r\n            {\r\n                field: \"cpo_name\",\r\n            },\r\n            {\r\n                field: \"rf_id_no\",\r\n            },\r\n            {\r\n                field: \"billed_amt\",\r\n            },\r\n            {\r\n                field: \"start_time\",\r\n            },\r\n            {\r\n                field: \"stop_time\",\r\n            },\r\n            {\r\n                field: \"transaction_date\",\r\n            },\r\n            {\r\n                field: \"duration\",\r\n            },\r\n        ];\r\n        this.displayedColumns = this.columns.map((column) => column.field);\r\n\r\n        this.getactivecposcw(this.localStorage.userId);\r\n        this.filterEntity = new RECHARGE_HISTORY();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    getactivecposcw(id) {\r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n\r\n                        this.selectedCpo_id = toSelect.id;\r\n                        this.form.get(\"CPO\").setValue(toSelect);\r\n\r\n                        // if (this.localStorage.role_code == \"CPO\") {\r\n                        //     this.form.get(\"CPO\").disable();\r\n                        // }\r\n\r\n                        // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                        this.getrfidRechargeHistory();\r\n                    }\r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onCPOChange(cpo_id) {\r\n        this.selectedCpo_id = cpo_id;\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    onChangeDateFilter() {\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    getrfidRechargeHistory() {\r\n        let formValues = this.form.value;\r\n\r\n        let fromDate = this.datePipe.transform(\r\n            formValues.fromDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n        let toDate = this.datePipe.transform(\r\n            formValues.toDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n       \r\n        let params = {\r\n            cpo_id: formValues.CPO.id,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n        };\r\n        this.rfidService.getConsumptionLogsByCpoId(params).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status) {\r\n                    this.rfidRechargeHistory = resp.data;\r\n                    for (var i = 0; i < this.rfidRechargeHistory.length; i++) {\r\n                        this.rfidRechargeHistory[i].start_time =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].start_time,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                        this.rfidRechargeHistory[i].stop_time =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].stop_time,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                        this.rfidRechargeHistory[i].transaction_date =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].transaction_date,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.rfidRechargeHistory = [];\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    this.snackBar.open(\r\n                        MessageConstant.NoRecordFoundMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 3000 }\r\n                    );\r\n                    return;\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"1200px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            setTimeout(() => {\r\n                // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                this.getrfidRechargeHistory();\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"cpoSearch\") {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n        }\r\n        if (visibleOption == \"rfidNoSearch\") {\r\n            this.rfidNoSearch = !this.rfidNoSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"billedAmountSearch\") {\r\n            this.billedAmountSearch = !this.billedAmountSearch;\r\n            this.filterEntity.billed_amt = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"startTimeSearch\") {\r\n            this.startTimeSearch = !this.startTimeSearch;\r\n            this.filterEntity.start_time = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"stopTimeSearch\") {\r\n            this.stopTimeSearch = !this.stopTimeSearch;\r\n            this.filterEntity.stop_time = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"transactionDateSearch\") {\r\n            this.transactionDateSearch = !this.transactionDateSearch;\r\n            this.filterEntity.transaction_date = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"createdDateSearch\") {\r\n            this.createdDateSearch = !this.createdDateSearch;\r\n            this.filterEntity.station_id = \"\";\r\n        }\r\n\r\n        if (visibleOption == \"durationSearch\") {\r\n            this.durationSearch = !this.durationSearch;\r\n            this.filterEntity.duration = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"CPO Name\": rechargeHistoryModel.cpo_name,\r\n                \"RFID No\": rechargeHistoryModel.rf_id_no,\r\n                \"Bill Amount\": rechargeHistoryModel.billed_amt,\r\n                \"Start Time\": rechargeHistoryModel.start_time,\r\n                \"Stop Time\": rechargeHistoryModel.stop_time,\r\n                \"Transaction Date\": rechargeHistoryModel.transaction_date,\r\n                \"Duration\": rechargeHistoryModel.duration,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"sales disptch\");\r\n        XLSX.writeFile(workBook, \"RFID By Cpo.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                rechargeHistoryModel.cpo_name,\r\n                rechargeHistoryModel.rf_id_no,\r\n                rechargeHistoryModel.billed_amt,\r\n                rechargeHistoryModel.start_time,\r\n                rechargeHistoryModel.stop_time,\r\n                rechargeHistoryModel.transaction_date,\r\n                rechargeHistoryModel.duration,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"Charging Station Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n\r\n        // below line for Download PDF document\r\n        doc.save(\"Charging Station report.pdf\");\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-card\r\n    style=\"padding: 16px !important\"\r\n    *ngIf=\"localStorage.role_code != 'END'\"\r\n>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                >\r\n                    <mat-label>Select CPO </mat-label>\r\n                    <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"CPO\"\r\n                        [matAutocomplete]=\"auto2\"\r\n                    />\r\n                    <mat-autocomplete\r\n                        #auto2=\"matAutocomplete\"\r\n                        [displayWith]=\"displayCPO\"\r\n                        (optionSelected)=\"onCPOChange($event.option.value.id)\"\r\n                    >\r\n                        <mat-option\r\n                            *ngFor=\"let option of filteredOptionsCPO | async\"\r\n                            [value]=\"option\"\r\n                        >\r\n                            {{ option.name }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex\">\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >expand_more</mat-icon\r\n                        >\r\n                        <mat-icon\r\n                            matSuffix\r\n                            class=\"secondary-text\"\r\n                            matTooltip=\"Please enter cpo name\"\r\n                            >account_circle\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('CPO').invalid\"\r\n                        >Please select cpo</mat-error\r\n                    >\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>From Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"fDate\"\r\n                        formControlName=\"fromDate\"\r\n                        #fromDate\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"fDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>To Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"tDate\"\r\n                        formControlName=\"toDate\"\r\n                        [min]=\"\r\n                            !!form.value.fromDate\r\n                                ? form.value.fromDate._d\r\n                                : '2020-01-01'\r\n                        \"\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"tDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #tDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table\r\n                mat-table\r\n                matTableFilter\r\n                [dataSource]=\"dataSource\"\r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\"\r\n                matSort\r\n                class=\"mat-elevation-z8\"\r\n            >\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >CPO Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!rfidNoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >RFID<mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"rfidNoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" RFID \"\r\n                                [(ngModel)]=\"filterEntity.rf_id_no\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.rf_id_no }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"billed_amt\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!billedAmountSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                        >\r\n                            Bill Amount &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'billedAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"billedAmountSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Billed Amount\"\r\n                                [(ngModel)]=\"filterEntity.billed_amt\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'billedAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.billed_amt }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"start_time\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!startTimeSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Start time\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('startTimeSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"startTimeSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Start Time\"\r\n                                [(ngModel)]=\"filterEntity.start_time\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('startTimeSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.start_time }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"stop_time\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!stopTimeSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Stop time\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('stopTimeSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"stopTimeSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Stop Time\"\r\n                                [(ngModel)]=\"filterEntity.stop_time\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('stopTimeSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.stop_time }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"transaction_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Transaction ID  &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"station_id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Station ID &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container> -->\r\n                <ng-container matColumnDef=\"transaction_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!transactionDateSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Transaction Date &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'transactionDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"transactionDateSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" Transaction Date \"\r\n                                [(ngModel)]=\"filterEntity.transaction_date\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'transactionDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.transaction_date }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"duration\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!durationSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Duration &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('durationSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"durationSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" Duration \"\r\n                                [(ngModel)]=\"filterEntity.duration\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('durationSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.duration }}</td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"action\" >\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div style=\"display: flex\">\r\n                            <mat-icon\r\n                                color=\"primary\"\r\n                                matTooltip=\"Edit\"\r\n                                (click)=\"openDialog('EDIT', element)\"\r\n                                style=\"cursor: pointer\"\r\n                                >edit</mat-icon\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-container> -->\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n\r\n            <mat-paginator\r\n                [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n            ></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { CpoService } from \"app/shared/services/cpo/cpo.service\";\r\n\r\nexport class RFID {\r\n    id: string;\r\n    client_id: string;\r\n    client_name: string;\r\n    cpo_id: string;\r\n    cpo_name: string;\r\n    station_name: string;\r\n    rfid_id: number;\r\n    rf_id_no: string;\r\n    balance: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-list\",\r\n    templateUrl: \"./list.component.html\",\r\n    styleUrls: [\"./list.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class ListComponent implements OnInit {\r\n    filterEntity: RFID;\r\n    filterType: MatTableFilter;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n\r\n    head = [\r\n        [\r\n            \"Client Name\",\r\n            \"CPO Name\",\r\n            \"Station Name\",\r\n            \"RFID\",\r\n            \"Balance\",\r\n            \"Action\",\r\n        ],\r\n    ];\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    localStorage: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientNameSearch = false;\r\n    cpoSearch = false;\r\n    stationNameSearch = false;\r\n    rfidNoSearch = false;\r\n    balanceSearch = false;\r\n    chargAmountSearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    cposName: any;\r\n    clientName: any;\r\n    form: FormGroup;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    selectedCpo_id: any;\r\n    localClient: any;\r\n    rfidRecharge: any;\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private fb: FormBuilder,\r\n        private cpoService: CpoService,\r\n        private rfidService: RfidService\r\n    ) {\r\n        this.form = this.fb.group({\r\n            CPO: [\"\", Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.columns = [\r\n            {\r\n                field: \"client_name\",\r\n            },\r\n            {\r\n                field: \"cpo_name\",\r\n            },\r\n            {\r\n                field: \"station_name\",\r\n            },\r\n            {\r\n                field: \"rf_id_no\",\r\n            },\r\n            {\r\n                field: \"balance\",\r\n            },\r\n            {\r\n                field: \"action\",\r\n                show: ((this.localStorage.role_code !== \"CPO\") && (this.localStorage.role_code != \"END\"))\r\n            },\r\n        ];\r\n        // Filter out the columns that should not be displayed\r\n        this.displayedColumns = this.columns.filter(column => column.show !== false).map(column => column.field);\r\n\r\n        this.getactivecposcw(this.localStorage.userId);\r\n        this.filterEntity = new RFID();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    getactivecposcw(id) {\r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                console.log('data');\r\n                console.log(data);\r\n                \r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n                        console.log(\"toselect\");\r\n                        console.log(toSelect);\r\n\r\n                        this.selectedCpo_id = toSelect.id;\r\n                        this.form.get(\"CPO\").setValue(toSelect);\r\n\r\n                        if (this.localStorage.role_code == \"CPO\") {\r\n                            this.form.get(\"CPO\").disable();\r\n                        }\r\n\r\n                        this.getRfidRecharge(this.selectedCpo_id);\r\n                    }\r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onCPOChange(cpo_id) {\r\n        this.selectedCpo_id = cpo_id;\r\n        this.getRfidRecharge(cpo_id);\r\n    }\r\n\r\n    getRfidRecharge(cpo_id) {\r\n        this.rfidService\r\n            .getRechargeLogsbyCCSW(this.localStorage.userId, cpo_id)\r\n            .subscribe(\r\n                (resp: any) => {\r\n                    if (resp.status) {\r\n                        this.rfidRecharge = resp.data;\r\n                        this.dataSource = new MatTableDataSource(\r\n                            this.rfidRecharge\r\n                        );\r\n                        this.dataSource.paginator = this.paginator;\r\n                        this.dataSource.sort = this.sort;\r\n                    } else {\r\n                        this.rfidRecharge = [];\r\n                        this.dataSource = new MatTableDataSource(\r\n                            this.rfidRecharge\r\n                        );\r\n                        this.dataSource.paginator = this.paginator;\r\n                        this.dataSource.sort = this.sort;\r\n                        this.snackBar.open(\r\n                            MessageConstant.NoRecordFoundMessage,\r\n                            \"Dismiss\",\r\n                            { duration: 3000 }\r\n                        );\r\n                        return;\r\n                    }\r\n                },\r\n                (err) => {}\r\n            );\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"1200px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            setTimeout(() => {\r\n                this.getRfidRecharge(this.selectedCpo_id);\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"clientNameSearch\") {\r\n            this.clientNameSearch = !this.clientNameSearch;\r\n            this.filterEntity.client_name = \"\";\r\n        }\r\n        if (visibleOption == \"cpoSearch\") {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n        }\r\n        if (visibleOption == \"stationNameSearch\") {\r\n            this.stationNameSearch = !this.stationNameSearch;\r\n            this.filterEntity.station_name = \"\";\r\n        }\r\n        if (visibleOption == \"stationNameSearch\") {\r\n            this.stationNameSearch = !this.stationNameSearch;\r\n            this.filterEntity.station_name = \"\";\r\n        }\r\n        if (visibleOption == \"rfidNoSearch\") {\r\n            this.rfidNoSearch = !this.rfidNoSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n        if (visibleOption == \"balanceSearch\") {\r\n            this.balanceSearch = !this.balanceSearch;\r\n            this.filterEntity.balance = \"\";\r\n        }\r\n        // if (visibleOption == \"chargAmountSearch\") {\r\n        //     this.chargAmountSearch = !this.chargAmountSearch;\r\n        //     this.filterEntity.charging_amt = \"\";\r\n        // }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rfidRechargeModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"Client Name\": rfidRechargeModel.client_name,\r\n                \"CPO Name\": rfidRechargeModel.cpo_name,\r\n                \"Station Name\": rfidRechargeModel.station_name,\r\n                \"RFID No\": rfidRechargeModel.rf_id_no,\r\n                \"Balance\": rfidRechargeModel.balance,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"sales disptch\");\r\n        XLSX.writeFile(workBook, \"RFID By Cpo.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rfidRechargeModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                rfidRechargeModel.client_name,\r\n                rfidRechargeModel.cpo_name,\r\n                rfidRechargeModel.station_name,\r\n                rfidRechargeModel.rf_id_no,\r\n                rfidRechargeModel.balance,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        } \r\n        \r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"Charging Station Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n\r\n        // below line for Download PDF document\r\n        doc.save(\"Charging Station report.pdf\");\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-card\r\n    style=\"padding: 16px !important\"\r\n    *ngIf=\"localStorage.role_code != 'END'\"\r\n>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"50\"\r\n                >\r\n                    <mat-label>Select CPO </mat-label>\r\n                    <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"CPO\"\r\n                        [matAutocomplete]=\"auto2\"\r\n                    />\r\n                    <mat-autocomplete\r\n                        #auto2=\"matAutocomplete\"\r\n                        [displayWith]=\"displayCPO\"\r\n                        (optionSelected)=\"onCPOChange($event.option.value.id)\"\r\n                    >\r\n                        <mat-option\r\n                            *ngFor=\"let option of filteredOptionsCPO | async\"\r\n                            [value]=\"option\"\r\n                        >\r\n                            {{ option.name }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex\">\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >expand_more</mat-icon\r\n                        >\r\n                        <mat-icon\r\n                            matSuffix\r\n                            class=\"secondary-text\"\r\n                            matTooltip=\"Please enter cpo name\"\r\n                            >account_circle\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('CPO').invalid\"\r\n                        >Please select cpo</mat-error\r\n                    >\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table\r\n                mat-table\r\n                matTableFilter\r\n                [dataSource]=\"dataSource\"\r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\"\r\n                matSort\r\n                class=\"mat-elevation-z8\"\r\n            >\r\n                <ng-container matColumnDef=\"client_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!clientNameSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Client Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('clientNameSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"clientNameSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" Client Name \"\r\n                                [(ngModel)]=\"filterEntity.client_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('clientNameSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.client_name }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >CPO Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"station_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!stationNameSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Station Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'stationNameSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"stationNameSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  Station Name \"\r\n                                [(ngModel)]=\"filterEntity.station_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'stationNameSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.station_name }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!rfidNoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >RFID<mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"rfidNoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" RFID \"\r\n                                [(ngModel)]=\"filterEntity.rf_id_no\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.rf_id_no }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"balance\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!balanceSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Balance &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('balanceSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"balanceSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Balance\"\r\n                                [(ngModel)]=\"filterEntity.balance\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('balanceSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.balance }}</td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"charging_amt\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span *ngIf=\"!chargAmountSearch\" class=\"custom_font_size\" style=\"display: flex;\">Charge Amount <mat-icon matSuffix (click)=\"changeVisibility('chargAmountSearch',$event)\">search</mat-icon> </span>\r\n                        <mat-form-field *ngIf=\"chargAmountSearch\" appearance=\"outline\" style=\"width: 140px;\" class=\"list_input\">\r\n                            <input matInput placeholder=\"Charge Amount\" [(ngModel)]=\"filterEntity.charging_amt\">\r\n                            <mat-icon matSuffix (click)=\"changeVisibility('chargAmountSearch',$event)\">highlight_off</mat-icon>\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.charging_amt}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container *ngIf=\"localStorage.role_code !== 'CPO'\" matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div style=\"display: flex\">\r\n                            <mat-icon\r\n                                color=\"primary\"\r\n                                matTooltip=\"Edit\"\r\n                                (click)=\"openDialog('EDIT', element)\"\r\n                                style=\"cursor: pointer\"\r\n                                >edit</mat-icon\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n\r\n            <mat-paginator\r\n                [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n            ></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\n\r\nimport { RfidRechargeRoutingModule } from \"./rfid-recharge-routing.module\";\r\nimport { ListComponent } from \"./list/list.component\";\r\nimport { RfidRechargeCrudComponent } from \"./rfid-recharge-crud/rfid-recharge-crud.component\";\r\nimport { ActionDialogComponent } from \"./action-dialog/action-dialog.component\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { RechargeHistoryComponent } from './recharge-history/recharge-history.component';\r\nimport { EnergyConsumptionLogsComponent } from './energy-consumption-logs/energy-consumption-logs.component';\r\n\r\nconst COMPONENTS = [RfidRechargeCrudComponent, ListComponent];\r\nconst COMPONENTS_DYNAMIC = [ActionDialogComponent];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RfidRechargeRoutingModule, FuseSharedModule],\r\n    declarations: [COMPONENTS, COMPONENTS_DYNAMIC, RechargeHistoryComponent, EnergyConsumptionLogsComponent],\r\n    entryComponents: [COMPONENTS_DYNAMIC],\r\n})\r\nexport class RfidRechargeModule {}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { ActionDialogComponent } from \"../action-dialog/action-dialog.component\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MessageConstant } from \"app/shared/utils/message.constant\";\r\nimport { MatTableFilter } from \"mat-table-filter\";\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { FuseConfirmDialogComponent } from \"@fuse/components/confirm-dialog/confirm-dialog.component\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { map, startWith } from \"rxjs/operators\";\r\nimport { Validators, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\nimport { CpoService } from \"app/shared/services/cpo/cpo.service\";\r\n\r\nexport class RECHARGE_HISTORY {\r\n    id: string;\r\n    cpo_id: string;\r\n    cpo_name: string;\r\n    userid: string;\r\n    approvedby: string;\r\n    modeofpayment: string;\r\n    paymentdate: string;\r\n    rf_id_no: string;\r\n    amount: string;\r\n    charging_amt: string;\r\n    status: string;\r\n    modifyby: string;\r\n    created_date: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"app-recharge-history\",\r\n    templateUrl: \"./recharge-history.component.html\",\r\n    styleUrls: [\"./recharge-history.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class RechargeHistoryComponent implements OnInit {\r\n    filterEntity: RECHARGE_HISTORY;\r\n    filterType: MatTableFilter;\r\n    columns: any[];\r\n    displayedColumns: string[];\r\n\r\n    head = [[\"CPO Name\", \"RFID\", \"Amount\", \"Charging Amount\", \"Created Date\"]];\r\n    public dataSource = new MatTableDataSource<any>([]);\r\n    localStorage: any;\r\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\r\n    dialogRef: any;\r\n    clientNameSearch = false;\r\n    cpoSearch = false;\r\n    stationNameSearch = false;\r\n    rfidNoSearch = false;\r\n    amountSearch = false;\r\n    chargAmountSearch = false;\r\n    createdDateSearch = false;\r\n    statusSearch = false;\r\n    exportedData: any[];\r\n    cposName: any;\r\n    clientName: any;\r\n    form: FormGroup;\r\n    filteredOptionsCPO: Observable<any[]>;\r\n    selectedCpo_id: any;\r\n    localClient: any;\r\n    rfidRechargeHistory: any;\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private fb: FormBuilder,\r\n        private cpoService: CpoService,\r\n        private rfidService: RfidService,\r\n        private datePipe: DatePipe\r\n    ) {\r\n        this.form = this.fb.group({\r\n            CPO: [\"\", Validators.required],\r\n            toDate: [\"\"],\r\n            fromDate: [\"\"],\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        // if (this.localStorage.role_code == \"CPO\") {\r\n        //     this.form.get(\"CPO\").disable();\r\n        // }\r\n\r\n        this.columns = [\r\n            {\r\n                field: \"cpo_name\",\r\n            },\r\n            {\r\n                field: \"rf_id_no\",\r\n            },\r\n            {\r\n                field: \"amount\",\r\n            },\r\n            {\r\n                field: \"charging_amt\",\r\n            },\r\n            {\r\n                field: \"created_date\",\r\n            },\r\n        ];\r\n        this.displayedColumns = this.columns.map((column) => column.field);\r\n\r\n        this.getactivecposcw(this.localStorage.userId);\r\n        this.filterEntity = new RECHARGE_HISTORY();\r\n        this.filterType = MatTableFilter.ANYWHERE;\r\n    }\r\n\r\n    getactivecposcw(id) {\r\n        \r\n        this.cpoService.getactivecposcwwithAll(id).subscribe(\r\n            (data: any) => {\r\n                this.cposName = data;\r\n                if (this.localStorage.role_code != \"END\") {\r\n                    if (this.cposName != null && this.cposName != undefined) {\r\n                        const toSelect = this.cposName[0];\r\n                        console.log(\"CPO Data:\", toSelect);\r\n\r\n                         this.selectedCpo_id = toSelect.id;\r\n                         this.form.get(\"CPO\").setValue(toSelect); \r\n\r\n                        // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                        this.getrfidRechargeHistory();\r\n                    } \r\n                    this.filteredOptionsCPO =\r\n                        this.form.controls.CPO.valueChanges.pipe(\r\n                            startWith(\"\"),\r\n                            map((value) =>\r\n                                typeof value === \"string\" ? value : value.name\r\n                            ),\r\n                            map((name) =>\r\n                                name ? this._filterCPO(name) : this.cposName\r\n                            )\r\n                        );\r\n                }\r\n            },\r\n            (err) => {\r\n            }\r\n            \r\n        );\r\n    }\r\n\r\n    displayCPO(item: any): string {\r\n        return item && item.name ? item.name : \"\";\r\n    }\r\n\r\n    private _filterCPO(name: string): any[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.cposName.filter((option) =>\r\n            option.name.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    onCPOChange(cpo_id) {\r\n        this.selectedCpo_id = cpo_id;\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    onChangeDateFilter() {\r\n        this.getrfidRechargeHistory();\r\n    }\r\n\r\n    getrfidRechargeHistory() {\r\n        let formValues = this.form.value;\r\n\r\n        let fromDate = this.datePipe.transform(\r\n            formValues.fromDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n        let toDate = this.datePipe.transform(\r\n            formValues.toDate,\r\n            \"dd-MM-yyyy\"\r\n        );\r\n\r\n        console.log(\"formValues\");\r\n        console.log(formValues);\r\n        \r\n\r\n        let params = {\r\n            cpo_id: formValues.CPO.id,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n        };\r\n        \r\n        this.rfidService.getRechargeLogsByCpoId(params).subscribe(\r\n            (resp: any) => {\r\n                if (resp.status) {\r\n                    this.rfidRechargeHistory = resp.data;\r\n                    for (var i = 0; i < this.rfidRechargeHistory.length; i++) {\r\n                        this.rfidRechargeHistory[i].created_date =\r\n                            this.datePipe.transform(\r\n                                this.rfidRechargeHistory[i].created_date,\r\n                                \"dd/MM/yyyy h:mm:ss a\"\r\n                            );\r\n                    }\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                } else {\r\n                    this.rfidRechargeHistory = [];\r\n                    this.dataSource = new MatTableDataSource(\r\n                        this.rfidRechargeHistory\r\n                    );\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    this.snackBar.open(\r\n                        MessageConstant.NoRecordFoundMessage,\r\n                        \"Dismiss\",\r\n                        { duration: 3000 }\r\n                    );\r\n                    return;\r\n                }\r\n            },\r\n            (err) => {}\r\n        );\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    openDialog(action, data): void {\r\n        let params = {\r\n            action: action,\r\n            data: data,\r\n        };\r\n        const dialogRef = this.dialog.open(ActionDialogComponent, {\r\n            width: \"1200px\",\r\n            data: params,\r\n            panelClass: \"app-action-dialog\",\r\n            autoFocus: false,\r\n            disableClose: true,\r\n        });\r\n        dialogRef.afterClosed().subscribe((result) => {\r\n            setTimeout(() => {\r\n                // this.getrfidRechargeHistory(this.selectedCpo_id);\r\n                this.getrfidRechargeHistory();\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    changeVisibility(visibleOption, ev) {\r\n        ev.stopPropagation();\r\n        if (visibleOption == \"cpoSearch\") {\r\n            this.cpoSearch = !this.cpoSearch;\r\n            this.filterEntity.cpo_name = \"\";\r\n        }\r\n        if (visibleOption == \"rfidNoSearch\") {\r\n            this.rfidNoSearch = !this.rfidNoSearch;\r\n            this.filterEntity.rf_id_no = \"\";\r\n        }\r\n        if (visibleOption == \"amountSearch\") {\r\n            this.amountSearch = !this.amountSearch;\r\n            this.filterEntity.amount = \"\";\r\n        }\r\n        if (visibleOption == \"chargAmountSearch\") {\r\n            this.chargAmountSearch = !this.chargAmountSearch;\r\n            this.filterEntity.charging_amt = \"\";\r\n        }\r\n        if (visibleOption == \"createdDateSearch\") {\r\n            this.createdDateSearch = !this.createdDateSearch;\r\n            this.filterEntity.created_date = \"\";\r\n        }\r\n    }\r\n\r\n    tableExport() {\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = {\r\n                \"CPO Name\": rechargeHistoryModel.cpo_name,\r\n                \"RFID No\": rechargeHistoryModel.rf_id_no,\r\n                Amount: rechargeHistoryModel.amount,\r\n                \"Charging Amount\": rechargeHistoryModel.charging_amt,\r\n                \"Created Date\": rechargeHistoryModel.created_date,\r\n            };\r\n            this.exportedData.push(data);\r\n        }\r\n        const workSheet = XLSX.utils.json_to_sheet(this.exportedData);\r\n        const workBook: XLSX.WorkBook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, \"sales disptch\");\r\n        XLSX.writeFile(workBook, \"RFID By Cpo.xlsx\");\r\n    }\r\n\r\n    pdfExport() {\r\n        var doc = new jsPDF({\r\n            // set needed dimensions for any elemen\r\n        });\r\n        this.exportedData = [];\r\n        for (let i = 0; i < this.dataSource.filteredData.length; i++) {\r\n            var rechargeHistoryModel = this.dataSource.filteredData[i];\r\n            //this.exportedData.push({name: `name${i}`, description: `description${i}`,\r\n            //statusString: `statusString${i}`});\r\n            var data = [\r\n                rechargeHistoryModel.cpo_name,\r\n                rechargeHistoryModel.rf_id_no,\r\n                rechargeHistoryModel.amount,\r\n                rechargeHistoryModel.charging_amt,\r\n                rechargeHistoryModel.created_date,\r\n            ];\r\n\r\n            this.exportedData.push(data);\r\n        }\r\n        var img = new Image();\r\n        var imgRight = new Image();\r\n        var src = \"assets/images/logos/logo_sparkev_main.png\";\r\n        var srcSparkEV = \"assets/images/logos/logo_SparkEV_black.png\";\r\n        imgRight.src = srcSparkEV;\r\n        var createdDate = new Date().toLocaleString(\"en-GB\");\r\n        img.src = src;\r\n        doc.setFontSize(11);\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(18);\r\n\r\n        (doc as any).autoTable({\r\n            head: this.head,\r\n            body: this.exportedData,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: \"majalla\", fillColor: [11, 148, 68] },\r\n            styles: {\r\n                cellPadding: 1,\r\n                fontSize: 8,\r\n            },\r\n\r\n            margin: { top: 22 },\r\n            didDrawCell: (data) => {},\r\n            didDrawPage: (data) => {\r\n                doc.addImage(img, 15, 7, 15, 6);\r\n                doc.addImage(imgRight, 170, 7, 25, 6);\r\n\r\n                doc.text(\r\n                    \"Charging Station Report\",\r\n                    doc.internal.pageSize.getWidth() / 2,\r\n                    11,\r\n                    { align: \"center\" }\r\n                );\r\n\r\n                doc.setTextColor(211, 211, 211);\r\n                doc.setFontSize(60);\r\n                doc.setGState(doc.GState({ opacity: 0.6 }));\r\n                doc.text(\"Confidential/Not for Public use\", 25, 285, null, 60);\r\n                doc.setGState(doc.GState({ opacity: 1 }));\r\n                doc.setTextColor(100);\r\n                doc.setFontSize(9);\r\n                doc.text(\"Date:\" + createdDate, 15, 18);\r\n\r\n                doc.text(\"Generated By:\" + this.localStorage.f_Name, 195, 18, {\r\n                    align: \"right\",\r\n                });\r\n                doc = this.addWaterMark(doc);\r\n            },\r\n        });\r\n\r\n        // below line for Open PDF document in new tab\r\n        doc.output(\"dataurlnewwindow\");\r\n\r\n        // below line for Download PDF document\r\n        doc.save(\"Charging Station report.pdf\");\r\n    }\r\n\r\n    addWaterMark(doc) {\r\n        var newpage = doc.getNumberOfPages();\r\n        const i = doc.internal.getNumberOfPages();\r\n        doc.setTextColor(100);\r\n        doc.setFontSize(10);\r\n        //Print Page 1 of 4 for example\r\n\r\n        doc.text(\r\n            \"Page \" + String(i) + \" of \" + String(newpage),\r\n            210 - 20,\r\n            297 - 10,\r\n            null,\r\n            null,\r\n            \"right\"\r\n        );\r\n        return doc;\r\n    }\r\n}\r\n","<div\r\n    style=\"\r\n        text-align: left;\r\n        margin-left: 10px;\r\n        margin-bottom: 10px;\r\n        margin-top: 10px;\r\n    \"\r\n>\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"tableExport()\"\r\n        matTooltip=\"Excel Download\"\r\n    >\r\n        <mat-icon>sim_card_download</mat-icon></button\r\n    >&nbsp;&nbsp;\r\n    <button\r\n        mat-mini-fab\r\n        color=\"primary\"\r\n        (click)=\"pdfExport()\"\r\n        matTooltip=\"PDF Download\"\r\n    >\r\n        <mat-icon>picture_as_pdf</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-card\r\n    style=\"padding: 16px !important\"\r\n    *ngIf=\"localStorage.role_code != 'END'\"\r\n>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\">\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                >\r\n                    <mat-label>Select CPO </mat-label>\r\n                    <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"CPO\"\r\n                        [matAutocomplete]=\"auto2\"\r\n                    />\r\n                    <mat-autocomplete\r\n                        #auto2=\"matAutocomplete\"\r\n                        [displayWith]=\"displayCPO\"\r\n                        (optionSelected)=\"onCPOChange($event.option.value.id)\"\r\n                    >\r\n                        <mat-option\r\n                            *ngFor=\"let option of filteredOptionsCPO | async\"\r\n                            [value]=\"option\"\r\n                        >\r\n                            {{ option.name }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div matSuffix style=\"display: flex\">\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >expand_more</mat-icon\r\n                        >\r\n                        <mat-icon\r\n                            matSuffix\r\n                            class=\"secondary-text\"\r\n                            matTooltip=\"Please enter cpo name\"\r\n                            >account_circle\r\n                        </mat-icon>\r\n                    </div>\r\n                    <mat-error *ngIf=\"form.get('CPO').invalid\"\r\n                        >Please select cpo</mat-error\r\n                    >\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>From Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"fDate\"\r\n                        formControlName=\"fromDate\"\r\n                        #fromDate\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"fDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #fDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field\r\n                    appearance=\"outline\"\r\n                    style=\"height: 60px\"\r\n                    fxFlex=\"33\"\r\n                    class=\"pr-4\"\r\n                >\r\n                    <mat-label>To Date</mat-label>\r\n                    <input\r\n                        matInput\r\n                        [matDatepicker]=\"tDate\"\r\n                        formControlName=\"toDate\"\r\n                        [min]=\"\r\n                            !!form.value.fromDate\r\n                                ? form.value.fromDate._d\r\n                                : '2020-01-01'\r\n                        \"\r\n                        [max]=\"currDate\"\r\n                        (dateChange)=\"onChangeDateFilter()\"\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                        matSuffix\r\n                        [for]=\"tDate\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #tDate disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div\r\n    fxLayout=\"row wrap\"\r\n    class=\"page-layout simple fullwidth\"\r\n    style=\"overflow: scroll\"\r\n>\r\n    <div class=\"content\" style=\"min-width: auto\">\r\n        <div class=\"mat-elevation-z8\">\r\n            <table\r\n                mat-table\r\n                matTableFilter\r\n                [dataSource]=\"dataSource\"\r\n                [exampleEntity]=\"filterEntity\"\r\n                [filterType]=\"filterType\"\r\n                matSort\r\n                class=\"mat-elevation-z8\"\r\n            >\r\n                <ng-container matColumnDef=\"cpo_name\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!cpoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >CPO Name &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"cpoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"  CPO Name \"\r\n                                [(ngModel)]=\"filterEntity.cpo_name\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"changeVisibility('cpoSearch', $event)\"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.cpo_name }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rf_id_no\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!rfidNoSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >RFID<mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"rfidNoSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\" RFID \"\r\n                                [(ngModel)]=\"filterEntity.rf_id_no\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('rfidNoSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.rf_id_no }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!amountSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Amount &nbsp;&nbsp;\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('amountSearch', $event)\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"amountSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Amount\"\r\n                                [(ngModel)]=\"filterEntity.amount\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility('amountSearch', $event)\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">{{ row.amount }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"charging_amt\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!chargAmountSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Charging Amount\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'chargAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"chargAmountSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Charging Amount\"\r\n                                [(ngModel)]=\"filterEntity.charging_amt\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'chargAmountSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.charging_amt }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"created_date\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        <span\r\n                            *ngIf=\"!createdDateSearch\"\r\n                            class=\"custom_font_size\"\r\n                            style=\"display: flex\"\r\n                            >Created Date\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'createdDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >search</mat-icon\r\n                            >\r\n                        </span>\r\n                        <mat-form-field\r\n                            *ngIf=\"createdDateSearch\"\r\n                            appearance=\"outline\"\r\n                            style=\"width: 140px\"\r\n                            class=\"list_input\"\r\n                        >\r\n                            <input\r\n                                matInput\r\n                                placeholder=\"Created Date\"\r\n                                [(ngModel)]=\"filterEntity.created_date\"\r\n                            />\r\n                            <mat-icon\r\n                                matSuffix\r\n                                (click)=\"\r\n                                    changeVisibility(\r\n                                        'createdDateSearch',\r\n                                        $event\r\n                                    )\r\n                                \"\r\n                                >highlight_off</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        {{ row.created_date }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"action\" >\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <span class=\"custom_font_size\">Action</span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div style=\"display: flex\">\r\n                            <mat-icon\r\n                                color=\"primary\"\r\n                                matTooltip=\"Edit\"\r\n                                (click)=\"openDialog('EDIT', element)\"\r\n                                style=\"cursor: pointer\"\r\n                                >edit</mat-icon\r\n                            >\r\n                        </div>\r\n                    </td>\r\n                </ng-container> -->\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n                <tr\r\n                    mat-row\r\n                    *matRowDef=\"let row; columns: displayedColumns\"\r\n                ></tr>\r\n            </table>\r\n\r\n            <mat-paginator\r\n                [pageSizeOptions]=\"[10, 30, 50, 100]\"\r\n            ></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RfidService {\r\n    apiUrl2 = `${environment.API_URL2}/rfid`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(params) {\r\n        return this.http.post(`${this.apiUrl2}/crt`, params);\r\n    }\r\n    update(params) {\r\n        return this.http.post(`${this.apiUrl2}/upd`, params);\r\n    }\r\n\r\n    createCpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/crtCpoRfidMapping`, params);\r\n    }\r\n    updatecpoRfidMapping(params) {\r\n        return this.http.post(`${this.apiUrl2}/updCpoRfidMapping`, params);\r\n    }\r\n\r\n    getRFidnoById(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidnoById/${id}`);\r\n    }\r\n    getAllRfid() {\r\n        return this.http.get(`${this.apiUrl2}/gtRFids`);\r\n    }\r\n\r\n    delete(id, user_id) {\r\n        return this.http.delete(`${this.apiUrl2}/dlt/${id}/${user_id}`);\r\n    }\r\n\r\n    unMapRFidCpoID(id, user_id) {\r\n        return this.http.delete(\r\n            `${this.apiUrl2}/unMapRFidCpoID/${id}/${user_id}`\r\n        );\r\n    }\r\n\r\n    // getRFidsByCpoId(id){\r\n    //   return this.http.get(`${this.apiUrl2}/getRFidsByCpoId/${id}`);\r\n    // }\r\n\r\n    getAllRFidsWithMappedCPOs(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtAllRFidsWithMappedCPOs/${id}`);\r\n    }\r\n    getCpoRFidMappingCW(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtCpoRFidMappingCW/${id}`);\r\n    }\r\n    getRFidsByCpoId(id) {\r\n        return this.http.get(`${this.apiUrl2}/gtRFidsByCpoId/${id}`);\r\n    }\r\n\r\n    // Unmapped RFID\r\n    getUnmappedRFIDByCpoId(cpo_id) {\r\n        return this.http.get(`${this.apiUrl2}/unmappedRfidByCpoId/${cpo_id}`);\r\n    }\r\n\r\n    createRfidMappingwithDriver(params) {\r\n        return this.http.post(`${this.apiUrl2}/rfdrivermapping/crt`, params);\r\n    }\r\n\r\n    // Get All RFID by login Id\r\n    getAllRFIDbyCW(login_id, cpo_id) {\r\n        if (cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n            cpo_id = 0;\r\n        }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/gtRfidByClientwise/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    getRechargeLogsbyCCSW(login_id, cpo_id) {\r\n        // if(cpo_id == null || cpo_id == undefined || cpo_id == \"\") {\r\n        //   cpo_id = 0;\r\n        // }\r\n        return this.http.get(\r\n            `${this.apiUrl2}/getRechargeLogsbyCCSW/${login_id}/${cpo_id}`\r\n        );\r\n    }\r\n    \r\n    updateBalance(params) {\r\n        return this.http.post(`${this.apiUrl2}/updateBalance`, params);\r\n    }\r\n\r\n    getRechargeLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getRechargeLogsByCpoId`, params);\r\n    }\r\n\r\n    getConsumptionLogsByCpoId(params) {\r\n        return this.http.post(`${this.apiUrl2}/getConsumptionLogsByCpoId`, params);\r\n    }\r\n    \r\n    // ########################################################################################\r\n    // ########################################################################################\r\n    // ########################################################################################\r\n\r\n    unmappedRfIdDriver(map_id) {\r\n        return this.http.delete(`${this.apiUrl2}/unmappedRfIdDriver/${map_id}`);\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\n\r\nimport { ViewEncapsulation } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { UtilityService } from \"app/shared/services/utility/utility.service\";\r\n/**\r\n * @title Basic use of the tab group\r\n */\r\n@Component({\r\n    selector: \"app-rfid-recharge-crud\",\r\n    templateUrl: \"./rfid-recharge-crud.component.html\",\r\n    styleUrls: [\"./rfid-recharge-crud.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class RfidRechargeCrudComponent implements OnInit {\r\n    tabLinks = [\r\n        // { label: 'RFID', link: 'list' },\r\n        // { label: 'Add New', link: 'create' }\r\n    ];\r\n    menuArray: any;\r\n    localStorage: any;\r\n    objectData: any;\r\n    objectChildData: any;\r\n    tempLinks = [];\r\n    childData: any;\r\n    constructor(\r\n        private router: Router,\r\n        private cdr: ChangeDetectorRef,\r\n        private _utilityService: UtilityService\r\n    ) {}\r\n    ngAfterViewInit() {\r\n        this._utilityService.activeMenuItems$.subscribe((menuItemSelecte) => {\r\n          \r\n          this.menuArray = menuItemSelecte;\r\n          if (\r\n                this.menuArray == null ||\r\n                this.menuArray == undefined ||\r\n                this.menuArray.title == null ||\r\n                this.menuArray.title == undefined\r\n            ) {\r\n                this.menuArray = JSON.parse(\r\n                    localStorage.getItem(\"activeMenuItems\")\r\n                );\r\n            }\r\n            this.cdr.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n        let nav_list = this.localStorage.nav_list_with_tab;\r\n        nav_list.filter((x) => {\r\n            if (x.id === \"assetManagement\") {\r\n                this.objectData = x;\r\n                if (\r\n                    this.objectData.children != undefined &&\r\n                    this.objectData.children != null\r\n                ) {\r\n                    this.objectData.children.filter((y) => {\r\n                        if (y.id === \"rfidManagement\") {\r\n                            this.objectChildData = y;\r\n                            if (\r\n                                this.objectChildData.children != undefined &&\r\n                                this.objectChildData.children != null\r\n                            ) {\r\n                                this.objectChildData.children.filter((z) => {\r\n                                    this.childData = z;\r\n                                    if (z.id === \"rfid-recharge\") {\r\n                                        let isDefaultRoutePermeted = false;\r\n                                        if (\r\n                                            this.childData.children !=\r\n                                                undefined &&\r\n                                            this.childData.children != null\r\n                                        ) {\r\n                                            this.childData.children.filter(\r\n                                                (t) => {\r\n                                                    if (t.id === \"list\") {\r\n                                                        isDefaultRoutePermeted =\r\n                                                            true;\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"RFID\",\r\n                                                            link: \"list\",\r\n                                                        });\r\n                                                    }\r\n                                                    if (t.id === \"recharge-history\") {\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"Recharge history\",\r\n                                                            link: \"recharge-history\",\r\n                                                        });\r\n                                                    }\r\n                                                    if (t.id === \"energy-consumption-logs\") {\r\n                                                        this.tempLinks.push({\r\n                                                            label: \"Energy Consumption Logs\",\r\n                                                            link: \"energy-consumption-logs\",\r\n                                                        });\r\n                                                    }\r\n                                                }\r\n                                            );\r\n                                        }\r\n\r\n                                        this.tabLinks = this.tempLinks;\r\n                                        if (!isDefaultRoutePermeted) {\r\n                                            this.router.navigate([\r\n                                                \"/assetManagement/rfidManagement/rfid-recharge/crud/\" +\r\n                                                    this.tempLinks[0].link,\r\n                                            ]);\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n@Component({\r\n    selector: \"sunny-routed-content\",\r\n    template: \"Having a lot of light from the sun.\",\r\n})\r\nexport class SunnyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"rainy-routed-content\",\r\n    template: \"A rainy period of time is one when it rains a lot\",\r\n})\r\nexport class RainyTabContentComponent {}\r\n\r\n@Component({\r\n    selector: \"foggy-routed-content\",\r\n    template: \"If the weather is foggy, there is fog\",\r\n})\r\nexport class FoggyTabContentComponent {}\r\n","<div style=\"display: block;width: 100%;\">\r\n    <div id=\"\" class=\"page-layout simple right-sidebar\" fxLayout=\"row\">\r\n  \r\n      <!-- CENTER -->\r\n      <div class=\"center\" fusePerfectScrollbar>\r\n  \r\n          <!-- HEADER -->\r\n          <div class=\"header accent px-24 pt-16 pb-0\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n  \r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n  \r\n                  <span class=\"mat-display-1 my-0 my-sm-24 welcome-message\"\r\n                        [@animate]=\"{value:'*',params:{x:'50px'}}\">{{menuArray?.title}}\r\n                  </span>\r\n  \r\n                  <!--button mat-icon-button class=\"sidebar-toggle mr-8\" fxHide.gt-md\r\n                          (click)=\"toggleSidebar('project-dashboard-right-sidebar-1')\">\r\n                      <mat-icon>menu</mat-icon>\r\n                  </button-->\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  <nav mat-tab-nav-bar aria-label=\"weather navigation links\">\r\n      <a mat-tab-link\r\n         *ngFor=\"let tabLink of tabLinks; let i = index\"\r\n         [routerLink]=\"tabLink.link\"\r\n         routerLinkActive #rla=\"routerLinkActive\"\r\n         [active]=\"rla.isActive\">\r\n        {{tabLink.label}}\r\n      </a>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  \r\n  ","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RfidRechargeCrudComponent } from \"./rfid-recharge-crud/rfid-recharge-crud.component\";\r\nimport { AuthGuard } from \"app/shared/interceptors/auth-gaurd\";\r\nimport { TABS_DEMO_ROUTES } from \"./rfid-recharge-crud/routes\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"crud\",\r\n        component: RfidRechargeCrudComponent,\r\n        canActivate: [AuthGuard],\r\n        children: TABS_DEMO_ROUTES,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class RfidRechargeRoutingModule {}\r\n","import { DatePipe } from \"@angular/common\";\r\nimport {\r\n    Component,\r\n    Inject,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MtxDialogData } from \"@ng-matero/extensions\";\r\nimport { RfidService } from \"app/shared/services/rfid/rfid.service\";\r\n\r\n@Component({\r\n    selector: \"app-action-dialog\",\r\n    templateUrl: \"./action-dialog.component.html\",\r\n    styleUrls: [\"./action-dialog.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n    providers: [DatePipe],\r\n})\r\nexport class ActionDialogComponent implements OnInit {\r\n    params: any;\r\n    isEditMode = false;\r\n    form: FormGroup;\r\n    localStorage: any;\r\n    status = false;\r\n\r\n    @ViewChild(\"toggleElement\") ref: any;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private rfidService: RfidService,\r\n        private snackBar: MatSnackBar,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<ActionDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.localStorage = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n\r\n        this.params = this.data;\r\n\r\n        this.isEditMode = this.params.action == \"CREATE\" ? false : true;\r\n\r\n        this.form = this.fb.group({\r\n            amount: [\"\", [Validators.required, Validators.pattern(/^[0-9]*$/)]],\r\n        });\r\n\r\n        // if (this.isEditMode) {\r\n        //     this.assignValues(this.params);\r\n        // }\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    closeActionPanel() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    onYesClick() {\r\n        if (this.form.valid) {\r\n            let formValues = this.form.value;\r\n\r\n            const params: any = {\r\n                rfid: this.params.data.id,\r\n                cpo_id: this.params.data.cpo_id,\r\n                station_id: this.params.data.station_id,\r\n                amount: formValues.amount,\r\n                expiry_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\r\n                created_date: this.datePipe.transform(new Date(), \"yyyy-MM-dd\"),\r\n                created_by: this.localStorage.userId,\r\n                status: this.status == true ? \"Y\" : \"N\",\r\n            };\r\n\r\n            if (this.isEditMode) {\r\n                (params.id = this.params.data.id),\r\n                    (params.modify_by = this.localStorage.userId);\r\n            } else {\r\n                params.created_by = this.localStorage.userId;\r\n            }\r\n\r\n            if (this.isEditMode) {\r\n                this.rfidService.updateBalance(params).subscribe(\r\n                    (data: any) => {\r\n                        this.snackBar.open(\r\n                            \"Record updated successfully!\",\r\n                            \"Dismiss\",\r\n                            { duration: 5000 }\r\n                        );\r\n                        this.dialogRef.close();\r\n                    },\r\n                    (err) => {\r\n                        this.snackBar.open(\"Please try again\", \"Dismiss\", {\r\n                            duration: 5000,\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n\r\n            this.dialogRef.close(params);\r\n        }\r\n        return;\r\n    }\r\n}\r\n","<!-- close button on popup -->\r\n<mat-icon\r\n    id=\"dialog_action_close\"\r\n    matTooltip=\"Close window\"\r\n    (click)=\"closeActionPanel()\"\r\n    style=\"cursor: pointer; color: white\"\r\n    class=\"material-icons-outlined\"\r\n    >clear</mat-icon\r\n>\r\n\r\n<mat-toolbar class=\"action_toolbar\">RFID Recharge</mat-toolbar>\r\n<div style=\"padding: 24px; max-height: 22vw; overflow: auto\">\r\n    <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\">\r\n        <form\r\n            [formGroup]=\"form\"\r\n            class=\"mat-card mat-elevation-z4\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"start\"\r\n            fxFlex=\"1 0 auto\"\r\n            name=\"form\"\r\n        >\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"20px\"\r\n                fxFlex=\"1 0 auto\"\r\n            >\r\n                <mat-form-field appearance=\"outline\" fxFlex=\"50\" class=\"pr-4\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input\r\n                        matInput\r\n                        placeholder=\"\"\r\n                        formControlName=\"amount\"\r\n                        autocomplete=\"off\"\r\n                        required\r\n                    />\r\n                    <mat-icon\r\n                        matSuffix\r\n                        class=\"secondary-text\"\r\n                        matTooltip=\"Please enter amount\"\r\n                        >help</mat-icon\r\n                    >\r\n                    <mat-error *ngIf=\"form.get('amount').hasError('required')\"\r\n                        >Please enter amount.\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"form.get('amount').hasError('pattern')\"\r\n                        >Special character are not allowed</mat-error\r\n                    >\r\n                </mat-form-field>\r\n            </div>\r\n            <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n                style=\"padding-top: 10px\"\r\n            >\r\n                <button\r\n                    mat-raised-button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    class=\"mr-8\"\r\n                    (click)=\"onYesClick()\"\r\n                >\r\n                    {{ isEditMode ? \"Save\" : \"Save\" }}\r\n                </button>\r\n                <button\r\n                    mat-raised-button\r\n                    type=\"button\"\r\n                    color=\"warn\"\r\n                    class=\"mr-8\"\r\n                    (click)=\"close()\"\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"app/shared/interceptors/auth-gaurd\";\r\n\r\nimport { ListComponent } from \"../list/list.component\";\r\nimport { RechargeHistoryComponent } from \"../recharge-history/recharge-history.component\";\r\nimport { EnergyConsumptionLogsComponent } from \"../energy-consumption-logs/energy-consumption-logs.component\";\r\n\r\nexport const TABS_DEMO_ROUTES: Routes = [\r\n    { path: \"list\", component: ListComponent, canActivate: [AuthGuard] },\r\n    {\r\n        path: \"recharge-history\",\r\n        component: RechargeHistoryComponent,\r\n        canActivate: [AuthGuard],\r\n    },\r\n    {\r\n        path: \"energy-consumption-logs\",\r\n        component: EnergyConsumptionLogsComponent,\r\n        canActivate: [AuthGuard],\r\n    },\r\n    { path: \"\", redirectTo: \"list\", pathMatch: \"full\" },\r\n];\r\n"],"sourceRoot":"webpack:///"}